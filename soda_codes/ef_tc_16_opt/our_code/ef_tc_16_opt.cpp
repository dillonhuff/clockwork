#ifndef __VIVADO_SYNTH__
#include <fstream>
using namespace std;

  // Debug utility
  ofstream* global_debug_handle;

#endif //__VIVADO_SYNTH__
// compute file: ef_tc_16_opt_compute_units.h
#include "ef_tc_16_opt_compute_units.h"

#include "hw_classes.h"

struct bright_bright_update_0_write0_merged_banks_11_cache {
	// RAM Box: {[0, 1952], [0, 1086]}
	// Capacity: 248
	// # of read delays: 6
  // 0, 1, 123, 124, 246, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 121> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_124() {
		return f6;
	}

	inline hw_uint<16> peek_245() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_246() {
		return f8;
	}

	inline hw_uint<16> peek_247() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write1_merged_banks_11_cache {
	// RAM Box: {[1, 1953], [0, 1086]}
	// Capacity: 248
	// # of read delays: 6
  // 0, 1, 123, 124, 246, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 121> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_124() {
		return f6;
	}

	inline hw_uint<16> peek_245() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_246() {
		return f8;
	}

	inline hw_uint<16> peek_247() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write10_merged_banks_11_cache {
	// RAM Box: {[10, 1962], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write11_merged_banks_11_cache {
	// RAM Box: {[11, 1963], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write12_merged_banks_11_cache {
	// RAM Box: {[12, 1964], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write13_merged_banks_11_cache {
	// RAM Box: {[13, 1965], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write14_merged_banks_11_cache {
	// RAM Box: {[14, 1966], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write15_merged_banks_11_cache {
	// RAM Box: {[15, 1967], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write2_merged_banks_11_cache {
	// RAM Box: {[2, 1954], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write3_merged_banks_11_cache {
	// RAM Box: {[3, 1955], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write4_merged_banks_11_cache {
	// RAM Box: {[4, 1956], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write5_merged_banks_11_cache {
	// RAM Box: {[5, 1957], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write6_merged_banks_11_cache {
	// RAM Box: {[6, 1958], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write7_merged_banks_11_cache {
	// RAM Box: {[7, 1959], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write8_merged_banks_11_cache {
	// RAM Box: {[8, 1960], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write9_merged_banks_11_cache {
	// RAM Box: {[9, 1961], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_cache {
  // # of banks: 16
  bright_bright_update_0_write0_merged_banks_11_cache bright_bright_update_0_write0_merged_banks_11;
  bright_bright_update_0_write1_merged_banks_11_cache bright_bright_update_0_write1_merged_banks_11;
  bright_bright_update_0_write10_merged_banks_11_cache bright_bright_update_0_write10_merged_banks_11;
  bright_bright_update_0_write11_merged_banks_11_cache bright_bright_update_0_write11_merged_banks_11;
  bright_bright_update_0_write12_merged_banks_11_cache bright_bright_update_0_write12_merged_banks_11;
  bright_bright_update_0_write13_merged_banks_11_cache bright_bright_update_0_write13_merged_banks_11;
  bright_bright_update_0_write14_merged_banks_11_cache bright_bright_update_0_write14_merged_banks_11;
  bright_bright_update_0_write15_merged_banks_11_cache bright_bright_update_0_write15_merged_banks_11;
  bright_bright_update_0_write2_merged_banks_11_cache bright_bright_update_0_write2_merged_banks_11;
  bright_bright_update_0_write3_merged_banks_11_cache bright_bright_update_0_write3_merged_banks_11;
  bright_bright_update_0_write4_merged_banks_11_cache bright_bright_update_0_write4_merged_banks_11;
  bright_bright_update_0_write5_merged_banks_11_cache bright_bright_update_0_write5_merged_banks_11;
  bright_bright_update_0_write6_merged_banks_11_cache bright_bright_update_0_write6_merged_banks_11;
  bright_bright_update_0_write7_merged_banks_11_cache bright_bright_update_0_write7_merged_banks_11;
  bright_bright_update_0_write8_merged_banks_11_cache bright_bright_update_0_write8_merged_banks_11;
  bright_bright_update_0_write9_merged_banks_11_cache bright_bright_update_0_write9_merged_banks_11;
};



inline void bright_bright_update_0_write0_write(hw_uint<16>& bright_bright_update_0_write0, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write0_merged_banks_11.push(bright_bright_update_0_write0);
}

inline void bright_bright_update_0_write1_write(hw_uint<16>& bright_bright_update_0_write1, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write1_merged_banks_11.push(bright_bright_update_0_write1);
}

inline void bright_bright_update_0_write10_write(hw_uint<16>& bright_bright_update_0_write10, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write10_merged_banks_11.push(bright_bright_update_0_write10);
}

inline void bright_bright_update_0_write11_write(hw_uint<16>& bright_bright_update_0_write11, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write11_merged_banks_11.push(bright_bright_update_0_write11);
}

inline void bright_bright_update_0_write12_write(hw_uint<16>& bright_bright_update_0_write12, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write12_merged_banks_11.push(bright_bright_update_0_write12);
}

inline void bright_bright_update_0_write13_write(hw_uint<16>& bright_bright_update_0_write13, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write13_merged_banks_11.push(bright_bright_update_0_write13);
}

inline void bright_bright_update_0_write14_write(hw_uint<16>& bright_bright_update_0_write14, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write14_merged_banks_11.push(bright_bright_update_0_write14);
}

inline void bright_bright_update_0_write15_write(hw_uint<16>& bright_bright_update_0_write15, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write15_merged_banks_11.push(bright_bright_update_0_write15);
}

inline void bright_bright_update_0_write2_write(hw_uint<16>& bright_bright_update_0_write2, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write2_merged_banks_11.push(bright_bright_update_0_write2);
}

inline void bright_bright_update_0_write3_write(hw_uint<16>& bright_bright_update_0_write3, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write3_merged_banks_11.push(bright_bright_update_0_write3);
}

inline void bright_bright_update_0_write4_write(hw_uint<16>& bright_bright_update_0_write4, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write4_merged_banks_11.push(bright_bright_update_0_write4);
}

inline void bright_bright_update_0_write5_write(hw_uint<16>& bright_bright_update_0_write5, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write5_merged_banks_11.push(bright_bright_update_0_write5);
}

inline void bright_bright_update_0_write6_write(hw_uint<16>& bright_bright_update_0_write6, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write6_merged_banks_11.push(bright_bright_update_0_write6);
}

inline void bright_bright_update_0_write7_write(hw_uint<16>& bright_bright_update_0_write7, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write7_merged_banks_11.push(bright_bright_update_0_write7);
}

inline void bright_bright_update_0_write8_write(hw_uint<16>& bright_bright_update_0_write8, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write8_merged_banks_11.push(bright_bright_update_0_write8);
}

inline void bright_bright_update_0_write9_write(hw_uint<16>& bright_bright_update_0_write9, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write9_merged_banks_11.push(bright_bright_update_0_write9);
}

inline hw_uint<16> bright_gauss_blur_1_rd0_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd0 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd1_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd1 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd10_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd10 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd100_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd100 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write11 = bright.bright_bright_update_0_write11_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd101_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd101 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write11 = bright.bright_bright_update_0_write11_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd102_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd102 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write12 = bright.bright_bright_update_0_write12_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd103_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd103 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write12 = bright.bright_bright_update_0_write12_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd104_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd104 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write12 = bright.bright_bright_update_0_write12_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd105_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd105 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write13 = bright.bright_bright_update_0_write13_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd106_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd106 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write13 = bright.bright_bright_update_0_write13_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd107_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd107 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write13 = bright.bright_bright_update_0_write13_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd108_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd108 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write12 = bright.bright_bright_update_0_write12_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd109_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd109 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write12 = bright.bright_bright_update_0_write12_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd11_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd11 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd110_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd110 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write12 = bright.bright_bright_update_0_write12_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd111_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd111 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write13 = bright.bright_bright_update_0_write13_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd112_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd112 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write13 = bright.bright_bright_update_0_write13_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd113_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd113 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write13 = bright.bright_bright_update_0_write13_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd114_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd114 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write14 = bright.bright_bright_update_0_write14_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd115_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd115 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write14 = bright.bright_bright_update_0_write14_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd116_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd116 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write14 = bright.bright_bright_update_0_write14_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd117_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd117 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write13 = bright.bright_bright_update_0_write13_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd118_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd118 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write13 = bright.bright_bright_update_0_write13_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd119_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd119 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write13 = bright.bright_bright_update_0_write13_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd12_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd12 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd120_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd120 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write14 = bright.bright_bright_update_0_write14_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd121_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd121 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write14 = bright.bright_bright_update_0_write14_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd122_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd122 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write14 = bright.bright_bright_update_0_write14_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd123_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd123 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write15 = bright.bright_bright_update_0_write15_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd124_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd124 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write15 = bright.bright_bright_update_0_write15_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd125_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd125 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write15 = bright.bright_bright_update_0_write15_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd126_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd126 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write14 = bright.bright_bright_update_0_write14_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd127_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd127 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write14 = bright.bright_bright_update_0_write14_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd128_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd128 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write14 = bright.bright_bright_update_0_write14_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd129_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd129 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write15 = bright.bright_bright_update_0_write15_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd13_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd13 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd130_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd130 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write15 = bright.bright_bright_update_0_write15_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd131_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd131 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write15 = bright.bright_bright_update_0_write15_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd132_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd132 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[16 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_11.peek_246();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd133_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd133 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[16 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_11.peek_123();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd134_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd134 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[16 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd135_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd135 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write15 = bright.bright_bright_update_0_write15_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd136_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd136 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write15 = bright.bright_bright_update_0_write15_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd137_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd137 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write15 = bright.bright_bright_update_0_write15_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd138_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd138 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[16 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_11.peek_246();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd139_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd139 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[16 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_11.peek_123();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd14_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd14 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd140_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd140 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[16 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd141_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd141 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[17 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_11.peek_246();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd142_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd142 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[17 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_11.peek_123();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd143_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd143 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[17 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd15_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd15 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd16_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd16 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd17_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd17 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd18_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd18 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd19_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd19 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd2_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd2 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd20_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd20 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd21_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd21 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd22_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd22 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd23_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd23 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd24_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd24 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd25_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd25 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd26_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd26 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd27_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd27 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd28_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd28 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd29_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd29 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd3_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd3 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd30_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd30 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd31_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd31 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd32_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd32 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd33_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd33 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd34_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd34 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd35_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd35 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd36_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd36 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd37_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd37 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd38_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd38 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd39_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd39 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd4_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd4 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd40_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd40 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd41_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd41 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd42_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd42 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd43_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd43 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd44_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd44 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd45_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd45 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd46_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd46 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd47_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd47 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd48_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd48 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd49_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd49 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd5_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd5 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd50_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd50 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd51_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd51 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd52_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd52 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd53_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd53 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd54_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd54 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd55_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd55 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd56_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd56 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd57_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd57 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd58_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd58 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd59_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd59 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd6_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd6 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd60_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd60 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write8 = bright.bright_bright_update_0_write8_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd61_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd61 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write8 = bright.bright_bright_update_0_write8_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd62_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd62 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write8 = bright.bright_bright_update_0_write8_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd63_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd63 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd64_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd64 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd65_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd65 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd66_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd66 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write8 = bright.bright_bright_update_0_write8_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd67_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd67 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write8 = bright.bright_bright_update_0_write8_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd68_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd68 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write8 = bright.bright_bright_update_0_write8_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd69_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd69 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write9 = bright.bright_bright_update_0_write9_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd7_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd7 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd70_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd70 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write9 = bright.bright_bright_update_0_write9_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd71_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd71 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write9 = bright.bright_bright_update_0_write9_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd72_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd72 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write8 = bright.bright_bright_update_0_write8_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd73_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd73 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write8 = bright.bright_bright_update_0_write8_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd74_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd74 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write8 = bright.bright_bright_update_0_write8_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd75_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd75 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write9 = bright.bright_bright_update_0_write9_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd76_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd76 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write9 = bright.bright_bright_update_0_write9_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd77_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd77 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write9 = bright.bright_bright_update_0_write9_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd78_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd78 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write10 = bright.bright_bright_update_0_write10_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd79_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd79 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write10 = bright.bright_bright_update_0_write10_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd8_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd8 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd80_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd80 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write10 = bright.bright_bright_update_0_write10_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd81_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd81 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write9 = bright.bright_bright_update_0_write9_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd82_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd82 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write9 = bright.bright_bright_update_0_write9_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd83_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd83 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write9 = bright.bright_bright_update_0_write9_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd84_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd84 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write10 = bright.bright_bright_update_0_write10_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd85_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd85 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write10 = bright.bright_bright_update_0_write10_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd86_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd86 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write10 = bright.bright_bright_update_0_write10_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd87_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd87 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write11 = bright.bright_bright_update_0_write11_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd88_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd88 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write11 = bright.bright_bright_update_0_write11_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd89_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd89 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write11 = bright.bright_bright_update_0_write11_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd9_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd9 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd90_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd90 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write10 = bright.bright_bright_update_0_write10_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd91_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd91 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write10 = bright.bright_bright_update_0_write10_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd92_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd92 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write10 = bright.bright_bright_update_0_write10_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd93_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd93 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write11 = bright.bright_bright_update_0_write11_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd94_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd94 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write11 = bright.bright_bright_update_0_write11_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd95_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd95 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write11 = bright.bright_bright_update_0_write11_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd96_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd96 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write12 = bright.bright_bright_update_0_write12_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd97_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd97 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write12 = bright.bright_bright_update_0_write12_merged_banks_11.peek_124();
  return value_bright_bright_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd98_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd98 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write12 = bright.bright_bright_update_0_write12_merged_banks_11.peek_1();
  return value_bright_bright_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd99_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd99 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write11 = bright.bright_bright_update_0_write11_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd0_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd0 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd1_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd1 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[1 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd10_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd10 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[10 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write10 = bright.bright_bright_update_0_write10_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd11_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd11 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[11 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write11 = bright.bright_bright_update_0_write11_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd12_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd12 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[12 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write12 = bright.bright_bright_update_0_write12_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd13_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd13 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[13 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write13 = bright.bright_bright_update_0_write13_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd14_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd14 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[14 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write14 = bright.bright_bright_update_0_write14_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd15_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd15 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[15 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write15 = bright.bright_bright_update_0_write15_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd2_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd2 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[2 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd3_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd3 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[3 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd4_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd4 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[4 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd5_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd5 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[5 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd6_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd6 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[6 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd7_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd7 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[7 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd8_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd8 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[8 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write8 = bright.bright_bright_update_0_write8_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd9_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd9 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[9 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write9 = bright.bright_bright_update_0_write9_merged_banks_11.peek_247();
  return value_bright_bright_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_weights_rd0_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd0 read pattern: { bright_weights_update_0[d0, d1] -> bright[16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_rd1_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd1 read pattern: { bright_weights_update_0[d0, d1] -> bright[1 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_rd10_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd10 read pattern: { bright_weights_update_0[d0, d1] -> bright[10 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write10 = bright.bright_bright_update_0_write10_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_rd11_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd11 read pattern: { bright_weights_update_0[d0, d1] -> bright[11 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write11 = bright.bright_bright_update_0_write11_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_weights_rd12_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd12 read pattern: { bright_weights_update_0[d0, d1] -> bright[12 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write12 = bright.bright_bright_update_0_write12_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_rd13_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd13 read pattern: { bright_weights_update_0[d0, d1] -> bright[13 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write13 = bright.bright_bright_update_0_write13_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_rd14_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd14 read pattern: { bright_weights_update_0[d0, d1] -> bright[14 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write14 = bright.bright_bright_update_0_write14_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_rd15_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd15 read pattern: { bright_weights_update_0[d0, d1] -> bright[15 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write15 = bright.bright_bright_update_0_write15_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_rd2_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd2 read pattern: { bright_weights_update_0[d0, d1] -> bright[2 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_rd3_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd3 read pattern: { bright_weights_update_0[d0, d1] -> bright[3 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_rd4_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd4 read pattern: { bright_weights_update_0[d0, d1] -> bright[4 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_rd5_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd5 read pattern: { bright_weights_update_0[d0, d1] -> bright[5 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_rd6_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd6 read pattern: { bright_weights_update_0[d0, d1] -> bright[6 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_rd7_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd7 read pattern: { bright_weights_update_0[d0, d1] -> bright[7 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_rd8_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd8 read pattern: { bright_weights_update_0[d0, d1] -> bright[8 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write8 = bright.bright_bright_update_0_write8_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_rd9_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd9 read pattern: { bright_weights_update_0[d0, d1] -> bright[9 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_bright_update_0_write9 = bright.bright_bright_update_0_write9_merged_banks_11.peek_0();
  return value_bright_bright_update_0_write9;
  return 0;
}

// # of bundles = 4
// bright_gauss_blur_1_update_0_read
//	bright_gauss_blur_1_rd0
//	bright_gauss_blur_1_rd1
//	bright_gauss_blur_1_rd2
//	bright_gauss_blur_1_rd3
//	bright_gauss_blur_1_rd4
//	bright_gauss_blur_1_rd5
//	bright_gauss_blur_1_rd6
//	bright_gauss_blur_1_rd7
//	bright_gauss_blur_1_rd8
//	bright_gauss_blur_1_rd9
//	bright_gauss_blur_1_rd10
//	bright_gauss_blur_1_rd11
//	bright_gauss_blur_1_rd12
//	bright_gauss_blur_1_rd13
//	bright_gauss_blur_1_rd14
//	bright_gauss_blur_1_rd15
//	bright_gauss_blur_1_rd16
//	bright_gauss_blur_1_rd17
//	bright_gauss_blur_1_rd18
//	bright_gauss_blur_1_rd19
//	bright_gauss_blur_1_rd20
//	bright_gauss_blur_1_rd21
//	bright_gauss_blur_1_rd22
//	bright_gauss_blur_1_rd23
//	bright_gauss_blur_1_rd24
//	bright_gauss_blur_1_rd25
//	bright_gauss_blur_1_rd26
//	bright_gauss_blur_1_rd27
//	bright_gauss_blur_1_rd28
//	bright_gauss_blur_1_rd29
//	bright_gauss_blur_1_rd30
//	bright_gauss_blur_1_rd31
//	bright_gauss_blur_1_rd32
//	bright_gauss_blur_1_rd33
//	bright_gauss_blur_1_rd34
//	bright_gauss_blur_1_rd35
//	bright_gauss_blur_1_rd36
//	bright_gauss_blur_1_rd37
//	bright_gauss_blur_1_rd38
//	bright_gauss_blur_1_rd39
//	bright_gauss_blur_1_rd40
//	bright_gauss_blur_1_rd41
//	bright_gauss_blur_1_rd42
//	bright_gauss_blur_1_rd43
//	bright_gauss_blur_1_rd44
//	bright_gauss_blur_1_rd45
//	bright_gauss_blur_1_rd46
//	bright_gauss_blur_1_rd47
//	bright_gauss_blur_1_rd48
//	bright_gauss_blur_1_rd49
//	bright_gauss_blur_1_rd50
//	bright_gauss_blur_1_rd51
//	bright_gauss_blur_1_rd52
//	bright_gauss_blur_1_rd53
//	bright_gauss_blur_1_rd54
//	bright_gauss_blur_1_rd55
//	bright_gauss_blur_1_rd56
//	bright_gauss_blur_1_rd57
//	bright_gauss_blur_1_rd58
//	bright_gauss_blur_1_rd59
//	bright_gauss_blur_1_rd60
//	bright_gauss_blur_1_rd61
//	bright_gauss_blur_1_rd62
//	bright_gauss_blur_1_rd63
//	bright_gauss_blur_1_rd64
//	bright_gauss_blur_1_rd65
//	bright_gauss_blur_1_rd66
//	bright_gauss_blur_1_rd67
//	bright_gauss_blur_1_rd68
//	bright_gauss_blur_1_rd69
//	bright_gauss_blur_1_rd70
//	bright_gauss_blur_1_rd71
//	bright_gauss_blur_1_rd72
//	bright_gauss_blur_1_rd73
//	bright_gauss_blur_1_rd74
//	bright_gauss_blur_1_rd75
//	bright_gauss_blur_1_rd76
//	bright_gauss_blur_1_rd77
//	bright_gauss_blur_1_rd78
//	bright_gauss_blur_1_rd79
//	bright_gauss_blur_1_rd80
//	bright_gauss_blur_1_rd81
//	bright_gauss_blur_1_rd82
//	bright_gauss_blur_1_rd83
//	bright_gauss_blur_1_rd84
//	bright_gauss_blur_1_rd85
//	bright_gauss_blur_1_rd86
//	bright_gauss_blur_1_rd87
//	bright_gauss_blur_1_rd88
//	bright_gauss_blur_1_rd89
//	bright_gauss_blur_1_rd90
//	bright_gauss_blur_1_rd91
//	bright_gauss_blur_1_rd92
//	bright_gauss_blur_1_rd93
//	bright_gauss_blur_1_rd94
//	bright_gauss_blur_1_rd95
//	bright_gauss_blur_1_rd96
//	bright_gauss_blur_1_rd97
//	bright_gauss_blur_1_rd98
//	bright_gauss_blur_1_rd99
//	bright_gauss_blur_1_rd100
//	bright_gauss_blur_1_rd101
//	bright_gauss_blur_1_rd102
//	bright_gauss_blur_1_rd103
//	bright_gauss_blur_1_rd104
//	bright_gauss_blur_1_rd105
//	bright_gauss_blur_1_rd106
//	bright_gauss_blur_1_rd107
//	bright_gauss_blur_1_rd108
//	bright_gauss_blur_1_rd109
//	bright_gauss_blur_1_rd110
//	bright_gauss_blur_1_rd111
//	bright_gauss_blur_1_rd112
//	bright_gauss_blur_1_rd113
//	bright_gauss_blur_1_rd114
//	bright_gauss_blur_1_rd115
//	bright_gauss_blur_1_rd116
//	bright_gauss_blur_1_rd117
//	bright_gauss_blur_1_rd118
//	bright_gauss_blur_1_rd119
//	bright_gauss_blur_1_rd120
//	bright_gauss_blur_1_rd121
//	bright_gauss_blur_1_rd122
//	bright_gauss_blur_1_rd123
//	bright_gauss_blur_1_rd124
//	bright_gauss_blur_1_rd125
//	bright_gauss_blur_1_rd126
//	bright_gauss_blur_1_rd127
//	bright_gauss_blur_1_rd128
//	bright_gauss_blur_1_rd129
//	bright_gauss_blur_1_rd130
//	bright_gauss_blur_1_rd131
//	bright_gauss_blur_1_rd132
//	bright_gauss_blur_1_rd133
//	bright_gauss_blur_1_rd134
//	bright_gauss_blur_1_rd135
//	bright_gauss_blur_1_rd136
//	bright_gauss_blur_1_rd137
//	bright_gauss_blur_1_rd138
//	bright_gauss_blur_1_rd139
//	bright_gauss_blur_1_rd140
//	bright_gauss_blur_1_rd141
//	bright_gauss_blur_1_rd142
//	bright_gauss_blur_1_rd143
inline hw_uint<2304> bright_bright_gauss_blur_1_update_0_read_bundle_read(bright_cache& bright, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 144
    // bright_gauss_blur_1_rd0
    // bright_gauss_blur_1_rd1
    // bright_gauss_blur_1_rd2
    // bright_gauss_blur_1_rd3
    // bright_gauss_blur_1_rd4
    // bright_gauss_blur_1_rd5
    // bright_gauss_blur_1_rd6
    // bright_gauss_blur_1_rd7
    // bright_gauss_blur_1_rd8
    // bright_gauss_blur_1_rd9
    // bright_gauss_blur_1_rd10
    // bright_gauss_blur_1_rd11
    // bright_gauss_blur_1_rd12
    // bright_gauss_blur_1_rd13
    // bright_gauss_blur_1_rd14
    // bright_gauss_blur_1_rd15
    // bright_gauss_blur_1_rd16
    // bright_gauss_blur_1_rd17
    // bright_gauss_blur_1_rd18
    // bright_gauss_blur_1_rd19
    // bright_gauss_blur_1_rd20
    // bright_gauss_blur_1_rd21
    // bright_gauss_blur_1_rd22
    // bright_gauss_blur_1_rd23
    // bright_gauss_blur_1_rd24
    // bright_gauss_blur_1_rd25
    // bright_gauss_blur_1_rd26
    // bright_gauss_blur_1_rd27
    // bright_gauss_blur_1_rd28
    // bright_gauss_blur_1_rd29
    // bright_gauss_blur_1_rd30
    // bright_gauss_blur_1_rd31
    // bright_gauss_blur_1_rd32
    // bright_gauss_blur_1_rd33
    // bright_gauss_blur_1_rd34
    // bright_gauss_blur_1_rd35
    // bright_gauss_blur_1_rd36
    // bright_gauss_blur_1_rd37
    // bright_gauss_blur_1_rd38
    // bright_gauss_blur_1_rd39
    // bright_gauss_blur_1_rd40
    // bright_gauss_blur_1_rd41
    // bright_gauss_blur_1_rd42
    // bright_gauss_blur_1_rd43
    // bright_gauss_blur_1_rd44
    // bright_gauss_blur_1_rd45
    // bright_gauss_blur_1_rd46
    // bright_gauss_blur_1_rd47
    // bright_gauss_blur_1_rd48
    // bright_gauss_blur_1_rd49
    // bright_gauss_blur_1_rd50
    // bright_gauss_blur_1_rd51
    // bright_gauss_blur_1_rd52
    // bright_gauss_blur_1_rd53
    // bright_gauss_blur_1_rd54
    // bright_gauss_blur_1_rd55
    // bright_gauss_blur_1_rd56
    // bright_gauss_blur_1_rd57
    // bright_gauss_blur_1_rd58
    // bright_gauss_blur_1_rd59
    // bright_gauss_blur_1_rd60
    // bright_gauss_blur_1_rd61
    // bright_gauss_blur_1_rd62
    // bright_gauss_blur_1_rd63
    // bright_gauss_blur_1_rd64
    // bright_gauss_blur_1_rd65
    // bright_gauss_blur_1_rd66
    // bright_gauss_blur_1_rd67
    // bright_gauss_blur_1_rd68
    // bright_gauss_blur_1_rd69
    // bright_gauss_blur_1_rd70
    // bright_gauss_blur_1_rd71
    // bright_gauss_blur_1_rd72
    // bright_gauss_blur_1_rd73
    // bright_gauss_blur_1_rd74
    // bright_gauss_blur_1_rd75
    // bright_gauss_blur_1_rd76
    // bright_gauss_blur_1_rd77
    // bright_gauss_blur_1_rd78
    // bright_gauss_blur_1_rd79
    // bright_gauss_blur_1_rd80
    // bright_gauss_blur_1_rd81
    // bright_gauss_blur_1_rd82
    // bright_gauss_blur_1_rd83
    // bright_gauss_blur_1_rd84
    // bright_gauss_blur_1_rd85
    // bright_gauss_blur_1_rd86
    // bright_gauss_blur_1_rd87
    // bright_gauss_blur_1_rd88
    // bright_gauss_blur_1_rd89
    // bright_gauss_blur_1_rd90
    // bright_gauss_blur_1_rd91
    // bright_gauss_blur_1_rd92
    // bright_gauss_blur_1_rd93
    // bright_gauss_blur_1_rd94
    // bright_gauss_blur_1_rd95
    // bright_gauss_blur_1_rd96
    // bright_gauss_blur_1_rd97
    // bright_gauss_blur_1_rd98
    // bright_gauss_blur_1_rd99
    // bright_gauss_blur_1_rd100
    // bright_gauss_blur_1_rd101
    // bright_gauss_blur_1_rd102
    // bright_gauss_blur_1_rd103
    // bright_gauss_blur_1_rd104
    // bright_gauss_blur_1_rd105
    // bright_gauss_blur_1_rd106
    // bright_gauss_blur_1_rd107
    // bright_gauss_blur_1_rd108
    // bright_gauss_blur_1_rd109
    // bright_gauss_blur_1_rd110
    // bright_gauss_blur_1_rd111
    // bright_gauss_blur_1_rd112
    // bright_gauss_blur_1_rd113
    // bright_gauss_blur_1_rd114
    // bright_gauss_blur_1_rd115
    // bright_gauss_blur_1_rd116
    // bright_gauss_blur_1_rd117
    // bright_gauss_blur_1_rd118
    // bright_gauss_blur_1_rd119
    // bright_gauss_blur_1_rd120
    // bright_gauss_blur_1_rd121
    // bright_gauss_blur_1_rd122
    // bright_gauss_blur_1_rd123
    // bright_gauss_blur_1_rd124
    // bright_gauss_blur_1_rd125
    // bright_gauss_blur_1_rd126
    // bright_gauss_blur_1_rd127
    // bright_gauss_blur_1_rd128
    // bright_gauss_blur_1_rd129
    // bright_gauss_blur_1_rd130
    // bright_gauss_blur_1_rd131
    // bright_gauss_blur_1_rd132
    // bright_gauss_blur_1_rd133
    // bright_gauss_blur_1_rd134
    // bright_gauss_blur_1_rd135
    // bright_gauss_blur_1_rd136
    // bright_gauss_blur_1_rd137
    // bright_gauss_blur_1_rd138
    // bright_gauss_blur_1_rd139
    // bright_gauss_blur_1_rd140
    // bright_gauss_blur_1_rd141
    // bright_gauss_blur_1_rd142
    // bright_gauss_blur_1_rd143

	hw_uint<2304> result;
	hw_uint<16> bright_gauss_blur_1_rd0_res = bright_gauss_blur_1_rd0_select(bright, d0, d1, dynamic_address);
	set_at<0, 2304>(result, bright_gauss_blur_1_rd0_res);
	hw_uint<16> bright_gauss_blur_1_rd1_res = bright_gauss_blur_1_rd1_select(bright, d0, d1, dynamic_address);
	set_at<16, 2304>(result, bright_gauss_blur_1_rd1_res);
	hw_uint<16> bright_gauss_blur_1_rd2_res = bright_gauss_blur_1_rd2_select(bright, d0, d1, dynamic_address);
	set_at<32, 2304>(result, bright_gauss_blur_1_rd2_res);
	hw_uint<16> bright_gauss_blur_1_rd3_res = bright_gauss_blur_1_rd3_select(bright, d0, d1, dynamic_address);
	set_at<48, 2304>(result, bright_gauss_blur_1_rd3_res);
	hw_uint<16> bright_gauss_blur_1_rd4_res = bright_gauss_blur_1_rd4_select(bright, d0, d1, dynamic_address);
	set_at<64, 2304>(result, bright_gauss_blur_1_rd4_res);
	hw_uint<16> bright_gauss_blur_1_rd5_res = bright_gauss_blur_1_rd5_select(bright, d0, d1, dynamic_address);
	set_at<80, 2304>(result, bright_gauss_blur_1_rd5_res);
	hw_uint<16> bright_gauss_blur_1_rd6_res = bright_gauss_blur_1_rd6_select(bright, d0, d1, dynamic_address);
	set_at<96, 2304>(result, bright_gauss_blur_1_rd6_res);
	hw_uint<16> bright_gauss_blur_1_rd7_res = bright_gauss_blur_1_rd7_select(bright, d0, d1, dynamic_address);
	set_at<112, 2304>(result, bright_gauss_blur_1_rd7_res);
	hw_uint<16> bright_gauss_blur_1_rd8_res = bright_gauss_blur_1_rd8_select(bright, d0, d1, dynamic_address);
	set_at<128, 2304>(result, bright_gauss_blur_1_rd8_res);
	hw_uint<16> bright_gauss_blur_1_rd9_res = bright_gauss_blur_1_rd9_select(bright, d0, d1, dynamic_address);
	set_at<144, 2304>(result, bright_gauss_blur_1_rd9_res);
	hw_uint<16> bright_gauss_blur_1_rd10_res = bright_gauss_blur_1_rd10_select(bright, d0, d1, dynamic_address);
	set_at<160, 2304>(result, bright_gauss_blur_1_rd10_res);
	hw_uint<16> bright_gauss_blur_1_rd11_res = bright_gauss_blur_1_rd11_select(bright, d0, d1, dynamic_address);
	set_at<176, 2304>(result, bright_gauss_blur_1_rd11_res);
	hw_uint<16> bright_gauss_blur_1_rd12_res = bright_gauss_blur_1_rd12_select(bright, d0, d1, dynamic_address);
	set_at<192, 2304>(result, bright_gauss_blur_1_rd12_res);
	hw_uint<16> bright_gauss_blur_1_rd13_res = bright_gauss_blur_1_rd13_select(bright, d0, d1, dynamic_address);
	set_at<208, 2304>(result, bright_gauss_blur_1_rd13_res);
	hw_uint<16> bright_gauss_blur_1_rd14_res = bright_gauss_blur_1_rd14_select(bright, d0, d1, dynamic_address);
	set_at<224, 2304>(result, bright_gauss_blur_1_rd14_res);
	hw_uint<16> bright_gauss_blur_1_rd15_res = bright_gauss_blur_1_rd15_select(bright, d0, d1, dynamic_address);
	set_at<240, 2304>(result, bright_gauss_blur_1_rd15_res);
	hw_uint<16> bright_gauss_blur_1_rd16_res = bright_gauss_blur_1_rd16_select(bright, d0, d1, dynamic_address);
	set_at<256, 2304>(result, bright_gauss_blur_1_rd16_res);
	hw_uint<16> bright_gauss_blur_1_rd17_res = bright_gauss_blur_1_rd17_select(bright, d0, d1, dynamic_address);
	set_at<272, 2304>(result, bright_gauss_blur_1_rd17_res);
	hw_uint<16> bright_gauss_blur_1_rd18_res = bright_gauss_blur_1_rd18_select(bright, d0, d1, dynamic_address);
	set_at<288, 2304>(result, bright_gauss_blur_1_rd18_res);
	hw_uint<16> bright_gauss_blur_1_rd19_res = bright_gauss_blur_1_rd19_select(bright, d0, d1, dynamic_address);
	set_at<304, 2304>(result, bright_gauss_blur_1_rd19_res);
	hw_uint<16> bright_gauss_blur_1_rd20_res = bright_gauss_blur_1_rd20_select(bright, d0, d1, dynamic_address);
	set_at<320, 2304>(result, bright_gauss_blur_1_rd20_res);
	hw_uint<16> bright_gauss_blur_1_rd21_res = bright_gauss_blur_1_rd21_select(bright, d0, d1, dynamic_address);
	set_at<336, 2304>(result, bright_gauss_blur_1_rd21_res);
	hw_uint<16> bright_gauss_blur_1_rd22_res = bright_gauss_blur_1_rd22_select(bright, d0, d1, dynamic_address);
	set_at<352, 2304>(result, bright_gauss_blur_1_rd22_res);
	hw_uint<16> bright_gauss_blur_1_rd23_res = bright_gauss_blur_1_rd23_select(bright, d0, d1, dynamic_address);
	set_at<368, 2304>(result, bright_gauss_blur_1_rd23_res);
	hw_uint<16> bright_gauss_blur_1_rd24_res = bright_gauss_blur_1_rd24_select(bright, d0, d1, dynamic_address);
	set_at<384, 2304>(result, bright_gauss_blur_1_rd24_res);
	hw_uint<16> bright_gauss_blur_1_rd25_res = bright_gauss_blur_1_rd25_select(bright, d0, d1, dynamic_address);
	set_at<400, 2304>(result, bright_gauss_blur_1_rd25_res);
	hw_uint<16> bright_gauss_blur_1_rd26_res = bright_gauss_blur_1_rd26_select(bright, d0, d1, dynamic_address);
	set_at<416, 2304>(result, bright_gauss_blur_1_rd26_res);
	hw_uint<16> bright_gauss_blur_1_rd27_res = bright_gauss_blur_1_rd27_select(bright, d0, d1, dynamic_address);
	set_at<432, 2304>(result, bright_gauss_blur_1_rd27_res);
	hw_uint<16> bright_gauss_blur_1_rd28_res = bright_gauss_blur_1_rd28_select(bright, d0, d1, dynamic_address);
	set_at<448, 2304>(result, bright_gauss_blur_1_rd28_res);
	hw_uint<16> bright_gauss_blur_1_rd29_res = bright_gauss_blur_1_rd29_select(bright, d0, d1, dynamic_address);
	set_at<464, 2304>(result, bright_gauss_blur_1_rd29_res);
	hw_uint<16> bright_gauss_blur_1_rd30_res = bright_gauss_blur_1_rd30_select(bright, d0, d1, dynamic_address);
	set_at<480, 2304>(result, bright_gauss_blur_1_rd30_res);
	hw_uint<16> bright_gauss_blur_1_rd31_res = bright_gauss_blur_1_rd31_select(bright, d0, d1, dynamic_address);
	set_at<496, 2304>(result, bright_gauss_blur_1_rd31_res);
	hw_uint<16> bright_gauss_blur_1_rd32_res = bright_gauss_blur_1_rd32_select(bright, d0, d1, dynamic_address);
	set_at<512, 2304>(result, bright_gauss_blur_1_rd32_res);
	hw_uint<16> bright_gauss_blur_1_rd33_res = bright_gauss_blur_1_rd33_select(bright, d0, d1, dynamic_address);
	set_at<528, 2304>(result, bright_gauss_blur_1_rd33_res);
	hw_uint<16> bright_gauss_blur_1_rd34_res = bright_gauss_blur_1_rd34_select(bright, d0, d1, dynamic_address);
	set_at<544, 2304>(result, bright_gauss_blur_1_rd34_res);
	hw_uint<16> bright_gauss_blur_1_rd35_res = bright_gauss_blur_1_rd35_select(bright, d0, d1, dynamic_address);
	set_at<560, 2304>(result, bright_gauss_blur_1_rd35_res);
	hw_uint<16> bright_gauss_blur_1_rd36_res = bright_gauss_blur_1_rd36_select(bright, d0, d1, dynamic_address);
	set_at<576, 2304>(result, bright_gauss_blur_1_rd36_res);
	hw_uint<16> bright_gauss_blur_1_rd37_res = bright_gauss_blur_1_rd37_select(bright, d0, d1, dynamic_address);
	set_at<592, 2304>(result, bright_gauss_blur_1_rd37_res);
	hw_uint<16> bright_gauss_blur_1_rd38_res = bright_gauss_blur_1_rd38_select(bright, d0, d1, dynamic_address);
	set_at<608, 2304>(result, bright_gauss_blur_1_rd38_res);
	hw_uint<16> bright_gauss_blur_1_rd39_res = bright_gauss_blur_1_rd39_select(bright, d0, d1, dynamic_address);
	set_at<624, 2304>(result, bright_gauss_blur_1_rd39_res);
	hw_uint<16> bright_gauss_blur_1_rd40_res = bright_gauss_blur_1_rd40_select(bright, d0, d1, dynamic_address);
	set_at<640, 2304>(result, bright_gauss_blur_1_rd40_res);
	hw_uint<16> bright_gauss_blur_1_rd41_res = bright_gauss_blur_1_rd41_select(bright, d0, d1, dynamic_address);
	set_at<656, 2304>(result, bright_gauss_blur_1_rd41_res);
	hw_uint<16> bright_gauss_blur_1_rd42_res = bright_gauss_blur_1_rd42_select(bright, d0, d1, dynamic_address);
	set_at<672, 2304>(result, bright_gauss_blur_1_rd42_res);
	hw_uint<16> bright_gauss_blur_1_rd43_res = bright_gauss_blur_1_rd43_select(bright, d0, d1, dynamic_address);
	set_at<688, 2304>(result, bright_gauss_blur_1_rd43_res);
	hw_uint<16> bright_gauss_blur_1_rd44_res = bright_gauss_blur_1_rd44_select(bright, d0, d1, dynamic_address);
	set_at<704, 2304>(result, bright_gauss_blur_1_rd44_res);
	hw_uint<16> bright_gauss_blur_1_rd45_res = bright_gauss_blur_1_rd45_select(bright, d0, d1, dynamic_address);
	set_at<720, 2304>(result, bright_gauss_blur_1_rd45_res);
	hw_uint<16> bright_gauss_blur_1_rd46_res = bright_gauss_blur_1_rd46_select(bright, d0, d1, dynamic_address);
	set_at<736, 2304>(result, bright_gauss_blur_1_rd46_res);
	hw_uint<16> bright_gauss_blur_1_rd47_res = bright_gauss_blur_1_rd47_select(bright, d0, d1, dynamic_address);
	set_at<752, 2304>(result, bright_gauss_blur_1_rd47_res);
	hw_uint<16> bright_gauss_blur_1_rd48_res = bright_gauss_blur_1_rd48_select(bright, d0, d1, dynamic_address);
	set_at<768, 2304>(result, bright_gauss_blur_1_rd48_res);
	hw_uint<16> bright_gauss_blur_1_rd49_res = bright_gauss_blur_1_rd49_select(bright, d0, d1, dynamic_address);
	set_at<784, 2304>(result, bright_gauss_blur_1_rd49_res);
	hw_uint<16> bright_gauss_blur_1_rd50_res = bright_gauss_blur_1_rd50_select(bright, d0, d1, dynamic_address);
	set_at<800, 2304>(result, bright_gauss_blur_1_rd50_res);
	hw_uint<16> bright_gauss_blur_1_rd51_res = bright_gauss_blur_1_rd51_select(bright, d0, d1, dynamic_address);
	set_at<816, 2304>(result, bright_gauss_blur_1_rd51_res);
	hw_uint<16> bright_gauss_blur_1_rd52_res = bright_gauss_blur_1_rd52_select(bright, d0, d1, dynamic_address);
	set_at<832, 2304>(result, bright_gauss_blur_1_rd52_res);
	hw_uint<16> bright_gauss_blur_1_rd53_res = bright_gauss_blur_1_rd53_select(bright, d0, d1, dynamic_address);
	set_at<848, 2304>(result, bright_gauss_blur_1_rd53_res);
	hw_uint<16> bright_gauss_blur_1_rd54_res = bright_gauss_blur_1_rd54_select(bright, d0, d1, dynamic_address);
	set_at<864, 2304>(result, bright_gauss_blur_1_rd54_res);
	hw_uint<16> bright_gauss_blur_1_rd55_res = bright_gauss_blur_1_rd55_select(bright, d0, d1, dynamic_address);
	set_at<880, 2304>(result, bright_gauss_blur_1_rd55_res);
	hw_uint<16> bright_gauss_blur_1_rd56_res = bright_gauss_blur_1_rd56_select(bright, d0, d1, dynamic_address);
	set_at<896, 2304>(result, bright_gauss_blur_1_rd56_res);
	hw_uint<16> bright_gauss_blur_1_rd57_res = bright_gauss_blur_1_rd57_select(bright, d0, d1, dynamic_address);
	set_at<912, 2304>(result, bright_gauss_blur_1_rd57_res);
	hw_uint<16> bright_gauss_blur_1_rd58_res = bright_gauss_blur_1_rd58_select(bright, d0, d1, dynamic_address);
	set_at<928, 2304>(result, bright_gauss_blur_1_rd58_res);
	hw_uint<16> bright_gauss_blur_1_rd59_res = bright_gauss_blur_1_rd59_select(bright, d0, d1, dynamic_address);
	set_at<944, 2304>(result, bright_gauss_blur_1_rd59_res);
	hw_uint<16> bright_gauss_blur_1_rd60_res = bright_gauss_blur_1_rd60_select(bright, d0, d1, dynamic_address);
	set_at<960, 2304>(result, bright_gauss_blur_1_rd60_res);
	hw_uint<16> bright_gauss_blur_1_rd61_res = bright_gauss_blur_1_rd61_select(bright, d0, d1, dynamic_address);
	set_at<976, 2304>(result, bright_gauss_blur_1_rd61_res);
	hw_uint<16> bright_gauss_blur_1_rd62_res = bright_gauss_blur_1_rd62_select(bright, d0, d1, dynamic_address);
	set_at<992, 2304>(result, bright_gauss_blur_1_rd62_res);
	hw_uint<16> bright_gauss_blur_1_rd63_res = bright_gauss_blur_1_rd63_select(bright, d0, d1, dynamic_address);
	set_at<1008, 2304>(result, bright_gauss_blur_1_rd63_res);
	hw_uint<16> bright_gauss_blur_1_rd64_res = bright_gauss_blur_1_rd64_select(bright, d0, d1, dynamic_address);
	set_at<1024, 2304>(result, bright_gauss_blur_1_rd64_res);
	hw_uint<16> bright_gauss_blur_1_rd65_res = bright_gauss_blur_1_rd65_select(bright, d0, d1, dynamic_address);
	set_at<1040, 2304>(result, bright_gauss_blur_1_rd65_res);
	hw_uint<16> bright_gauss_blur_1_rd66_res = bright_gauss_blur_1_rd66_select(bright, d0, d1, dynamic_address);
	set_at<1056, 2304>(result, bright_gauss_blur_1_rd66_res);
	hw_uint<16> bright_gauss_blur_1_rd67_res = bright_gauss_blur_1_rd67_select(bright, d0, d1, dynamic_address);
	set_at<1072, 2304>(result, bright_gauss_blur_1_rd67_res);
	hw_uint<16> bright_gauss_blur_1_rd68_res = bright_gauss_blur_1_rd68_select(bright, d0, d1, dynamic_address);
	set_at<1088, 2304>(result, bright_gauss_blur_1_rd68_res);
	hw_uint<16> bright_gauss_blur_1_rd69_res = bright_gauss_blur_1_rd69_select(bright, d0, d1, dynamic_address);
	set_at<1104, 2304>(result, bright_gauss_blur_1_rd69_res);
	hw_uint<16> bright_gauss_blur_1_rd70_res = bright_gauss_blur_1_rd70_select(bright, d0, d1, dynamic_address);
	set_at<1120, 2304>(result, bright_gauss_blur_1_rd70_res);
	hw_uint<16> bright_gauss_blur_1_rd71_res = bright_gauss_blur_1_rd71_select(bright, d0, d1, dynamic_address);
	set_at<1136, 2304>(result, bright_gauss_blur_1_rd71_res);
	hw_uint<16> bright_gauss_blur_1_rd72_res = bright_gauss_blur_1_rd72_select(bright, d0, d1, dynamic_address);
	set_at<1152, 2304>(result, bright_gauss_blur_1_rd72_res);
	hw_uint<16> bright_gauss_blur_1_rd73_res = bright_gauss_blur_1_rd73_select(bright, d0, d1, dynamic_address);
	set_at<1168, 2304>(result, bright_gauss_blur_1_rd73_res);
	hw_uint<16> bright_gauss_blur_1_rd74_res = bright_gauss_blur_1_rd74_select(bright, d0, d1, dynamic_address);
	set_at<1184, 2304>(result, bright_gauss_blur_1_rd74_res);
	hw_uint<16> bright_gauss_blur_1_rd75_res = bright_gauss_blur_1_rd75_select(bright, d0, d1, dynamic_address);
	set_at<1200, 2304>(result, bright_gauss_blur_1_rd75_res);
	hw_uint<16> bright_gauss_blur_1_rd76_res = bright_gauss_blur_1_rd76_select(bright, d0, d1, dynamic_address);
	set_at<1216, 2304>(result, bright_gauss_blur_1_rd76_res);
	hw_uint<16> bright_gauss_blur_1_rd77_res = bright_gauss_blur_1_rd77_select(bright, d0, d1, dynamic_address);
	set_at<1232, 2304>(result, bright_gauss_blur_1_rd77_res);
	hw_uint<16> bright_gauss_blur_1_rd78_res = bright_gauss_blur_1_rd78_select(bright, d0, d1, dynamic_address);
	set_at<1248, 2304>(result, bright_gauss_blur_1_rd78_res);
	hw_uint<16> bright_gauss_blur_1_rd79_res = bright_gauss_blur_1_rd79_select(bright, d0, d1, dynamic_address);
	set_at<1264, 2304>(result, bright_gauss_blur_1_rd79_res);
	hw_uint<16> bright_gauss_blur_1_rd80_res = bright_gauss_blur_1_rd80_select(bright, d0, d1, dynamic_address);
	set_at<1280, 2304>(result, bright_gauss_blur_1_rd80_res);
	hw_uint<16> bright_gauss_blur_1_rd81_res = bright_gauss_blur_1_rd81_select(bright, d0, d1, dynamic_address);
	set_at<1296, 2304>(result, bright_gauss_blur_1_rd81_res);
	hw_uint<16> bright_gauss_blur_1_rd82_res = bright_gauss_blur_1_rd82_select(bright, d0, d1, dynamic_address);
	set_at<1312, 2304>(result, bright_gauss_blur_1_rd82_res);
	hw_uint<16> bright_gauss_blur_1_rd83_res = bright_gauss_blur_1_rd83_select(bright, d0, d1, dynamic_address);
	set_at<1328, 2304>(result, bright_gauss_blur_1_rd83_res);
	hw_uint<16> bright_gauss_blur_1_rd84_res = bright_gauss_blur_1_rd84_select(bright, d0, d1, dynamic_address);
	set_at<1344, 2304>(result, bright_gauss_blur_1_rd84_res);
	hw_uint<16> bright_gauss_blur_1_rd85_res = bright_gauss_blur_1_rd85_select(bright, d0, d1, dynamic_address);
	set_at<1360, 2304>(result, bright_gauss_blur_1_rd85_res);
	hw_uint<16> bright_gauss_blur_1_rd86_res = bright_gauss_blur_1_rd86_select(bright, d0, d1, dynamic_address);
	set_at<1376, 2304>(result, bright_gauss_blur_1_rd86_res);
	hw_uint<16> bright_gauss_blur_1_rd87_res = bright_gauss_blur_1_rd87_select(bright, d0, d1, dynamic_address);
	set_at<1392, 2304>(result, bright_gauss_blur_1_rd87_res);
	hw_uint<16> bright_gauss_blur_1_rd88_res = bright_gauss_blur_1_rd88_select(bright, d0, d1, dynamic_address);
	set_at<1408, 2304>(result, bright_gauss_blur_1_rd88_res);
	hw_uint<16> bright_gauss_blur_1_rd89_res = bright_gauss_blur_1_rd89_select(bright, d0, d1, dynamic_address);
	set_at<1424, 2304>(result, bright_gauss_blur_1_rd89_res);
	hw_uint<16> bright_gauss_blur_1_rd90_res = bright_gauss_blur_1_rd90_select(bright, d0, d1, dynamic_address);
	set_at<1440, 2304>(result, bright_gauss_blur_1_rd90_res);
	hw_uint<16> bright_gauss_blur_1_rd91_res = bright_gauss_blur_1_rd91_select(bright, d0, d1, dynamic_address);
	set_at<1456, 2304>(result, bright_gauss_blur_1_rd91_res);
	hw_uint<16> bright_gauss_blur_1_rd92_res = bright_gauss_blur_1_rd92_select(bright, d0, d1, dynamic_address);
	set_at<1472, 2304>(result, bright_gauss_blur_1_rd92_res);
	hw_uint<16> bright_gauss_blur_1_rd93_res = bright_gauss_blur_1_rd93_select(bright, d0, d1, dynamic_address);
	set_at<1488, 2304>(result, bright_gauss_blur_1_rd93_res);
	hw_uint<16> bright_gauss_blur_1_rd94_res = bright_gauss_blur_1_rd94_select(bright, d0, d1, dynamic_address);
	set_at<1504, 2304>(result, bright_gauss_blur_1_rd94_res);
	hw_uint<16> bright_gauss_blur_1_rd95_res = bright_gauss_blur_1_rd95_select(bright, d0, d1, dynamic_address);
	set_at<1520, 2304>(result, bright_gauss_blur_1_rd95_res);
	hw_uint<16> bright_gauss_blur_1_rd96_res = bright_gauss_blur_1_rd96_select(bright, d0, d1, dynamic_address);
	set_at<1536, 2304>(result, bright_gauss_blur_1_rd96_res);
	hw_uint<16> bright_gauss_blur_1_rd97_res = bright_gauss_blur_1_rd97_select(bright, d0, d1, dynamic_address);
	set_at<1552, 2304>(result, bright_gauss_blur_1_rd97_res);
	hw_uint<16> bright_gauss_blur_1_rd98_res = bright_gauss_blur_1_rd98_select(bright, d0, d1, dynamic_address);
	set_at<1568, 2304>(result, bright_gauss_blur_1_rd98_res);
	hw_uint<16> bright_gauss_blur_1_rd99_res = bright_gauss_blur_1_rd99_select(bright, d0, d1, dynamic_address);
	set_at<1584, 2304>(result, bright_gauss_blur_1_rd99_res);
	hw_uint<16> bright_gauss_blur_1_rd100_res = bright_gauss_blur_1_rd100_select(bright, d0, d1, dynamic_address);
	set_at<1600, 2304>(result, bright_gauss_blur_1_rd100_res);
	hw_uint<16> bright_gauss_blur_1_rd101_res = bright_gauss_blur_1_rd101_select(bright, d0, d1, dynamic_address);
	set_at<1616, 2304>(result, bright_gauss_blur_1_rd101_res);
	hw_uint<16> bright_gauss_blur_1_rd102_res = bright_gauss_blur_1_rd102_select(bright, d0, d1, dynamic_address);
	set_at<1632, 2304>(result, bright_gauss_blur_1_rd102_res);
	hw_uint<16> bright_gauss_blur_1_rd103_res = bright_gauss_blur_1_rd103_select(bright, d0, d1, dynamic_address);
	set_at<1648, 2304>(result, bright_gauss_blur_1_rd103_res);
	hw_uint<16> bright_gauss_blur_1_rd104_res = bright_gauss_blur_1_rd104_select(bright, d0, d1, dynamic_address);
	set_at<1664, 2304>(result, bright_gauss_blur_1_rd104_res);
	hw_uint<16> bright_gauss_blur_1_rd105_res = bright_gauss_blur_1_rd105_select(bright, d0, d1, dynamic_address);
	set_at<1680, 2304>(result, bright_gauss_blur_1_rd105_res);
	hw_uint<16> bright_gauss_blur_1_rd106_res = bright_gauss_blur_1_rd106_select(bright, d0, d1, dynamic_address);
	set_at<1696, 2304>(result, bright_gauss_blur_1_rd106_res);
	hw_uint<16> bright_gauss_blur_1_rd107_res = bright_gauss_blur_1_rd107_select(bright, d0, d1, dynamic_address);
	set_at<1712, 2304>(result, bright_gauss_blur_1_rd107_res);
	hw_uint<16> bright_gauss_blur_1_rd108_res = bright_gauss_blur_1_rd108_select(bright, d0, d1, dynamic_address);
	set_at<1728, 2304>(result, bright_gauss_blur_1_rd108_res);
	hw_uint<16> bright_gauss_blur_1_rd109_res = bright_gauss_blur_1_rd109_select(bright, d0, d1, dynamic_address);
	set_at<1744, 2304>(result, bright_gauss_blur_1_rd109_res);
	hw_uint<16> bright_gauss_blur_1_rd110_res = bright_gauss_blur_1_rd110_select(bright, d0, d1, dynamic_address);
	set_at<1760, 2304>(result, bright_gauss_blur_1_rd110_res);
	hw_uint<16> bright_gauss_blur_1_rd111_res = bright_gauss_blur_1_rd111_select(bright, d0, d1, dynamic_address);
	set_at<1776, 2304>(result, bright_gauss_blur_1_rd111_res);
	hw_uint<16> bright_gauss_blur_1_rd112_res = bright_gauss_blur_1_rd112_select(bright, d0, d1, dynamic_address);
	set_at<1792, 2304>(result, bright_gauss_blur_1_rd112_res);
	hw_uint<16> bright_gauss_blur_1_rd113_res = bright_gauss_blur_1_rd113_select(bright, d0, d1, dynamic_address);
	set_at<1808, 2304>(result, bright_gauss_blur_1_rd113_res);
	hw_uint<16> bright_gauss_blur_1_rd114_res = bright_gauss_blur_1_rd114_select(bright, d0, d1, dynamic_address);
	set_at<1824, 2304>(result, bright_gauss_blur_1_rd114_res);
	hw_uint<16> bright_gauss_blur_1_rd115_res = bright_gauss_blur_1_rd115_select(bright, d0, d1, dynamic_address);
	set_at<1840, 2304>(result, bright_gauss_blur_1_rd115_res);
	hw_uint<16> bright_gauss_blur_1_rd116_res = bright_gauss_blur_1_rd116_select(bright, d0, d1, dynamic_address);
	set_at<1856, 2304>(result, bright_gauss_blur_1_rd116_res);
	hw_uint<16> bright_gauss_blur_1_rd117_res = bright_gauss_blur_1_rd117_select(bright, d0, d1, dynamic_address);
	set_at<1872, 2304>(result, bright_gauss_blur_1_rd117_res);
	hw_uint<16> bright_gauss_blur_1_rd118_res = bright_gauss_blur_1_rd118_select(bright, d0, d1, dynamic_address);
	set_at<1888, 2304>(result, bright_gauss_blur_1_rd118_res);
	hw_uint<16> bright_gauss_blur_1_rd119_res = bright_gauss_blur_1_rd119_select(bright, d0, d1, dynamic_address);
	set_at<1904, 2304>(result, bright_gauss_blur_1_rd119_res);
	hw_uint<16> bright_gauss_blur_1_rd120_res = bright_gauss_blur_1_rd120_select(bright, d0, d1, dynamic_address);
	set_at<1920, 2304>(result, bright_gauss_blur_1_rd120_res);
	hw_uint<16> bright_gauss_blur_1_rd121_res = bright_gauss_blur_1_rd121_select(bright, d0, d1, dynamic_address);
	set_at<1936, 2304>(result, bright_gauss_blur_1_rd121_res);
	hw_uint<16> bright_gauss_blur_1_rd122_res = bright_gauss_blur_1_rd122_select(bright, d0, d1, dynamic_address);
	set_at<1952, 2304>(result, bright_gauss_blur_1_rd122_res);
	hw_uint<16> bright_gauss_blur_1_rd123_res = bright_gauss_blur_1_rd123_select(bright, d0, d1, dynamic_address);
	set_at<1968, 2304>(result, bright_gauss_blur_1_rd123_res);
	hw_uint<16> bright_gauss_blur_1_rd124_res = bright_gauss_blur_1_rd124_select(bright, d0, d1, dynamic_address);
	set_at<1984, 2304>(result, bright_gauss_blur_1_rd124_res);
	hw_uint<16> bright_gauss_blur_1_rd125_res = bright_gauss_blur_1_rd125_select(bright, d0, d1, dynamic_address);
	set_at<2000, 2304>(result, bright_gauss_blur_1_rd125_res);
	hw_uint<16> bright_gauss_blur_1_rd126_res = bright_gauss_blur_1_rd126_select(bright, d0, d1, dynamic_address);
	set_at<2016, 2304>(result, bright_gauss_blur_1_rd126_res);
	hw_uint<16> bright_gauss_blur_1_rd127_res = bright_gauss_blur_1_rd127_select(bright, d0, d1, dynamic_address);
	set_at<2032, 2304>(result, bright_gauss_blur_1_rd127_res);
	hw_uint<16> bright_gauss_blur_1_rd128_res = bright_gauss_blur_1_rd128_select(bright, d0, d1, dynamic_address);
	set_at<2048, 2304>(result, bright_gauss_blur_1_rd128_res);
	hw_uint<16> bright_gauss_blur_1_rd129_res = bright_gauss_blur_1_rd129_select(bright, d0, d1, dynamic_address);
	set_at<2064, 2304>(result, bright_gauss_blur_1_rd129_res);
	hw_uint<16> bright_gauss_blur_1_rd130_res = bright_gauss_blur_1_rd130_select(bright, d0, d1, dynamic_address);
	set_at<2080, 2304>(result, bright_gauss_blur_1_rd130_res);
	hw_uint<16> bright_gauss_blur_1_rd131_res = bright_gauss_blur_1_rd131_select(bright, d0, d1, dynamic_address);
	set_at<2096, 2304>(result, bright_gauss_blur_1_rd131_res);
	hw_uint<16> bright_gauss_blur_1_rd132_res = bright_gauss_blur_1_rd132_select(bright, d0, d1, dynamic_address);
	set_at<2112, 2304>(result, bright_gauss_blur_1_rd132_res);
	hw_uint<16> bright_gauss_blur_1_rd133_res = bright_gauss_blur_1_rd133_select(bright, d0, d1, dynamic_address);
	set_at<2128, 2304>(result, bright_gauss_blur_1_rd133_res);
	hw_uint<16> bright_gauss_blur_1_rd134_res = bright_gauss_blur_1_rd134_select(bright, d0, d1, dynamic_address);
	set_at<2144, 2304>(result, bright_gauss_blur_1_rd134_res);
	hw_uint<16> bright_gauss_blur_1_rd135_res = bright_gauss_blur_1_rd135_select(bright, d0, d1, dynamic_address);
	set_at<2160, 2304>(result, bright_gauss_blur_1_rd135_res);
	hw_uint<16> bright_gauss_blur_1_rd136_res = bright_gauss_blur_1_rd136_select(bright, d0, d1, dynamic_address);
	set_at<2176, 2304>(result, bright_gauss_blur_1_rd136_res);
	hw_uint<16> bright_gauss_blur_1_rd137_res = bright_gauss_blur_1_rd137_select(bright, d0, d1, dynamic_address);
	set_at<2192, 2304>(result, bright_gauss_blur_1_rd137_res);
	hw_uint<16> bright_gauss_blur_1_rd138_res = bright_gauss_blur_1_rd138_select(bright, d0, d1, dynamic_address);
	set_at<2208, 2304>(result, bright_gauss_blur_1_rd138_res);
	hw_uint<16> bright_gauss_blur_1_rd139_res = bright_gauss_blur_1_rd139_select(bright, d0, d1, dynamic_address);
	set_at<2224, 2304>(result, bright_gauss_blur_1_rd139_res);
	hw_uint<16> bright_gauss_blur_1_rd140_res = bright_gauss_blur_1_rd140_select(bright, d0, d1, dynamic_address);
	set_at<2240, 2304>(result, bright_gauss_blur_1_rd140_res);
	hw_uint<16> bright_gauss_blur_1_rd141_res = bright_gauss_blur_1_rd141_select(bright, d0, d1, dynamic_address);
	set_at<2256, 2304>(result, bright_gauss_blur_1_rd141_res);
	hw_uint<16> bright_gauss_blur_1_rd142_res = bright_gauss_blur_1_rd142_select(bright, d0, d1, dynamic_address);
	set_at<2272, 2304>(result, bright_gauss_blur_1_rd142_res);
	hw_uint<16> bright_gauss_blur_1_rd143_res = bright_gauss_blur_1_rd143_select(bright, d0, d1, dynamic_address);
	set_at<2288, 2304>(result, bright_gauss_blur_1_rd143_res);
	return result;
}

// bright_laplace_diff_0_update_0_read
//	bright_laplace_diff_0_rd0
//	bright_laplace_diff_0_rd1
//	bright_laplace_diff_0_rd2
//	bright_laplace_diff_0_rd3
//	bright_laplace_diff_0_rd4
//	bright_laplace_diff_0_rd5
//	bright_laplace_diff_0_rd6
//	bright_laplace_diff_0_rd7
//	bright_laplace_diff_0_rd8
//	bright_laplace_diff_0_rd9
//	bright_laplace_diff_0_rd10
//	bright_laplace_diff_0_rd11
//	bright_laplace_diff_0_rd12
//	bright_laplace_diff_0_rd13
//	bright_laplace_diff_0_rd14
//	bright_laplace_diff_0_rd15
inline hw_uint<256> bright_bright_laplace_diff_0_update_0_read_bundle_read(bright_cache& bright, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // bright_laplace_diff_0_rd0
    // bright_laplace_diff_0_rd1
    // bright_laplace_diff_0_rd2
    // bright_laplace_diff_0_rd3
    // bright_laplace_diff_0_rd4
    // bright_laplace_diff_0_rd5
    // bright_laplace_diff_0_rd6
    // bright_laplace_diff_0_rd7
    // bright_laplace_diff_0_rd8
    // bright_laplace_diff_0_rd9
    // bright_laplace_diff_0_rd10
    // bright_laplace_diff_0_rd11
    // bright_laplace_diff_0_rd12
    // bright_laplace_diff_0_rd13
    // bright_laplace_diff_0_rd14
    // bright_laplace_diff_0_rd15

	hw_uint<256> result;
	hw_uint<16> bright_laplace_diff_0_rd0_res = bright_laplace_diff_0_rd0_select(bright, d0, d1, dynamic_address);
	set_at<0, 256>(result, bright_laplace_diff_0_rd0_res);
	hw_uint<16> bright_laplace_diff_0_rd1_res = bright_laplace_diff_0_rd1_select(bright, d0, d1, dynamic_address);
	set_at<16, 256>(result, bright_laplace_diff_0_rd1_res);
	hw_uint<16> bright_laplace_diff_0_rd2_res = bright_laplace_diff_0_rd2_select(bright, d0, d1, dynamic_address);
	set_at<32, 256>(result, bright_laplace_diff_0_rd2_res);
	hw_uint<16> bright_laplace_diff_0_rd3_res = bright_laplace_diff_0_rd3_select(bright, d0, d1, dynamic_address);
	set_at<48, 256>(result, bright_laplace_diff_0_rd3_res);
	hw_uint<16> bright_laplace_diff_0_rd4_res = bright_laplace_diff_0_rd4_select(bright, d0, d1, dynamic_address);
	set_at<64, 256>(result, bright_laplace_diff_0_rd4_res);
	hw_uint<16> bright_laplace_diff_0_rd5_res = bright_laplace_diff_0_rd5_select(bright, d0, d1, dynamic_address);
	set_at<80, 256>(result, bright_laplace_diff_0_rd5_res);
	hw_uint<16> bright_laplace_diff_0_rd6_res = bright_laplace_diff_0_rd6_select(bright, d0, d1, dynamic_address);
	set_at<96, 256>(result, bright_laplace_diff_0_rd6_res);
	hw_uint<16> bright_laplace_diff_0_rd7_res = bright_laplace_diff_0_rd7_select(bright, d0, d1, dynamic_address);
	set_at<112, 256>(result, bright_laplace_diff_0_rd7_res);
	hw_uint<16> bright_laplace_diff_0_rd8_res = bright_laplace_diff_0_rd8_select(bright, d0, d1, dynamic_address);
	set_at<128, 256>(result, bright_laplace_diff_0_rd8_res);
	hw_uint<16> bright_laplace_diff_0_rd9_res = bright_laplace_diff_0_rd9_select(bright, d0, d1, dynamic_address);
	set_at<144, 256>(result, bright_laplace_diff_0_rd9_res);
	hw_uint<16> bright_laplace_diff_0_rd10_res = bright_laplace_diff_0_rd10_select(bright, d0, d1, dynamic_address);
	set_at<160, 256>(result, bright_laplace_diff_0_rd10_res);
	hw_uint<16> bright_laplace_diff_0_rd11_res = bright_laplace_diff_0_rd11_select(bright, d0, d1, dynamic_address);
	set_at<176, 256>(result, bright_laplace_diff_0_rd11_res);
	hw_uint<16> bright_laplace_diff_0_rd12_res = bright_laplace_diff_0_rd12_select(bright, d0, d1, dynamic_address);
	set_at<192, 256>(result, bright_laplace_diff_0_rd12_res);
	hw_uint<16> bright_laplace_diff_0_rd13_res = bright_laplace_diff_0_rd13_select(bright, d0, d1, dynamic_address);
	set_at<208, 256>(result, bright_laplace_diff_0_rd13_res);
	hw_uint<16> bright_laplace_diff_0_rd14_res = bright_laplace_diff_0_rd14_select(bright, d0, d1, dynamic_address);
	set_at<224, 256>(result, bright_laplace_diff_0_rd14_res);
	hw_uint<16> bright_laplace_diff_0_rd15_res = bright_laplace_diff_0_rd15_select(bright, d0, d1, dynamic_address);
	set_at<240, 256>(result, bright_laplace_diff_0_rd15_res);
	return result;
}

// bright_update_0_write
//	bright_bright_update_0_write0
//	bright_bright_update_0_write1
//	bright_bright_update_0_write2
//	bright_bright_update_0_write3
//	bright_bright_update_0_write4
//	bright_bright_update_0_write5
//	bright_bright_update_0_write6
//	bright_bright_update_0_write7
//	bright_bright_update_0_write8
//	bright_bright_update_0_write9
//	bright_bright_update_0_write10
//	bright_bright_update_0_write11
//	bright_bright_update_0_write12
//	bright_bright_update_0_write13
//	bright_bright_update_0_write14
//	bright_bright_update_0_write15
inline void bright_bright_update_0_write_bundle_write(hw_uint<256>& bright_update_0_write, bright_cache& bright, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_bright_update_0_write0_res = bright_update_0_write.extract<0, 15>();
	bright_bright_update_0_write0_write(bright_bright_update_0_write0_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write1_res = bright_update_0_write.extract<16, 31>();
	bright_bright_update_0_write1_write(bright_bright_update_0_write1_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write2_res = bright_update_0_write.extract<32, 47>();
	bright_bright_update_0_write2_write(bright_bright_update_0_write2_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write3_res = bright_update_0_write.extract<48, 63>();
	bright_bright_update_0_write3_write(bright_bright_update_0_write3_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write4_res = bright_update_0_write.extract<64, 79>();
	bright_bright_update_0_write4_write(bright_bright_update_0_write4_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write5_res = bright_update_0_write.extract<80, 95>();
	bright_bright_update_0_write5_write(bright_bright_update_0_write5_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write6_res = bright_update_0_write.extract<96, 111>();
	bright_bright_update_0_write6_write(bright_bright_update_0_write6_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write7_res = bright_update_0_write.extract<112, 127>();
	bright_bright_update_0_write7_write(bright_bright_update_0_write7_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write8_res = bright_update_0_write.extract<128, 143>();
	bright_bright_update_0_write8_write(bright_bright_update_0_write8_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write9_res = bright_update_0_write.extract<144, 159>();
	bright_bright_update_0_write9_write(bright_bright_update_0_write9_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write10_res = bright_update_0_write.extract<160, 175>();
	bright_bright_update_0_write10_write(bright_bright_update_0_write10_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write11_res = bright_update_0_write.extract<176, 191>();
	bright_bright_update_0_write11_write(bright_bright_update_0_write11_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write12_res = bright_update_0_write.extract<192, 207>();
	bright_bright_update_0_write12_write(bright_bright_update_0_write12_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write13_res = bright_update_0_write.extract<208, 223>();
	bright_bright_update_0_write13_write(bright_bright_update_0_write13_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write14_res = bright_update_0_write.extract<224, 239>();
	bright_bright_update_0_write14_write(bright_bright_update_0_write14_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write15_res = bright_update_0_write.extract<240, 255>();
	bright_bright_update_0_write15_write(bright_bright_update_0_write15_res, bright, d0, d1, dynamic_address);
}

// bright_weights_update_0_read
//	bright_weights_rd0
//	bright_weights_rd1
//	bright_weights_rd2
//	bright_weights_rd3
//	bright_weights_rd4
//	bright_weights_rd5
//	bright_weights_rd6
//	bright_weights_rd7
//	bright_weights_rd8
//	bright_weights_rd9
//	bright_weights_rd10
//	bright_weights_rd11
//	bright_weights_rd12
//	bright_weights_rd13
//	bright_weights_rd14
//	bright_weights_rd15
inline hw_uint<256> bright_bright_weights_update_0_read_bundle_read(bright_cache& bright, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // bright_weights_rd0
    // bright_weights_rd1
    // bright_weights_rd2
    // bright_weights_rd3
    // bright_weights_rd4
    // bright_weights_rd5
    // bright_weights_rd6
    // bright_weights_rd7
    // bright_weights_rd8
    // bright_weights_rd9
    // bright_weights_rd10
    // bright_weights_rd11
    // bright_weights_rd12
    // bright_weights_rd13
    // bright_weights_rd14
    // bright_weights_rd15

	hw_uint<256> result;
	hw_uint<16> bright_weights_rd0_res = bright_weights_rd0_select(bright, d0, d1, dynamic_address);
	set_at<0, 256>(result, bright_weights_rd0_res);
	hw_uint<16> bright_weights_rd1_res = bright_weights_rd1_select(bright, d0, d1, dynamic_address);
	set_at<16, 256>(result, bright_weights_rd1_res);
	hw_uint<16> bright_weights_rd2_res = bright_weights_rd2_select(bright, d0, d1, dynamic_address);
	set_at<32, 256>(result, bright_weights_rd2_res);
	hw_uint<16> bright_weights_rd3_res = bright_weights_rd3_select(bright, d0, d1, dynamic_address);
	set_at<48, 256>(result, bright_weights_rd3_res);
	hw_uint<16> bright_weights_rd4_res = bright_weights_rd4_select(bright, d0, d1, dynamic_address);
	set_at<64, 256>(result, bright_weights_rd4_res);
	hw_uint<16> bright_weights_rd5_res = bright_weights_rd5_select(bright, d0, d1, dynamic_address);
	set_at<80, 256>(result, bright_weights_rd5_res);
	hw_uint<16> bright_weights_rd6_res = bright_weights_rd6_select(bright, d0, d1, dynamic_address);
	set_at<96, 256>(result, bright_weights_rd6_res);
	hw_uint<16> bright_weights_rd7_res = bright_weights_rd7_select(bright, d0, d1, dynamic_address);
	set_at<112, 256>(result, bright_weights_rd7_res);
	hw_uint<16> bright_weights_rd8_res = bright_weights_rd8_select(bright, d0, d1, dynamic_address);
	set_at<128, 256>(result, bright_weights_rd8_res);
	hw_uint<16> bright_weights_rd9_res = bright_weights_rd9_select(bright, d0, d1, dynamic_address);
	set_at<144, 256>(result, bright_weights_rd9_res);
	hw_uint<16> bright_weights_rd10_res = bright_weights_rd10_select(bright, d0, d1, dynamic_address);
	set_at<160, 256>(result, bright_weights_rd10_res);
	hw_uint<16> bright_weights_rd11_res = bright_weights_rd11_select(bright, d0, d1, dynamic_address);
	set_at<176, 256>(result, bright_weights_rd11_res);
	hw_uint<16> bright_weights_rd12_res = bright_weights_rd12_select(bright, d0, d1, dynamic_address);
	set_at<192, 256>(result, bright_weights_rd12_res);
	hw_uint<16> bright_weights_rd13_res = bright_weights_rd13_select(bright, d0, d1, dynamic_address);
	set_at<208, 256>(result, bright_weights_rd13_res);
	hw_uint<16> bright_weights_rd14_res = bright_weights_rd14_select(bright, d0, d1, dynamic_address);
	set_at<224, 256>(result, bright_weights_rd14_res);
	hw_uint<16> bright_weights_rd15_res = bright_weights_rd15_select(bright, d0, d1, dynamic_address);
	set_at<240, 256>(result, bright_weights_rd15_res);
	return result;
}

#include "hw_classes.h"

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_to_bright_gauss_ds_1_rd0_cache {
	// RAM Box: {[0, 1936], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_to_bright_gauss_ds_1_rd1_cache {
	// RAM Box: {[2, 1938], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_to_bright_gauss_ds_1_rd2_cache {
	// RAM Box: {[4, 1940], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_to_bright_gauss_ds_1_rd3_cache {
	// RAM Box: {[6, 1942], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8_to_bright_gauss_ds_1_rd4_cache {
	// RAM Box: {[8, 1944], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10_to_bright_gauss_ds_1_rd5_cache {
	// RAM Box: {[10, 1946], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12_to_bright_gauss_ds_1_rd6_cache {
	// RAM Box: {[12, 1948], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14_to_bright_gauss_ds_1_rd7_cache {
	// RAM Box: {[14, 1950], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_cache {
  // # of banks: 8
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_to_bright_gauss_ds_1_rd0_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_to_bright_gauss_ds_1_rd0;
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_to_bright_gauss_ds_1_rd1_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_to_bright_gauss_ds_1_rd1;
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_to_bright_gauss_ds_1_rd2_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_to_bright_gauss_ds_1_rd2;
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_to_bright_gauss_ds_1_rd3_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_to_bright_gauss_ds_1_rd3;
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8_to_bright_gauss_ds_1_rd4_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8_to_bright_gauss_ds_1_rd4;
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10_to_bright_gauss_ds_1_rd5_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10_to_bright_gauss_ds_1_rd5;
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12_to_bright_gauss_ds_1_rd6_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12_to_bright_gauss_ds_1_rd6;
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14_to_bright_gauss_ds_1_rd7_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14_to_bright_gauss_ds_1_rd7;
};



inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_to_bright_gauss_ds_1_rd0.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10_to_bright_gauss_ds_1_rd5.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write11_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write11, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12_to_bright_gauss_ds_1_rd6.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write13_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write13, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14_to_bright_gauss_ds_1_rd7.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write15_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write15, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_to_bright_gauss_ds_1_rd1.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_to_bright_gauss_ds_1_rd2.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_to_bright_gauss_ds_1_rd3.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8_to_bright_gauss_ds_1_rd4.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write9_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write9, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_gauss_ds_1_rd0_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd0 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_to_bright_gauss_ds_1_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_rd1_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd1 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[2 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_to_bright_gauss_ds_1_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_rd2_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd2 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[4 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_to_bright_gauss_ds_1_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_rd3_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd3 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[6 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_to_bright_gauss_ds_1_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_rd4_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd4 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[8 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8_to_bright_gauss_ds_1_rd4.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_rd5_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd5 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[10 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10_to_bright_gauss_ds_1_rd5.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_rd6_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd6 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[12 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12_to_bright_gauss_ds_1_rd6.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_rd7_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd7 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[14 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14_to_bright_gauss_ds_1_rd7.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_1_update_0_write
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write9
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write11
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write13
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write15
inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write_bundle_write(hw_uint<256>& bright_gauss_blur_1_update_0_write, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_res = bright_gauss_blur_1_update_0_write.extract<0, 15>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1_res = bright_gauss_blur_1_update_0_write.extract<16, 31>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_res = bright_gauss_blur_1_update_0_write.extract<32, 47>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3_res = bright_gauss_blur_1_update_0_write.extract<48, 63>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_res = bright_gauss_blur_1_update_0_write.extract<64, 79>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5_res = bright_gauss_blur_1_update_0_write.extract<80, 95>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_res = bright_gauss_blur_1_update_0_write.extract<96, 111>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7_res = bright_gauss_blur_1_update_0_write.extract<112, 127>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8_res = bright_gauss_blur_1_update_0_write.extract<128, 143>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write8_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write9_res = bright_gauss_blur_1_update_0_write.extract<144, 159>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write9_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write9_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10_res = bright_gauss_blur_1_update_0_write.extract<160, 175>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write10_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write11_res = bright_gauss_blur_1_update_0_write.extract<176, 191>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write11_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write11_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12_res = bright_gauss_blur_1_update_0_write.extract<192, 207>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write12_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write13_res = bright_gauss_blur_1_update_0_write.extract<208, 223>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write13_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write13_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14_res = bright_gauss_blur_1_update_0_write.extract<224, 239>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write14_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write15_res = bright_gauss_blur_1_update_0_write.extract<240, 255>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write15_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write15_res, bright_gauss_blur_1, d0, d1, dynamic_address);
}

// bright_gauss_ds_1_update_0_read
//	bright_gauss_ds_1_rd0
//	bright_gauss_ds_1_rd1
//	bright_gauss_ds_1_rd2
//	bright_gauss_ds_1_rd3
//	bright_gauss_ds_1_rd4
//	bright_gauss_ds_1_rd5
//	bright_gauss_ds_1_rd6
//	bright_gauss_ds_1_rd7
inline hw_uint<128> bright_gauss_blur_1_bright_gauss_ds_1_update_0_read_bundle_read(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // bright_gauss_ds_1_rd0
    // bright_gauss_ds_1_rd1
    // bright_gauss_ds_1_rd2
    // bright_gauss_ds_1_rd3
    // bright_gauss_ds_1_rd4
    // bright_gauss_ds_1_rd5
    // bright_gauss_ds_1_rd6
    // bright_gauss_ds_1_rd7

	hw_uint<128> result;
	hw_uint<16> bright_gauss_ds_1_rd0_res = bright_gauss_ds_1_rd0_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, bright_gauss_ds_1_rd0_res);
	hw_uint<16> bright_gauss_ds_1_rd1_res = bright_gauss_ds_1_rd1_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, bright_gauss_ds_1_rd1_res);
	hw_uint<16> bright_gauss_ds_1_rd2_res = bright_gauss_ds_1_rd2_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, bright_gauss_ds_1_rd2_res);
	hw_uint<16> bright_gauss_ds_1_rd3_res = bright_gauss_ds_1_rd3_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, bright_gauss_ds_1_rd3_res);
	hw_uint<16> bright_gauss_ds_1_rd4_res = bright_gauss_ds_1_rd4_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, bright_gauss_ds_1_rd4_res);
	hw_uint<16> bright_gauss_ds_1_rd5_res = bright_gauss_ds_1_rd5_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, bright_gauss_ds_1_rd5_res);
	hw_uint<16> bright_gauss_ds_1_rd6_res = bright_gauss_ds_1_rd6_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, bright_gauss_ds_1_rd6_res);
	hw_uint<16> bright_gauss_ds_1_rd7_res = bright_gauss_ds_1_rd7_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, bright_gauss_ds_1_rd7_res);
	return result;
}

#include "hw_classes.h"

struct bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_to_bright_gauss_ds_2_rd0_cache {
	// RAM Box: {[0, 960], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_to_bright_gauss_ds_2_rd1_cache {
	// RAM Box: {[2, 962], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4_to_bright_gauss_ds_2_rd2_cache {
	// RAM Box: {[4, 964], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6_to_bright_gauss_ds_2_rd3_cache {
	// RAM Box: {[6, 966], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_2_cache {
  // # of banks: 4
  bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_to_bright_gauss_ds_2_rd0_cache bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_to_bright_gauss_ds_2_rd0;
  bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_to_bright_gauss_ds_2_rd1_cache bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_to_bright_gauss_ds_2_rd1;
  bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4_to_bright_gauss_ds_2_rd2_cache bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4_to_bright_gauss_ds_2_rd2;
  bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6_to_bright_gauss_ds_2_rd3_cache bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6_to_bright_gauss_ds_2_rd3;
};



inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_to_bright_gauss_ds_2_rd0.push(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0);
}

inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_to_bright_gauss_ds_2_rd1.push(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2);
}

inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4_to_bright_gauss_ds_2_rd2.push(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4);
}

inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write5_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write5, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6_to_bright_gauss_ds_2_rd3.push(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6);
}

inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write7_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write7, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_gauss_ds_2_rd0_select(bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_rd0 read pattern: { bright_gauss_ds_2_update_0[d0, d1] -> bright_gauss_blur_2[8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0 = bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_to_bright_gauss_ds_2_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_rd1_select(bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_rd1 read pattern: { bright_gauss_ds_2_update_0[d0, d1] -> bright_gauss_blur_2[2 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2 = bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_to_bright_gauss_ds_2_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_rd2_select(bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_rd2 read pattern: { bright_gauss_ds_2_update_0[d0, d1] -> bright_gauss_blur_2[4 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4 = bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4_to_bright_gauss_ds_2_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_rd3_select(bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_rd3 read pattern: { bright_gauss_ds_2_update_0[d0, d1] -> bright_gauss_blur_2[6 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6 = bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6_to_bright_gauss_ds_2_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_2_update_0_write
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write5
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write7
inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write_bundle_write(hw_uint<128>& bright_gauss_blur_2_update_0_write, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_res = bright_gauss_blur_2_update_0_write.extract<0, 15>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_res, bright_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1_res = bright_gauss_blur_2_update_0_write.extract<16, 31>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1_res, bright_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_res = bright_gauss_blur_2_update_0_write.extract<32, 47>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_res, bright_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3_res = bright_gauss_blur_2_update_0_write.extract<48, 63>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3_res, bright_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4_res = bright_gauss_blur_2_update_0_write.extract<64, 79>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write4_res, bright_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write5_res = bright_gauss_blur_2_update_0_write.extract<80, 95>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write5_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write5_res, bright_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6_res = bright_gauss_blur_2_update_0_write.extract<96, 111>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write6_res, bright_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write7_res = bright_gauss_blur_2_update_0_write.extract<112, 127>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write7_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write7_res, bright_gauss_blur_2, d0, d1, dynamic_address);
}

// bright_gauss_ds_2_update_0_read
//	bright_gauss_ds_2_rd0
//	bright_gauss_ds_2_rd1
//	bright_gauss_ds_2_rd2
//	bright_gauss_ds_2_rd3
inline hw_uint<64> bright_gauss_blur_2_bright_gauss_ds_2_update_0_read_bundle_read(bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // bright_gauss_ds_2_rd0
    // bright_gauss_ds_2_rd1
    // bright_gauss_ds_2_rd2
    // bright_gauss_ds_2_rd3

	hw_uint<64> result;
	hw_uint<16> bright_gauss_ds_2_rd0_res = bright_gauss_ds_2_rd0_select(bright_gauss_blur_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, bright_gauss_ds_2_rd0_res);
	hw_uint<16> bright_gauss_ds_2_rd1_res = bright_gauss_ds_2_rd1_select(bright_gauss_blur_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, bright_gauss_ds_2_rd1_res);
	hw_uint<16> bright_gauss_ds_2_rd2_res = bright_gauss_ds_2_rd2_select(bright_gauss_blur_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, bright_gauss_ds_2_rd2_res);
	hw_uint<16> bright_gauss_ds_2_rd3_res = bright_gauss_ds_2_rd3_select(bright_gauss_blur_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, bright_gauss_ds_2_rd3_res);
	return result;
}

#include "hw_classes.h"

struct bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_to_bright_gauss_ds_3_rd0_cache {
	// RAM Box: {[0, 476], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2_to_bright_gauss_ds_3_rd1_cache {
	// RAM Box: {[2, 478], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_3_cache {
  // # of banks: 2
  bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_to_bright_gauss_ds_3_rd0_cache bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_to_bright_gauss_ds_3_rd0;
  bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2_to_bright_gauss_ds_3_rd1_cache bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2_to_bright_gauss_ds_3_rd1;
};



inline void bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_write(hw_uint<16>& bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0, bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_3.bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_to_bright_gauss_ds_3_rd0.push(bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0);
}

inline void bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1_write(hw_uint<16>& bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1, bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2_write(hw_uint<16>& bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2, bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_3.bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2_to_bright_gauss_ds_3_rd1.push(bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2);
}

inline void bright_gauss_blur_3_bright_gauss_blur_3_update_0_write3_write(hw_uint<16>& bright_gauss_blur_3_bright_gauss_blur_3_update_0_write3, bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_gauss_ds_3_rd0_select(bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_3_rd0 read pattern: { bright_gauss_ds_3_update_0[d0, d1] -> bright_gauss_blur_3[4d0, 2d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { bright_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 30] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  auto value_bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0 = bright_gauss_blur_3.bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_to_bright_gauss_ds_3_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_3_rd1_select(bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_3_rd1 read pattern: { bright_gauss_ds_3_update_0[d0, d1] -> bright_gauss_blur_3[2 + 4d0, 2d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { bright_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 30] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  auto value_bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2 = bright_gauss_blur_3.bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2_to_bright_gauss_ds_3_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_3_update_0_write
//	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0
//	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1
//	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2
//	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write3
inline void bright_gauss_blur_3_bright_gauss_blur_3_update_0_write_bundle_write(hw_uint<64>& bright_gauss_blur_3_update_0_write, bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_res = bright_gauss_blur_3_update_0_write.extract<0, 15>();
	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_write(bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_res, bright_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1_res = bright_gauss_blur_3_update_0_write.extract<16, 31>();
	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1_write(bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1_res, bright_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2_res = bright_gauss_blur_3_update_0_write.extract<32, 47>();
	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2_write(bright_gauss_blur_3_bright_gauss_blur_3_update_0_write2_res, bright_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_3_bright_gauss_blur_3_update_0_write3_res = bright_gauss_blur_3_update_0_write.extract<48, 63>();
	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write3_write(bright_gauss_blur_3_bright_gauss_blur_3_update_0_write3_res, bright_gauss_blur_3, d0, d1, dynamic_address);
}

// bright_gauss_ds_3_update_0_read
//	bright_gauss_ds_3_rd0
//	bright_gauss_ds_3_rd1
inline hw_uint<32> bright_gauss_blur_3_bright_gauss_ds_3_update_0_read_bundle_read(bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // bright_gauss_ds_3_rd0
    // bright_gauss_ds_3_rd1

	hw_uint<32> result;
	hw_uint<16> bright_gauss_ds_3_rd0_res = bright_gauss_ds_3_rd0_select(bright_gauss_blur_3, d0, d1, dynamic_address);
	set_at<0, 32>(result, bright_gauss_ds_3_rd0_res);
	hw_uint<16> bright_gauss_ds_3_rd1_res = bright_gauss_ds_3_rd1_select(bright_gauss_blur_3, d0, d1, dynamic_address);
	set_at<16, 32>(result, bright_gauss_ds_3_rd1_res);
	return result;
}

#include "hw_classes.h"

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd0_cache {
	// RAM Box: {[0, 968], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd1_cache {
	// RAM Box: {[0, 968], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_to_bright_laplace_us_0_rd10_cache {
	// RAM Box: {[5, 973], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_to_bright_laplace_us_0_rd11_cache {
	// RAM Box: {[5, 973], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_to_bright_laplace_us_0_rd12_cache {
	// RAM Box: {[6, 974], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_to_bright_laplace_us_0_rd13_cache {
	// RAM Box: {[6, 974], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_to_bright_laplace_us_0_rd14_cache {
	// RAM Box: {[7, 975], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_to_bright_laplace_us_0_rd15_cache {
	// RAM Box: {[7, 975], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd2_cache {
	// RAM Box: {[1, 969], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd3_cache {
	// RAM Box: {[1, 969], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd4_cache {
	// RAM Box: {[2, 970], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd5_cache {
	// RAM Box: {[2, 970], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd6_cache {
	// RAM Box: {[3, 971], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd7_cache {
	// RAM Box: {[3, 971], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_to_bright_laplace_us_0_rd8_cache {
	// RAM Box: {[4, 972], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_to_bright_laplace_us_0_rd9_cache {
	// RAM Box: {[4, 972], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10_cache {
	// RAM Box: {[0, 968], [0, 542]}
	// Capacity: 246
	// # of read delays: 6
  // 0, 1, 122, 123, 244, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 120> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_123() {
		return f6;
	}

	inline hw_uint<16> peek_243() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_244() {
		return f8;
	}

	inline hw_uint<16> peek_245() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10_cache {
	// RAM Box: {[1, 969], [0, 542]}
	// Capacity: 246
	// # of read delays: 6
  // 0, 1, 122, 123, 244, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 120> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_123() {
		return f6;
	}

	inline hw_uint<16> peek_243() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_244() {
		return f8;
	}

	inline hw_uint<16> peek_245() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10_cache {
	// RAM Box: {[2, 970], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10_cache {
	// RAM Box: {[3, 971], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10_cache {
	// RAM Box: {[4, 972], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10_cache {
	// RAM Box: {[5, 973], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10_cache {
	// RAM Box: {[6, 974], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10_cache {
	// RAM Box: {[7, 975], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_cache {
  // # of banks: 24
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd0_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd0;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd1_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd1;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_to_bright_laplace_us_0_rd10_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_to_bright_laplace_us_0_rd10;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_to_bright_laplace_us_0_rd11_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_to_bright_laplace_us_0_rd11;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_to_bright_laplace_us_0_rd12_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_to_bright_laplace_us_0_rd12;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_to_bright_laplace_us_0_rd13_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_to_bright_laplace_us_0_rd13;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_to_bright_laplace_us_0_rd14_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_to_bright_laplace_us_0_rd14;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_to_bright_laplace_us_0_rd15_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_to_bright_laplace_us_0_rd15;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd2_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd2;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd3_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd3;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd4_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd4;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd5_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd5;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd6_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd6;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd7_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd7;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_to_bright_laplace_us_0_rd8_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_to_bright_laplace_us_0_rd8;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_to_bright_laplace_us_0_rd9_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_to_bright_laplace_us_0_rd9;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10;
};



inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd0.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd1.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0);
}

inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd2.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd3.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1);
}

inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd4.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd5.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2);
}

inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd6.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd7.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3);
}

inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_to_bright_laplace_us_0_rd8.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_to_bright_laplace_us_0_rd9.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4);
}

inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_to_bright_laplace_us_0_rd10.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_to_bright_laplace_us_0_rd11.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5);
}

inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_to_bright_laplace_us_0_rd12.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_to_bright_laplace_us_0_rd13.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6);
}

inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_to_bright_laplace_us_0_rd14.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_to_bright_laplace_us_0_rd15.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7);
}

inline hw_uint<16> bright_gauss_blur_2_rd0_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd0 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd1_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd1 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd10_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd10 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd11_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd11 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd12_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd12 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd13_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd13 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd14_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd14 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd15_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd15 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd16_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd16 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd17_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd17 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd18_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd18 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd19_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd19 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd2_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd2 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd20_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd20 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd21_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd21 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd22_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd22 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd23_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd23 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd24_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd24 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd25_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd25 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd26_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd26 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd27_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd27 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd28_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd28 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd29_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd29 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd3_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd3 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd30_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd30 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd31_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd31 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd32_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd32 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd33_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd33 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd34_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd34 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd35_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd35 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd36_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd36 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd37_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd37 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd38_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd38 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd39_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd39 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd4_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd4 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd40_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd40 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd41_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd41 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd42_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd42 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd43_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd43 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd44_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd44 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd45_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd45 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd46_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd46 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd47_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd47 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd48_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd48 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd49_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd49 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd5_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd5 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd50_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd50 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd51_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd51 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd52_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd52 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd53_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd53 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd54_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd54 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd55_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd55 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd56_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd56 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd57_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd57 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd58_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd58 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd59_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd59 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd6_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd6 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd60_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd60 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[8 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10.peek_244();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd61_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd61 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[8 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10.peek_122();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd62_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd62 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[8 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10.peek_0();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd63_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd63 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd64_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd64 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd65_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd65 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd66_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd66 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[8 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10.peek_244();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd67_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd67 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[8 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10.peek_122();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd68_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd68 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[8 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10.peek_0();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd69_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd69 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[9 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10.peek_244();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd7_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd7 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd70_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd70 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[9 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10.peek_122();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd71_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd71 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[9 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10.peek_0();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd8_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd8 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd9_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd9 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd0_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd0 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd1_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd1 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd2_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd2 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd3_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd3 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd4_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd4 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd5_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd5 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd6_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd6 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd7_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd7 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd0_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd0 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd1_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd1 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd10_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd10 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_to_bright_laplace_us_0_rd10.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd11_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd11 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[5 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_to_bright_laplace_us_0_rd11.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd12_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd12 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_to_bright_laplace_us_0_rd12.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd13_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd13 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[6 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_to_bright_laplace_us_0_rd13.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd14_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd14 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_to_bright_laplace_us_0_rd14.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd15_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd15 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[7 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_to_bright_laplace_us_0_rd15.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd2_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd2 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[1 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd3_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd3 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[1 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd4_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd4 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd4.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd5_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd5 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[2 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd5.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd6_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd6 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd6.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd7_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd7 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[3 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd7.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd8_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd8 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_to_bright_laplace_us_0_rd8.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd9_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd9 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[4 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_to_bright_laplace_us_0_rd9.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4;
  return 0;
}

// # of bundles = 4
// bright_gauss_blur_2_update_0_read
//	bright_gauss_blur_2_rd0
//	bright_gauss_blur_2_rd1
//	bright_gauss_blur_2_rd2
//	bright_gauss_blur_2_rd3
//	bright_gauss_blur_2_rd4
//	bright_gauss_blur_2_rd5
//	bright_gauss_blur_2_rd6
//	bright_gauss_blur_2_rd7
//	bright_gauss_blur_2_rd8
//	bright_gauss_blur_2_rd9
//	bright_gauss_blur_2_rd10
//	bright_gauss_blur_2_rd11
//	bright_gauss_blur_2_rd12
//	bright_gauss_blur_2_rd13
//	bright_gauss_blur_2_rd14
//	bright_gauss_blur_2_rd15
//	bright_gauss_blur_2_rd16
//	bright_gauss_blur_2_rd17
//	bright_gauss_blur_2_rd18
//	bright_gauss_blur_2_rd19
//	bright_gauss_blur_2_rd20
//	bright_gauss_blur_2_rd21
//	bright_gauss_blur_2_rd22
//	bright_gauss_blur_2_rd23
//	bright_gauss_blur_2_rd24
//	bright_gauss_blur_2_rd25
//	bright_gauss_blur_2_rd26
//	bright_gauss_blur_2_rd27
//	bright_gauss_blur_2_rd28
//	bright_gauss_blur_2_rd29
//	bright_gauss_blur_2_rd30
//	bright_gauss_blur_2_rd31
//	bright_gauss_blur_2_rd32
//	bright_gauss_blur_2_rd33
//	bright_gauss_blur_2_rd34
//	bright_gauss_blur_2_rd35
//	bright_gauss_blur_2_rd36
//	bright_gauss_blur_2_rd37
//	bright_gauss_blur_2_rd38
//	bright_gauss_blur_2_rd39
//	bright_gauss_blur_2_rd40
//	bright_gauss_blur_2_rd41
//	bright_gauss_blur_2_rd42
//	bright_gauss_blur_2_rd43
//	bright_gauss_blur_2_rd44
//	bright_gauss_blur_2_rd45
//	bright_gauss_blur_2_rd46
//	bright_gauss_blur_2_rd47
//	bright_gauss_blur_2_rd48
//	bright_gauss_blur_2_rd49
//	bright_gauss_blur_2_rd50
//	bright_gauss_blur_2_rd51
//	bright_gauss_blur_2_rd52
//	bright_gauss_blur_2_rd53
//	bright_gauss_blur_2_rd54
//	bright_gauss_blur_2_rd55
//	bright_gauss_blur_2_rd56
//	bright_gauss_blur_2_rd57
//	bright_gauss_blur_2_rd58
//	bright_gauss_blur_2_rd59
//	bright_gauss_blur_2_rd60
//	bright_gauss_blur_2_rd61
//	bright_gauss_blur_2_rd62
//	bright_gauss_blur_2_rd63
//	bright_gauss_blur_2_rd64
//	bright_gauss_blur_2_rd65
//	bright_gauss_blur_2_rd66
//	bright_gauss_blur_2_rd67
//	bright_gauss_blur_2_rd68
//	bright_gauss_blur_2_rd69
//	bright_gauss_blur_2_rd70
//	bright_gauss_blur_2_rd71
inline hw_uint<1152> bright_gauss_ds_1_bright_gauss_blur_2_update_0_read_bundle_read(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 72
    // bright_gauss_blur_2_rd0
    // bright_gauss_blur_2_rd1
    // bright_gauss_blur_2_rd2
    // bright_gauss_blur_2_rd3
    // bright_gauss_blur_2_rd4
    // bright_gauss_blur_2_rd5
    // bright_gauss_blur_2_rd6
    // bright_gauss_blur_2_rd7
    // bright_gauss_blur_2_rd8
    // bright_gauss_blur_2_rd9
    // bright_gauss_blur_2_rd10
    // bright_gauss_blur_2_rd11
    // bright_gauss_blur_2_rd12
    // bright_gauss_blur_2_rd13
    // bright_gauss_blur_2_rd14
    // bright_gauss_blur_2_rd15
    // bright_gauss_blur_2_rd16
    // bright_gauss_blur_2_rd17
    // bright_gauss_blur_2_rd18
    // bright_gauss_blur_2_rd19
    // bright_gauss_blur_2_rd20
    // bright_gauss_blur_2_rd21
    // bright_gauss_blur_2_rd22
    // bright_gauss_blur_2_rd23
    // bright_gauss_blur_2_rd24
    // bright_gauss_blur_2_rd25
    // bright_gauss_blur_2_rd26
    // bright_gauss_blur_2_rd27
    // bright_gauss_blur_2_rd28
    // bright_gauss_blur_2_rd29
    // bright_gauss_blur_2_rd30
    // bright_gauss_blur_2_rd31
    // bright_gauss_blur_2_rd32
    // bright_gauss_blur_2_rd33
    // bright_gauss_blur_2_rd34
    // bright_gauss_blur_2_rd35
    // bright_gauss_blur_2_rd36
    // bright_gauss_blur_2_rd37
    // bright_gauss_blur_2_rd38
    // bright_gauss_blur_2_rd39
    // bright_gauss_blur_2_rd40
    // bright_gauss_blur_2_rd41
    // bright_gauss_blur_2_rd42
    // bright_gauss_blur_2_rd43
    // bright_gauss_blur_2_rd44
    // bright_gauss_blur_2_rd45
    // bright_gauss_blur_2_rd46
    // bright_gauss_blur_2_rd47
    // bright_gauss_blur_2_rd48
    // bright_gauss_blur_2_rd49
    // bright_gauss_blur_2_rd50
    // bright_gauss_blur_2_rd51
    // bright_gauss_blur_2_rd52
    // bright_gauss_blur_2_rd53
    // bright_gauss_blur_2_rd54
    // bright_gauss_blur_2_rd55
    // bright_gauss_blur_2_rd56
    // bright_gauss_blur_2_rd57
    // bright_gauss_blur_2_rd58
    // bright_gauss_blur_2_rd59
    // bright_gauss_blur_2_rd60
    // bright_gauss_blur_2_rd61
    // bright_gauss_blur_2_rd62
    // bright_gauss_blur_2_rd63
    // bright_gauss_blur_2_rd64
    // bright_gauss_blur_2_rd65
    // bright_gauss_blur_2_rd66
    // bright_gauss_blur_2_rd67
    // bright_gauss_blur_2_rd68
    // bright_gauss_blur_2_rd69
    // bright_gauss_blur_2_rd70
    // bright_gauss_blur_2_rd71

	hw_uint<1152> result;
	hw_uint<16> bright_gauss_blur_2_rd0_res = bright_gauss_blur_2_rd0_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 1152>(result, bright_gauss_blur_2_rd0_res);
	hw_uint<16> bright_gauss_blur_2_rd1_res = bright_gauss_blur_2_rd1_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 1152>(result, bright_gauss_blur_2_rd1_res);
	hw_uint<16> bright_gauss_blur_2_rd2_res = bright_gauss_blur_2_rd2_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 1152>(result, bright_gauss_blur_2_rd2_res);
	hw_uint<16> bright_gauss_blur_2_rd3_res = bright_gauss_blur_2_rd3_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 1152>(result, bright_gauss_blur_2_rd3_res);
	hw_uint<16> bright_gauss_blur_2_rd4_res = bright_gauss_blur_2_rd4_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 1152>(result, bright_gauss_blur_2_rd4_res);
	hw_uint<16> bright_gauss_blur_2_rd5_res = bright_gauss_blur_2_rd5_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 1152>(result, bright_gauss_blur_2_rd5_res);
	hw_uint<16> bright_gauss_blur_2_rd6_res = bright_gauss_blur_2_rd6_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 1152>(result, bright_gauss_blur_2_rd6_res);
	hw_uint<16> bright_gauss_blur_2_rd7_res = bright_gauss_blur_2_rd7_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 1152>(result, bright_gauss_blur_2_rd7_res);
	hw_uint<16> bright_gauss_blur_2_rd8_res = bright_gauss_blur_2_rd8_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<128, 1152>(result, bright_gauss_blur_2_rd8_res);
	hw_uint<16> bright_gauss_blur_2_rd9_res = bright_gauss_blur_2_rd9_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<144, 1152>(result, bright_gauss_blur_2_rd9_res);
	hw_uint<16> bright_gauss_blur_2_rd10_res = bright_gauss_blur_2_rd10_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<160, 1152>(result, bright_gauss_blur_2_rd10_res);
	hw_uint<16> bright_gauss_blur_2_rd11_res = bright_gauss_blur_2_rd11_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<176, 1152>(result, bright_gauss_blur_2_rd11_res);
	hw_uint<16> bright_gauss_blur_2_rd12_res = bright_gauss_blur_2_rd12_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<192, 1152>(result, bright_gauss_blur_2_rd12_res);
	hw_uint<16> bright_gauss_blur_2_rd13_res = bright_gauss_blur_2_rd13_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<208, 1152>(result, bright_gauss_blur_2_rd13_res);
	hw_uint<16> bright_gauss_blur_2_rd14_res = bright_gauss_blur_2_rd14_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<224, 1152>(result, bright_gauss_blur_2_rd14_res);
	hw_uint<16> bright_gauss_blur_2_rd15_res = bright_gauss_blur_2_rd15_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<240, 1152>(result, bright_gauss_blur_2_rd15_res);
	hw_uint<16> bright_gauss_blur_2_rd16_res = bright_gauss_blur_2_rd16_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<256, 1152>(result, bright_gauss_blur_2_rd16_res);
	hw_uint<16> bright_gauss_blur_2_rd17_res = bright_gauss_blur_2_rd17_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<272, 1152>(result, bright_gauss_blur_2_rd17_res);
	hw_uint<16> bright_gauss_blur_2_rd18_res = bright_gauss_blur_2_rd18_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<288, 1152>(result, bright_gauss_blur_2_rd18_res);
	hw_uint<16> bright_gauss_blur_2_rd19_res = bright_gauss_blur_2_rd19_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<304, 1152>(result, bright_gauss_blur_2_rd19_res);
	hw_uint<16> bright_gauss_blur_2_rd20_res = bright_gauss_blur_2_rd20_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<320, 1152>(result, bright_gauss_blur_2_rd20_res);
	hw_uint<16> bright_gauss_blur_2_rd21_res = bright_gauss_blur_2_rd21_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<336, 1152>(result, bright_gauss_blur_2_rd21_res);
	hw_uint<16> bright_gauss_blur_2_rd22_res = bright_gauss_blur_2_rd22_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<352, 1152>(result, bright_gauss_blur_2_rd22_res);
	hw_uint<16> bright_gauss_blur_2_rd23_res = bright_gauss_blur_2_rd23_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<368, 1152>(result, bright_gauss_blur_2_rd23_res);
	hw_uint<16> bright_gauss_blur_2_rd24_res = bright_gauss_blur_2_rd24_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<384, 1152>(result, bright_gauss_blur_2_rd24_res);
	hw_uint<16> bright_gauss_blur_2_rd25_res = bright_gauss_blur_2_rd25_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<400, 1152>(result, bright_gauss_blur_2_rd25_res);
	hw_uint<16> bright_gauss_blur_2_rd26_res = bright_gauss_blur_2_rd26_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<416, 1152>(result, bright_gauss_blur_2_rd26_res);
	hw_uint<16> bright_gauss_blur_2_rd27_res = bright_gauss_blur_2_rd27_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<432, 1152>(result, bright_gauss_blur_2_rd27_res);
	hw_uint<16> bright_gauss_blur_2_rd28_res = bright_gauss_blur_2_rd28_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<448, 1152>(result, bright_gauss_blur_2_rd28_res);
	hw_uint<16> bright_gauss_blur_2_rd29_res = bright_gauss_blur_2_rd29_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<464, 1152>(result, bright_gauss_blur_2_rd29_res);
	hw_uint<16> bright_gauss_blur_2_rd30_res = bright_gauss_blur_2_rd30_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<480, 1152>(result, bright_gauss_blur_2_rd30_res);
	hw_uint<16> bright_gauss_blur_2_rd31_res = bright_gauss_blur_2_rd31_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<496, 1152>(result, bright_gauss_blur_2_rd31_res);
	hw_uint<16> bright_gauss_blur_2_rd32_res = bright_gauss_blur_2_rd32_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<512, 1152>(result, bright_gauss_blur_2_rd32_res);
	hw_uint<16> bright_gauss_blur_2_rd33_res = bright_gauss_blur_2_rd33_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<528, 1152>(result, bright_gauss_blur_2_rd33_res);
	hw_uint<16> bright_gauss_blur_2_rd34_res = bright_gauss_blur_2_rd34_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<544, 1152>(result, bright_gauss_blur_2_rd34_res);
	hw_uint<16> bright_gauss_blur_2_rd35_res = bright_gauss_blur_2_rd35_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<560, 1152>(result, bright_gauss_blur_2_rd35_res);
	hw_uint<16> bright_gauss_blur_2_rd36_res = bright_gauss_blur_2_rd36_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<576, 1152>(result, bright_gauss_blur_2_rd36_res);
	hw_uint<16> bright_gauss_blur_2_rd37_res = bright_gauss_blur_2_rd37_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<592, 1152>(result, bright_gauss_blur_2_rd37_res);
	hw_uint<16> bright_gauss_blur_2_rd38_res = bright_gauss_blur_2_rd38_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<608, 1152>(result, bright_gauss_blur_2_rd38_res);
	hw_uint<16> bright_gauss_blur_2_rd39_res = bright_gauss_blur_2_rd39_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<624, 1152>(result, bright_gauss_blur_2_rd39_res);
	hw_uint<16> bright_gauss_blur_2_rd40_res = bright_gauss_blur_2_rd40_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<640, 1152>(result, bright_gauss_blur_2_rd40_res);
	hw_uint<16> bright_gauss_blur_2_rd41_res = bright_gauss_blur_2_rd41_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<656, 1152>(result, bright_gauss_blur_2_rd41_res);
	hw_uint<16> bright_gauss_blur_2_rd42_res = bright_gauss_blur_2_rd42_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<672, 1152>(result, bright_gauss_blur_2_rd42_res);
	hw_uint<16> bright_gauss_blur_2_rd43_res = bright_gauss_blur_2_rd43_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<688, 1152>(result, bright_gauss_blur_2_rd43_res);
	hw_uint<16> bright_gauss_blur_2_rd44_res = bright_gauss_blur_2_rd44_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<704, 1152>(result, bright_gauss_blur_2_rd44_res);
	hw_uint<16> bright_gauss_blur_2_rd45_res = bright_gauss_blur_2_rd45_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<720, 1152>(result, bright_gauss_blur_2_rd45_res);
	hw_uint<16> bright_gauss_blur_2_rd46_res = bright_gauss_blur_2_rd46_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<736, 1152>(result, bright_gauss_blur_2_rd46_res);
	hw_uint<16> bright_gauss_blur_2_rd47_res = bright_gauss_blur_2_rd47_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<752, 1152>(result, bright_gauss_blur_2_rd47_res);
	hw_uint<16> bright_gauss_blur_2_rd48_res = bright_gauss_blur_2_rd48_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<768, 1152>(result, bright_gauss_blur_2_rd48_res);
	hw_uint<16> bright_gauss_blur_2_rd49_res = bright_gauss_blur_2_rd49_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<784, 1152>(result, bright_gauss_blur_2_rd49_res);
	hw_uint<16> bright_gauss_blur_2_rd50_res = bright_gauss_blur_2_rd50_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<800, 1152>(result, bright_gauss_blur_2_rd50_res);
	hw_uint<16> bright_gauss_blur_2_rd51_res = bright_gauss_blur_2_rd51_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<816, 1152>(result, bright_gauss_blur_2_rd51_res);
	hw_uint<16> bright_gauss_blur_2_rd52_res = bright_gauss_blur_2_rd52_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<832, 1152>(result, bright_gauss_blur_2_rd52_res);
	hw_uint<16> bright_gauss_blur_2_rd53_res = bright_gauss_blur_2_rd53_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<848, 1152>(result, bright_gauss_blur_2_rd53_res);
	hw_uint<16> bright_gauss_blur_2_rd54_res = bright_gauss_blur_2_rd54_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<864, 1152>(result, bright_gauss_blur_2_rd54_res);
	hw_uint<16> bright_gauss_blur_2_rd55_res = bright_gauss_blur_2_rd55_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<880, 1152>(result, bright_gauss_blur_2_rd55_res);
	hw_uint<16> bright_gauss_blur_2_rd56_res = bright_gauss_blur_2_rd56_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<896, 1152>(result, bright_gauss_blur_2_rd56_res);
	hw_uint<16> bright_gauss_blur_2_rd57_res = bright_gauss_blur_2_rd57_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<912, 1152>(result, bright_gauss_blur_2_rd57_res);
	hw_uint<16> bright_gauss_blur_2_rd58_res = bright_gauss_blur_2_rd58_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<928, 1152>(result, bright_gauss_blur_2_rd58_res);
	hw_uint<16> bright_gauss_blur_2_rd59_res = bright_gauss_blur_2_rd59_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<944, 1152>(result, bright_gauss_blur_2_rd59_res);
	hw_uint<16> bright_gauss_blur_2_rd60_res = bright_gauss_blur_2_rd60_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<960, 1152>(result, bright_gauss_blur_2_rd60_res);
	hw_uint<16> bright_gauss_blur_2_rd61_res = bright_gauss_blur_2_rd61_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<976, 1152>(result, bright_gauss_blur_2_rd61_res);
	hw_uint<16> bright_gauss_blur_2_rd62_res = bright_gauss_blur_2_rd62_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<992, 1152>(result, bright_gauss_blur_2_rd62_res);
	hw_uint<16> bright_gauss_blur_2_rd63_res = bright_gauss_blur_2_rd63_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1008, 1152>(result, bright_gauss_blur_2_rd63_res);
	hw_uint<16> bright_gauss_blur_2_rd64_res = bright_gauss_blur_2_rd64_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1024, 1152>(result, bright_gauss_blur_2_rd64_res);
	hw_uint<16> bright_gauss_blur_2_rd65_res = bright_gauss_blur_2_rd65_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1040, 1152>(result, bright_gauss_blur_2_rd65_res);
	hw_uint<16> bright_gauss_blur_2_rd66_res = bright_gauss_blur_2_rd66_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1056, 1152>(result, bright_gauss_blur_2_rd66_res);
	hw_uint<16> bright_gauss_blur_2_rd67_res = bright_gauss_blur_2_rd67_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1072, 1152>(result, bright_gauss_blur_2_rd67_res);
	hw_uint<16> bright_gauss_blur_2_rd68_res = bright_gauss_blur_2_rd68_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1088, 1152>(result, bright_gauss_blur_2_rd68_res);
	hw_uint<16> bright_gauss_blur_2_rd69_res = bright_gauss_blur_2_rd69_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1104, 1152>(result, bright_gauss_blur_2_rd69_res);
	hw_uint<16> bright_gauss_blur_2_rd70_res = bright_gauss_blur_2_rd70_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1120, 1152>(result, bright_gauss_blur_2_rd70_res);
	hw_uint<16> bright_gauss_blur_2_rd71_res = bright_gauss_blur_2_rd71_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1136, 1152>(result, bright_gauss_blur_2_rd71_res);
	return result;
}

// bright_gauss_ds_1_update_0_write
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7
inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write_bundle_write(hw_uint<128>& bright_gauss_ds_1_update_0_write, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_res = bright_gauss_ds_1_update_0_write.extract<0, 15>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_res, bright_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_res = bright_gauss_ds_1_update_0_write.extract<16, 31>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_res, bright_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_res = bright_gauss_ds_1_update_0_write.extract<32, 47>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_res, bright_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_res = bright_gauss_ds_1_update_0_write.extract<48, 63>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_res, bright_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_res = bright_gauss_ds_1_update_0_write.extract<64, 79>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write4_res, bright_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_res = bright_gauss_ds_1_update_0_write.extract<80, 95>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write5_res, bright_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_res = bright_gauss_ds_1_update_0_write.extract<96, 111>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write6_res, bright_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_res = bright_gauss_ds_1_update_0_write.extract<112, 127>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write7_res, bright_gauss_ds_1, d0, d1, dynamic_address);
}

// bright_laplace_diff_1_update_0_read
//	bright_laplace_diff_1_rd0
//	bright_laplace_diff_1_rd1
//	bright_laplace_diff_1_rd2
//	bright_laplace_diff_1_rd3
//	bright_laplace_diff_1_rd4
//	bright_laplace_diff_1_rd5
//	bright_laplace_diff_1_rd6
//	bright_laplace_diff_1_rd7
inline hw_uint<128> bright_gauss_ds_1_bright_laplace_diff_1_update_0_read_bundle_read(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // bright_laplace_diff_1_rd0
    // bright_laplace_diff_1_rd1
    // bright_laplace_diff_1_rd2
    // bright_laplace_diff_1_rd3
    // bright_laplace_diff_1_rd4
    // bright_laplace_diff_1_rd5
    // bright_laplace_diff_1_rd6
    // bright_laplace_diff_1_rd7

	hw_uint<128> result;
	hw_uint<16> bright_laplace_diff_1_rd0_res = bright_laplace_diff_1_rd0_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, bright_laplace_diff_1_rd0_res);
	hw_uint<16> bright_laplace_diff_1_rd1_res = bright_laplace_diff_1_rd1_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, bright_laplace_diff_1_rd1_res);
	hw_uint<16> bright_laplace_diff_1_rd2_res = bright_laplace_diff_1_rd2_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, bright_laplace_diff_1_rd2_res);
	hw_uint<16> bright_laplace_diff_1_rd3_res = bright_laplace_diff_1_rd3_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, bright_laplace_diff_1_rd3_res);
	hw_uint<16> bright_laplace_diff_1_rd4_res = bright_laplace_diff_1_rd4_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, bright_laplace_diff_1_rd4_res);
	hw_uint<16> bright_laplace_diff_1_rd5_res = bright_laplace_diff_1_rd5_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, bright_laplace_diff_1_rd5_res);
	hw_uint<16> bright_laplace_diff_1_rd6_res = bright_laplace_diff_1_rd6_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, bright_laplace_diff_1_rd6_res);
	hw_uint<16> bright_laplace_diff_1_rd7_res = bright_laplace_diff_1_rd7_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, bright_laplace_diff_1_rd7_res);
	return result;
}

// bright_laplace_us_0_update_0_read
//	bright_laplace_us_0_rd0
//	bright_laplace_us_0_rd1
//	bright_laplace_us_0_rd2
//	bright_laplace_us_0_rd3
//	bright_laplace_us_0_rd4
//	bright_laplace_us_0_rd5
//	bright_laplace_us_0_rd6
//	bright_laplace_us_0_rd7
//	bright_laplace_us_0_rd8
//	bright_laplace_us_0_rd9
//	bright_laplace_us_0_rd10
//	bright_laplace_us_0_rd11
//	bright_laplace_us_0_rd12
//	bright_laplace_us_0_rd13
//	bright_laplace_us_0_rd14
//	bright_laplace_us_0_rd15
inline hw_uint<256> bright_gauss_ds_1_bright_laplace_us_0_update_0_read_bundle_read(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // bright_laplace_us_0_rd0
    // bright_laplace_us_0_rd1
    // bright_laplace_us_0_rd2
    // bright_laplace_us_0_rd3
    // bright_laplace_us_0_rd4
    // bright_laplace_us_0_rd5
    // bright_laplace_us_0_rd6
    // bright_laplace_us_0_rd7
    // bright_laplace_us_0_rd8
    // bright_laplace_us_0_rd9
    // bright_laplace_us_0_rd10
    // bright_laplace_us_0_rd11
    // bright_laplace_us_0_rd12
    // bright_laplace_us_0_rd13
    // bright_laplace_us_0_rd14
    // bright_laplace_us_0_rd15

	hw_uint<256> result;
	hw_uint<16> bright_laplace_us_0_rd0_res = bright_laplace_us_0_rd0_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 256>(result, bright_laplace_us_0_rd0_res);
	hw_uint<16> bright_laplace_us_0_rd1_res = bright_laplace_us_0_rd1_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 256>(result, bright_laplace_us_0_rd1_res);
	hw_uint<16> bright_laplace_us_0_rd2_res = bright_laplace_us_0_rd2_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 256>(result, bright_laplace_us_0_rd2_res);
	hw_uint<16> bright_laplace_us_0_rd3_res = bright_laplace_us_0_rd3_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 256>(result, bright_laplace_us_0_rd3_res);
	hw_uint<16> bright_laplace_us_0_rd4_res = bright_laplace_us_0_rd4_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 256>(result, bright_laplace_us_0_rd4_res);
	hw_uint<16> bright_laplace_us_0_rd5_res = bright_laplace_us_0_rd5_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 256>(result, bright_laplace_us_0_rd5_res);
	hw_uint<16> bright_laplace_us_0_rd6_res = bright_laplace_us_0_rd6_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 256>(result, bright_laplace_us_0_rd6_res);
	hw_uint<16> bright_laplace_us_0_rd7_res = bright_laplace_us_0_rd7_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 256>(result, bright_laplace_us_0_rd7_res);
	hw_uint<16> bright_laplace_us_0_rd8_res = bright_laplace_us_0_rd8_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<128, 256>(result, bright_laplace_us_0_rd8_res);
	hw_uint<16> bright_laplace_us_0_rd9_res = bright_laplace_us_0_rd9_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<144, 256>(result, bright_laplace_us_0_rd9_res);
	hw_uint<16> bright_laplace_us_0_rd10_res = bright_laplace_us_0_rd10_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<160, 256>(result, bright_laplace_us_0_rd10_res);
	hw_uint<16> bright_laplace_us_0_rd11_res = bright_laplace_us_0_rd11_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<176, 256>(result, bright_laplace_us_0_rd11_res);
	hw_uint<16> bright_laplace_us_0_rd12_res = bright_laplace_us_0_rd12_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<192, 256>(result, bright_laplace_us_0_rd12_res);
	hw_uint<16> bright_laplace_us_0_rd13_res = bright_laplace_us_0_rd13_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<208, 256>(result, bright_laplace_us_0_rd13_res);
	hw_uint<16> bright_laplace_us_0_rd14_res = bright_laplace_us_0_rd14_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<224, 256>(result, bright_laplace_us_0_rd14_res);
	hw_uint<16> bright_laplace_us_0_rd15_res = bright_laplace_us_0_rd15_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<240, 256>(result, bright_laplace_us_0_rd15_res);
	return result;
}

#include "hw_classes.h"

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_diff_2_rd0_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_diff_2_rd1_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_diff_2_rd2_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_diff_2_rd3_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd0_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd1_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd2_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd3_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_us_1_rd4_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_us_1_rd5_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_us_1_rd6_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_us_1_rd7_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 244
	// # of read delays: 6
  // 0, 1, 121, 122, 242, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 119> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 119> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_120() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_121() {
		return f4;
	}

	inline hw_uint<16> peek_122() {
		return f6;
	}

	inline hw_uint<16> peek_241() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_242() {
		return f8;
	}

	inline hw_uint<16> peek_243() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 244
	// # of read delays: 6
  // 0, 1, 121, 122, 242, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 119> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 119> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_120() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_121() {
		return f4;
	}

	inline hw_uint<16> peek_122() {
		return f6;
	}

	inline hw_uint<16> peek_241() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_242() {
		return f8;
	}

	inline hw_uint<16> peek_243() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 244
	// # of read delays: 4
  // 0, 1, 122, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 120> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_242() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_243() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 244
	// # of read delays: 4
  // 0, 1, 122, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 120> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_242() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_243() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_2_cache {
  // # of banks: 16
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_diff_2_rd0_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_diff_2_rd0;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_diff_2_rd1_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_diff_2_rd1;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_diff_2_rd2_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_diff_2_rd2;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_diff_2_rd3_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_diff_2_rd3;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd0_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd0;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd1_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd1;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd2_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd2;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd3_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd3;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_us_1_rd4_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_us_1_rd4;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_us_1_rd5_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_us_1_rd5;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_us_1_rd6_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_us_1_rd6;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_us_1_rd7_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_us_1_rd7;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9;
};



inline void bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_write(hw_uint<16>& bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0, bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_diff_2_rd0.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd0.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd1.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0);
}

inline void bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_write(hw_uint<16>& bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1, bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_diff_2_rd1.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd2.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd3.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1);
}

inline void bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_write(hw_uint<16>& bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2, bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_diff_2_rd2.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_us_1_rd4.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_us_1_rd5.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2);
}

inline void bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_write(hw_uint<16>& bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3, bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_diff_2_rd3.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_us_1_rd6.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_us_1_rd7.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3);
}

inline hw_uint<16> bright_gauss_blur_3_rd0_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd0 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_243();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd1_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd1 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_122();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd10_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd10 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_122();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd11_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd11 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd12_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd12 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd13_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd13 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd14_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd14 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd15_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd15 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd16_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd16 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd17_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd17 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd18_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd18 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd19_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd19 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd2_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd2 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd20_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd20 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd21_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd21 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd22_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd22 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd23_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd23 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd24_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd24 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[4 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_242();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd25_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd25 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[4 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_121();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd26_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd26 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[4 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd27_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd27 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd28_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd28 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd29_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd29 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd3_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd3 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_243();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd30_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd30 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[4 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_242();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd31_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd31 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[4 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_121();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd32_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd32 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[4 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd33_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd33 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[5 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_242();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd34_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd34 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[5 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_121();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd35_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd35 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[5 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_0();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd4_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd4 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_122();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd5_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd5 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd6_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd6 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd7_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd7 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd8_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd8 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd9_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd9 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_243();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_2_rd0_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd0 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_gauss_ds_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_diff_2_rd0.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_2_rd1_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd1 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_diff_2_rd1.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_2_rd2_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd2 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_diff_2_rd2.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_2_rd3_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd3 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_diff_2_rd3.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd0_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd0 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd1_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd1 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd2_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd2 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[1 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd3_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd3 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[1 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd4_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd4 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_us_1_rd4.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd5_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd5 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[2 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_to_bright_laplace_us_1_rd5.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd6_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd6 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_us_1_rd6.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd7_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd7 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[3 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_to_bright_laplace_us_1_rd7.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3;
  return 0;
}

// # of bundles = 4
// bright_gauss_blur_3_update_0_read
//	bright_gauss_blur_3_rd0
//	bright_gauss_blur_3_rd1
//	bright_gauss_blur_3_rd2
//	bright_gauss_blur_3_rd3
//	bright_gauss_blur_3_rd4
//	bright_gauss_blur_3_rd5
//	bright_gauss_blur_3_rd6
//	bright_gauss_blur_3_rd7
//	bright_gauss_blur_3_rd8
//	bright_gauss_blur_3_rd9
//	bright_gauss_blur_3_rd10
//	bright_gauss_blur_3_rd11
//	bright_gauss_blur_3_rd12
//	bright_gauss_blur_3_rd13
//	bright_gauss_blur_3_rd14
//	bright_gauss_blur_3_rd15
//	bright_gauss_blur_3_rd16
//	bright_gauss_blur_3_rd17
//	bright_gauss_blur_3_rd18
//	bright_gauss_blur_3_rd19
//	bright_gauss_blur_3_rd20
//	bright_gauss_blur_3_rd21
//	bright_gauss_blur_3_rd22
//	bright_gauss_blur_3_rd23
//	bright_gauss_blur_3_rd24
//	bright_gauss_blur_3_rd25
//	bright_gauss_blur_3_rd26
//	bright_gauss_blur_3_rd27
//	bright_gauss_blur_3_rd28
//	bright_gauss_blur_3_rd29
//	bright_gauss_blur_3_rd30
//	bright_gauss_blur_3_rd31
//	bright_gauss_blur_3_rd32
//	bright_gauss_blur_3_rd33
//	bright_gauss_blur_3_rd34
//	bright_gauss_blur_3_rd35
inline hw_uint<576> bright_gauss_ds_2_bright_gauss_blur_3_update_0_read_bundle_read(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 36
    // bright_gauss_blur_3_rd0
    // bright_gauss_blur_3_rd1
    // bright_gauss_blur_3_rd2
    // bright_gauss_blur_3_rd3
    // bright_gauss_blur_3_rd4
    // bright_gauss_blur_3_rd5
    // bright_gauss_blur_3_rd6
    // bright_gauss_blur_3_rd7
    // bright_gauss_blur_3_rd8
    // bright_gauss_blur_3_rd9
    // bright_gauss_blur_3_rd10
    // bright_gauss_blur_3_rd11
    // bright_gauss_blur_3_rd12
    // bright_gauss_blur_3_rd13
    // bright_gauss_blur_3_rd14
    // bright_gauss_blur_3_rd15
    // bright_gauss_blur_3_rd16
    // bright_gauss_blur_3_rd17
    // bright_gauss_blur_3_rd18
    // bright_gauss_blur_3_rd19
    // bright_gauss_blur_3_rd20
    // bright_gauss_blur_3_rd21
    // bright_gauss_blur_3_rd22
    // bright_gauss_blur_3_rd23
    // bright_gauss_blur_3_rd24
    // bright_gauss_blur_3_rd25
    // bright_gauss_blur_3_rd26
    // bright_gauss_blur_3_rd27
    // bright_gauss_blur_3_rd28
    // bright_gauss_blur_3_rd29
    // bright_gauss_blur_3_rd30
    // bright_gauss_blur_3_rd31
    // bright_gauss_blur_3_rd32
    // bright_gauss_blur_3_rd33
    // bright_gauss_blur_3_rd34
    // bright_gauss_blur_3_rd35

	hw_uint<576> result;
	hw_uint<16> bright_gauss_blur_3_rd0_res = bright_gauss_blur_3_rd0_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 576>(result, bright_gauss_blur_3_rd0_res);
	hw_uint<16> bright_gauss_blur_3_rd1_res = bright_gauss_blur_3_rd1_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 576>(result, bright_gauss_blur_3_rd1_res);
	hw_uint<16> bright_gauss_blur_3_rd2_res = bright_gauss_blur_3_rd2_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 576>(result, bright_gauss_blur_3_rd2_res);
	hw_uint<16> bright_gauss_blur_3_rd3_res = bright_gauss_blur_3_rd3_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 576>(result, bright_gauss_blur_3_rd3_res);
	hw_uint<16> bright_gauss_blur_3_rd4_res = bright_gauss_blur_3_rd4_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<64, 576>(result, bright_gauss_blur_3_rd4_res);
	hw_uint<16> bright_gauss_blur_3_rd5_res = bright_gauss_blur_3_rd5_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<80, 576>(result, bright_gauss_blur_3_rd5_res);
	hw_uint<16> bright_gauss_blur_3_rd6_res = bright_gauss_blur_3_rd6_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<96, 576>(result, bright_gauss_blur_3_rd6_res);
	hw_uint<16> bright_gauss_blur_3_rd7_res = bright_gauss_blur_3_rd7_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<112, 576>(result, bright_gauss_blur_3_rd7_res);
	hw_uint<16> bright_gauss_blur_3_rd8_res = bright_gauss_blur_3_rd8_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<128, 576>(result, bright_gauss_blur_3_rd8_res);
	hw_uint<16> bright_gauss_blur_3_rd9_res = bright_gauss_blur_3_rd9_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<144, 576>(result, bright_gauss_blur_3_rd9_res);
	hw_uint<16> bright_gauss_blur_3_rd10_res = bright_gauss_blur_3_rd10_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<160, 576>(result, bright_gauss_blur_3_rd10_res);
	hw_uint<16> bright_gauss_blur_3_rd11_res = bright_gauss_blur_3_rd11_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<176, 576>(result, bright_gauss_blur_3_rd11_res);
	hw_uint<16> bright_gauss_blur_3_rd12_res = bright_gauss_blur_3_rd12_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<192, 576>(result, bright_gauss_blur_3_rd12_res);
	hw_uint<16> bright_gauss_blur_3_rd13_res = bright_gauss_blur_3_rd13_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<208, 576>(result, bright_gauss_blur_3_rd13_res);
	hw_uint<16> bright_gauss_blur_3_rd14_res = bright_gauss_blur_3_rd14_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<224, 576>(result, bright_gauss_blur_3_rd14_res);
	hw_uint<16> bright_gauss_blur_3_rd15_res = bright_gauss_blur_3_rd15_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<240, 576>(result, bright_gauss_blur_3_rd15_res);
	hw_uint<16> bright_gauss_blur_3_rd16_res = bright_gauss_blur_3_rd16_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<256, 576>(result, bright_gauss_blur_3_rd16_res);
	hw_uint<16> bright_gauss_blur_3_rd17_res = bright_gauss_blur_3_rd17_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<272, 576>(result, bright_gauss_blur_3_rd17_res);
	hw_uint<16> bright_gauss_blur_3_rd18_res = bright_gauss_blur_3_rd18_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<288, 576>(result, bright_gauss_blur_3_rd18_res);
	hw_uint<16> bright_gauss_blur_3_rd19_res = bright_gauss_blur_3_rd19_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<304, 576>(result, bright_gauss_blur_3_rd19_res);
	hw_uint<16> bright_gauss_blur_3_rd20_res = bright_gauss_blur_3_rd20_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<320, 576>(result, bright_gauss_blur_3_rd20_res);
	hw_uint<16> bright_gauss_blur_3_rd21_res = bright_gauss_blur_3_rd21_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<336, 576>(result, bright_gauss_blur_3_rd21_res);
	hw_uint<16> bright_gauss_blur_3_rd22_res = bright_gauss_blur_3_rd22_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<352, 576>(result, bright_gauss_blur_3_rd22_res);
	hw_uint<16> bright_gauss_blur_3_rd23_res = bright_gauss_blur_3_rd23_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<368, 576>(result, bright_gauss_blur_3_rd23_res);
	hw_uint<16> bright_gauss_blur_3_rd24_res = bright_gauss_blur_3_rd24_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<384, 576>(result, bright_gauss_blur_3_rd24_res);
	hw_uint<16> bright_gauss_blur_3_rd25_res = bright_gauss_blur_3_rd25_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<400, 576>(result, bright_gauss_blur_3_rd25_res);
	hw_uint<16> bright_gauss_blur_3_rd26_res = bright_gauss_blur_3_rd26_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<416, 576>(result, bright_gauss_blur_3_rd26_res);
	hw_uint<16> bright_gauss_blur_3_rd27_res = bright_gauss_blur_3_rd27_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<432, 576>(result, bright_gauss_blur_3_rd27_res);
	hw_uint<16> bright_gauss_blur_3_rd28_res = bright_gauss_blur_3_rd28_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<448, 576>(result, bright_gauss_blur_3_rd28_res);
	hw_uint<16> bright_gauss_blur_3_rd29_res = bright_gauss_blur_3_rd29_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<464, 576>(result, bright_gauss_blur_3_rd29_res);
	hw_uint<16> bright_gauss_blur_3_rd30_res = bright_gauss_blur_3_rd30_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<480, 576>(result, bright_gauss_blur_3_rd30_res);
	hw_uint<16> bright_gauss_blur_3_rd31_res = bright_gauss_blur_3_rd31_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<496, 576>(result, bright_gauss_blur_3_rd31_res);
	hw_uint<16> bright_gauss_blur_3_rd32_res = bright_gauss_blur_3_rd32_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<512, 576>(result, bright_gauss_blur_3_rd32_res);
	hw_uint<16> bright_gauss_blur_3_rd33_res = bright_gauss_blur_3_rd33_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<528, 576>(result, bright_gauss_blur_3_rd33_res);
	hw_uint<16> bright_gauss_blur_3_rd34_res = bright_gauss_blur_3_rd34_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<544, 576>(result, bright_gauss_blur_3_rd34_res);
	hw_uint<16> bright_gauss_blur_3_rd35_res = bright_gauss_blur_3_rd35_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<560, 576>(result, bright_gauss_blur_3_rd35_res);
	return result;
}

// bright_gauss_ds_2_update_0_write
//	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0
//	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1
//	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2
//	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3
inline void bright_gauss_ds_2_bright_gauss_ds_2_update_0_write_bundle_write(hw_uint<64>& bright_gauss_ds_2_update_0_write, bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_res = bright_gauss_ds_2_update_0_write.extract<0, 15>();
	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_write(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_res, bright_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_res = bright_gauss_ds_2_update_0_write.extract<16, 31>();
	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_write(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_res, bright_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_res = bright_gauss_ds_2_update_0_write.extract<32, 47>();
	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_write(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write2_res, bright_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_res = bright_gauss_ds_2_update_0_write.extract<48, 63>();
	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_write(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write3_res, bright_gauss_ds_2, d0, d1, dynamic_address);
}

// bright_laplace_diff_2_update_0_read
//	bright_laplace_diff_2_rd0
//	bright_laplace_diff_2_rd1
//	bright_laplace_diff_2_rd2
//	bright_laplace_diff_2_rd3
inline hw_uint<64> bright_gauss_ds_2_bright_laplace_diff_2_update_0_read_bundle_read(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // bright_laplace_diff_2_rd0
    // bright_laplace_diff_2_rd1
    // bright_laplace_diff_2_rd2
    // bright_laplace_diff_2_rd3

	hw_uint<64> result;
	hw_uint<16> bright_laplace_diff_2_rd0_res = bright_laplace_diff_2_rd0_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, bright_laplace_diff_2_rd0_res);
	hw_uint<16> bright_laplace_diff_2_rd1_res = bright_laplace_diff_2_rd1_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, bright_laplace_diff_2_rd1_res);
	hw_uint<16> bright_laplace_diff_2_rd2_res = bright_laplace_diff_2_rd2_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, bright_laplace_diff_2_rd2_res);
	hw_uint<16> bright_laplace_diff_2_rd3_res = bright_laplace_diff_2_rd3_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, bright_laplace_diff_2_rd3_res);
	return result;
}

// bright_laplace_us_1_update_0_read
//	bright_laplace_us_1_rd0
//	bright_laplace_us_1_rd1
//	bright_laplace_us_1_rd2
//	bright_laplace_us_1_rd3
//	bright_laplace_us_1_rd4
//	bright_laplace_us_1_rd5
//	bright_laplace_us_1_rd6
//	bright_laplace_us_1_rd7
inline hw_uint<128> bright_gauss_ds_2_bright_laplace_us_1_update_0_read_bundle_read(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // bright_laplace_us_1_rd0
    // bright_laplace_us_1_rd1
    // bright_laplace_us_1_rd2
    // bright_laplace_us_1_rd3
    // bright_laplace_us_1_rd4
    // bright_laplace_us_1_rd5
    // bright_laplace_us_1_rd6
    // bright_laplace_us_1_rd7

	hw_uint<128> result;
	hw_uint<16> bright_laplace_us_1_rd0_res = bright_laplace_us_1_rd0_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 128>(result, bright_laplace_us_1_rd0_res);
	hw_uint<16> bright_laplace_us_1_rd1_res = bright_laplace_us_1_rd1_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 128>(result, bright_laplace_us_1_rd1_res);
	hw_uint<16> bright_laplace_us_1_rd2_res = bright_laplace_us_1_rd2_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 128>(result, bright_laplace_us_1_rd2_res);
	hw_uint<16> bright_laplace_us_1_rd3_res = bright_laplace_us_1_rd3_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 128>(result, bright_laplace_us_1_rd3_res);
	hw_uint<16> bright_laplace_us_1_rd4_res = bright_laplace_us_1_rd4_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<64, 128>(result, bright_laplace_us_1_rd4_res);
	hw_uint<16> bright_laplace_us_1_rd5_res = bright_laplace_us_1_rd5_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<80, 128>(result, bright_laplace_us_1_rd5_res);
	hw_uint<16> bright_laplace_us_1_rd6_res = bright_laplace_us_1_rd6_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<96, 128>(result, bright_laplace_us_1_rd6_res);
	hw_uint<16> bright_laplace_us_1_rd7_res = bright_laplace_us_1_rd7_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<112, 128>(result, bright_laplace_us_1_rd7_res);
	return result;
}

#include "hw_classes.h"

struct bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd0_cache {
	// RAM Box: {[0, 238], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd1_cache {
	// RAM Box: {[0, 238], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_bright_laplace_us_2_rd2_cache {
	// RAM Box: {[1, 239], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_bright_laplace_us_2_rd3_cache {
	// RAM Box: {[1, 239], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache {
	// RAM Box: {[0, 238], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_fused_level_3_rd1_cache {
	// RAM Box: {[1, 239], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_cache {
  // # of banks: 6
  bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd0_cache bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd0;
  bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd1_cache bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd1;
  bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_bright_laplace_us_2_rd2_cache bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_bright_laplace_us_2_rd2;
  bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_bright_laplace_us_2_rd3_cache bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_bright_laplace_us_2_rd3;
  bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_fused_level_3_rd0;
  bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_fused_level_3_rd1_cache bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_fused_level_3_rd1;
};



inline void bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_write(hw_uint<16>& bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0, bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd0.push(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0);
  bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd1.push(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0);
  bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.push(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0);
}

inline void bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_write(hw_uint<16>& bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1, bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_bright_laplace_us_2_rd2.push(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1);
  bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_bright_laplace_us_2_rd3.push(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1);
  bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_fused_level_3_rd1.push(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1);
}

inline hw_uint<16> bright_laplace_us_2_rd0_select(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_2_rd0 read pattern: { bright_laplace_us_2_update_0[d0, d1] -> bright_gauss_ds_3[2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 39] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 30] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0 = bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_us_2_rd1_select(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_2_rd1 read pattern: { bright_laplace_us_2_update_0[d0, d1] -> bright_gauss_ds_3[2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 39] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 30] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0 = bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_us_2_rd2_select(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_2_rd2 read pattern: { bright_laplace_us_2_update_0[d0, d1] -> bright_gauss_ds_3[1 + 2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 39] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 30] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1 = bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_bright_laplace_us_2_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_us_2_rd3_select(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_2_rd3 read pattern: { bright_laplace_us_2_update_0[d0, d1] -> bright_gauss_ds_3[1 + 2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 39] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 30] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1 = bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_bright_laplace_us_2_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_3_rd0_select(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd0 read pattern: { fused_level_3_update_0[d0, d1] -> bright_gauss_ds_3[2d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { bright_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 30] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0 = bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_3_rd1_select(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd1 read pattern: { fused_level_3_update_0[d0, d1] -> bright_gauss_ds_3[1 + 2d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { bright_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 30] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1 = bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_to_fused_level_3_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1;
  return 0;
}

// # of bundles = 3
// bright_gauss_ds_3_update_0_write
//	bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0
//	bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1
inline void bright_gauss_ds_3_bright_gauss_ds_3_update_0_write_bundle_write(hw_uint<32>& bright_gauss_ds_3_update_0_write, bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_res = bright_gauss_ds_3_update_0_write.extract<0, 15>();
	bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_write(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_res, bright_gauss_ds_3, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_res = bright_gauss_ds_3_update_0_write.extract<16, 31>();
	bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_write(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write1_res, bright_gauss_ds_3, d0, d1, dynamic_address);
}

// bright_laplace_us_2_update_0_read
//	bright_laplace_us_2_rd0
//	bright_laplace_us_2_rd1
//	bright_laplace_us_2_rd2
//	bright_laplace_us_2_rd3
inline hw_uint<64> bright_gauss_ds_3_bright_laplace_us_2_update_0_read_bundle_read(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // bright_laplace_us_2_rd0
    // bright_laplace_us_2_rd1
    // bright_laplace_us_2_rd2
    // bright_laplace_us_2_rd3

	hw_uint<64> result;
	hw_uint<16> bright_laplace_us_2_rd0_res = bright_laplace_us_2_rd0_select(bright_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 64>(result, bright_laplace_us_2_rd0_res);
	hw_uint<16> bright_laplace_us_2_rd1_res = bright_laplace_us_2_rd1_select(bright_gauss_ds_3, d0, d1, dynamic_address);
	set_at<16, 64>(result, bright_laplace_us_2_rd1_res);
	hw_uint<16> bright_laplace_us_2_rd2_res = bright_laplace_us_2_rd2_select(bright_gauss_ds_3, d0, d1, dynamic_address);
	set_at<32, 64>(result, bright_laplace_us_2_rd2_res);
	hw_uint<16> bright_laplace_us_2_rd3_res = bright_laplace_us_2_rd3_select(bright_gauss_ds_3, d0, d1, dynamic_address);
	set_at<48, 64>(result, bright_laplace_us_2_rd3_res);
	return result;
}

// fused_level_3_update_0_read
//	fused_level_3_rd0
//	fused_level_3_rd1
inline hw_uint<32> bright_gauss_ds_3_fused_level_3_update_0_read_bundle_read(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // fused_level_3_rd0
    // fused_level_3_rd1

	hw_uint<32> result;
	hw_uint<16> fused_level_3_rd0_res = fused_level_3_rd0_select(bright_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 32>(result, fused_level_3_rd0_res);
	hw_uint<16> fused_level_3_rd1_res = fused_level_3_rd1_select(bright_gauss_ds_3, d0, d1, dynamic_address);
	set_at<16, 32>(result, fused_level_3_rd1_res);
	return result;
}

#include "hw_classes.h"

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_to_fused_level_0_rd0_cache {
	// RAM Box: {[0, 1904], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_to_fused_level_0_rd1_cache {
	// RAM Box: {[1, 1905], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10_to_fused_level_0_rd10_cache {
	// RAM Box: {[10, 1914], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11_to_fused_level_0_rd11_cache {
	// RAM Box: {[11, 1915], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12_to_fused_level_0_rd12_cache {
	// RAM Box: {[12, 1916], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13_to_fused_level_0_rd13_cache {
	// RAM Box: {[13, 1917], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14_to_fused_level_0_rd14_cache {
	// RAM Box: {[14, 1918], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15_to_fused_level_0_rd15_cache {
	// RAM Box: {[15, 1919], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_to_fused_level_0_rd2_cache {
	// RAM Box: {[2, 1906], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_to_fused_level_0_rd3_cache {
	// RAM Box: {[3, 1907], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_to_fused_level_0_rd4_cache {
	// RAM Box: {[4, 1908], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_to_fused_level_0_rd5_cache {
	// RAM Box: {[5, 1909], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_to_fused_level_0_rd6_cache {
	// RAM Box: {[6, 1910], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_to_fused_level_0_rd7_cache {
	// RAM Box: {[7, 1911], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8_to_fused_level_0_rd8_cache {
	// RAM Box: {[8, 1912], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9_to_fused_level_0_rd9_cache {
	// RAM Box: {[9, 1913], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_cache {
  // # of banks: 16
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_to_fused_level_0_rd0_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_to_fused_level_0_rd0;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_to_fused_level_0_rd1_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_to_fused_level_0_rd1;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10_to_fused_level_0_rd10_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10_to_fused_level_0_rd10;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11_to_fused_level_0_rd11_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11_to_fused_level_0_rd11;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12_to_fused_level_0_rd12_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12_to_fused_level_0_rd12;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13_to_fused_level_0_rd13_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13_to_fused_level_0_rd13;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14_to_fused_level_0_rd14_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14_to_fused_level_0_rd14;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15_to_fused_level_0_rd15_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15_to_fused_level_0_rd15;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_to_fused_level_0_rd2_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_to_fused_level_0_rd2;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_to_fused_level_0_rd3_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_to_fused_level_0_rd3;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_to_fused_level_0_rd4_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_to_fused_level_0_rd4;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_to_fused_level_0_rd5_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_to_fused_level_0_rd5;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_to_fused_level_0_rd6_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_to_fused_level_0_rd6;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_to_fused_level_0_rd7_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_to_fused_level_0_rd7;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8_to_fused_level_0_rd8_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8_to_fused_level_0_rd8;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9_to_fused_level_0_rd9_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9_to_fused_level_0_rd9;
};



inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_to_fused_level_0_rd0.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_to_fused_level_0_rd1.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10_to_fused_level_0_rd10.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11_to_fused_level_0_rd11.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12_to_fused_level_0_rd12.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13_to_fused_level_0_rd13.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14_to_fused_level_0_rd14.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15_to_fused_level_0_rd15.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_to_fused_level_0_rd2.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_to_fused_level_0_rd3.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_to_fused_level_0_rd4.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_to_fused_level_0_rd5.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_to_fused_level_0_rd6.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_to_fused_level_0_rd7.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8_to_fused_level_0_rd8.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9_to_fused_level_0_rd9.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9);
}

inline hw_uint<16> fused_level_0_rd0_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd0 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_to_fused_level_0_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_0_rd1_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd1 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[1 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_to_fused_level_0_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_0_rd10_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd10 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[10 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10_to_fused_level_0_rd10.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10;
  return 0;
}

inline hw_uint<16> fused_level_0_rd11_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd11 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[11 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11_to_fused_level_0_rd11.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11;
  return 0;
}

inline hw_uint<16> fused_level_0_rd12_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd12 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[12 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12_to_fused_level_0_rd12.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12;
  return 0;
}

inline hw_uint<16> fused_level_0_rd13_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd13 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[13 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13_to_fused_level_0_rd13.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13;
  return 0;
}

inline hw_uint<16> fused_level_0_rd14_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd14 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[14 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14_to_fused_level_0_rd14.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14;
  return 0;
}

inline hw_uint<16> fused_level_0_rd15_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd15 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[15 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15_to_fused_level_0_rd15.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15;
  return 0;
}

inline hw_uint<16> fused_level_0_rd2_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd2 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[2 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_to_fused_level_0_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_0_rd3_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd3 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[3 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_to_fused_level_0_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_0_rd4_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd4 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[4 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_to_fused_level_0_rd4.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_0_rd5_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd5 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[5 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_to_fused_level_0_rd5.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_0_rd6_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd6 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[6 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_to_fused_level_0_rd6.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_0_rd7_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd7 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[7 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_to_fused_level_0_rd7.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7;
  return 0;
}

inline hw_uint<16> fused_level_0_rd8_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd8 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[8 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8_to_fused_level_0_rd8.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8;
  return 0;
}

inline hw_uint<16> fused_level_0_rd9_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd9 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[9 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9_to_fused_level_0_rd9.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_0_update_0_write
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15
inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write_bundle_write(hw_uint<256>& bright_laplace_diff_0_update_0_write, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_res = bright_laplace_diff_0_update_0_write.extract<0, 15>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_res = bright_laplace_diff_0_update_0_write.extract<16, 31>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_res = bright_laplace_diff_0_update_0_write.extract<32, 47>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_res = bright_laplace_diff_0_update_0_write.extract<48, 63>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_res = bright_laplace_diff_0_update_0_write.extract<64, 79>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_res = bright_laplace_diff_0_update_0_write.extract<80, 95>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_res = bright_laplace_diff_0_update_0_write.extract<96, 111>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_res = bright_laplace_diff_0_update_0_write.extract<112, 127>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8_res = bright_laplace_diff_0_update_0_write.extract<128, 143>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write8_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9_res = bright_laplace_diff_0_update_0_write.extract<144, 159>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write9_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10_res = bright_laplace_diff_0_update_0_write.extract<160, 175>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write10_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11_res = bright_laplace_diff_0_update_0_write.extract<176, 191>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write11_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12_res = bright_laplace_diff_0_update_0_write.extract<192, 207>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write12_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13_res = bright_laplace_diff_0_update_0_write.extract<208, 223>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write13_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14_res = bright_laplace_diff_0_update_0_write.extract<224, 239>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write14_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15_res = bright_laplace_diff_0_update_0_write.extract<240, 255>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write15_res, bright_laplace_diff_0, d0, d1, dynamic_address);
}

// fused_level_0_update_0_read
//	fused_level_0_rd0
//	fused_level_0_rd1
//	fused_level_0_rd2
//	fused_level_0_rd3
//	fused_level_0_rd4
//	fused_level_0_rd5
//	fused_level_0_rd6
//	fused_level_0_rd7
//	fused_level_0_rd8
//	fused_level_0_rd9
//	fused_level_0_rd10
//	fused_level_0_rd11
//	fused_level_0_rd12
//	fused_level_0_rd13
//	fused_level_0_rd14
//	fused_level_0_rd15
inline hw_uint<256> bright_laplace_diff_0_fused_level_0_update_0_read_bundle_read(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // fused_level_0_rd0
    // fused_level_0_rd1
    // fused_level_0_rd2
    // fused_level_0_rd3
    // fused_level_0_rd4
    // fused_level_0_rd5
    // fused_level_0_rd6
    // fused_level_0_rd7
    // fused_level_0_rd8
    // fused_level_0_rd9
    // fused_level_0_rd10
    // fused_level_0_rd11
    // fused_level_0_rd12
    // fused_level_0_rd13
    // fused_level_0_rd14
    // fused_level_0_rd15

	hw_uint<256> result;
	hw_uint<16> fused_level_0_rd0_res = fused_level_0_rd0_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<0, 256>(result, fused_level_0_rd0_res);
	hw_uint<16> fused_level_0_rd1_res = fused_level_0_rd1_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<16, 256>(result, fused_level_0_rd1_res);
	hw_uint<16> fused_level_0_rd2_res = fused_level_0_rd2_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<32, 256>(result, fused_level_0_rd2_res);
	hw_uint<16> fused_level_0_rd3_res = fused_level_0_rd3_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<48, 256>(result, fused_level_0_rd3_res);
	hw_uint<16> fused_level_0_rd4_res = fused_level_0_rd4_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<64, 256>(result, fused_level_0_rd4_res);
	hw_uint<16> fused_level_0_rd5_res = fused_level_0_rd5_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<80, 256>(result, fused_level_0_rd5_res);
	hw_uint<16> fused_level_0_rd6_res = fused_level_0_rd6_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<96, 256>(result, fused_level_0_rd6_res);
	hw_uint<16> fused_level_0_rd7_res = fused_level_0_rd7_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<112, 256>(result, fused_level_0_rd7_res);
	hw_uint<16> fused_level_0_rd8_res = fused_level_0_rd8_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<128, 256>(result, fused_level_0_rd8_res);
	hw_uint<16> fused_level_0_rd9_res = fused_level_0_rd9_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<144, 256>(result, fused_level_0_rd9_res);
	hw_uint<16> fused_level_0_rd10_res = fused_level_0_rd10_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<160, 256>(result, fused_level_0_rd10_res);
	hw_uint<16> fused_level_0_rd11_res = fused_level_0_rd11_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<176, 256>(result, fused_level_0_rd11_res);
	hw_uint<16> fused_level_0_rd12_res = fused_level_0_rd12_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<192, 256>(result, fused_level_0_rd12_res);
	hw_uint<16> fused_level_0_rd13_res = fused_level_0_rd13_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<208, 256>(result, fused_level_0_rd13_res);
	hw_uint<16> fused_level_0_rd14_res = fused_level_0_rd14_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<224, 256>(result, fused_level_0_rd14_res);
	hw_uint<16> fused_level_0_rd15_res = fused_level_0_rd15_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<240, 256>(result, fused_level_0_rd15_res);
	return result;
}

#include "hw_classes.h"

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_to_fused_level_1_rd0_cache {
	// RAM Box: {[0, 952], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_to_fused_level_1_rd1_cache {
	// RAM Box: {[1, 953], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_to_fused_level_1_rd2_cache {
	// RAM Box: {[2, 954], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_to_fused_level_1_rd3_cache {
	// RAM Box: {[3, 955], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4_to_fused_level_1_rd4_cache {
	// RAM Box: {[4, 956], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5_to_fused_level_1_rd5_cache {
	// RAM Box: {[5, 957], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6_to_fused_level_1_rd6_cache {
	// RAM Box: {[6, 958], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7_to_fused_level_1_rd7_cache {
	// RAM Box: {[7, 959], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_cache {
  // # of banks: 8
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_to_fused_level_1_rd0_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_to_fused_level_1_rd0;
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_to_fused_level_1_rd1_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_to_fused_level_1_rd1;
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_to_fused_level_1_rd2_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_to_fused_level_1_rd2;
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_to_fused_level_1_rd3_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_to_fused_level_1_rd3;
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4_to_fused_level_1_rd4_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4_to_fused_level_1_rd4;
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5_to_fused_level_1_rd5_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5_to_fused_level_1_rd5;
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6_to_fused_level_1_rd6_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6_to_fused_level_1_rd6;
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7_to_fused_level_1_rd7_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7_to_fused_level_1_rd7;
};



inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_to_fused_level_1_rd0.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0);
}

inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_to_fused_level_1_rd1.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1);
}

inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_to_fused_level_1_rd2.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2);
}

inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_to_fused_level_1_rd3.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3);
}

inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4_to_fused_level_1_rd4.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4);
}

inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5_to_fused_level_1_rd5.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5);
}

inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6_to_fused_level_1_rd6.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6);
}

inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7_to_fused_level_1_rd7.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7);
}

inline hw_uint<16> fused_level_1_rd0_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd0 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_to_fused_level_1_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_1_rd1_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd1 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[1 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_to_fused_level_1_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_1_rd2_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd2 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[2 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_to_fused_level_1_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_1_rd3_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd3 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[3 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_to_fused_level_1_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_1_rd4_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd4 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[4 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4_to_fused_level_1_rd4.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_1_rd5_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd5 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[5 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5_to_fused_level_1_rd5.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_1_rd6_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd6 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[6 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6_to_fused_level_1_rd6.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_1_rd7_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd7 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[7 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7_to_fused_level_1_rd7.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_1_update_0_write
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7
inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write_bundle_write(hw_uint<128>& bright_laplace_diff_1_update_0_write, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_res = bright_laplace_diff_1_update_0_write.extract<0, 15>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_res, bright_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_res = bright_laplace_diff_1_update_0_write.extract<16, 31>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_res, bright_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_res = bright_laplace_diff_1_update_0_write.extract<32, 47>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_res, bright_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_res = bright_laplace_diff_1_update_0_write.extract<48, 63>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_res, bright_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4_res = bright_laplace_diff_1_update_0_write.extract<64, 79>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write4_res, bright_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5_res = bright_laplace_diff_1_update_0_write.extract<80, 95>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write5_res, bright_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6_res = bright_laplace_diff_1_update_0_write.extract<96, 111>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write6_res, bright_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7_res = bright_laplace_diff_1_update_0_write.extract<112, 127>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write7_res, bright_laplace_diff_1, d0, d1, dynamic_address);
}

// fused_level_1_update_0_read
//	fused_level_1_rd0
//	fused_level_1_rd1
//	fused_level_1_rd2
//	fused_level_1_rd3
//	fused_level_1_rd4
//	fused_level_1_rd5
//	fused_level_1_rd6
//	fused_level_1_rd7
inline hw_uint<128> bright_laplace_diff_1_fused_level_1_update_0_read_bundle_read(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // fused_level_1_rd0
    // fused_level_1_rd1
    // fused_level_1_rd2
    // fused_level_1_rd3
    // fused_level_1_rd4
    // fused_level_1_rd5
    // fused_level_1_rd6
    // fused_level_1_rd7

	hw_uint<128> result;
	hw_uint<16> fused_level_1_rd0_res = fused_level_1_rd0_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, fused_level_1_rd0_res);
	hw_uint<16> fused_level_1_rd1_res = fused_level_1_rd1_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, fused_level_1_rd1_res);
	hw_uint<16> fused_level_1_rd2_res = fused_level_1_rd2_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, fused_level_1_rd2_res);
	hw_uint<16> fused_level_1_rd3_res = fused_level_1_rd3_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, fused_level_1_rd3_res);
	hw_uint<16> fused_level_1_rd4_res = fused_level_1_rd4_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, fused_level_1_rd4_res);
	hw_uint<16> fused_level_1_rd5_res = fused_level_1_rd5_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, fused_level_1_rd5_res);
	hw_uint<16> fused_level_1_rd6_res = fused_level_1_rd6_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, fused_level_1_rd6_res);
	hw_uint<16> fused_level_1_rd7_res = fused_level_1_rd7_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, fused_level_1_rd7_res);
	return result;
}

#include "hw_classes.h"

struct bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_to_fused_level_2_rd0_cache {
	// RAM Box: {[0, 476], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_to_fused_level_2_rd1_cache {
	// RAM Box: {[1, 477], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2_to_fused_level_2_rd2_cache {
	// RAM Box: {[2, 478], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3_to_fused_level_2_rd3_cache {
	// RAM Box: {[3, 479], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_2_cache {
  // # of banks: 4
  bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_to_fused_level_2_rd0_cache bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_to_fused_level_2_rd0;
  bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_to_fused_level_2_rd1_cache bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_to_fused_level_2_rd1;
  bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2_to_fused_level_2_rd2_cache bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2_to_fused_level_2_rd2;
  bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3_to_fused_level_2_rd3_cache bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3_to_fused_level_2_rd3;
};



inline void bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_write(hw_uint<16>& bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0, bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_to_fused_level_2_rd0.push(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0);
}

inline void bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_write(hw_uint<16>& bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1, bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_to_fused_level_2_rd1.push(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1);
}

inline void bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2_write(hw_uint<16>& bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2, bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2_to_fused_level_2_rd2.push(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2);
}

inline void bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3_write(hw_uint<16>& bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3, bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3_to_fused_level_2_rd3.push(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3);
}

inline hw_uint<16> fused_level_2_rd0_select(bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd0 read pattern: { fused_level_2_update_0[d0, d1] -> bright_laplace_diff_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0 = bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_to_fused_level_2_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_2_rd1_select(bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd1 read pattern: { fused_level_2_update_0[d0, d1] -> bright_laplace_diff_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1 = bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_to_fused_level_2_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_2_rd2_select(bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd2 read pattern: { fused_level_2_update_0[d0, d1] -> bright_laplace_diff_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2 = bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2_to_fused_level_2_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_2_rd3_select(bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd3 read pattern: { fused_level_2_update_0[d0, d1] -> bright_laplace_diff_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3 = bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3_to_fused_level_2_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_2_update_0_write
//	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0
//	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1
//	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2
//	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3
inline void bright_laplace_diff_2_bright_laplace_diff_2_update_0_write_bundle_write(hw_uint<64>& bright_laplace_diff_2_update_0_write, bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_res = bright_laplace_diff_2_update_0_write.extract<0, 15>();
	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_write(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_res, bright_laplace_diff_2, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_res = bright_laplace_diff_2_update_0_write.extract<16, 31>();
	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_write(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_res, bright_laplace_diff_2, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2_res = bright_laplace_diff_2_update_0_write.extract<32, 47>();
	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2_write(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write2_res, bright_laplace_diff_2, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3_res = bright_laplace_diff_2_update_0_write.extract<48, 63>();
	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3_write(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write3_res, bright_laplace_diff_2, d0, d1, dynamic_address);
}

// fused_level_2_update_0_read
//	fused_level_2_rd0
//	fused_level_2_rd1
//	fused_level_2_rd2
//	fused_level_2_rd3
inline hw_uint<64> bright_laplace_diff_2_fused_level_2_update_0_read_bundle_read(bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // fused_level_2_rd0
    // fused_level_2_rd1
    // fused_level_2_rd2
    // fused_level_2_rd3

	hw_uint<64> result;
	hw_uint<16> fused_level_2_rd0_res = fused_level_2_rd0_select(bright_laplace_diff_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, fused_level_2_rd0_res);
	hw_uint<16> fused_level_2_rd1_res = fused_level_2_rd1_select(bright_laplace_diff_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, fused_level_2_rd1_res);
	hw_uint<16> fused_level_2_rd2_res = fused_level_2_rd2_select(bright_laplace_diff_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, fused_level_2_rd2_res);
	hw_uint<16> fused_level_2_rd3_res = fused_level_2_rd3_select(bright_laplace_diff_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, fused_level_2_rd3_res);
	return result;
}

#include "hw_classes.h"

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write0_to_bright_laplace_diff_0_rd0_cache {
	// RAM Box: {[0, 1904], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write1_to_bright_laplace_diff_0_rd1_cache {
	// RAM Box: {[1, 1905], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write10_to_bright_laplace_diff_0_rd10_cache {
	// RAM Box: {[10, 1914], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write11_to_bright_laplace_diff_0_rd11_cache {
	// RAM Box: {[11, 1915], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write12_to_bright_laplace_diff_0_rd12_cache {
	// RAM Box: {[12, 1916], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write13_to_bright_laplace_diff_0_rd13_cache {
	// RAM Box: {[13, 1917], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write14_to_bright_laplace_diff_0_rd14_cache {
	// RAM Box: {[14, 1918], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write15_to_bright_laplace_diff_0_rd15_cache {
	// RAM Box: {[15, 1919], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write2_to_bright_laplace_diff_0_rd2_cache {
	// RAM Box: {[2, 1906], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write3_to_bright_laplace_diff_0_rd3_cache {
	// RAM Box: {[3, 1907], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write4_to_bright_laplace_diff_0_rd4_cache {
	// RAM Box: {[4, 1908], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write5_to_bright_laplace_diff_0_rd5_cache {
	// RAM Box: {[5, 1909], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write6_to_bright_laplace_diff_0_rd6_cache {
	// RAM Box: {[6, 1910], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write7_to_bright_laplace_diff_0_rd7_cache {
	// RAM Box: {[7, 1911], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write8_to_bright_laplace_diff_0_rd8_cache {
	// RAM Box: {[8, 1912], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write9_to_bright_laplace_diff_0_rd9_cache {
	// RAM Box: {[9, 1913], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_cache {
  // # of banks: 16
  bright_laplace_us_0_bright_laplace_us_0_update_0_write0_to_bright_laplace_diff_0_rd0_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write0_to_bright_laplace_diff_0_rd0;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write1_to_bright_laplace_diff_0_rd1_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write1_to_bright_laplace_diff_0_rd1;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write10_to_bright_laplace_diff_0_rd10_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write10_to_bright_laplace_diff_0_rd10;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write11_to_bright_laplace_diff_0_rd11_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write11_to_bright_laplace_diff_0_rd11;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write12_to_bright_laplace_diff_0_rd12_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write12_to_bright_laplace_diff_0_rd12;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write13_to_bright_laplace_diff_0_rd13_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write13_to_bright_laplace_diff_0_rd13;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write14_to_bright_laplace_diff_0_rd14_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write14_to_bright_laplace_diff_0_rd14;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write15_to_bright_laplace_diff_0_rd15_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write15_to_bright_laplace_diff_0_rd15;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write2_to_bright_laplace_diff_0_rd2_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write2_to_bright_laplace_diff_0_rd2;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write3_to_bright_laplace_diff_0_rd3_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write3_to_bright_laplace_diff_0_rd3;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write4_to_bright_laplace_diff_0_rd4_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write4_to_bright_laplace_diff_0_rd4;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write5_to_bright_laplace_diff_0_rd5_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write5_to_bright_laplace_diff_0_rd5;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write6_to_bright_laplace_diff_0_rd6_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write6_to_bright_laplace_diff_0_rd6;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write7_to_bright_laplace_diff_0_rd7_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write7_to_bright_laplace_diff_0_rd7;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write8_to_bright_laplace_diff_0_rd8_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write8_to_bright_laplace_diff_0_rd8;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write9_to_bright_laplace_diff_0_rd9_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write9_to_bright_laplace_diff_0_rd9;
};



inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write0_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write0, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write0_to_bright_laplace_diff_0_rd0.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write0);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write1_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write1, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write1_to_bright_laplace_diff_0_rd1.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write1);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write10_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write10, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write10_to_bright_laplace_diff_0_rd10.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write10);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write11_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write11, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write11_to_bright_laplace_diff_0_rd11.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write11);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write12_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write12, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write12_to_bright_laplace_diff_0_rd12.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write12);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write13_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write13, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write13_to_bright_laplace_diff_0_rd13.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write13);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write14_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write14, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write14_to_bright_laplace_diff_0_rd14.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write14);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write15_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write15, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write15_to_bright_laplace_diff_0_rd15.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write15);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write2_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write2, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write2_to_bright_laplace_diff_0_rd2.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write2);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write3_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write3, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write3_to_bright_laplace_diff_0_rd3.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write3);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write4_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write4, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write4_to_bright_laplace_diff_0_rd4.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write4);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write5_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write5, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write5_to_bright_laplace_diff_0_rd5.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write5);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write6_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write6, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write6_to_bright_laplace_diff_0_rd6.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write6);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write7_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write7, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write7_to_bright_laplace_diff_0_rd7.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write7);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write8_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write8, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write8_to_bright_laplace_diff_0_rd8.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write8);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write9_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write9, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write9_to_bright_laplace_diff_0_rd9.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write9);
}

inline hw_uint<16> bright_laplace_diff_0_rd0_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd0 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write0 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write0_to_bright_laplace_diff_0_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd1_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd1 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[1 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write1 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write1_to_bright_laplace_diff_0_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd10_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd10 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[10 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write10 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write10_to_bright_laplace_diff_0_rd10.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd11_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd11 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[11 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write11 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write11_to_bright_laplace_diff_0_rd11.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd12_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd12 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[12 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write12 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write12_to_bright_laplace_diff_0_rd12.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd13_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd13 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[13 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write13 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write13_to_bright_laplace_diff_0_rd13.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd14_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd14 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[14 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write14 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write14_to_bright_laplace_diff_0_rd14.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd15_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd15 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[15 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write15 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write15_to_bright_laplace_diff_0_rd15.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd2_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd2 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[2 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write2 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write2_to_bright_laplace_diff_0_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd3_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd3 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[3 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write3 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write3_to_bright_laplace_diff_0_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd4_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd4 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[4 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write4 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write4_to_bright_laplace_diff_0_rd4.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd5_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd5 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[5 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write5 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write5_to_bright_laplace_diff_0_rd5.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd6_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd6 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[6 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write6 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write6_to_bright_laplace_diff_0_rd6.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd7_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd7 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[7 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write7 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write7_to_bright_laplace_diff_0_rd7.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd8_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd8 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[8 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write8 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write8_to_bright_laplace_diff_0_rd8.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd9_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd9 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[9 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write9 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write9_to_bright_laplace_diff_0_rd9.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write9;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_0_update_0_read
//	bright_laplace_diff_0_rd0
//	bright_laplace_diff_0_rd1
//	bright_laplace_diff_0_rd2
//	bright_laplace_diff_0_rd3
//	bright_laplace_diff_0_rd4
//	bright_laplace_diff_0_rd5
//	bright_laplace_diff_0_rd6
//	bright_laplace_diff_0_rd7
//	bright_laplace_diff_0_rd8
//	bright_laplace_diff_0_rd9
//	bright_laplace_diff_0_rd10
//	bright_laplace_diff_0_rd11
//	bright_laplace_diff_0_rd12
//	bright_laplace_diff_0_rd13
//	bright_laplace_diff_0_rd14
//	bright_laplace_diff_0_rd15
inline hw_uint<256> bright_laplace_us_0_bright_laplace_diff_0_update_0_read_bundle_read(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // bright_laplace_diff_0_rd0
    // bright_laplace_diff_0_rd1
    // bright_laplace_diff_0_rd2
    // bright_laplace_diff_0_rd3
    // bright_laplace_diff_0_rd4
    // bright_laplace_diff_0_rd5
    // bright_laplace_diff_0_rd6
    // bright_laplace_diff_0_rd7
    // bright_laplace_diff_0_rd8
    // bright_laplace_diff_0_rd9
    // bright_laplace_diff_0_rd10
    // bright_laplace_diff_0_rd11
    // bright_laplace_diff_0_rd12
    // bright_laplace_diff_0_rd13
    // bright_laplace_diff_0_rd14
    // bright_laplace_diff_0_rd15

	hw_uint<256> result;
	hw_uint<16> bright_laplace_diff_0_rd0_res = bright_laplace_diff_0_rd0_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<0, 256>(result, bright_laplace_diff_0_rd0_res);
	hw_uint<16> bright_laplace_diff_0_rd1_res = bright_laplace_diff_0_rd1_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<16, 256>(result, bright_laplace_diff_0_rd1_res);
	hw_uint<16> bright_laplace_diff_0_rd2_res = bright_laplace_diff_0_rd2_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<32, 256>(result, bright_laplace_diff_0_rd2_res);
	hw_uint<16> bright_laplace_diff_0_rd3_res = bright_laplace_diff_0_rd3_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<48, 256>(result, bright_laplace_diff_0_rd3_res);
	hw_uint<16> bright_laplace_diff_0_rd4_res = bright_laplace_diff_0_rd4_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<64, 256>(result, bright_laplace_diff_0_rd4_res);
	hw_uint<16> bright_laplace_diff_0_rd5_res = bright_laplace_diff_0_rd5_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<80, 256>(result, bright_laplace_diff_0_rd5_res);
	hw_uint<16> bright_laplace_diff_0_rd6_res = bright_laplace_diff_0_rd6_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<96, 256>(result, bright_laplace_diff_0_rd6_res);
	hw_uint<16> bright_laplace_diff_0_rd7_res = bright_laplace_diff_0_rd7_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<112, 256>(result, bright_laplace_diff_0_rd7_res);
	hw_uint<16> bright_laplace_diff_0_rd8_res = bright_laplace_diff_0_rd8_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<128, 256>(result, bright_laplace_diff_0_rd8_res);
	hw_uint<16> bright_laplace_diff_0_rd9_res = bright_laplace_diff_0_rd9_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<144, 256>(result, bright_laplace_diff_0_rd9_res);
	hw_uint<16> bright_laplace_diff_0_rd10_res = bright_laplace_diff_0_rd10_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<160, 256>(result, bright_laplace_diff_0_rd10_res);
	hw_uint<16> bright_laplace_diff_0_rd11_res = bright_laplace_diff_0_rd11_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<176, 256>(result, bright_laplace_diff_0_rd11_res);
	hw_uint<16> bright_laplace_diff_0_rd12_res = bright_laplace_diff_0_rd12_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<192, 256>(result, bright_laplace_diff_0_rd12_res);
	hw_uint<16> bright_laplace_diff_0_rd13_res = bright_laplace_diff_0_rd13_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<208, 256>(result, bright_laplace_diff_0_rd13_res);
	hw_uint<16> bright_laplace_diff_0_rd14_res = bright_laplace_diff_0_rd14_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<224, 256>(result, bright_laplace_diff_0_rd14_res);
	hw_uint<16> bright_laplace_diff_0_rd15_res = bright_laplace_diff_0_rd15_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<240, 256>(result, bright_laplace_diff_0_rd15_res);
	return result;
}

// bright_laplace_us_0_update_0_write
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write0
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write1
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write2
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write3
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write4
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write5
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write6
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write7
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write8
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write9
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write10
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write11
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write12
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write13
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write14
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write15
inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write_bundle_write(hw_uint<256>& bright_laplace_us_0_update_0_write, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write0_res = bright_laplace_us_0_update_0_write.extract<0, 15>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write0_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write0_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write1_res = bright_laplace_us_0_update_0_write.extract<16, 31>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write1_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write1_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write2_res = bright_laplace_us_0_update_0_write.extract<32, 47>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write2_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write2_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write3_res = bright_laplace_us_0_update_0_write.extract<48, 63>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write3_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write3_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write4_res = bright_laplace_us_0_update_0_write.extract<64, 79>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write4_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write4_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write5_res = bright_laplace_us_0_update_0_write.extract<80, 95>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write5_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write5_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write6_res = bright_laplace_us_0_update_0_write.extract<96, 111>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write6_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write6_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write7_res = bright_laplace_us_0_update_0_write.extract<112, 127>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write7_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write7_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write8_res = bright_laplace_us_0_update_0_write.extract<128, 143>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write8_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write8_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write9_res = bright_laplace_us_0_update_0_write.extract<144, 159>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write9_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write9_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write10_res = bright_laplace_us_0_update_0_write.extract<160, 175>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write10_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write10_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write11_res = bright_laplace_us_0_update_0_write.extract<176, 191>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write11_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write11_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write12_res = bright_laplace_us_0_update_0_write.extract<192, 207>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write12_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write12_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write13_res = bright_laplace_us_0_update_0_write.extract<208, 223>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write13_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write13_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write14_res = bright_laplace_us_0_update_0_write.extract<224, 239>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write14_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write14_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write15_res = bright_laplace_us_0_update_0_write.extract<240, 255>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write15_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write15_res, bright_laplace_us_0, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write0_to_bright_laplace_diff_1_rd0_cache {
	// RAM Box: {[0, 952], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write1_to_bright_laplace_diff_1_rd1_cache {
	// RAM Box: {[1, 953], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write2_to_bright_laplace_diff_1_rd2_cache {
	// RAM Box: {[2, 954], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write3_to_bright_laplace_diff_1_rd3_cache {
	// RAM Box: {[3, 955], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write4_to_bright_laplace_diff_1_rd4_cache {
	// RAM Box: {[4, 956], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write5_to_bright_laplace_diff_1_rd5_cache {
	// RAM Box: {[5, 957], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write6_to_bright_laplace_diff_1_rd6_cache {
	// RAM Box: {[6, 958], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write7_to_bright_laplace_diff_1_rd7_cache {
	// RAM Box: {[7, 959], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_cache {
  // # of banks: 8
  bright_laplace_us_1_bright_laplace_us_1_update_0_write0_to_bright_laplace_diff_1_rd0_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write0_to_bright_laplace_diff_1_rd0;
  bright_laplace_us_1_bright_laplace_us_1_update_0_write1_to_bright_laplace_diff_1_rd1_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write1_to_bright_laplace_diff_1_rd1;
  bright_laplace_us_1_bright_laplace_us_1_update_0_write2_to_bright_laplace_diff_1_rd2_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write2_to_bright_laplace_diff_1_rd2;
  bright_laplace_us_1_bright_laplace_us_1_update_0_write3_to_bright_laplace_diff_1_rd3_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write3_to_bright_laplace_diff_1_rd3;
  bright_laplace_us_1_bright_laplace_us_1_update_0_write4_to_bright_laplace_diff_1_rd4_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write4_to_bright_laplace_diff_1_rd4;
  bright_laplace_us_1_bright_laplace_us_1_update_0_write5_to_bright_laplace_diff_1_rd5_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write5_to_bright_laplace_diff_1_rd5;
  bright_laplace_us_1_bright_laplace_us_1_update_0_write6_to_bright_laplace_diff_1_rd6_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write6_to_bright_laplace_diff_1_rd6;
  bright_laplace_us_1_bright_laplace_us_1_update_0_write7_to_bright_laplace_diff_1_rd7_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write7_to_bright_laplace_diff_1_rd7;
};



inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write0_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write0, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write0_to_bright_laplace_diff_1_rd0.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write0);
}

inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write1_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write1, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write1_to_bright_laplace_diff_1_rd1.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write1);
}

inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write2_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write2, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write2_to_bright_laplace_diff_1_rd2.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write2);
}

inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write3_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write3, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write3_to_bright_laplace_diff_1_rd3.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write3);
}

inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write4_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write4, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write4_to_bright_laplace_diff_1_rd4.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write4);
}

inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write5_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write5, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write5_to_bright_laplace_diff_1_rd5.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write5);
}

inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write6_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write6, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write6_to_bright_laplace_diff_1_rd6.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write6);
}

inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write7_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write7, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write7_to_bright_laplace_diff_1_rd7.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write7);
}

inline hw_uint<16> bright_laplace_diff_1_rd0_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd0 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write0 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write0_to_bright_laplace_diff_1_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd1_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd1 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[1 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write1 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write1_to_bright_laplace_diff_1_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd2_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd2 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[2 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write2 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write2_to_bright_laplace_diff_1_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd3_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd3 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[3 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write3 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write3_to_bright_laplace_diff_1_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd4_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd4 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[4 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write4 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write4_to_bright_laplace_diff_1_rd4.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd5_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd5 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[5 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write5 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write5_to_bright_laplace_diff_1_rd5.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd6_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd6 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[6 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write6 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write6_to_bright_laplace_diff_1_rd6.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd7_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd7 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[7 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write7 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write7_to_bright_laplace_diff_1_rd7.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write7;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_1_update_0_read
//	bright_laplace_diff_1_rd0
//	bright_laplace_diff_1_rd1
//	bright_laplace_diff_1_rd2
//	bright_laplace_diff_1_rd3
//	bright_laplace_diff_1_rd4
//	bright_laplace_diff_1_rd5
//	bright_laplace_diff_1_rd6
//	bright_laplace_diff_1_rd7
inline hw_uint<128> bright_laplace_us_1_bright_laplace_diff_1_update_0_read_bundle_read(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // bright_laplace_diff_1_rd0
    // bright_laplace_diff_1_rd1
    // bright_laplace_diff_1_rd2
    // bright_laplace_diff_1_rd3
    // bright_laplace_diff_1_rd4
    // bright_laplace_diff_1_rd5
    // bright_laplace_diff_1_rd6
    // bright_laplace_diff_1_rd7

	hw_uint<128> result;
	hw_uint<16> bright_laplace_diff_1_rd0_res = bright_laplace_diff_1_rd0_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, bright_laplace_diff_1_rd0_res);
	hw_uint<16> bright_laplace_diff_1_rd1_res = bright_laplace_diff_1_rd1_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, bright_laplace_diff_1_rd1_res);
	hw_uint<16> bright_laplace_diff_1_rd2_res = bright_laplace_diff_1_rd2_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, bright_laplace_diff_1_rd2_res);
	hw_uint<16> bright_laplace_diff_1_rd3_res = bright_laplace_diff_1_rd3_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, bright_laplace_diff_1_rd3_res);
	hw_uint<16> bright_laplace_diff_1_rd4_res = bright_laplace_diff_1_rd4_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, bright_laplace_diff_1_rd4_res);
	hw_uint<16> bright_laplace_diff_1_rd5_res = bright_laplace_diff_1_rd5_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, bright_laplace_diff_1_rd5_res);
	hw_uint<16> bright_laplace_diff_1_rd6_res = bright_laplace_diff_1_rd6_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, bright_laplace_diff_1_rd6_res);
	hw_uint<16> bright_laplace_diff_1_rd7_res = bright_laplace_diff_1_rd7_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, bright_laplace_diff_1_rd7_res);
	return result;
}

// bright_laplace_us_1_update_0_write
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write0
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write1
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write2
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write3
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write4
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write5
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write6
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write7
inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write_bundle_write(hw_uint<128>& bright_laplace_us_1_update_0_write, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write0_res = bright_laplace_us_1_update_0_write.extract<0, 15>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write0_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write0_res, bright_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write1_res = bright_laplace_us_1_update_0_write.extract<16, 31>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write1_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write1_res, bright_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write2_res = bright_laplace_us_1_update_0_write.extract<32, 47>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write2_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write2_res, bright_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write3_res = bright_laplace_us_1_update_0_write.extract<48, 63>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write3_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write3_res, bright_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write4_res = bright_laplace_us_1_update_0_write.extract<64, 79>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write4_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write4_res, bright_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write5_res = bright_laplace_us_1_update_0_write.extract<80, 95>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write5_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write5_res, bright_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write6_res = bright_laplace_us_1_update_0_write.extract<96, 111>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write6_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write6_res, bright_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write7_res = bright_laplace_us_1_update_0_write.extract<112, 127>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write7_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write7_res, bright_laplace_us_1, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct bright_laplace_us_2_bright_laplace_us_2_update_0_write0_to_bright_laplace_diff_2_rd0_cache {
	// RAM Box: {[0, 476], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_2_bright_laplace_us_2_update_0_write1_to_bright_laplace_diff_2_rd1_cache {
	// RAM Box: {[1, 477], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_2_bright_laplace_us_2_update_0_write2_to_bright_laplace_diff_2_rd2_cache {
	// RAM Box: {[2, 478], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_2_bright_laplace_us_2_update_0_write3_to_bright_laplace_diff_2_rd3_cache {
	// RAM Box: {[3, 479], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_2_cache {
  // # of banks: 4
  bright_laplace_us_2_bright_laplace_us_2_update_0_write0_to_bright_laplace_diff_2_rd0_cache bright_laplace_us_2_bright_laplace_us_2_update_0_write0_to_bright_laplace_diff_2_rd0;
  bright_laplace_us_2_bright_laplace_us_2_update_0_write1_to_bright_laplace_diff_2_rd1_cache bright_laplace_us_2_bright_laplace_us_2_update_0_write1_to_bright_laplace_diff_2_rd1;
  bright_laplace_us_2_bright_laplace_us_2_update_0_write2_to_bright_laplace_diff_2_rd2_cache bright_laplace_us_2_bright_laplace_us_2_update_0_write2_to_bright_laplace_diff_2_rd2;
  bright_laplace_us_2_bright_laplace_us_2_update_0_write3_to_bright_laplace_diff_2_rd3_cache bright_laplace_us_2_bright_laplace_us_2_update_0_write3_to_bright_laplace_diff_2_rd3;
};



inline void bright_laplace_us_2_bright_laplace_us_2_update_0_write0_write(hw_uint<16>& bright_laplace_us_2_bright_laplace_us_2_update_0_write0, bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
  bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write0_to_bright_laplace_diff_2_rd0.push(bright_laplace_us_2_bright_laplace_us_2_update_0_write0);
}

inline void bright_laplace_us_2_bright_laplace_us_2_update_0_write1_write(hw_uint<16>& bright_laplace_us_2_bright_laplace_us_2_update_0_write1, bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
  bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write1_to_bright_laplace_diff_2_rd1.push(bright_laplace_us_2_bright_laplace_us_2_update_0_write1);
}

inline void bright_laplace_us_2_bright_laplace_us_2_update_0_write2_write(hw_uint<16>& bright_laplace_us_2_bright_laplace_us_2_update_0_write2, bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
  bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write2_to_bright_laplace_diff_2_rd2.push(bright_laplace_us_2_bright_laplace_us_2_update_0_write2);
}

inline void bright_laplace_us_2_bright_laplace_us_2_update_0_write3_write(hw_uint<16>& bright_laplace_us_2_bright_laplace_us_2_update_0_write3, bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
  bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write3_to_bright_laplace_diff_2_rd3.push(bright_laplace_us_2_bright_laplace_us_2_update_0_write3);
}

inline hw_uint<16> bright_laplace_diff_2_rd0_select(bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd0 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_laplace_us_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 39] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_bright_laplace_us_2_bright_laplace_us_2_update_0_write0 = bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write0_to_bright_laplace_diff_2_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_2_bright_laplace_us_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_2_rd1_select(bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd1 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_laplace_us_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 39] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_bright_laplace_us_2_bright_laplace_us_2_update_0_write1 = bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write1_to_bright_laplace_diff_2_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_2_bright_laplace_us_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_2_rd2_select(bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd2 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_laplace_us_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 39] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_bright_laplace_us_2_bright_laplace_us_2_update_0_write2 = bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write2_to_bright_laplace_diff_2_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_2_bright_laplace_us_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_2_rd3_select(bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd3 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_laplace_us_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 39] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_bright_laplace_us_2_bright_laplace_us_2_update_0_write3 = bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write3_to_bright_laplace_diff_2_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_2_bright_laplace_us_2_update_0_write3;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_2_update_0_read
//	bright_laplace_diff_2_rd0
//	bright_laplace_diff_2_rd1
//	bright_laplace_diff_2_rd2
//	bright_laplace_diff_2_rd3
inline hw_uint<64> bright_laplace_us_2_bright_laplace_diff_2_update_0_read_bundle_read(bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // bright_laplace_diff_2_rd0
    // bright_laplace_diff_2_rd1
    // bright_laplace_diff_2_rd2
    // bright_laplace_diff_2_rd3

	hw_uint<64> result;
	hw_uint<16> bright_laplace_diff_2_rd0_res = bright_laplace_diff_2_rd0_select(bright_laplace_us_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, bright_laplace_diff_2_rd0_res);
	hw_uint<16> bright_laplace_diff_2_rd1_res = bright_laplace_diff_2_rd1_select(bright_laplace_us_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, bright_laplace_diff_2_rd1_res);
	hw_uint<16> bright_laplace_diff_2_rd2_res = bright_laplace_diff_2_rd2_select(bright_laplace_us_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, bright_laplace_diff_2_rd2_res);
	hw_uint<16> bright_laplace_diff_2_rd3_res = bright_laplace_diff_2_rd3_select(bright_laplace_us_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, bright_laplace_diff_2_rd3_res);
	return result;
}

// bright_laplace_us_2_update_0_write
//	bright_laplace_us_2_bright_laplace_us_2_update_0_write0
//	bright_laplace_us_2_bright_laplace_us_2_update_0_write1
//	bright_laplace_us_2_bright_laplace_us_2_update_0_write2
//	bright_laplace_us_2_bright_laplace_us_2_update_0_write3
inline void bright_laplace_us_2_bright_laplace_us_2_update_0_write_bundle_write(hw_uint<64>& bright_laplace_us_2_update_0_write, bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_us_2_bright_laplace_us_2_update_0_write0_res = bright_laplace_us_2_update_0_write.extract<0, 15>();
	bright_laplace_us_2_bright_laplace_us_2_update_0_write0_write(bright_laplace_us_2_bright_laplace_us_2_update_0_write0_res, bright_laplace_us_2, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_2_bright_laplace_us_2_update_0_write1_res = bright_laplace_us_2_update_0_write.extract<16, 31>();
	bright_laplace_us_2_bright_laplace_us_2_update_0_write1_write(bright_laplace_us_2_bright_laplace_us_2_update_0_write1_res, bright_laplace_us_2, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_2_bright_laplace_us_2_update_0_write2_res = bright_laplace_us_2_update_0_write.extract<32, 47>();
	bright_laplace_us_2_bright_laplace_us_2_update_0_write2_write(bright_laplace_us_2_bright_laplace_us_2_update_0_write2_res, bright_laplace_us_2, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_2_bright_laplace_us_2_update_0_write3_res = bright_laplace_us_2_update_0_write.extract<48, 63>();
	bright_laplace_us_2_bright_laplace_us_2_update_0_write3_write(bright_laplace_us_2_bright_laplace_us_2_update_0_write3_res, bright_laplace_us_2, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct bright_weights_bright_weights_update_0_write0_merged_banks_2_cache {
	// RAM Box: {[0, 1952], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write1_merged_banks_2_cache {
	// RAM Box: {[1, 1953], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write10_merged_banks_2_cache {
	// RAM Box: {[10, 1962], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write11_merged_banks_2_cache {
	// RAM Box: {[11, 1963], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write12_merged_banks_2_cache {
	// RAM Box: {[12, 1964], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write13_merged_banks_2_cache {
	// RAM Box: {[13, 1965], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write14_merged_banks_2_cache {
	// RAM Box: {[14, 1966], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write15_merged_banks_2_cache {
	// RAM Box: {[15, 1967], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write2_merged_banks_2_cache {
	// RAM Box: {[2, 1954], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write3_merged_banks_2_cache {
	// RAM Box: {[3, 1955], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write4_merged_banks_2_cache {
	// RAM Box: {[4, 1956], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write5_merged_banks_2_cache {
	// RAM Box: {[5, 1957], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write6_merged_banks_2_cache {
	// RAM Box: {[6, 1958], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write7_merged_banks_2_cache {
	// RAM Box: {[7, 1959], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write8_merged_banks_2_cache {
	// RAM Box: {[8, 1960], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_bright_weights_update_0_write9_merged_banks_2_cache {
	// RAM Box: {[9, 1961], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct bright_weights_cache {
  // # of banks: 16
  bright_weights_bright_weights_update_0_write0_merged_banks_2_cache bright_weights_bright_weights_update_0_write0_merged_banks_2;
  bright_weights_bright_weights_update_0_write1_merged_banks_2_cache bright_weights_bright_weights_update_0_write1_merged_banks_2;
  bright_weights_bright_weights_update_0_write10_merged_banks_2_cache bright_weights_bright_weights_update_0_write10_merged_banks_2;
  bright_weights_bright_weights_update_0_write11_merged_banks_2_cache bright_weights_bright_weights_update_0_write11_merged_banks_2;
  bright_weights_bright_weights_update_0_write12_merged_banks_2_cache bright_weights_bright_weights_update_0_write12_merged_banks_2;
  bright_weights_bright_weights_update_0_write13_merged_banks_2_cache bright_weights_bright_weights_update_0_write13_merged_banks_2;
  bright_weights_bright_weights_update_0_write14_merged_banks_2_cache bright_weights_bright_weights_update_0_write14_merged_banks_2;
  bright_weights_bright_weights_update_0_write15_merged_banks_2_cache bright_weights_bright_weights_update_0_write15_merged_banks_2;
  bright_weights_bright_weights_update_0_write2_merged_banks_2_cache bright_weights_bright_weights_update_0_write2_merged_banks_2;
  bright_weights_bright_weights_update_0_write3_merged_banks_2_cache bright_weights_bright_weights_update_0_write3_merged_banks_2;
  bright_weights_bright_weights_update_0_write4_merged_banks_2_cache bright_weights_bright_weights_update_0_write4_merged_banks_2;
  bright_weights_bright_weights_update_0_write5_merged_banks_2_cache bright_weights_bright_weights_update_0_write5_merged_banks_2;
  bright_weights_bright_weights_update_0_write6_merged_banks_2_cache bright_weights_bright_weights_update_0_write6_merged_banks_2;
  bright_weights_bright_weights_update_0_write7_merged_banks_2_cache bright_weights_bright_weights_update_0_write7_merged_banks_2;
  bright_weights_bright_weights_update_0_write8_merged_banks_2_cache bright_weights_bright_weights_update_0_write8_merged_banks_2;
  bright_weights_bright_weights_update_0_write9_merged_banks_2_cache bright_weights_bright_weights_update_0_write9_merged_banks_2;
};



inline void bright_weights_bright_weights_update_0_write0_write(hw_uint<16>& bright_weights_bright_weights_update_0_write0, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write0_merged_banks_2.push(bright_weights_bright_weights_update_0_write0);
}

inline void bright_weights_bright_weights_update_0_write1_write(hw_uint<16>& bright_weights_bright_weights_update_0_write1, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write1_merged_banks_2.push(bright_weights_bright_weights_update_0_write1);
}

inline void bright_weights_bright_weights_update_0_write10_write(hw_uint<16>& bright_weights_bright_weights_update_0_write10, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write10_merged_banks_2.push(bright_weights_bright_weights_update_0_write10);
}

inline void bright_weights_bright_weights_update_0_write11_write(hw_uint<16>& bright_weights_bright_weights_update_0_write11, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write11_merged_banks_2.push(bright_weights_bright_weights_update_0_write11);
}

inline void bright_weights_bright_weights_update_0_write12_write(hw_uint<16>& bright_weights_bright_weights_update_0_write12, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write12_merged_banks_2.push(bright_weights_bright_weights_update_0_write12);
}

inline void bright_weights_bright_weights_update_0_write13_write(hw_uint<16>& bright_weights_bright_weights_update_0_write13, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write13_merged_banks_2.push(bright_weights_bright_weights_update_0_write13);
}

inline void bright_weights_bright_weights_update_0_write14_write(hw_uint<16>& bright_weights_bright_weights_update_0_write14, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write14_merged_banks_2.push(bright_weights_bright_weights_update_0_write14);
}

inline void bright_weights_bright_weights_update_0_write15_write(hw_uint<16>& bright_weights_bright_weights_update_0_write15, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write15_merged_banks_2.push(bright_weights_bright_weights_update_0_write15);
}

inline void bright_weights_bright_weights_update_0_write2_write(hw_uint<16>& bright_weights_bright_weights_update_0_write2, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write2_merged_banks_2.push(bright_weights_bright_weights_update_0_write2);
}

inline void bright_weights_bright_weights_update_0_write3_write(hw_uint<16>& bright_weights_bright_weights_update_0_write3, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write3_merged_banks_2.push(bright_weights_bright_weights_update_0_write3);
}

inline void bright_weights_bright_weights_update_0_write4_write(hw_uint<16>& bright_weights_bright_weights_update_0_write4, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write4_merged_banks_2.push(bright_weights_bright_weights_update_0_write4);
}

inline void bright_weights_bright_weights_update_0_write5_write(hw_uint<16>& bright_weights_bright_weights_update_0_write5, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write5_merged_banks_2.push(bright_weights_bright_weights_update_0_write5);
}

inline void bright_weights_bright_weights_update_0_write6_write(hw_uint<16>& bright_weights_bright_weights_update_0_write6, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write6_merged_banks_2.push(bright_weights_bright_weights_update_0_write6);
}

inline void bright_weights_bright_weights_update_0_write7_write(hw_uint<16>& bright_weights_bright_weights_update_0_write7, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write7_merged_banks_2.push(bright_weights_bright_weights_update_0_write7);
}

inline void bright_weights_bright_weights_update_0_write8_write(hw_uint<16>& bright_weights_bright_weights_update_0_write8, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write8_merged_banks_2.push(bright_weights_bright_weights_update_0_write8);
}

inline void bright_weights_bright_weights_update_0_write9_write(hw_uint<16>& bright_weights_bright_weights_update_0_write9, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write9_merged_banks_2.push(bright_weights_bright_weights_update_0_write9);
}

inline hw_uint<16> bright_weights_normed_rd0_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd0 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write0 = bright_weights.bright_weights_bright_weights_update_0_write0_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd1_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd1 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[1 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write1 = bright_weights.bright_weights_bright_weights_update_0_write1_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd10_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd10 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[10 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write10 = bright_weights.bright_weights_bright_weights_update_0_write10_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd11_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd11 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[11 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write11 = bright_weights.bright_weights_bright_weights_update_0_write11_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd12_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd12 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[12 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write12 = bright_weights.bright_weights_bright_weights_update_0_write12_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd13_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd13 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[13 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write13 = bright_weights.bright_weights_bright_weights_update_0_write13_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd14_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd14 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[14 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write14 = bright_weights.bright_weights_bright_weights_update_0_write14_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd15_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd15 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[15 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write15 = bright_weights.bright_weights_bright_weights_update_0_write15_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd2_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd2 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[2 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write2 = bright_weights.bright_weights_bright_weights_update_0_write2_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd3_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd3 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[3 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write3 = bright_weights.bright_weights_bright_weights_update_0_write3_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd4_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd4 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[4 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write4 = bright_weights.bright_weights_bright_weights_update_0_write4_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd5_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd5 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[5 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write5 = bright_weights.bright_weights_bright_weights_update_0_write5_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd6_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd6 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[6 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write6 = bright_weights.bright_weights_bright_weights_update_0_write6_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd7_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd7 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[7 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write7 = bright_weights.bright_weights_bright_weights_update_0_write7_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd8_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd8 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[8 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write8 = bright_weights.bright_weights_bright_weights_update_0_write8_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd9_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd9 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[9 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write9 = bright_weights.bright_weights_bright_weights_update_0_write9_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write9;
  return 0;
}

inline hw_uint<16> weight_sums_rd0_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd0 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write0 = bright_weights.bright_weights_bright_weights_update_0_write0_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write0;
  return 0;
}

inline hw_uint<16> weight_sums_rd1_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd1 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[1 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write1 = bright_weights.bright_weights_bright_weights_update_0_write1_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write1;
  return 0;
}

inline hw_uint<16> weight_sums_rd10_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd10 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[10 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write10 = bright_weights.bright_weights_bright_weights_update_0_write10_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write10;
  return 0;
}

inline hw_uint<16> weight_sums_rd11_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd11 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[11 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write11 = bright_weights.bright_weights_bright_weights_update_0_write11_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write11;
  return 0;
}

inline hw_uint<16> weight_sums_rd12_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd12 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[12 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write12 = bright_weights.bright_weights_bright_weights_update_0_write12_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write12;
  return 0;
}

inline hw_uint<16> weight_sums_rd13_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd13 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[13 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write13 = bright_weights.bright_weights_bright_weights_update_0_write13_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write13;
  return 0;
}

inline hw_uint<16> weight_sums_rd14_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd14 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[14 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write14 = bright_weights.bright_weights_bright_weights_update_0_write14_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write14;
  return 0;
}

inline hw_uint<16> weight_sums_rd15_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd15 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[15 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write15 = bright_weights.bright_weights_bright_weights_update_0_write15_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write15;
  return 0;
}

inline hw_uint<16> weight_sums_rd2_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd2 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[2 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write2 = bright_weights.bright_weights_bright_weights_update_0_write2_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write2;
  return 0;
}

inline hw_uint<16> weight_sums_rd3_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd3 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[3 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write3 = bright_weights.bright_weights_bright_weights_update_0_write3_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write3;
  return 0;
}

inline hw_uint<16> weight_sums_rd4_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd4 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[4 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write4 = bright_weights.bright_weights_bright_weights_update_0_write4_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write4;
  return 0;
}

inline hw_uint<16> weight_sums_rd5_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd5 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[5 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write5 = bright_weights.bright_weights_bright_weights_update_0_write5_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write5;
  return 0;
}

inline hw_uint<16> weight_sums_rd6_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd6 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[6 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write6 = bright_weights.bright_weights_bright_weights_update_0_write6_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write6;
  return 0;
}

inline hw_uint<16> weight_sums_rd7_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd7 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[7 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write7 = bright_weights.bright_weights_bright_weights_update_0_write7_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write7;
  return 0;
}

inline hw_uint<16> weight_sums_rd8_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd8 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[8 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write8 = bright_weights.bright_weights_bright_weights_update_0_write8_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write8;
  return 0;
}

inline hw_uint<16> weight_sums_rd9_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd9 read pattern: { weight_sums_update_0[d0, d1] -> bright_weights[9 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_write9 = bright_weights.bright_weights_bright_weights_update_0_write9_merged_banks_2.peek_0();
  return value_bright_weights_bright_weights_update_0_write9;
  return 0;
}

// # of bundles = 3
// bright_weights_normed_update_0_read
//	bright_weights_normed_rd0
//	bright_weights_normed_rd1
//	bright_weights_normed_rd2
//	bright_weights_normed_rd3
//	bright_weights_normed_rd4
//	bright_weights_normed_rd5
//	bright_weights_normed_rd6
//	bright_weights_normed_rd7
//	bright_weights_normed_rd8
//	bright_weights_normed_rd9
//	bright_weights_normed_rd10
//	bright_weights_normed_rd11
//	bright_weights_normed_rd12
//	bright_weights_normed_rd13
//	bright_weights_normed_rd14
//	bright_weights_normed_rd15
inline hw_uint<256> bright_weights_bright_weights_normed_update_0_read_bundle_read(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // bright_weights_normed_rd0
    // bright_weights_normed_rd1
    // bright_weights_normed_rd2
    // bright_weights_normed_rd3
    // bright_weights_normed_rd4
    // bright_weights_normed_rd5
    // bright_weights_normed_rd6
    // bright_weights_normed_rd7
    // bright_weights_normed_rd8
    // bright_weights_normed_rd9
    // bright_weights_normed_rd10
    // bright_weights_normed_rd11
    // bright_weights_normed_rd12
    // bright_weights_normed_rd13
    // bright_weights_normed_rd14
    // bright_weights_normed_rd15

	hw_uint<256> result;
	hw_uint<16> bright_weights_normed_rd0_res = bright_weights_normed_rd0_select(bright_weights, d0, d1, dynamic_address);
	set_at<0, 256>(result, bright_weights_normed_rd0_res);
	hw_uint<16> bright_weights_normed_rd1_res = bright_weights_normed_rd1_select(bright_weights, d0, d1, dynamic_address);
	set_at<16, 256>(result, bright_weights_normed_rd1_res);
	hw_uint<16> bright_weights_normed_rd2_res = bright_weights_normed_rd2_select(bright_weights, d0, d1, dynamic_address);
	set_at<32, 256>(result, bright_weights_normed_rd2_res);
	hw_uint<16> bright_weights_normed_rd3_res = bright_weights_normed_rd3_select(bright_weights, d0, d1, dynamic_address);
	set_at<48, 256>(result, bright_weights_normed_rd3_res);
	hw_uint<16> bright_weights_normed_rd4_res = bright_weights_normed_rd4_select(bright_weights, d0, d1, dynamic_address);
	set_at<64, 256>(result, bright_weights_normed_rd4_res);
	hw_uint<16> bright_weights_normed_rd5_res = bright_weights_normed_rd5_select(bright_weights, d0, d1, dynamic_address);
	set_at<80, 256>(result, bright_weights_normed_rd5_res);
	hw_uint<16> bright_weights_normed_rd6_res = bright_weights_normed_rd6_select(bright_weights, d0, d1, dynamic_address);
	set_at<96, 256>(result, bright_weights_normed_rd6_res);
	hw_uint<16> bright_weights_normed_rd7_res = bright_weights_normed_rd7_select(bright_weights, d0, d1, dynamic_address);
	set_at<112, 256>(result, bright_weights_normed_rd7_res);
	hw_uint<16> bright_weights_normed_rd8_res = bright_weights_normed_rd8_select(bright_weights, d0, d1, dynamic_address);
	set_at<128, 256>(result, bright_weights_normed_rd8_res);
	hw_uint<16> bright_weights_normed_rd9_res = bright_weights_normed_rd9_select(bright_weights, d0, d1, dynamic_address);
	set_at<144, 256>(result, bright_weights_normed_rd9_res);
	hw_uint<16> bright_weights_normed_rd10_res = bright_weights_normed_rd10_select(bright_weights, d0, d1, dynamic_address);
	set_at<160, 256>(result, bright_weights_normed_rd10_res);
	hw_uint<16> bright_weights_normed_rd11_res = bright_weights_normed_rd11_select(bright_weights, d0, d1, dynamic_address);
	set_at<176, 256>(result, bright_weights_normed_rd11_res);
	hw_uint<16> bright_weights_normed_rd12_res = bright_weights_normed_rd12_select(bright_weights, d0, d1, dynamic_address);
	set_at<192, 256>(result, bright_weights_normed_rd12_res);
	hw_uint<16> bright_weights_normed_rd13_res = bright_weights_normed_rd13_select(bright_weights, d0, d1, dynamic_address);
	set_at<208, 256>(result, bright_weights_normed_rd13_res);
	hw_uint<16> bright_weights_normed_rd14_res = bright_weights_normed_rd14_select(bright_weights, d0, d1, dynamic_address);
	set_at<224, 256>(result, bright_weights_normed_rd14_res);
	hw_uint<16> bright_weights_normed_rd15_res = bright_weights_normed_rd15_select(bright_weights, d0, d1, dynamic_address);
	set_at<240, 256>(result, bright_weights_normed_rd15_res);
	return result;
}

// bright_weights_update_0_write
//	bright_weights_bright_weights_update_0_write0
//	bright_weights_bright_weights_update_0_write1
//	bright_weights_bright_weights_update_0_write2
//	bright_weights_bright_weights_update_0_write3
//	bright_weights_bright_weights_update_0_write4
//	bright_weights_bright_weights_update_0_write5
//	bright_weights_bright_weights_update_0_write6
//	bright_weights_bright_weights_update_0_write7
//	bright_weights_bright_weights_update_0_write8
//	bright_weights_bright_weights_update_0_write9
//	bright_weights_bright_weights_update_0_write10
//	bright_weights_bright_weights_update_0_write11
//	bright_weights_bright_weights_update_0_write12
//	bright_weights_bright_weights_update_0_write13
//	bright_weights_bright_weights_update_0_write14
//	bright_weights_bright_weights_update_0_write15
inline void bright_weights_bright_weights_update_0_write_bundle_write(hw_uint<256>& bright_weights_update_0_write, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_bright_weights_update_0_write0_res = bright_weights_update_0_write.extract<0, 15>();
	bright_weights_bright_weights_update_0_write0_write(bright_weights_bright_weights_update_0_write0_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write1_res = bright_weights_update_0_write.extract<16, 31>();
	bright_weights_bright_weights_update_0_write1_write(bright_weights_bright_weights_update_0_write1_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write2_res = bright_weights_update_0_write.extract<32, 47>();
	bright_weights_bright_weights_update_0_write2_write(bright_weights_bright_weights_update_0_write2_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write3_res = bright_weights_update_0_write.extract<48, 63>();
	bright_weights_bright_weights_update_0_write3_write(bright_weights_bright_weights_update_0_write3_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write4_res = bright_weights_update_0_write.extract<64, 79>();
	bright_weights_bright_weights_update_0_write4_write(bright_weights_bright_weights_update_0_write4_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write5_res = bright_weights_update_0_write.extract<80, 95>();
	bright_weights_bright_weights_update_0_write5_write(bright_weights_bright_weights_update_0_write5_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write6_res = bright_weights_update_0_write.extract<96, 111>();
	bright_weights_bright_weights_update_0_write6_write(bright_weights_bright_weights_update_0_write6_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write7_res = bright_weights_update_0_write.extract<112, 127>();
	bright_weights_bright_weights_update_0_write7_write(bright_weights_bright_weights_update_0_write7_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write8_res = bright_weights_update_0_write.extract<128, 143>();
	bright_weights_bright_weights_update_0_write8_write(bright_weights_bright_weights_update_0_write8_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write9_res = bright_weights_update_0_write.extract<144, 159>();
	bright_weights_bright_weights_update_0_write9_write(bright_weights_bright_weights_update_0_write9_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write10_res = bright_weights_update_0_write.extract<160, 175>();
	bright_weights_bright_weights_update_0_write10_write(bright_weights_bright_weights_update_0_write10_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write11_res = bright_weights_update_0_write.extract<176, 191>();
	bright_weights_bright_weights_update_0_write11_write(bright_weights_bright_weights_update_0_write11_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write12_res = bright_weights_update_0_write.extract<192, 207>();
	bright_weights_bright_weights_update_0_write12_write(bright_weights_bright_weights_update_0_write12_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write13_res = bright_weights_update_0_write.extract<208, 223>();
	bright_weights_bright_weights_update_0_write13_write(bright_weights_bright_weights_update_0_write13_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write14_res = bright_weights_update_0_write.extract<224, 239>();
	bright_weights_bright_weights_update_0_write14_write(bright_weights_bright_weights_update_0_write14_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write15_res = bright_weights_update_0_write.extract<240, 255>();
	bright_weights_bright_weights_update_0_write15_write(bright_weights_bright_weights_update_0_write15_res, bright_weights, d0, d1, dynamic_address);
}

// weight_sums_update_0_read
//	weight_sums_rd0
//	weight_sums_rd1
//	weight_sums_rd2
//	weight_sums_rd3
//	weight_sums_rd4
//	weight_sums_rd5
//	weight_sums_rd6
//	weight_sums_rd7
//	weight_sums_rd8
//	weight_sums_rd9
//	weight_sums_rd10
//	weight_sums_rd11
//	weight_sums_rd12
//	weight_sums_rd13
//	weight_sums_rd14
//	weight_sums_rd15
inline hw_uint<256> bright_weights_weight_sums_update_0_read_bundle_read(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // weight_sums_rd0
    // weight_sums_rd1
    // weight_sums_rd2
    // weight_sums_rd3
    // weight_sums_rd4
    // weight_sums_rd5
    // weight_sums_rd6
    // weight_sums_rd7
    // weight_sums_rd8
    // weight_sums_rd9
    // weight_sums_rd10
    // weight_sums_rd11
    // weight_sums_rd12
    // weight_sums_rd13
    // weight_sums_rd14
    // weight_sums_rd15

	hw_uint<256> result;
	hw_uint<16> weight_sums_rd0_res = weight_sums_rd0_select(bright_weights, d0, d1, dynamic_address);
	set_at<0, 256>(result, weight_sums_rd0_res);
	hw_uint<16> weight_sums_rd1_res = weight_sums_rd1_select(bright_weights, d0, d1, dynamic_address);
	set_at<16, 256>(result, weight_sums_rd1_res);
	hw_uint<16> weight_sums_rd2_res = weight_sums_rd2_select(bright_weights, d0, d1, dynamic_address);
	set_at<32, 256>(result, weight_sums_rd2_res);
	hw_uint<16> weight_sums_rd3_res = weight_sums_rd3_select(bright_weights, d0, d1, dynamic_address);
	set_at<48, 256>(result, weight_sums_rd3_res);
	hw_uint<16> weight_sums_rd4_res = weight_sums_rd4_select(bright_weights, d0, d1, dynamic_address);
	set_at<64, 256>(result, weight_sums_rd4_res);
	hw_uint<16> weight_sums_rd5_res = weight_sums_rd5_select(bright_weights, d0, d1, dynamic_address);
	set_at<80, 256>(result, weight_sums_rd5_res);
	hw_uint<16> weight_sums_rd6_res = weight_sums_rd6_select(bright_weights, d0, d1, dynamic_address);
	set_at<96, 256>(result, weight_sums_rd6_res);
	hw_uint<16> weight_sums_rd7_res = weight_sums_rd7_select(bright_weights, d0, d1, dynamic_address);
	set_at<112, 256>(result, weight_sums_rd7_res);
	hw_uint<16> weight_sums_rd8_res = weight_sums_rd8_select(bright_weights, d0, d1, dynamic_address);
	set_at<128, 256>(result, weight_sums_rd8_res);
	hw_uint<16> weight_sums_rd9_res = weight_sums_rd9_select(bright_weights, d0, d1, dynamic_address);
	set_at<144, 256>(result, weight_sums_rd9_res);
	hw_uint<16> weight_sums_rd10_res = weight_sums_rd10_select(bright_weights, d0, d1, dynamic_address);
	set_at<160, 256>(result, weight_sums_rd10_res);
	hw_uint<16> weight_sums_rd11_res = weight_sums_rd11_select(bright_weights, d0, d1, dynamic_address);
	set_at<176, 256>(result, weight_sums_rd11_res);
	hw_uint<16> weight_sums_rd12_res = weight_sums_rd12_select(bright_weights, d0, d1, dynamic_address);
	set_at<192, 256>(result, weight_sums_rd12_res);
	hw_uint<16> weight_sums_rd13_res = weight_sums_rd13_select(bright_weights, d0, d1, dynamic_address);
	set_at<208, 256>(result, weight_sums_rd13_res);
	hw_uint<16> weight_sums_rd14_res = weight_sums_rd14_select(bright_weights, d0, d1, dynamic_address);
	set_at<224, 256>(result, weight_sums_rd14_res);
	hw_uint<16> weight_sums_rd15_res = weight_sums_rd15_select(bright_weights, d0, d1, dynamic_address);
	set_at<240, 256>(result, weight_sums_rd15_res);
	return result;
}

#include "hw_classes.h"

struct bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10_cache {
	// RAM Box: {[0, 1952], [0, 1086]}
	// Capacity: 248
	// # of read delays: 6
  // 0, 1, 123, 124, 246, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 121> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_124() {
		return f6;
	}

	inline hw_uint<16> peek_245() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_246() {
		return f8;
	}

	inline hw_uint<16> peek_247() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10_cache {
	// RAM Box: {[1, 1953], [0, 1086]}
	// Capacity: 248
	// # of read delays: 6
  // 0, 1, 123, 124, 246, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 121> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_124() {
		return f6;
	}

	inline hw_uint<16> peek_245() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_246() {
		return f8;
	}

	inline hw_uint<16> peek_247() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10_cache {
	// RAM Box: {[10, 1962], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10_cache {
	// RAM Box: {[11, 1963], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10_cache {
	// RAM Box: {[12, 1964], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10_cache {
	// RAM Box: {[13, 1965], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10_cache {
	// RAM Box: {[14, 1966], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10_cache {
	// RAM Box: {[15, 1967], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10_cache {
	// RAM Box: {[2, 1954], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10_cache {
	// RAM Box: {[3, 1955], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10_cache {
	// RAM Box: {[4, 1956], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10_cache {
	// RAM Box: {[5, 1957], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10_cache {
	// RAM Box: {[6, 1958], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10_cache {
	// RAM Box: {[7, 1959], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10_cache {
	// RAM Box: {[8, 1960], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10_cache {
	// RAM Box: {[9, 1961], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_cache {
  // # of banks: 16
  bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10;
  bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10_cache bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10;
};



inline void bright_weights_normed_bright_weights_normed_update_0_write0_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write0, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write0);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write1_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write1, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write1);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write10_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write10, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write10);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write11_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write11, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write11);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write12_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write12, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write12);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write13_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write13, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write13);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write14_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write14, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write14);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write15_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write15, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write15);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write2_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write2, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write2);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write3_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write3, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write3);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write4_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write4, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write4);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write5_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write5, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write5);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write6_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write6, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write6);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write7_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write7, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write7);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write8_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write8, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write8);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write9_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write9, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10.push(bright_weights_normed_bright_weights_normed_update_0_write9);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd0_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd0 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd1_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd1 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd10_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd10 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd100_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd100 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write11 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd101_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd101 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write11 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd102_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd102 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write12 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd103_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd103 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write12 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd104_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd104 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write12 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd105_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd105 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write13 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd106_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd106 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write13 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd107_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd107 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write13 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd108_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd108 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write12 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd109_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd109 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write12 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd11_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd11 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd110_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd110 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write12 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd111_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd111 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write13 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd112_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd112 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write13 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd113_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd113 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write13 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd114_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd114 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write14 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd115_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd115 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write14 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd116_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd116 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write14 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd117_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd117 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write13 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd118_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd118 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write13 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd119_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd119 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write13 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd12_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd12 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd120_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd120 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write14 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd121_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd121 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write14 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd122_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd122 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write14 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd123_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd123 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write15 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd124_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd124 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write15 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd125_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd125 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write15 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd126_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd126 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write14 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd127_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd127 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write14 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd128_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd128 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write14 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd129_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd129 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write15 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd13_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd13 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd130_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd130 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write15 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd131_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd131 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write15 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd132_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd132 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[16 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10.peek_246();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd133_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd133 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[16 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10.peek_123();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd134_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd134 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[16 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10.peek_0();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd135_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd135 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write15 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd136_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd136 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write15 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd137_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd137 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write15 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd138_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd138 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[16 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10.peek_246();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd139_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd139 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[16 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10.peek_123();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd14_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd14 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd140_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd140 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[16 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10.peek_0();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd141_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd141 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[17 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10.peek_246();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd142_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd142 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[17 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10.peek_123();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd143_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd143 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[17 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10.peek_0();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd15_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd15 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd16_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd16 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd17_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd17 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd18_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd18 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd19_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd19 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd2_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd2 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd20_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd20 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd21_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd21 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd22_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd22 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd23_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd23 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd24_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd24 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd25_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd25 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd26_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd26 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd27_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd27 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd28_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd28 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd29_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd29 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd3_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd3 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd30_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd30 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd31_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd31 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd32_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd32 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd33_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd33 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd34_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd34 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd35_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd35 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd36_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd36 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd37_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd37 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd38_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd38 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd39_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd39 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd4_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd4 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd40_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd40 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd41_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd41 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd42_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd42 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd43_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd43 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd44_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd44 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd45_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd45 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd46_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd46 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd47_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd47 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd48_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd48 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd49_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd49 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd5_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd5 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd50_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd50 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd51_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd51 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd52_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd52 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd53_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd53 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd54_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd54 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd55_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd55 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd56_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd56 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd57_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd57 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd58_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd58 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd59_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd59 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd6_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd6 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd60_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd60 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write8 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd61_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd61 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write8 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd62_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd62 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write8 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd63_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd63 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd64_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd64 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd65_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd65 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd66_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd66 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write8 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd67_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd67 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write8 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd68_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd68 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write8 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd69_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd69 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write9 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd7_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd7 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd70_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd70 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write9 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd71_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd71 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write9 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd72_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd72 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write8 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd73_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd73 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write8 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd74_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd74 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write8 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd75_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd75 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write9 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd76_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd76 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write9 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd77_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd77 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write9 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd78_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd78 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write10 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd79_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd79 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write10 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd8_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd8 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd80_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd80 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write10 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd81_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd81 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write9 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd82_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd82 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write9 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd83_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd83 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write9 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd84_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd84 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write10 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd85_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd85 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write10 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd86_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd86 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write10 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd87_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd87 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write11 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd88_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd88 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write11 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd89_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd89 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write11 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd9_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd9 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd90_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd90 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write10 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd91_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd91 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write10 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd92_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd92 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write10 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd93_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd93 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write11 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd94_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd94 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write11 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd95_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd95 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write11 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd96_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd96 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write12 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd97_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd97 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write12 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10.peek_124();
  return value_bright_weights_normed_bright_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd98_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd98 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write12 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd99_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd99 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write11 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> fused_level_0_rd0_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd0 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_0_rd1_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd1 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[1 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_0_rd10_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd10 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[10 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write10 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write10_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> fused_level_0_rd11_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd11 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[11 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write11 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write11_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> fused_level_0_rd12_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd12 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[12 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write12 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write12_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> fused_level_0_rd13_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd13 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[13 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write13 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write13_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> fused_level_0_rd14_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd14 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[14 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write14 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write14_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> fused_level_0_rd15_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd15 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[15 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write15 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write15_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> fused_level_0_rd2_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd2 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[2 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_0_rd3_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd3 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[3 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_0_rd4_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd4 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[4 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_0_rd5_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd5 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[5 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_0_rd6_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd6 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[6 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_0_rd7_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd7 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[7 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> fused_level_0_rd8_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd8 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[8 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write8 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write8_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> fused_level_0_rd9_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd9 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[9 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write9 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write9_merged_banks_10.peek_247();
  return value_bright_weights_normed_bright_weights_normed_update_0_write9;
  return 0;
}

// # of bundles = 3
// bright_weights_normed_gauss_blur_1_update_0_read
//	bright_weights_normed_gauss_blur_1_rd0
//	bright_weights_normed_gauss_blur_1_rd1
//	bright_weights_normed_gauss_blur_1_rd2
//	bright_weights_normed_gauss_blur_1_rd3
//	bright_weights_normed_gauss_blur_1_rd4
//	bright_weights_normed_gauss_blur_1_rd5
//	bright_weights_normed_gauss_blur_1_rd6
//	bright_weights_normed_gauss_blur_1_rd7
//	bright_weights_normed_gauss_blur_1_rd8
//	bright_weights_normed_gauss_blur_1_rd9
//	bright_weights_normed_gauss_blur_1_rd10
//	bright_weights_normed_gauss_blur_1_rd11
//	bright_weights_normed_gauss_blur_1_rd12
//	bright_weights_normed_gauss_blur_1_rd13
//	bright_weights_normed_gauss_blur_1_rd14
//	bright_weights_normed_gauss_blur_1_rd15
//	bright_weights_normed_gauss_blur_1_rd16
//	bright_weights_normed_gauss_blur_1_rd17
//	bright_weights_normed_gauss_blur_1_rd18
//	bright_weights_normed_gauss_blur_1_rd19
//	bright_weights_normed_gauss_blur_1_rd20
//	bright_weights_normed_gauss_blur_1_rd21
//	bright_weights_normed_gauss_blur_1_rd22
//	bright_weights_normed_gauss_blur_1_rd23
//	bright_weights_normed_gauss_blur_1_rd24
//	bright_weights_normed_gauss_blur_1_rd25
//	bright_weights_normed_gauss_blur_1_rd26
//	bright_weights_normed_gauss_blur_1_rd27
//	bright_weights_normed_gauss_blur_1_rd28
//	bright_weights_normed_gauss_blur_1_rd29
//	bright_weights_normed_gauss_blur_1_rd30
//	bright_weights_normed_gauss_blur_1_rd31
//	bright_weights_normed_gauss_blur_1_rd32
//	bright_weights_normed_gauss_blur_1_rd33
//	bright_weights_normed_gauss_blur_1_rd34
//	bright_weights_normed_gauss_blur_1_rd35
//	bright_weights_normed_gauss_blur_1_rd36
//	bright_weights_normed_gauss_blur_1_rd37
//	bright_weights_normed_gauss_blur_1_rd38
//	bright_weights_normed_gauss_blur_1_rd39
//	bright_weights_normed_gauss_blur_1_rd40
//	bright_weights_normed_gauss_blur_1_rd41
//	bright_weights_normed_gauss_blur_1_rd42
//	bright_weights_normed_gauss_blur_1_rd43
//	bright_weights_normed_gauss_blur_1_rd44
//	bright_weights_normed_gauss_blur_1_rd45
//	bright_weights_normed_gauss_blur_1_rd46
//	bright_weights_normed_gauss_blur_1_rd47
//	bright_weights_normed_gauss_blur_1_rd48
//	bright_weights_normed_gauss_blur_1_rd49
//	bright_weights_normed_gauss_blur_1_rd50
//	bright_weights_normed_gauss_blur_1_rd51
//	bright_weights_normed_gauss_blur_1_rd52
//	bright_weights_normed_gauss_blur_1_rd53
//	bright_weights_normed_gauss_blur_1_rd54
//	bright_weights_normed_gauss_blur_1_rd55
//	bright_weights_normed_gauss_blur_1_rd56
//	bright_weights_normed_gauss_blur_1_rd57
//	bright_weights_normed_gauss_blur_1_rd58
//	bright_weights_normed_gauss_blur_1_rd59
//	bright_weights_normed_gauss_blur_1_rd60
//	bright_weights_normed_gauss_blur_1_rd61
//	bright_weights_normed_gauss_blur_1_rd62
//	bright_weights_normed_gauss_blur_1_rd63
//	bright_weights_normed_gauss_blur_1_rd64
//	bright_weights_normed_gauss_blur_1_rd65
//	bright_weights_normed_gauss_blur_1_rd66
//	bright_weights_normed_gauss_blur_1_rd67
//	bright_weights_normed_gauss_blur_1_rd68
//	bright_weights_normed_gauss_blur_1_rd69
//	bright_weights_normed_gauss_blur_1_rd70
//	bright_weights_normed_gauss_blur_1_rd71
//	bright_weights_normed_gauss_blur_1_rd72
//	bright_weights_normed_gauss_blur_1_rd73
//	bright_weights_normed_gauss_blur_1_rd74
//	bright_weights_normed_gauss_blur_1_rd75
//	bright_weights_normed_gauss_blur_1_rd76
//	bright_weights_normed_gauss_blur_1_rd77
//	bright_weights_normed_gauss_blur_1_rd78
//	bright_weights_normed_gauss_blur_1_rd79
//	bright_weights_normed_gauss_blur_1_rd80
//	bright_weights_normed_gauss_blur_1_rd81
//	bright_weights_normed_gauss_blur_1_rd82
//	bright_weights_normed_gauss_blur_1_rd83
//	bright_weights_normed_gauss_blur_1_rd84
//	bright_weights_normed_gauss_blur_1_rd85
//	bright_weights_normed_gauss_blur_1_rd86
//	bright_weights_normed_gauss_blur_1_rd87
//	bright_weights_normed_gauss_blur_1_rd88
//	bright_weights_normed_gauss_blur_1_rd89
//	bright_weights_normed_gauss_blur_1_rd90
//	bright_weights_normed_gauss_blur_1_rd91
//	bright_weights_normed_gauss_blur_1_rd92
//	bright_weights_normed_gauss_blur_1_rd93
//	bright_weights_normed_gauss_blur_1_rd94
//	bright_weights_normed_gauss_blur_1_rd95
//	bright_weights_normed_gauss_blur_1_rd96
//	bright_weights_normed_gauss_blur_1_rd97
//	bright_weights_normed_gauss_blur_1_rd98
//	bright_weights_normed_gauss_blur_1_rd99
//	bright_weights_normed_gauss_blur_1_rd100
//	bright_weights_normed_gauss_blur_1_rd101
//	bright_weights_normed_gauss_blur_1_rd102
//	bright_weights_normed_gauss_blur_1_rd103
//	bright_weights_normed_gauss_blur_1_rd104
//	bright_weights_normed_gauss_blur_1_rd105
//	bright_weights_normed_gauss_blur_1_rd106
//	bright_weights_normed_gauss_blur_1_rd107
//	bright_weights_normed_gauss_blur_1_rd108
//	bright_weights_normed_gauss_blur_1_rd109
//	bright_weights_normed_gauss_blur_1_rd110
//	bright_weights_normed_gauss_blur_1_rd111
//	bright_weights_normed_gauss_blur_1_rd112
//	bright_weights_normed_gauss_blur_1_rd113
//	bright_weights_normed_gauss_blur_1_rd114
//	bright_weights_normed_gauss_blur_1_rd115
//	bright_weights_normed_gauss_blur_1_rd116
//	bright_weights_normed_gauss_blur_1_rd117
//	bright_weights_normed_gauss_blur_1_rd118
//	bright_weights_normed_gauss_blur_1_rd119
//	bright_weights_normed_gauss_blur_1_rd120
//	bright_weights_normed_gauss_blur_1_rd121
//	bright_weights_normed_gauss_blur_1_rd122
//	bright_weights_normed_gauss_blur_1_rd123
//	bright_weights_normed_gauss_blur_1_rd124
//	bright_weights_normed_gauss_blur_1_rd125
//	bright_weights_normed_gauss_blur_1_rd126
//	bright_weights_normed_gauss_blur_1_rd127
//	bright_weights_normed_gauss_blur_1_rd128
//	bright_weights_normed_gauss_blur_1_rd129
//	bright_weights_normed_gauss_blur_1_rd130
//	bright_weights_normed_gauss_blur_1_rd131
//	bright_weights_normed_gauss_blur_1_rd132
//	bright_weights_normed_gauss_blur_1_rd133
//	bright_weights_normed_gauss_blur_1_rd134
//	bright_weights_normed_gauss_blur_1_rd135
//	bright_weights_normed_gauss_blur_1_rd136
//	bright_weights_normed_gauss_blur_1_rd137
//	bright_weights_normed_gauss_blur_1_rd138
//	bright_weights_normed_gauss_blur_1_rd139
//	bright_weights_normed_gauss_blur_1_rd140
//	bright_weights_normed_gauss_blur_1_rd141
//	bright_weights_normed_gauss_blur_1_rd142
//	bright_weights_normed_gauss_blur_1_rd143
inline hw_uint<2304> bright_weights_normed_bright_weights_normed_gauss_blur_1_update_0_read_bundle_read(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 144
    // bright_weights_normed_gauss_blur_1_rd0
    // bright_weights_normed_gauss_blur_1_rd1
    // bright_weights_normed_gauss_blur_1_rd2
    // bright_weights_normed_gauss_blur_1_rd3
    // bright_weights_normed_gauss_blur_1_rd4
    // bright_weights_normed_gauss_blur_1_rd5
    // bright_weights_normed_gauss_blur_1_rd6
    // bright_weights_normed_gauss_blur_1_rd7
    // bright_weights_normed_gauss_blur_1_rd8
    // bright_weights_normed_gauss_blur_1_rd9
    // bright_weights_normed_gauss_blur_1_rd10
    // bright_weights_normed_gauss_blur_1_rd11
    // bright_weights_normed_gauss_blur_1_rd12
    // bright_weights_normed_gauss_blur_1_rd13
    // bright_weights_normed_gauss_blur_1_rd14
    // bright_weights_normed_gauss_blur_1_rd15
    // bright_weights_normed_gauss_blur_1_rd16
    // bright_weights_normed_gauss_blur_1_rd17
    // bright_weights_normed_gauss_blur_1_rd18
    // bright_weights_normed_gauss_blur_1_rd19
    // bright_weights_normed_gauss_blur_1_rd20
    // bright_weights_normed_gauss_blur_1_rd21
    // bright_weights_normed_gauss_blur_1_rd22
    // bright_weights_normed_gauss_blur_1_rd23
    // bright_weights_normed_gauss_blur_1_rd24
    // bright_weights_normed_gauss_blur_1_rd25
    // bright_weights_normed_gauss_blur_1_rd26
    // bright_weights_normed_gauss_blur_1_rd27
    // bright_weights_normed_gauss_blur_1_rd28
    // bright_weights_normed_gauss_blur_1_rd29
    // bright_weights_normed_gauss_blur_1_rd30
    // bright_weights_normed_gauss_blur_1_rd31
    // bright_weights_normed_gauss_blur_1_rd32
    // bright_weights_normed_gauss_blur_1_rd33
    // bright_weights_normed_gauss_blur_1_rd34
    // bright_weights_normed_gauss_blur_1_rd35
    // bright_weights_normed_gauss_blur_1_rd36
    // bright_weights_normed_gauss_blur_1_rd37
    // bright_weights_normed_gauss_blur_1_rd38
    // bright_weights_normed_gauss_blur_1_rd39
    // bright_weights_normed_gauss_blur_1_rd40
    // bright_weights_normed_gauss_blur_1_rd41
    // bright_weights_normed_gauss_blur_1_rd42
    // bright_weights_normed_gauss_blur_1_rd43
    // bright_weights_normed_gauss_blur_1_rd44
    // bright_weights_normed_gauss_blur_1_rd45
    // bright_weights_normed_gauss_blur_1_rd46
    // bright_weights_normed_gauss_blur_1_rd47
    // bright_weights_normed_gauss_blur_1_rd48
    // bright_weights_normed_gauss_blur_1_rd49
    // bright_weights_normed_gauss_blur_1_rd50
    // bright_weights_normed_gauss_blur_1_rd51
    // bright_weights_normed_gauss_blur_1_rd52
    // bright_weights_normed_gauss_blur_1_rd53
    // bright_weights_normed_gauss_blur_1_rd54
    // bright_weights_normed_gauss_blur_1_rd55
    // bright_weights_normed_gauss_blur_1_rd56
    // bright_weights_normed_gauss_blur_1_rd57
    // bright_weights_normed_gauss_blur_1_rd58
    // bright_weights_normed_gauss_blur_1_rd59
    // bright_weights_normed_gauss_blur_1_rd60
    // bright_weights_normed_gauss_blur_1_rd61
    // bright_weights_normed_gauss_blur_1_rd62
    // bright_weights_normed_gauss_blur_1_rd63
    // bright_weights_normed_gauss_blur_1_rd64
    // bright_weights_normed_gauss_blur_1_rd65
    // bright_weights_normed_gauss_blur_1_rd66
    // bright_weights_normed_gauss_blur_1_rd67
    // bright_weights_normed_gauss_blur_1_rd68
    // bright_weights_normed_gauss_blur_1_rd69
    // bright_weights_normed_gauss_blur_1_rd70
    // bright_weights_normed_gauss_blur_1_rd71
    // bright_weights_normed_gauss_blur_1_rd72
    // bright_weights_normed_gauss_blur_1_rd73
    // bright_weights_normed_gauss_blur_1_rd74
    // bright_weights_normed_gauss_blur_1_rd75
    // bright_weights_normed_gauss_blur_1_rd76
    // bright_weights_normed_gauss_blur_1_rd77
    // bright_weights_normed_gauss_blur_1_rd78
    // bright_weights_normed_gauss_blur_1_rd79
    // bright_weights_normed_gauss_blur_1_rd80
    // bright_weights_normed_gauss_blur_1_rd81
    // bright_weights_normed_gauss_blur_1_rd82
    // bright_weights_normed_gauss_blur_1_rd83
    // bright_weights_normed_gauss_blur_1_rd84
    // bright_weights_normed_gauss_blur_1_rd85
    // bright_weights_normed_gauss_blur_1_rd86
    // bright_weights_normed_gauss_blur_1_rd87
    // bright_weights_normed_gauss_blur_1_rd88
    // bright_weights_normed_gauss_blur_1_rd89
    // bright_weights_normed_gauss_blur_1_rd90
    // bright_weights_normed_gauss_blur_1_rd91
    // bright_weights_normed_gauss_blur_1_rd92
    // bright_weights_normed_gauss_blur_1_rd93
    // bright_weights_normed_gauss_blur_1_rd94
    // bright_weights_normed_gauss_blur_1_rd95
    // bright_weights_normed_gauss_blur_1_rd96
    // bright_weights_normed_gauss_blur_1_rd97
    // bright_weights_normed_gauss_blur_1_rd98
    // bright_weights_normed_gauss_blur_1_rd99
    // bright_weights_normed_gauss_blur_1_rd100
    // bright_weights_normed_gauss_blur_1_rd101
    // bright_weights_normed_gauss_blur_1_rd102
    // bright_weights_normed_gauss_blur_1_rd103
    // bright_weights_normed_gauss_blur_1_rd104
    // bright_weights_normed_gauss_blur_1_rd105
    // bright_weights_normed_gauss_blur_1_rd106
    // bright_weights_normed_gauss_blur_1_rd107
    // bright_weights_normed_gauss_blur_1_rd108
    // bright_weights_normed_gauss_blur_1_rd109
    // bright_weights_normed_gauss_blur_1_rd110
    // bright_weights_normed_gauss_blur_1_rd111
    // bright_weights_normed_gauss_blur_1_rd112
    // bright_weights_normed_gauss_blur_1_rd113
    // bright_weights_normed_gauss_blur_1_rd114
    // bright_weights_normed_gauss_blur_1_rd115
    // bright_weights_normed_gauss_blur_1_rd116
    // bright_weights_normed_gauss_blur_1_rd117
    // bright_weights_normed_gauss_blur_1_rd118
    // bright_weights_normed_gauss_blur_1_rd119
    // bright_weights_normed_gauss_blur_1_rd120
    // bright_weights_normed_gauss_blur_1_rd121
    // bright_weights_normed_gauss_blur_1_rd122
    // bright_weights_normed_gauss_blur_1_rd123
    // bright_weights_normed_gauss_blur_1_rd124
    // bright_weights_normed_gauss_blur_1_rd125
    // bright_weights_normed_gauss_blur_1_rd126
    // bright_weights_normed_gauss_blur_1_rd127
    // bright_weights_normed_gauss_blur_1_rd128
    // bright_weights_normed_gauss_blur_1_rd129
    // bright_weights_normed_gauss_blur_1_rd130
    // bright_weights_normed_gauss_blur_1_rd131
    // bright_weights_normed_gauss_blur_1_rd132
    // bright_weights_normed_gauss_blur_1_rd133
    // bright_weights_normed_gauss_blur_1_rd134
    // bright_weights_normed_gauss_blur_1_rd135
    // bright_weights_normed_gauss_blur_1_rd136
    // bright_weights_normed_gauss_blur_1_rd137
    // bright_weights_normed_gauss_blur_1_rd138
    // bright_weights_normed_gauss_blur_1_rd139
    // bright_weights_normed_gauss_blur_1_rd140
    // bright_weights_normed_gauss_blur_1_rd141
    // bright_weights_normed_gauss_blur_1_rd142
    // bright_weights_normed_gauss_blur_1_rd143

	hw_uint<2304> result;
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd0_res = bright_weights_normed_gauss_blur_1_rd0_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<0, 2304>(result, bright_weights_normed_gauss_blur_1_rd0_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd1_res = bright_weights_normed_gauss_blur_1_rd1_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<16, 2304>(result, bright_weights_normed_gauss_blur_1_rd1_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd2_res = bright_weights_normed_gauss_blur_1_rd2_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<32, 2304>(result, bright_weights_normed_gauss_blur_1_rd2_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd3_res = bright_weights_normed_gauss_blur_1_rd3_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<48, 2304>(result, bright_weights_normed_gauss_blur_1_rd3_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd4_res = bright_weights_normed_gauss_blur_1_rd4_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<64, 2304>(result, bright_weights_normed_gauss_blur_1_rd4_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd5_res = bright_weights_normed_gauss_blur_1_rd5_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<80, 2304>(result, bright_weights_normed_gauss_blur_1_rd5_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd6_res = bright_weights_normed_gauss_blur_1_rd6_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<96, 2304>(result, bright_weights_normed_gauss_blur_1_rd6_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd7_res = bright_weights_normed_gauss_blur_1_rd7_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<112, 2304>(result, bright_weights_normed_gauss_blur_1_rd7_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd8_res = bright_weights_normed_gauss_blur_1_rd8_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<128, 2304>(result, bright_weights_normed_gauss_blur_1_rd8_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd9_res = bright_weights_normed_gauss_blur_1_rd9_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<144, 2304>(result, bright_weights_normed_gauss_blur_1_rd9_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd10_res = bright_weights_normed_gauss_blur_1_rd10_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<160, 2304>(result, bright_weights_normed_gauss_blur_1_rd10_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd11_res = bright_weights_normed_gauss_blur_1_rd11_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<176, 2304>(result, bright_weights_normed_gauss_blur_1_rd11_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd12_res = bright_weights_normed_gauss_blur_1_rd12_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<192, 2304>(result, bright_weights_normed_gauss_blur_1_rd12_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd13_res = bright_weights_normed_gauss_blur_1_rd13_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<208, 2304>(result, bright_weights_normed_gauss_blur_1_rd13_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd14_res = bright_weights_normed_gauss_blur_1_rd14_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<224, 2304>(result, bright_weights_normed_gauss_blur_1_rd14_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd15_res = bright_weights_normed_gauss_blur_1_rd15_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<240, 2304>(result, bright_weights_normed_gauss_blur_1_rd15_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd16_res = bright_weights_normed_gauss_blur_1_rd16_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<256, 2304>(result, bright_weights_normed_gauss_blur_1_rd16_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd17_res = bright_weights_normed_gauss_blur_1_rd17_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<272, 2304>(result, bright_weights_normed_gauss_blur_1_rd17_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd18_res = bright_weights_normed_gauss_blur_1_rd18_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<288, 2304>(result, bright_weights_normed_gauss_blur_1_rd18_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd19_res = bright_weights_normed_gauss_blur_1_rd19_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<304, 2304>(result, bright_weights_normed_gauss_blur_1_rd19_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd20_res = bright_weights_normed_gauss_blur_1_rd20_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<320, 2304>(result, bright_weights_normed_gauss_blur_1_rd20_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd21_res = bright_weights_normed_gauss_blur_1_rd21_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<336, 2304>(result, bright_weights_normed_gauss_blur_1_rd21_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd22_res = bright_weights_normed_gauss_blur_1_rd22_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<352, 2304>(result, bright_weights_normed_gauss_blur_1_rd22_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd23_res = bright_weights_normed_gauss_blur_1_rd23_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<368, 2304>(result, bright_weights_normed_gauss_blur_1_rd23_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd24_res = bright_weights_normed_gauss_blur_1_rd24_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<384, 2304>(result, bright_weights_normed_gauss_blur_1_rd24_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd25_res = bright_weights_normed_gauss_blur_1_rd25_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<400, 2304>(result, bright_weights_normed_gauss_blur_1_rd25_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd26_res = bright_weights_normed_gauss_blur_1_rd26_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<416, 2304>(result, bright_weights_normed_gauss_blur_1_rd26_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd27_res = bright_weights_normed_gauss_blur_1_rd27_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<432, 2304>(result, bright_weights_normed_gauss_blur_1_rd27_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd28_res = bright_weights_normed_gauss_blur_1_rd28_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<448, 2304>(result, bright_weights_normed_gauss_blur_1_rd28_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd29_res = bright_weights_normed_gauss_blur_1_rd29_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<464, 2304>(result, bright_weights_normed_gauss_blur_1_rd29_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd30_res = bright_weights_normed_gauss_blur_1_rd30_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<480, 2304>(result, bright_weights_normed_gauss_blur_1_rd30_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd31_res = bright_weights_normed_gauss_blur_1_rd31_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<496, 2304>(result, bright_weights_normed_gauss_blur_1_rd31_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd32_res = bright_weights_normed_gauss_blur_1_rd32_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<512, 2304>(result, bright_weights_normed_gauss_blur_1_rd32_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd33_res = bright_weights_normed_gauss_blur_1_rd33_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<528, 2304>(result, bright_weights_normed_gauss_blur_1_rd33_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd34_res = bright_weights_normed_gauss_blur_1_rd34_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<544, 2304>(result, bright_weights_normed_gauss_blur_1_rd34_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd35_res = bright_weights_normed_gauss_blur_1_rd35_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<560, 2304>(result, bright_weights_normed_gauss_blur_1_rd35_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd36_res = bright_weights_normed_gauss_blur_1_rd36_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<576, 2304>(result, bright_weights_normed_gauss_blur_1_rd36_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd37_res = bright_weights_normed_gauss_blur_1_rd37_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<592, 2304>(result, bright_weights_normed_gauss_blur_1_rd37_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd38_res = bright_weights_normed_gauss_blur_1_rd38_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<608, 2304>(result, bright_weights_normed_gauss_blur_1_rd38_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd39_res = bright_weights_normed_gauss_blur_1_rd39_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<624, 2304>(result, bright_weights_normed_gauss_blur_1_rd39_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd40_res = bright_weights_normed_gauss_blur_1_rd40_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<640, 2304>(result, bright_weights_normed_gauss_blur_1_rd40_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd41_res = bright_weights_normed_gauss_blur_1_rd41_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<656, 2304>(result, bright_weights_normed_gauss_blur_1_rd41_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd42_res = bright_weights_normed_gauss_blur_1_rd42_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<672, 2304>(result, bright_weights_normed_gauss_blur_1_rd42_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd43_res = bright_weights_normed_gauss_blur_1_rd43_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<688, 2304>(result, bright_weights_normed_gauss_blur_1_rd43_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd44_res = bright_weights_normed_gauss_blur_1_rd44_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<704, 2304>(result, bright_weights_normed_gauss_blur_1_rd44_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd45_res = bright_weights_normed_gauss_blur_1_rd45_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<720, 2304>(result, bright_weights_normed_gauss_blur_1_rd45_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd46_res = bright_weights_normed_gauss_blur_1_rd46_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<736, 2304>(result, bright_weights_normed_gauss_blur_1_rd46_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd47_res = bright_weights_normed_gauss_blur_1_rd47_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<752, 2304>(result, bright_weights_normed_gauss_blur_1_rd47_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd48_res = bright_weights_normed_gauss_blur_1_rd48_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<768, 2304>(result, bright_weights_normed_gauss_blur_1_rd48_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd49_res = bright_weights_normed_gauss_blur_1_rd49_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<784, 2304>(result, bright_weights_normed_gauss_blur_1_rd49_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd50_res = bright_weights_normed_gauss_blur_1_rd50_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<800, 2304>(result, bright_weights_normed_gauss_blur_1_rd50_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd51_res = bright_weights_normed_gauss_blur_1_rd51_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<816, 2304>(result, bright_weights_normed_gauss_blur_1_rd51_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd52_res = bright_weights_normed_gauss_blur_1_rd52_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<832, 2304>(result, bright_weights_normed_gauss_blur_1_rd52_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd53_res = bright_weights_normed_gauss_blur_1_rd53_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<848, 2304>(result, bright_weights_normed_gauss_blur_1_rd53_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd54_res = bright_weights_normed_gauss_blur_1_rd54_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<864, 2304>(result, bright_weights_normed_gauss_blur_1_rd54_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd55_res = bright_weights_normed_gauss_blur_1_rd55_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<880, 2304>(result, bright_weights_normed_gauss_blur_1_rd55_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd56_res = bright_weights_normed_gauss_blur_1_rd56_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<896, 2304>(result, bright_weights_normed_gauss_blur_1_rd56_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd57_res = bright_weights_normed_gauss_blur_1_rd57_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<912, 2304>(result, bright_weights_normed_gauss_blur_1_rd57_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd58_res = bright_weights_normed_gauss_blur_1_rd58_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<928, 2304>(result, bright_weights_normed_gauss_blur_1_rd58_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd59_res = bright_weights_normed_gauss_blur_1_rd59_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<944, 2304>(result, bright_weights_normed_gauss_blur_1_rd59_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd60_res = bright_weights_normed_gauss_blur_1_rd60_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<960, 2304>(result, bright_weights_normed_gauss_blur_1_rd60_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd61_res = bright_weights_normed_gauss_blur_1_rd61_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<976, 2304>(result, bright_weights_normed_gauss_blur_1_rd61_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd62_res = bright_weights_normed_gauss_blur_1_rd62_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<992, 2304>(result, bright_weights_normed_gauss_blur_1_rd62_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd63_res = bright_weights_normed_gauss_blur_1_rd63_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1008, 2304>(result, bright_weights_normed_gauss_blur_1_rd63_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd64_res = bright_weights_normed_gauss_blur_1_rd64_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1024, 2304>(result, bright_weights_normed_gauss_blur_1_rd64_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd65_res = bright_weights_normed_gauss_blur_1_rd65_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1040, 2304>(result, bright_weights_normed_gauss_blur_1_rd65_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd66_res = bright_weights_normed_gauss_blur_1_rd66_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1056, 2304>(result, bright_weights_normed_gauss_blur_1_rd66_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd67_res = bright_weights_normed_gauss_blur_1_rd67_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1072, 2304>(result, bright_weights_normed_gauss_blur_1_rd67_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd68_res = bright_weights_normed_gauss_blur_1_rd68_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1088, 2304>(result, bright_weights_normed_gauss_blur_1_rd68_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd69_res = bright_weights_normed_gauss_blur_1_rd69_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1104, 2304>(result, bright_weights_normed_gauss_blur_1_rd69_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd70_res = bright_weights_normed_gauss_blur_1_rd70_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1120, 2304>(result, bright_weights_normed_gauss_blur_1_rd70_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd71_res = bright_weights_normed_gauss_blur_1_rd71_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1136, 2304>(result, bright_weights_normed_gauss_blur_1_rd71_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd72_res = bright_weights_normed_gauss_blur_1_rd72_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1152, 2304>(result, bright_weights_normed_gauss_blur_1_rd72_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd73_res = bright_weights_normed_gauss_blur_1_rd73_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1168, 2304>(result, bright_weights_normed_gauss_blur_1_rd73_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd74_res = bright_weights_normed_gauss_blur_1_rd74_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1184, 2304>(result, bright_weights_normed_gauss_blur_1_rd74_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd75_res = bright_weights_normed_gauss_blur_1_rd75_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1200, 2304>(result, bright_weights_normed_gauss_blur_1_rd75_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd76_res = bright_weights_normed_gauss_blur_1_rd76_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1216, 2304>(result, bright_weights_normed_gauss_blur_1_rd76_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd77_res = bright_weights_normed_gauss_blur_1_rd77_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1232, 2304>(result, bright_weights_normed_gauss_blur_1_rd77_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd78_res = bright_weights_normed_gauss_blur_1_rd78_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1248, 2304>(result, bright_weights_normed_gauss_blur_1_rd78_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd79_res = bright_weights_normed_gauss_blur_1_rd79_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1264, 2304>(result, bright_weights_normed_gauss_blur_1_rd79_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd80_res = bright_weights_normed_gauss_blur_1_rd80_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1280, 2304>(result, bright_weights_normed_gauss_blur_1_rd80_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd81_res = bright_weights_normed_gauss_blur_1_rd81_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1296, 2304>(result, bright_weights_normed_gauss_blur_1_rd81_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd82_res = bright_weights_normed_gauss_blur_1_rd82_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1312, 2304>(result, bright_weights_normed_gauss_blur_1_rd82_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd83_res = bright_weights_normed_gauss_blur_1_rd83_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1328, 2304>(result, bright_weights_normed_gauss_blur_1_rd83_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd84_res = bright_weights_normed_gauss_blur_1_rd84_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1344, 2304>(result, bright_weights_normed_gauss_blur_1_rd84_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd85_res = bright_weights_normed_gauss_blur_1_rd85_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1360, 2304>(result, bright_weights_normed_gauss_blur_1_rd85_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd86_res = bright_weights_normed_gauss_blur_1_rd86_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1376, 2304>(result, bright_weights_normed_gauss_blur_1_rd86_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd87_res = bright_weights_normed_gauss_blur_1_rd87_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1392, 2304>(result, bright_weights_normed_gauss_blur_1_rd87_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd88_res = bright_weights_normed_gauss_blur_1_rd88_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1408, 2304>(result, bright_weights_normed_gauss_blur_1_rd88_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd89_res = bright_weights_normed_gauss_blur_1_rd89_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1424, 2304>(result, bright_weights_normed_gauss_blur_1_rd89_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd90_res = bright_weights_normed_gauss_blur_1_rd90_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1440, 2304>(result, bright_weights_normed_gauss_blur_1_rd90_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd91_res = bright_weights_normed_gauss_blur_1_rd91_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1456, 2304>(result, bright_weights_normed_gauss_blur_1_rd91_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd92_res = bright_weights_normed_gauss_blur_1_rd92_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1472, 2304>(result, bright_weights_normed_gauss_blur_1_rd92_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd93_res = bright_weights_normed_gauss_blur_1_rd93_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1488, 2304>(result, bright_weights_normed_gauss_blur_1_rd93_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd94_res = bright_weights_normed_gauss_blur_1_rd94_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1504, 2304>(result, bright_weights_normed_gauss_blur_1_rd94_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd95_res = bright_weights_normed_gauss_blur_1_rd95_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1520, 2304>(result, bright_weights_normed_gauss_blur_1_rd95_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd96_res = bright_weights_normed_gauss_blur_1_rd96_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1536, 2304>(result, bright_weights_normed_gauss_blur_1_rd96_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd97_res = bright_weights_normed_gauss_blur_1_rd97_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1552, 2304>(result, bright_weights_normed_gauss_blur_1_rd97_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd98_res = bright_weights_normed_gauss_blur_1_rd98_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1568, 2304>(result, bright_weights_normed_gauss_blur_1_rd98_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd99_res = bright_weights_normed_gauss_blur_1_rd99_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1584, 2304>(result, bright_weights_normed_gauss_blur_1_rd99_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd100_res = bright_weights_normed_gauss_blur_1_rd100_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1600, 2304>(result, bright_weights_normed_gauss_blur_1_rd100_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd101_res = bright_weights_normed_gauss_blur_1_rd101_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1616, 2304>(result, bright_weights_normed_gauss_blur_1_rd101_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd102_res = bright_weights_normed_gauss_blur_1_rd102_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1632, 2304>(result, bright_weights_normed_gauss_blur_1_rd102_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd103_res = bright_weights_normed_gauss_blur_1_rd103_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1648, 2304>(result, bright_weights_normed_gauss_blur_1_rd103_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd104_res = bright_weights_normed_gauss_blur_1_rd104_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1664, 2304>(result, bright_weights_normed_gauss_blur_1_rd104_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd105_res = bright_weights_normed_gauss_blur_1_rd105_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1680, 2304>(result, bright_weights_normed_gauss_blur_1_rd105_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd106_res = bright_weights_normed_gauss_blur_1_rd106_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1696, 2304>(result, bright_weights_normed_gauss_blur_1_rd106_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd107_res = bright_weights_normed_gauss_blur_1_rd107_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1712, 2304>(result, bright_weights_normed_gauss_blur_1_rd107_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd108_res = bright_weights_normed_gauss_blur_1_rd108_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1728, 2304>(result, bright_weights_normed_gauss_blur_1_rd108_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd109_res = bright_weights_normed_gauss_blur_1_rd109_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1744, 2304>(result, bright_weights_normed_gauss_blur_1_rd109_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd110_res = bright_weights_normed_gauss_blur_1_rd110_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1760, 2304>(result, bright_weights_normed_gauss_blur_1_rd110_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd111_res = bright_weights_normed_gauss_blur_1_rd111_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1776, 2304>(result, bright_weights_normed_gauss_blur_1_rd111_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd112_res = bright_weights_normed_gauss_blur_1_rd112_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1792, 2304>(result, bright_weights_normed_gauss_blur_1_rd112_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd113_res = bright_weights_normed_gauss_blur_1_rd113_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1808, 2304>(result, bright_weights_normed_gauss_blur_1_rd113_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd114_res = bright_weights_normed_gauss_blur_1_rd114_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1824, 2304>(result, bright_weights_normed_gauss_blur_1_rd114_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd115_res = bright_weights_normed_gauss_blur_1_rd115_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1840, 2304>(result, bright_weights_normed_gauss_blur_1_rd115_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd116_res = bright_weights_normed_gauss_blur_1_rd116_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1856, 2304>(result, bright_weights_normed_gauss_blur_1_rd116_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd117_res = bright_weights_normed_gauss_blur_1_rd117_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1872, 2304>(result, bright_weights_normed_gauss_blur_1_rd117_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd118_res = bright_weights_normed_gauss_blur_1_rd118_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1888, 2304>(result, bright_weights_normed_gauss_blur_1_rd118_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd119_res = bright_weights_normed_gauss_blur_1_rd119_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1904, 2304>(result, bright_weights_normed_gauss_blur_1_rd119_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd120_res = bright_weights_normed_gauss_blur_1_rd120_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1920, 2304>(result, bright_weights_normed_gauss_blur_1_rd120_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd121_res = bright_weights_normed_gauss_blur_1_rd121_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1936, 2304>(result, bright_weights_normed_gauss_blur_1_rd121_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd122_res = bright_weights_normed_gauss_blur_1_rd122_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1952, 2304>(result, bright_weights_normed_gauss_blur_1_rd122_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd123_res = bright_weights_normed_gauss_blur_1_rd123_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1968, 2304>(result, bright_weights_normed_gauss_blur_1_rd123_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd124_res = bright_weights_normed_gauss_blur_1_rd124_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1984, 2304>(result, bright_weights_normed_gauss_blur_1_rd124_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd125_res = bright_weights_normed_gauss_blur_1_rd125_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2000, 2304>(result, bright_weights_normed_gauss_blur_1_rd125_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd126_res = bright_weights_normed_gauss_blur_1_rd126_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2016, 2304>(result, bright_weights_normed_gauss_blur_1_rd126_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd127_res = bright_weights_normed_gauss_blur_1_rd127_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2032, 2304>(result, bright_weights_normed_gauss_blur_1_rd127_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd128_res = bright_weights_normed_gauss_blur_1_rd128_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2048, 2304>(result, bright_weights_normed_gauss_blur_1_rd128_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd129_res = bright_weights_normed_gauss_blur_1_rd129_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2064, 2304>(result, bright_weights_normed_gauss_blur_1_rd129_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd130_res = bright_weights_normed_gauss_blur_1_rd130_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2080, 2304>(result, bright_weights_normed_gauss_blur_1_rd130_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd131_res = bright_weights_normed_gauss_blur_1_rd131_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2096, 2304>(result, bright_weights_normed_gauss_blur_1_rd131_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd132_res = bright_weights_normed_gauss_blur_1_rd132_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2112, 2304>(result, bright_weights_normed_gauss_blur_1_rd132_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd133_res = bright_weights_normed_gauss_blur_1_rd133_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2128, 2304>(result, bright_weights_normed_gauss_blur_1_rd133_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd134_res = bright_weights_normed_gauss_blur_1_rd134_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2144, 2304>(result, bright_weights_normed_gauss_blur_1_rd134_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd135_res = bright_weights_normed_gauss_blur_1_rd135_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2160, 2304>(result, bright_weights_normed_gauss_blur_1_rd135_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd136_res = bright_weights_normed_gauss_blur_1_rd136_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2176, 2304>(result, bright_weights_normed_gauss_blur_1_rd136_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd137_res = bright_weights_normed_gauss_blur_1_rd137_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2192, 2304>(result, bright_weights_normed_gauss_blur_1_rd137_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd138_res = bright_weights_normed_gauss_blur_1_rd138_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2208, 2304>(result, bright_weights_normed_gauss_blur_1_rd138_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd139_res = bright_weights_normed_gauss_blur_1_rd139_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2224, 2304>(result, bright_weights_normed_gauss_blur_1_rd139_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd140_res = bright_weights_normed_gauss_blur_1_rd140_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2240, 2304>(result, bright_weights_normed_gauss_blur_1_rd140_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd141_res = bright_weights_normed_gauss_blur_1_rd141_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2256, 2304>(result, bright_weights_normed_gauss_blur_1_rd141_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd142_res = bright_weights_normed_gauss_blur_1_rd142_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2272, 2304>(result, bright_weights_normed_gauss_blur_1_rd142_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd143_res = bright_weights_normed_gauss_blur_1_rd143_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<2288, 2304>(result, bright_weights_normed_gauss_blur_1_rd143_res);
	return result;
}

// bright_weights_normed_update_0_write
//	bright_weights_normed_bright_weights_normed_update_0_write0
//	bright_weights_normed_bright_weights_normed_update_0_write1
//	bright_weights_normed_bright_weights_normed_update_0_write2
//	bright_weights_normed_bright_weights_normed_update_0_write3
//	bright_weights_normed_bright_weights_normed_update_0_write4
//	bright_weights_normed_bright_weights_normed_update_0_write5
//	bright_weights_normed_bright_weights_normed_update_0_write6
//	bright_weights_normed_bright_weights_normed_update_0_write7
//	bright_weights_normed_bright_weights_normed_update_0_write8
//	bright_weights_normed_bright_weights_normed_update_0_write9
//	bright_weights_normed_bright_weights_normed_update_0_write10
//	bright_weights_normed_bright_weights_normed_update_0_write11
//	bright_weights_normed_bright_weights_normed_update_0_write12
//	bright_weights_normed_bright_weights_normed_update_0_write13
//	bright_weights_normed_bright_weights_normed_update_0_write14
//	bright_weights_normed_bright_weights_normed_update_0_write15
inline void bright_weights_normed_bright_weights_normed_update_0_write_bundle_write(hw_uint<256>& bright_weights_normed_update_0_write, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write0_res = bright_weights_normed_update_0_write.extract<0, 15>();
	bright_weights_normed_bright_weights_normed_update_0_write0_write(bright_weights_normed_bright_weights_normed_update_0_write0_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write1_res = bright_weights_normed_update_0_write.extract<16, 31>();
	bright_weights_normed_bright_weights_normed_update_0_write1_write(bright_weights_normed_bright_weights_normed_update_0_write1_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write2_res = bright_weights_normed_update_0_write.extract<32, 47>();
	bright_weights_normed_bright_weights_normed_update_0_write2_write(bright_weights_normed_bright_weights_normed_update_0_write2_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write3_res = bright_weights_normed_update_0_write.extract<48, 63>();
	bright_weights_normed_bright_weights_normed_update_0_write3_write(bright_weights_normed_bright_weights_normed_update_0_write3_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write4_res = bright_weights_normed_update_0_write.extract<64, 79>();
	bright_weights_normed_bright_weights_normed_update_0_write4_write(bright_weights_normed_bright_weights_normed_update_0_write4_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write5_res = bright_weights_normed_update_0_write.extract<80, 95>();
	bright_weights_normed_bright_weights_normed_update_0_write5_write(bright_weights_normed_bright_weights_normed_update_0_write5_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write6_res = bright_weights_normed_update_0_write.extract<96, 111>();
	bright_weights_normed_bright_weights_normed_update_0_write6_write(bright_weights_normed_bright_weights_normed_update_0_write6_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write7_res = bright_weights_normed_update_0_write.extract<112, 127>();
	bright_weights_normed_bright_weights_normed_update_0_write7_write(bright_weights_normed_bright_weights_normed_update_0_write7_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write8_res = bright_weights_normed_update_0_write.extract<128, 143>();
	bright_weights_normed_bright_weights_normed_update_0_write8_write(bright_weights_normed_bright_weights_normed_update_0_write8_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write9_res = bright_weights_normed_update_0_write.extract<144, 159>();
	bright_weights_normed_bright_weights_normed_update_0_write9_write(bright_weights_normed_bright_weights_normed_update_0_write9_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write10_res = bright_weights_normed_update_0_write.extract<160, 175>();
	bright_weights_normed_bright_weights_normed_update_0_write10_write(bright_weights_normed_bright_weights_normed_update_0_write10_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write11_res = bright_weights_normed_update_0_write.extract<176, 191>();
	bright_weights_normed_bright_weights_normed_update_0_write11_write(bright_weights_normed_bright_weights_normed_update_0_write11_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write12_res = bright_weights_normed_update_0_write.extract<192, 207>();
	bright_weights_normed_bright_weights_normed_update_0_write12_write(bright_weights_normed_bright_weights_normed_update_0_write12_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write13_res = bright_weights_normed_update_0_write.extract<208, 223>();
	bright_weights_normed_bright_weights_normed_update_0_write13_write(bright_weights_normed_bright_weights_normed_update_0_write13_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write14_res = bright_weights_normed_update_0_write.extract<224, 239>();
	bright_weights_normed_bright_weights_normed_update_0_write14_write(bright_weights_normed_bright_weights_normed_update_0_write14_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write15_res = bright_weights_normed_update_0_write.extract<240, 255>();
	bright_weights_normed_bright_weights_normed_update_0_write15_write(bright_weights_normed_bright_weights_normed_update_0_write15_res, bright_weights_normed, d0, d1, dynamic_address);
}

// fused_level_0_update_0_read
//	fused_level_0_rd0
//	fused_level_0_rd1
//	fused_level_0_rd2
//	fused_level_0_rd3
//	fused_level_0_rd4
//	fused_level_0_rd5
//	fused_level_0_rd6
//	fused_level_0_rd7
//	fused_level_0_rd8
//	fused_level_0_rd9
//	fused_level_0_rd10
//	fused_level_0_rd11
//	fused_level_0_rd12
//	fused_level_0_rd13
//	fused_level_0_rd14
//	fused_level_0_rd15
inline hw_uint<256> bright_weights_normed_fused_level_0_update_0_read_bundle_read(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // fused_level_0_rd0
    // fused_level_0_rd1
    // fused_level_0_rd2
    // fused_level_0_rd3
    // fused_level_0_rd4
    // fused_level_0_rd5
    // fused_level_0_rd6
    // fused_level_0_rd7
    // fused_level_0_rd8
    // fused_level_0_rd9
    // fused_level_0_rd10
    // fused_level_0_rd11
    // fused_level_0_rd12
    // fused_level_0_rd13
    // fused_level_0_rd14
    // fused_level_0_rd15

	hw_uint<256> result;
	hw_uint<16> fused_level_0_rd0_res = fused_level_0_rd0_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<0, 256>(result, fused_level_0_rd0_res);
	hw_uint<16> fused_level_0_rd1_res = fused_level_0_rd1_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<16, 256>(result, fused_level_0_rd1_res);
	hw_uint<16> fused_level_0_rd2_res = fused_level_0_rd2_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<32, 256>(result, fused_level_0_rd2_res);
	hw_uint<16> fused_level_0_rd3_res = fused_level_0_rd3_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<48, 256>(result, fused_level_0_rd3_res);
	hw_uint<16> fused_level_0_rd4_res = fused_level_0_rd4_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<64, 256>(result, fused_level_0_rd4_res);
	hw_uint<16> fused_level_0_rd5_res = fused_level_0_rd5_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<80, 256>(result, fused_level_0_rd5_res);
	hw_uint<16> fused_level_0_rd6_res = fused_level_0_rd6_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<96, 256>(result, fused_level_0_rd6_res);
	hw_uint<16> fused_level_0_rd7_res = fused_level_0_rd7_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<112, 256>(result, fused_level_0_rd7_res);
	hw_uint<16> fused_level_0_rd8_res = fused_level_0_rd8_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<128, 256>(result, fused_level_0_rd8_res);
	hw_uint<16> fused_level_0_rd9_res = fused_level_0_rd9_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<144, 256>(result, fused_level_0_rd9_res);
	hw_uint<16> fused_level_0_rd10_res = fused_level_0_rd10_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<160, 256>(result, fused_level_0_rd10_res);
	hw_uint<16> fused_level_0_rd11_res = fused_level_0_rd11_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<176, 256>(result, fused_level_0_rd11_res);
	hw_uint<16> fused_level_0_rd12_res = fused_level_0_rd12_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<192, 256>(result, fused_level_0_rd12_res);
	hw_uint<16> fused_level_0_rd13_res = fused_level_0_rd13_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<208, 256>(result, fused_level_0_rd13_res);
	hw_uint<16> fused_level_0_rd14_res = fused_level_0_rd14_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<224, 256>(result, fused_level_0_rd14_res);
	hw_uint<16> fused_level_0_rd15_res = fused_level_0_rd15_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<240, 256>(result, fused_level_0_rd15_res);
	return result;
}

#include "hw_classes.h"

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_to_bright_weights_normed_gauss_ds_1_rd0_cache {
	// RAM Box: {[0, 1936], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_to_bright_weights_normed_gauss_ds_1_rd1_cache {
	// RAM Box: {[2, 1938], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_to_bright_weights_normed_gauss_ds_1_rd2_cache {
	// RAM Box: {[4, 1940], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_to_bright_weights_normed_gauss_ds_1_rd3_cache {
	// RAM Box: {[6, 1942], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8_to_bright_weights_normed_gauss_ds_1_rd4_cache {
	// RAM Box: {[8, 1944], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10_to_bright_weights_normed_gauss_ds_1_rd5_cache {
	// RAM Box: {[10, 1946], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12_to_bright_weights_normed_gauss_ds_1_rd6_cache {
	// RAM Box: {[12, 1948], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14_to_bright_weights_normed_gauss_ds_1_rd7_cache {
	// RAM Box: {[14, 1950], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_cache {
  // # of banks: 8
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_to_bright_weights_normed_gauss_ds_1_rd0_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_to_bright_weights_normed_gauss_ds_1_rd0;
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_to_bright_weights_normed_gauss_ds_1_rd1_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_to_bright_weights_normed_gauss_ds_1_rd1;
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_to_bright_weights_normed_gauss_ds_1_rd2_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_to_bright_weights_normed_gauss_ds_1_rd2;
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_to_bright_weights_normed_gauss_ds_1_rd3_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_to_bright_weights_normed_gauss_ds_1_rd3;
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8_to_bright_weights_normed_gauss_ds_1_rd4_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8_to_bright_weights_normed_gauss_ds_1_rd4;
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10_to_bright_weights_normed_gauss_ds_1_rd5_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10_to_bright_weights_normed_gauss_ds_1_rd5;
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12_to_bright_weights_normed_gauss_ds_1_rd6_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12_to_bright_weights_normed_gauss_ds_1_rd6;
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14_to_bright_weights_normed_gauss_ds_1_rd7_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14_to_bright_weights_normed_gauss_ds_1_rd7;
};



inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_to_bright_weights_normed_gauss_ds_1_rd0.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10_to_bright_weights_normed_gauss_ds_1_rd5.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write11_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write11, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12_to_bright_weights_normed_gauss_ds_1_rd6.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write13_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write13, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14_to_bright_weights_normed_gauss_ds_1_rd7.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write15_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write15, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_to_bright_weights_normed_gauss_ds_1_rd1.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_to_bright_weights_normed_gauss_ds_1_rd2.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_to_bright_weights_normed_gauss_ds_1_rd3.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8_to_bright_weights_normed_gauss_ds_1_rd4.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write9_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write9, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd0_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd0 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_to_bright_weights_normed_gauss_ds_1_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd1_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd1 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[2 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_to_bright_weights_normed_gauss_ds_1_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd2_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd2 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[4 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_to_bright_weights_normed_gauss_ds_1_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd3_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd3 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[6 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_to_bright_weights_normed_gauss_ds_1_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd4_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd4 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[8 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8_to_bright_weights_normed_gauss_ds_1_rd4.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd5_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd5 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[10 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10_to_bright_weights_normed_gauss_ds_1_rd5.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd6_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd6 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[12 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12_to_bright_weights_normed_gauss_ds_1_rd6.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd7_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd7 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[14 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14_to_bright_weights_normed_gauss_ds_1_rd7.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_1_update_0_write
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write9
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write11
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write13
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write15
inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write_bundle_write(hw_uint<256>& bright_weights_normed_gauss_blur_1_update_0_write, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<16, 31>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<32, 47>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<48, 63>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<64, 79>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<80, 95>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<96, 111>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<112, 127>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<128, 143>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write8_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write9_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<144, 159>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write9_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write9_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<160, 175>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write10_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write11_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<176, 191>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write11_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write11_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<192, 207>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write12_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write13_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<208, 223>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write13_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write13_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<224, 239>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write14_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write15_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<240, 255>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write15_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write15_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
}

// bright_weights_normed_gauss_ds_1_update_0_read
//	bright_weights_normed_gauss_ds_1_rd0
//	bright_weights_normed_gauss_ds_1_rd1
//	bright_weights_normed_gauss_ds_1_rd2
//	bright_weights_normed_gauss_ds_1_rd3
//	bright_weights_normed_gauss_ds_1_rd4
//	bright_weights_normed_gauss_ds_1_rd5
//	bright_weights_normed_gauss_ds_1_rd6
//	bright_weights_normed_gauss_ds_1_rd7
inline hw_uint<128> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_ds_1_update_0_read_bundle_read(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // bright_weights_normed_gauss_ds_1_rd0
    // bright_weights_normed_gauss_ds_1_rd1
    // bright_weights_normed_gauss_ds_1_rd2
    // bright_weights_normed_gauss_ds_1_rd3
    // bright_weights_normed_gauss_ds_1_rd4
    // bright_weights_normed_gauss_ds_1_rd5
    // bright_weights_normed_gauss_ds_1_rd6
    // bright_weights_normed_gauss_ds_1_rd7

	hw_uint<128> result;
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd0_res = bright_weights_normed_gauss_ds_1_rd0_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, bright_weights_normed_gauss_ds_1_rd0_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd1_res = bright_weights_normed_gauss_ds_1_rd1_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, bright_weights_normed_gauss_ds_1_rd1_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd2_res = bright_weights_normed_gauss_ds_1_rd2_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, bright_weights_normed_gauss_ds_1_rd2_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd3_res = bright_weights_normed_gauss_ds_1_rd3_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, bright_weights_normed_gauss_ds_1_rd3_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd4_res = bright_weights_normed_gauss_ds_1_rd4_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, bright_weights_normed_gauss_ds_1_rd4_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd5_res = bright_weights_normed_gauss_ds_1_rd5_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, bright_weights_normed_gauss_ds_1_rd5_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd6_res = bright_weights_normed_gauss_ds_1_rd6_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, bright_weights_normed_gauss_ds_1_rd6_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd7_res = bright_weights_normed_gauss_ds_1_rd7_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, bright_weights_normed_gauss_ds_1_rd7_res);
	return result;
}

#include "hw_classes.h"

struct bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_to_bright_weights_normed_gauss_ds_2_rd0_cache {
	// RAM Box: {[0, 960], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_to_bright_weights_normed_gauss_ds_2_rd1_cache {
	// RAM Box: {[2, 962], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4_to_bright_weights_normed_gauss_ds_2_rd2_cache {
	// RAM Box: {[4, 964], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6_to_bright_weights_normed_gauss_ds_2_rd3_cache {
	// RAM Box: {[6, 966], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_2_cache {
  // # of banks: 4
  bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_to_bright_weights_normed_gauss_ds_2_rd0_cache bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_to_bright_weights_normed_gauss_ds_2_rd0;
  bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_to_bright_weights_normed_gauss_ds_2_rd1_cache bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_to_bright_weights_normed_gauss_ds_2_rd1;
  bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4_to_bright_weights_normed_gauss_ds_2_rd2_cache bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4_to_bright_weights_normed_gauss_ds_2_rd2;
  bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6_to_bright_weights_normed_gauss_ds_2_rd3_cache bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6_to_bright_weights_normed_gauss_ds_2_rd3;
};



inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_to_bright_weights_normed_gauss_ds_2_rd0.push(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0);
}

inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_to_bright_weights_normed_gauss_ds_2_rd1.push(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2);
}

inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4_to_bright_weights_normed_gauss_ds_2_rd2.push(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4);
}

inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write5_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write5, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6_to_bright_weights_normed_gauss_ds_2_rd3.push(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6);
}

inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write7_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write7, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_rd0_select(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_rd0 read pattern: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> bright_weights_normed_gauss_blur_2[8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0 = bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_to_bright_weights_normed_gauss_ds_2_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_rd1_select(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_rd1 read pattern: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> bright_weights_normed_gauss_blur_2[2 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2 = bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_to_bright_weights_normed_gauss_ds_2_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_rd2_select(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_rd2 read pattern: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> bright_weights_normed_gauss_blur_2[4 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4 = bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4_to_bright_weights_normed_gauss_ds_2_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_rd3_select(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_rd3 read pattern: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> bright_weights_normed_gauss_blur_2[6 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6 = bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6_to_bright_weights_normed_gauss_ds_2_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_2_update_0_write
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write5
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write7
inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write_bundle_write(hw_uint<128>& bright_weights_normed_gauss_blur_2_update_0_write, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<16, 31>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<32, 47>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<48, 63>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<64, 79>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write4_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write5_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<80, 95>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write5_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write5_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<96, 111>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write6_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write7_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<112, 127>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write7_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write7_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
}

// bright_weights_normed_gauss_ds_2_update_0_read
//	bright_weights_normed_gauss_ds_2_rd0
//	bright_weights_normed_gauss_ds_2_rd1
//	bright_weights_normed_gauss_ds_2_rd2
//	bright_weights_normed_gauss_ds_2_rd3
inline hw_uint<64> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_ds_2_update_0_read_bundle_read(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // bright_weights_normed_gauss_ds_2_rd0
    // bright_weights_normed_gauss_ds_2_rd1
    // bright_weights_normed_gauss_ds_2_rd2
    // bright_weights_normed_gauss_ds_2_rd3

	hw_uint<64> result;
	hw_uint<16> bright_weights_normed_gauss_ds_2_rd0_res = bright_weights_normed_gauss_ds_2_rd0_select(bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, bright_weights_normed_gauss_ds_2_rd0_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_rd1_res = bright_weights_normed_gauss_ds_2_rd1_select(bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, bright_weights_normed_gauss_ds_2_rd1_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_rd2_res = bright_weights_normed_gauss_ds_2_rd2_select(bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, bright_weights_normed_gauss_ds_2_rd2_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_rd3_res = bright_weights_normed_gauss_ds_2_rd3_select(bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, bright_weights_normed_gauss_ds_2_rd3_res);
	return result;
}

#include "hw_classes.h"

struct bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_to_bright_weights_normed_gauss_ds_3_rd0_cache {
	// RAM Box: {[0, 476], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2_to_bright_weights_normed_gauss_ds_3_rd1_cache {
	// RAM Box: {[2, 478], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_3_cache {
  // # of banks: 2
  bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_to_bright_weights_normed_gauss_ds_3_rd0_cache bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_to_bright_weights_normed_gauss_ds_3_rd0;
  bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2_to_bright_weights_normed_gauss_ds_3_rd1_cache bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2_to_bright_weights_normed_gauss_ds_3_rd1;
};



inline void bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_3.bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_to_bright_weights_normed_gauss_ds_3_rd0.push(bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0);
}

inline void bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1_write(hw_uint<16>& bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2_write(hw_uint<16>& bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_3.bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2_to_bright_weights_normed_gauss_ds_3_rd1.push(bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2);
}

inline void bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write3_write(hw_uint<16>& bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write3, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_weights_normed_gauss_ds_3_rd0_select(bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_3_rd0 read pattern: { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> bright_weights_normed_gauss_blur_3[4d0, 2d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 38] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  auto value_bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0 = bright_weights_normed_gauss_blur_3.bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_to_bright_weights_normed_gauss_ds_3_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_3_rd1_select(bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_3_rd1 read pattern: { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> bright_weights_normed_gauss_blur_3[2 + 4d0, 2d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 38] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  auto value_bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2 = bright_weights_normed_gauss_blur_3.bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2_to_bright_weights_normed_gauss_ds_3_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_3_update_0_write
//	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0
//	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1
//	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2
//	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write3
inline void bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write_bundle_write(hw_uint<64>& bright_weights_normed_gauss_blur_3_update_0_write, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_res = bright_weights_normed_gauss_blur_3_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_write(bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_res, bright_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1_res = bright_weights_normed_gauss_blur_3_update_0_write.extract<16, 31>();
	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1_write(bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1_res, bright_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2_res = bright_weights_normed_gauss_blur_3_update_0_write.extract<32, 47>();
	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2_write(bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write2_res, bright_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write3_res = bright_weights_normed_gauss_blur_3_update_0_write.extract<48, 63>();
	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write3_write(bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write3_res, bright_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
}

// bright_weights_normed_gauss_ds_3_update_0_read
//	bright_weights_normed_gauss_ds_3_rd0
//	bright_weights_normed_gauss_ds_3_rd1
inline hw_uint<32> bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_ds_3_update_0_read_bundle_read(bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // bright_weights_normed_gauss_ds_3_rd0
    // bright_weights_normed_gauss_ds_3_rd1

	hw_uint<32> result;
	hw_uint<16> bright_weights_normed_gauss_ds_3_rd0_res = bright_weights_normed_gauss_ds_3_rd0_select(bright_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	set_at<0, 32>(result, bright_weights_normed_gauss_ds_3_rd0_res);
	hw_uint<16> bright_weights_normed_gauss_ds_3_rd1_res = bright_weights_normed_gauss_ds_3_rd1_select(bright_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	set_at<16, 32>(result, bright_weights_normed_gauss_ds_3_rd1_res);
	return result;
}

#include "hw_classes.h"

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10_cache {
	// RAM Box: {[0, 968], [0, 542]}
	// Capacity: 246
	// # of read delays: 6
  // 0, 1, 122, 123, 244, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 120> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_123() {
		return f6;
	}

	inline hw_uint<16> peek_243() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_244() {
		return f8;
	}

	inline hw_uint<16> peek_245() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10_cache {
	// RAM Box: {[1, 969], [0, 542]}
	// Capacity: 246
	// # of read delays: 6
  // 0, 1, 122, 123, 244, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 120> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_123() {
		return f6;
	}

	inline hw_uint<16> peek_243() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_244() {
		return f8;
	}

	inline hw_uint<16> peek_245() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10_cache {
	// RAM Box: {[2, 970], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10_cache {
	// RAM Box: {[3, 971], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10_cache {
	// RAM Box: {[4, 972], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10_cache {
	// RAM Box: {[5, 973], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10_cache {
	// RAM Box: {[6, 974], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10_cache {
	// RAM Box: {[7, 975], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_cache {
  // # of banks: 8
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10;
};



inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0);
}

inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1);
}

inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2);
}

inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3);
}

inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4);
}

inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5);
}

inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6);
}

inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd0_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd0 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd1_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd1 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd10_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd10 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd11_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd11 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd12_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd12 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd13_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd13 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd14_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd14 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd15_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd15 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd16_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd16 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd17_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd17 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd18_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd18 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd19_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd19 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd2_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd2 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd20_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd20 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd21_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd21 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd22_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd22 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd23_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd23 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd24_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd24 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd25_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd25 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd26_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd26 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd27_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd27 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd28_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd28 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd29_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd29 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd3_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd3 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd30_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd30 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd31_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd31 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd32_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd32 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd33_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd33 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd34_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd34 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd35_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd35 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd36_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd36 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd37_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd37 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd38_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd38 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd39_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd39 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd4_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd4 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd40_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd40 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd41_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd41 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd42_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd42 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd43_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd43 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd44_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd44 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd45_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd45 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd46_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd46 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd47_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd47 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd48_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd48 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd49_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd49 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd5_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd5 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd50_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd50 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd51_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd51 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd52_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd52 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd53_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd53 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd54_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd54 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd55_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd55 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd56_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd56 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd57_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd57 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd58_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd58 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd59_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd59 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd6_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd6 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd60_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd60 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[8 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_244();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd61_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd61 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[8 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_122();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd62_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd62 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[8 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_0();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd63_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd63 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd64_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd64 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd65_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd65 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd66_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd66 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[8 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_244();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd67_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd67 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[8 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_122();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd68_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd68 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[8 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_0();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd69_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd69 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[9 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_244();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd7_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd7 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd70_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd70 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[9 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_122();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd71_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd71 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[9 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_0();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd8_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd8 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd9_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd9 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_1_rd0_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd0 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_1_rd1_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd1 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_1_rd2_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd2 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_1_rd3_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd3 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_1_rd4_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd4 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_1_rd5_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd5 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_1_rd6_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd6 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_1_rd7_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd7 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

// # of bundles = 3
// bright_weights_normed_gauss_blur_2_update_0_read
//	bright_weights_normed_gauss_blur_2_rd0
//	bright_weights_normed_gauss_blur_2_rd1
//	bright_weights_normed_gauss_blur_2_rd2
//	bright_weights_normed_gauss_blur_2_rd3
//	bright_weights_normed_gauss_blur_2_rd4
//	bright_weights_normed_gauss_blur_2_rd5
//	bright_weights_normed_gauss_blur_2_rd6
//	bright_weights_normed_gauss_blur_2_rd7
//	bright_weights_normed_gauss_blur_2_rd8
//	bright_weights_normed_gauss_blur_2_rd9
//	bright_weights_normed_gauss_blur_2_rd10
//	bright_weights_normed_gauss_blur_2_rd11
//	bright_weights_normed_gauss_blur_2_rd12
//	bright_weights_normed_gauss_blur_2_rd13
//	bright_weights_normed_gauss_blur_2_rd14
//	bright_weights_normed_gauss_blur_2_rd15
//	bright_weights_normed_gauss_blur_2_rd16
//	bright_weights_normed_gauss_blur_2_rd17
//	bright_weights_normed_gauss_blur_2_rd18
//	bright_weights_normed_gauss_blur_2_rd19
//	bright_weights_normed_gauss_blur_2_rd20
//	bright_weights_normed_gauss_blur_2_rd21
//	bright_weights_normed_gauss_blur_2_rd22
//	bright_weights_normed_gauss_blur_2_rd23
//	bright_weights_normed_gauss_blur_2_rd24
//	bright_weights_normed_gauss_blur_2_rd25
//	bright_weights_normed_gauss_blur_2_rd26
//	bright_weights_normed_gauss_blur_2_rd27
//	bright_weights_normed_gauss_blur_2_rd28
//	bright_weights_normed_gauss_blur_2_rd29
//	bright_weights_normed_gauss_blur_2_rd30
//	bright_weights_normed_gauss_blur_2_rd31
//	bright_weights_normed_gauss_blur_2_rd32
//	bright_weights_normed_gauss_blur_2_rd33
//	bright_weights_normed_gauss_blur_2_rd34
//	bright_weights_normed_gauss_blur_2_rd35
//	bright_weights_normed_gauss_blur_2_rd36
//	bright_weights_normed_gauss_blur_2_rd37
//	bright_weights_normed_gauss_blur_2_rd38
//	bright_weights_normed_gauss_blur_2_rd39
//	bright_weights_normed_gauss_blur_2_rd40
//	bright_weights_normed_gauss_blur_2_rd41
//	bright_weights_normed_gauss_blur_2_rd42
//	bright_weights_normed_gauss_blur_2_rd43
//	bright_weights_normed_gauss_blur_2_rd44
//	bright_weights_normed_gauss_blur_2_rd45
//	bright_weights_normed_gauss_blur_2_rd46
//	bright_weights_normed_gauss_blur_2_rd47
//	bright_weights_normed_gauss_blur_2_rd48
//	bright_weights_normed_gauss_blur_2_rd49
//	bright_weights_normed_gauss_blur_2_rd50
//	bright_weights_normed_gauss_blur_2_rd51
//	bright_weights_normed_gauss_blur_2_rd52
//	bright_weights_normed_gauss_blur_2_rd53
//	bright_weights_normed_gauss_blur_2_rd54
//	bright_weights_normed_gauss_blur_2_rd55
//	bright_weights_normed_gauss_blur_2_rd56
//	bright_weights_normed_gauss_blur_2_rd57
//	bright_weights_normed_gauss_blur_2_rd58
//	bright_weights_normed_gauss_blur_2_rd59
//	bright_weights_normed_gauss_blur_2_rd60
//	bright_weights_normed_gauss_blur_2_rd61
//	bright_weights_normed_gauss_blur_2_rd62
//	bright_weights_normed_gauss_blur_2_rd63
//	bright_weights_normed_gauss_blur_2_rd64
//	bright_weights_normed_gauss_blur_2_rd65
//	bright_weights_normed_gauss_blur_2_rd66
//	bright_weights_normed_gauss_blur_2_rd67
//	bright_weights_normed_gauss_blur_2_rd68
//	bright_weights_normed_gauss_blur_2_rd69
//	bright_weights_normed_gauss_blur_2_rd70
//	bright_weights_normed_gauss_blur_2_rd71
inline hw_uint<1152> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_blur_2_update_0_read_bundle_read(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 72
    // bright_weights_normed_gauss_blur_2_rd0
    // bright_weights_normed_gauss_blur_2_rd1
    // bright_weights_normed_gauss_blur_2_rd2
    // bright_weights_normed_gauss_blur_2_rd3
    // bright_weights_normed_gauss_blur_2_rd4
    // bright_weights_normed_gauss_blur_2_rd5
    // bright_weights_normed_gauss_blur_2_rd6
    // bright_weights_normed_gauss_blur_2_rd7
    // bright_weights_normed_gauss_blur_2_rd8
    // bright_weights_normed_gauss_blur_2_rd9
    // bright_weights_normed_gauss_blur_2_rd10
    // bright_weights_normed_gauss_blur_2_rd11
    // bright_weights_normed_gauss_blur_2_rd12
    // bright_weights_normed_gauss_blur_2_rd13
    // bright_weights_normed_gauss_blur_2_rd14
    // bright_weights_normed_gauss_blur_2_rd15
    // bright_weights_normed_gauss_blur_2_rd16
    // bright_weights_normed_gauss_blur_2_rd17
    // bright_weights_normed_gauss_blur_2_rd18
    // bright_weights_normed_gauss_blur_2_rd19
    // bright_weights_normed_gauss_blur_2_rd20
    // bright_weights_normed_gauss_blur_2_rd21
    // bright_weights_normed_gauss_blur_2_rd22
    // bright_weights_normed_gauss_blur_2_rd23
    // bright_weights_normed_gauss_blur_2_rd24
    // bright_weights_normed_gauss_blur_2_rd25
    // bright_weights_normed_gauss_blur_2_rd26
    // bright_weights_normed_gauss_blur_2_rd27
    // bright_weights_normed_gauss_blur_2_rd28
    // bright_weights_normed_gauss_blur_2_rd29
    // bright_weights_normed_gauss_blur_2_rd30
    // bright_weights_normed_gauss_blur_2_rd31
    // bright_weights_normed_gauss_blur_2_rd32
    // bright_weights_normed_gauss_blur_2_rd33
    // bright_weights_normed_gauss_blur_2_rd34
    // bright_weights_normed_gauss_blur_2_rd35
    // bright_weights_normed_gauss_blur_2_rd36
    // bright_weights_normed_gauss_blur_2_rd37
    // bright_weights_normed_gauss_blur_2_rd38
    // bright_weights_normed_gauss_blur_2_rd39
    // bright_weights_normed_gauss_blur_2_rd40
    // bright_weights_normed_gauss_blur_2_rd41
    // bright_weights_normed_gauss_blur_2_rd42
    // bright_weights_normed_gauss_blur_2_rd43
    // bright_weights_normed_gauss_blur_2_rd44
    // bright_weights_normed_gauss_blur_2_rd45
    // bright_weights_normed_gauss_blur_2_rd46
    // bright_weights_normed_gauss_blur_2_rd47
    // bright_weights_normed_gauss_blur_2_rd48
    // bright_weights_normed_gauss_blur_2_rd49
    // bright_weights_normed_gauss_blur_2_rd50
    // bright_weights_normed_gauss_blur_2_rd51
    // bright_weights_normed_gauss_blur_2_rd52
    // bright_weights_normed_gauss_blur_2_rd53
    // bright_weights_normed_gauss_blur_2_rd54
    // bright_weights_normed_gauss_blur_2_rd55
    // bright_weights_normed_gauss_blur_2_rd56
    // bright_weights_normed_gauss_blur_2_rd57
    // bright_weights_normed_gauss_blur_2_rd58
    // bright_weights_normed_gauss_blur_2_rd59
    // bright_weights_normed_gauss_blur_2_rd60
    // bright_weights_normed_gauss_blur_2_rd61
    // bright_weights_normed_gauss_blur_2_rd62
    // bright_weights_normed_gauss_blur_2_rd63
    // bright_weights_normed_gauss_blur_2_rd64
    // bright_weights_normed_gauss_blur_2_rd65
    // bright_weights_normed_gauss_blur_2_rd66
    // bright_weights_normed_gauss_blur_2_rd67
    // bright_weights_normed_gauss_blur_2_rd68
    // bright_weights_normed_gauss_blur_2_rd69
    // bright_weights_normed_gauss_blur_2_rd70
    // bright_weights_normed_gauss_blur_2_rd71

	hw_uint<1152> result;
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd0_res = bright_weights_normed_gauss_blur_2_rd0_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 1152>(result, bright_weights_normed_gauss_blur_2_rd0_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd1_res = bright_weights_normed_gauss_blur_2_rd1_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 1152>(result, bright_weights_normed_gauss_blur_2_rd1_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd2_res = bright_weights_normed_gauss_blur_2_rd2_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 1152>(result, bright_weights_normed_gauss_blur_2_rd2_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd3_res = bright_weights_normed_gauss_blur_2_rd3_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 1152>(result, bright_weights_normed_gauss_blur_2_rd3_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd4_res = bright_weights_normed_gauss_blur_2_rd4_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 1152>(result, bright_weights_normed_gauss_blur_2_rd4_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd5_res = bright_weights_normed_gauss_blur_2_rd5_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 1152>(result, bright_weights_normed_gauss_blur_2_rd5_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd6_res = bright_weights_normed_gauss_blur_2_rd6_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 1152>(result, bright_weights_normed_gauss_blur_2_rd6_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd7_res = bright_weights_normed_gauss_blur_2_rd7_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 1152>(result, bright_weights_normed_gauss_blur_2_rd7_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd8_res = bright_weights_normed_gauss_blur_2_rd8_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<128, 1152>(result, bright_weights_normed_gauss_blur_2_rd8_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd9_res = bright_weights_normed_gauss_blur_2_rd9_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<144, 1152>(result, bright_weights_normed_gauss_blur_2_rd9_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd10_res = bright_weights_normed_gauss_blur_2_rd10_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<160, 1152>(result, bright_weights_normed_gauss_blur_2_rd10_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd11_res = bright_weights_normed_gauss_blur_2_rd11_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<176, 1152>(result, bright_weights_normed_gauss_blur_2_rd11_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd12_res = bright_weights_normed_gauss_blur_2_rd12_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<192, 1152>(result, bright_weights_normed_gauss_blur_2_rd12_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd13_res = bright_weights_normed_gauss_blur_2_rd13_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<208, 1152>(result, bright_weights_normed_gauss_blur_2_rd13_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd14_res = bright_weights_normed_gauss_blur_2_rd14_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<224, 1152>(result, bright_weights_normed_gauss_blur_2_rd14_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd15_res = bright_weights_normed_gauss_blur_2_rd15_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<240, 1152>(result, bright_weights_normed_gauss_blur_2_rd15_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd16_res = bright_weights_normed_gauss_blur_2_rd16_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<256, 1152>(result, bright_weights_normed_gauss_blur_2_rd16_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd17_res = bright_weights_normed_gauss_blur_2_rd17_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<272, 1152>(result, bright_weights_normed_gauss_blur_2_rd17_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd18_res = bright_weights_normed_gauss_blur_2_rd18_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<288, 1152>(result, bright_weights_normed_gauss_blur_2_rd18_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd19_res = bright_weights_normed_gauss_blur_2_rd19_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<304, 1152>(result, bright_weights_normed_gauss_blur_2_rd19_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd20_res = bright_weights_normed_gauss_blur_2_rd20_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<320, 1152>(result, bright_weights_normed_gauss_blur_2_rd20_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd21_res = bright_weights_normed_gauss_blur_2_rd21_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<336, 1152>(result, bright_weights_normed_gauss_blur_2_rd21_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd22_res = bright_weights_normed_gauss_blur_2_rd22_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<352, 1152>(result, bright_weights_normed_gauss_blur_2_rd22_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd23_res = bright_weights_normed_gauss_blur_2_rd23_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<368, 1152>(result, bright_weights_normed_gauss_blur_2_rd23_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd24_res = bright_weights_normed_gauss_blur_2_rd24_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<384, 1152>(result, bright_weights_normed_gauss_blur_2_rd24_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd25_res = bright_weights_normed_gauss_blur_2_rd25_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<400, 1152>(result, bright_weights_normed_gauss_blur_2_rd25_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd26_res = bright_weights_normed_gauss_blur_2_rd26_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<416, 1152>(result, bright_weights_normed_gauss_blur_2_rd26_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd27_res = bright_weights_normed_gauss_blur_2_rd27_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<432, 1152>(result, bright_weights_normed_gauss_blur_2_rd27_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd28_res = bright_weights_normed_gauss_blur_2_rd28_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<448, 1152>(result, bright_weights_normed_gauss_blur_2_rd28_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd29_res = bright_weights_normed_gauss_blur_2_rd29_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<464, 1152>(result, bright_weights_normed_gauss_blur_2_rd29_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd30_res = bright_weights_normed_gauss_blur_2_rd30_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<480, 1152>(result, bright_weights_normed_gauss_blur_2_rd30_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd31_res = bright_weights_normed_gauss_blur_2_rd31_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<496, 1152>(result, bright_weights_normed_gauss_blur_2_rd31_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd32_res = bright_weights_normed_gauss_blur_2_rd32_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<512, 1152>(result, bright_weights_normed_gauss_blur_2_rd32_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd33_res = bright_weights_normed_gauss_blur_2_rd33_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<528, 1152>(result, bright_weights_normed_gauss_blur_2_rd33_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd34_res = bright_weights_normed_gauss_blur_2_rd34_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<544, 1152>(result, bright_weights_normed_gauss_blur_2_rd34_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd35_res = bright_weights_normed_gauss_blur_2_rd35_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<560, 1152>(result, bright_weights_normed_gauss_blur_2_rd35_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd36_res = bright_weights_normed_gauss_blur_2_rd36_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<576, 1152>(result, bright_weights_normed_gauss_blur_2_rd36_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd37_res = bright_weights_normed_gauss_blur_2_rd37_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<592, 1152>(result, bright_weights_normed_gauss_blur_2_rd37_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd38_res = bright_weights_normed_gauss_blur_2_rd38_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<608, 1152>(result, bright_weights_normed_gauss_blur_2_rd38_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd39_res = bright_weights_normed_gauss_blur_2_rd39_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<624, 1152>(result, bright_weights_normed_gauss_blur_2_rd39_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd40_res = bright_weights_normed_gauss_blur_2_rd40_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<640, 1152>(result, bright_weights_normed_gauss_blur_2_rd40_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd41_res = bright_weights_normed_gauss_blur_2_rd41_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<656, 1152>(result, bright_weights_normed_gauss_blur_2_rd41_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd42_res = bright_weights_normed_gauss_blur_2_rd42_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<672, 1152>(result, bright_weights_normed_gauss_blur_2_rd42_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd43_res = bright_weights_normed_gauss_blur_2_rd43_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<688, 1152>(result, bright_weights_normed_gauss_blur_2_rd43_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd44_res = bright_weights_normed_gauss_blur_2_rd44_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<704, 1152>(result, bright_weights_normed_gauss_blur_2_rd44_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd45_res = bright_weights_normed_gauss_blur_2_rd45_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<720, 1152>(result, bright_weights_normed_gauss_blur_2_rd45_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd46_res = bright_weights_normed_gauss_blur_2_rd46_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<736, 1152>(result, bright_weights_normed_gauss_blur_2_rd46_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd47_res = bright_weights_normed_gauss_blur_2_rd47_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<752, 1152>(result, bright_weights_normed_gauss_blur_2_rd47_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd48_res = bright_weights_normed_gauss_blur_2_rd48_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<768, 1152>(result, bright_weights_normed_gauss_blur_2_rd48_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd49_res = bright_weights_normed_gauss_blur_2_rd49_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<784, 1152>(result, bright_weights_normed_gauss_blur_2_rd49_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd50_res = bright_weights_normed_gauss_blur_2_rd50_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<800, 1152>(result, bright_weights_normed_gauss_blur_2_rd50_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd51_res = bright_weights_normed_gauss_blur_2_rd51_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<816, 1152>(result, bright_weights_normed_gauss_blur_2_rd51_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd52_res = bright_weights_normed_gauss_blur_2_rd52_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<832, 1152>(result, bright_weights_normed_gauss_blur_2_rd52_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd53_res = bright_weights_normed_gauss_blur_2_rd53_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<848, 1152>(result, bright_weights_normed_gauss_blur_2_rd53_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd54_res = bright_weights_normed_gauss_blur_2_rd54_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<864, 1152>(result, bright_weights_normed_gauss_blur_2_rd54_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd55_res = bright_weights_normed_gauss_blur_2_rd55_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<880, 1152>(result, bright_weights_normed_gauss_blur_2_rd55_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd56_res = bright_weights_normed_gauss_blur_2_rd56_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<896, 1152>(result, bright_weights_normed_gauss_blur_2_rd56_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd57_res = bright_weights_normed_gauss_blur_2_rd57_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<912, 1152>(result, bright_weights_normed_gauss_blur_2_rd57_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd58_res = bright_weights_normed_gauss_blur_2_rd58_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<928, 1152>(result, bright_weights_normed_gauss_blur_2_rd58_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd59_res = bright_weights_normed_gauss_blur_2_rd59_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<944, 1152>(result, bright_weights_normed_gauss_blur_2_rd59_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd60_res = bright_weights_normed_gauss_blur_2_rd60_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<960, 1152>(result, bright_weights_normed_gauss_blur_2_rd60_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd61_res = bright_weights_normed_gauss_blur_2_rd61_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<976, 1152>(result, bright_weights_normed_gauss_blur_2_rd61_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd62_res = bright_weights_normed_gauss_blur_2_rd62_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<992, 1152>(result, bright_weights_normed_gauss_blur_2_rd62_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd63_res = bright_weights_normed_gauss_blur_2_rd63_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1008, 1152>(result, bright_weights_normed_gauss_blur_2_rd63_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd64_res = bright_weights_normed_gauss_blur_2_rd64_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1024, 1152>(result, bright_weights_normed_gauss_blur_2_rd64_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd65_res = bright_weights_normed_gauss_blur_2_rd65_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1040, 1152>(result, bright_weights_normed_gauss_blur_2_rd65_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd66_res = bright_weights_normed_gauss_blur_2_rd66_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1056, 1152>(result, bright_weights_normed_gauss_blur_2_rd66_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd67_res = bright_weights_normed_gauss_blur_2_rd67_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1072, 1152>(result, bright_weights_normed_gauss_blur_2_rd67_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd68_res = bright_weights_normed_gauss_blur_2_rd68_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1088, 1152>(result, bright_weights_normed_gauss_blur_2_rd68_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd69_res = bright_weights_normed_gauss_blur_2_rd69_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1104, 1152>(result, bright_weights_normed_gauss_blur_2_rd69_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd70_res = bright_weights_normed_gauss_blur_2_rd70_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1120, 1152>(result, bright_weights_normed_gauss_blur_2_rd70_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd71_res = bright_weights_normed_gauss_blur_2_rd71_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1136, 1152>(result, bright_weights_normed_gauss_blur_2_rd71_res);
	return result;
}

// bright_weights_normed_gauss_ds_1_update_0_write
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7
inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write_bundle_write(hw_uint<128>& bright_weights_normed_gauss_ds_1_update_0_write, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<16, 31>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<32, 47>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<48, 63>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<64, 79>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write4_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<80, 95>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write5_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<96, 111>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write6_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<112, 127>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write7_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
}

// fused_level_1_update_0_read
//	fused_level_1_rd0
//	fused_level_1_rd1
//	fused_level_1_rd2
//	fused_level_1_rd3
//	fused_level_1_rd4
//	fused_level_1_rd5
//	fused_level_1_rd6
//	fused_level_1_rd7
inline hw_uint<128> bright_weights_normed_gauss_ds_1_fused_level_1_update_0_read_bundle_read(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // fused_level_1_rd0
    // fused_level_1_rd1
    // fused_level_1_rd2
    // fused_level_1_rd3
    // fused_level_1_rd4
    // fused_level_1_rd5
    // fused_level_1_rd6
    // fused_level_1_rd7

	hw_uint<128> result;
	hw_uint<16> fused_level_1_rd0_res = fused_level_1_rd0_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, fused_level_1_rd0_res);
	hw_uint<16> fused_level_1_rd1_res = fused_level_1_rd1_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, fused_level_1_rd1_res);
	hw_uint<16> fused_level_1_rd2_res = fused_level_1_rd2_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, fused_level_1_rd2_res);
	hw_uint<16> fused_level_1_rd3_res = fused_level_1_rd3_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, fused_level_1_rd3_res);
	hw_uint<16> fused_level_1_rd4_res = fused_level_1_rd4_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, fused_level_1_rd4_res);
	hw_uint<16> fused_level_1_rd5_res = fused_level_1_rd5_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, fused_level_1_rd5_res);
	hw_uint<16> fused_level_1_rd6_res = fused_level_1_rd6_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, fused_level_1_rd6_res);
	hw_uint<16> fused_level_1_rd7_res = fused_level_1_rd7_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, fused_level_1_rd7_res);
	return result;
}

#include "hw_classes.h"

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_to_fused_level_2_rd2_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_to_fused_level_2_rd3_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 244
	// # of read delays: 6
  // 0, 1, 121, 122, 242, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 119> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 119> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_120() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_121() {
		return f4;
	}

	inline hw_uint<16> peek_122() {
		return f6;
	}

	inline hw_uint<16> peek_241() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_242() {
		return f8;
	}

	inline hw_uint<16> peek_243() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 244
	// # of read delays: 6
  // 0, 1, 121, 122, 242, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 119> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 119> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_120() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_121() {
		return f4;
	}

	inline hw_uint<16> peek_122() {
		return f6;
	}

	inline hw_uint<16> peek_241() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_242() {
		return f8;
	}

	inline hw_uint<16> peek_243() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 244
	// # of read delays: 4
  // 0, 1, 122, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 120> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_242() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_243() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 244
	// # of read delays: 4
  // 0, 1, 122, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 120> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_242() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_243() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_2_cache {
  // # of banks: 8
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0;
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1;
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_to_fused_level_2_rd2_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_to_fused_level_2_rd2;
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_to_fused_level_2_rd3_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_to_fused_level_2_rd3;
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9;
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9;
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9;
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9;
};



inline void bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0);
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0);
}

inline void bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_write(hw_uint<16>& bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1);
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1);
}

inline void bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_write(hw_uint<16>& bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_to_fused_level_2_rd2.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2);
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2);
}

inline void bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_write(hw_uint<16>& bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_to_fused_level_2_rd3.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3);
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd0_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd0 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_243();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd1_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd1 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_122();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd10_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd10 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_122();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd11_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd11 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd12_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd12 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd13_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd13 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd14_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd14 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd15_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd15 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd16_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd16 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd17_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd17 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd18_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd18 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd19_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd19 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd2_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd2 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd20_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd20 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd21_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd21 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd22_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd22 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd23_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd23 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd24_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd24 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[4 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_242();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd25_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd25 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[4 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_121();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd26_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd26 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[4 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd27_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd27 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd28_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd28 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd29_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd29 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd3_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd3 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_243();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd30_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd30 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[4 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_242();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd31_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd31 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[4 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_121();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd32_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd32 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[4 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd33_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd33 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[5 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_242();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd34_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd34 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[5 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_121();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd35_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd35 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[5 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_0();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd4_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd4 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_122();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd5_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd5 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd6_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd6 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd7_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd7 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd8_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd8 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd9_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd9 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_243();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_2_rd0_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd0 read pattern: { fused_level_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_2_rd1_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd1 read pattern: { fused_level_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_2_rd2_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd2 read pattern: { fused_level_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_to_fused_level_2_rd2.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_2_rd3_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd3 read pattern: { fused_level_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_to_fused_level_2_rd3.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

// # of bundles = 3
// bright_weights_normed_gauss_blur_3_update_0_read
//	bright_weights_normed_gauss_blur_3_rd0
//	bright_weights_normed_gauss_blur_3_rd1
//	bright_weights_normed_gauss_blur_3_rd2
//	bright_weights_normed_gauss_blur_3_rd3
//	bright_weights_normed_gauss_blur_3_rd4
//	bright_weights_normed_gauss_blur_3_rd5
//	bright_weights_normed_gauss_blur_3_rd6
//	bright_weights_normed_gauss_blur_3_rd7
//	bright_weights_normed_gauss_blur_3_rd8
//	bright_weights_normed_gauss_blur_3_rd9
//	bright_weights_normed_gauss_blur_3_rd10
//	bright_weights_normed_gauss_blur_3_rd11
//	bright_weights_normed_gauss_blur_3_rd12
//	bright_weights_normed_gauss_blur_3_rd13
//	bright_weights_normed_gauss_blur_3_rd14
//	bright_weights_normed_gauss_blur_3_rd15
//	bright_weights_normed_gauss_blur_3_rd16
//	bright_weights_normed_gauss_blur_3_rd17
//	bright_weights_normed_gauss_blur_3_rd18
//	bright_weights_normed_gauss_blur_3_rd19
//	bright_weights_normed_gauss_blur_3_rd20
//	bright_weights_normed_gauss_blur_3_rd21
//	bright_weights_normed_gauss_blur_3_rd22
//	bright_weights_normed_gauss_blur_3_rd23
//	bright_weights_normed_gauss_blur_3_rd24
//	bright_weights_normed_gauss_blur_3_rd25
//	bright_weights_normed_gauss_blur_3_rd26
//	bright_weights_normed_gauss_blur_3_rd27
//	bright_weights_normed_gauss_blur_3_rd28
//	bright_weights_normed_gauss_blur_3_rd29
//	bright_weights_normed_gauss_blur_3_rd30
//	bright_weights_normed_gauss_blur_3_rd31
//	bright_weights_normed_gauss_blur_3_rd32
//	bright_weights_normed_gauss_blur_3_rd33
//	bright_weights_normed_gauss_blur_3_rd34
//	bright_weights_normed_gauss_blur_3_rd35
inline hw_uint<576> bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_blur_3_update_0_read_bundle_read(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 36
    // bright_weights_normed_gauss_blur_3_rd0
    // bright_weights_normed_gauss_blur_3_rd1
    // bright_weights_normed_gauss_blur_3_rd2
    // bright_weights_normed_gauss_blur_3_rd3
    // bright_weights_normed_gauss_blur_3_rd4
    // bright_weights_normed_gauss_blur_3_rd5
    // bright_weights_normed_gauss_blur_3_rd6
    // bright_weights_normed_gauss_blur_3_rd7
    // bright_weights_normed_gauss_blur_3_rd8
    // bright_weights_normed_gauss_blur_3_rd9
    // bright_weights_normed_gauss_blur_3_rd10
    // bright_weights_normed_gauss_blur_3_rd11
    // bright_weights_normed_gauss_blur_3_rd12
    // bright_weights_normed_gauss_blur_3_rd13
    // bright_weights_normed_gauss_blur_3_rd14
    // bright_weights_normed_gauss_blur_3_rd15
    // bright_weights_normed_gauss_blur_3_rd16
    // bright_weights_normed_gauss_blur_3_rd17
    // bright_weights_normed_gauss_blur_3_rd18
    // bright_weights_normed_gauss_blur_3_rd19
    // bright_weights_normed_gauss_blur_3_rd20
    // bright_weights_normed_gauss_blur_3_rd21
    // bright_weights_normed_gauss_blur_3_rd22
    // bright_weights_normed_gauss_blur_3_rd23
    // bright_weights_normed_gauss_blur_3_rd24
    // bright_weights_normed_gauss_blur_3_rd25
    // bright_weights_normed_gauss_blur_3_rd26
    // bright_weights_normed_gauss_blur_3_rd27
    // bright_weights_normed_gauss_blur_3_rd28
    // bright_weights_normed_gauss_blur_3_rd29
    // bright_weights_normed_gauss_blur_3_rd30
    // bright_weights_normed_gauss_blur_3_rd31
    // bright_weights_normed_gauss_blur_3_rd32
    // bright_weights_normed_gauss_blur_3_rd33
    // bright_weights_normed_gauss_blur_3_rd34
    // bright_weights_normed_gauss_blur_3_rd35

	hw_uint<576> result;
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd0_res = bright_weights_normed_gauss_blur_3_rd0_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 576>(result, bright_weights_normed_gauss_blur_3_rd0_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd1_res = bright_weights_normed_gauss_blur_3_rd1_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 576>(result, bright_weights_normed_gauss_blur_3_rd1_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd2_res = bright_weights_normed_gauss_blur_3_rd2_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 576>(result, bright_weights_normed_gauss_blur_3_rd2_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd3_res = bright_weights_normed_gauss_blur_3_rd3_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 576>(result, bright_weights_normed_gauss_blur_3_rd3_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd4_res = bright_weights_normed_gauss_blur_3_rd4_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<64, 576>(result, bright_weights_normed_gauss_blur_3_rd4_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd5_res = bright_weights_normed_gauss_blur_3_rd5_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<80, 576>(result, bright_weights_normed_gauss_blur_3_rd5_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd6_res = bright_weights_normed_gauss_blur_3_rd6_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<96, 576>(result, bright_weights_normed_gauss_blur_3_rd6_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd7_res = bright_weights_normed_gauss_blur_3_rd7_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<112, 576>(result, bright_weights_normed_gauss_blur_3_rd7_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd8_res = bright_weights_normed_gauss_blur_3_rd8_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<128, 576>(result, bright_weights_normed_gauss_blur_3_rd8_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd9_res = bright_weights_normed_gauss_blur_3_rd9_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<144, 576>(result, bright_weights_normed_gauss_blur_3_rd9_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd10_res = bright_weights_normed_gauss_blur_3_rd10_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<160, 576>(result, bright_weights_normed_gauss_blur_3_rd10_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd11_res = bright_weights_normed_gauss_blur_3_rd11_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<176, 576>(result, bright_weights_normed_gauss_blur_3_rd11_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd12_res = bright_weights_normed_gauss_blur_3_rd12_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<192, 576>(result, bright_weights_normed_gauss_blur_3_rd12_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd13_res = bright_weights_normed_gauss_blur_3_rd13_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<208, 576>(result, bright_weights_normed_gauss_blur_3_rd13_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd14_res = bright_weights_normed_gauss_blur_3_rd14_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<224, 576>(result, bright_weights_normed_gauss_blur_3_rd14_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd15_res = bright_weights_normed_gauss_blur_3_rd15_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<240, 576>(result, bright_weights_normed_gauss_blur_3_rd15_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd16_res = bright_weights_normed_gauss_blur_3_rd16_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<256, 576>(result, bright_weights_normed_gauss_blur_3_rd16_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd17_res = bright_weights_normed_gauss_blur_3_rd17_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<272, 576>(result, bright_weights_normed_gauss_blur_3_rd17_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd18_res = bright_weights_normed_gauss_blur_3_rd18_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<288, 576>(result, bright_weights_normed_gauss_blur_3_rd18_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd19_res = bright_weights_normed_gauss_blur_3_rd19_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<304, 576>(result, bright_weights_normed_gauss_blur_3_rd19_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd20_res = bright_weights_normed_gauss_blur_3_rd20_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<320, 576>(result, bright_weights_normed_gauss_blur_3_rd20_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd21_res = bright_weights_normed_gauss_blur_3_rd21_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<336, 576>(result, bright_weights_normed_gauss_blur_3_rd21_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd22_res = bright_weights_normed_gauss_blur_3_rd22_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<352, 576>(result, bright_weights_normed_gauss_blur_3_rd22_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd23_res = bright_weights_normed_gauss_blur_3_rd23_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<368, 576>(result, bright_weights_normed_gauss_blur_3_rd23_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd24_res = bright_weights_normed_gauss_blur_3_rd24_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<384, 576>(result, bright_weights_normed_gauss_blur_3_rd24_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd25_res = bright_weights_normed_gauss_blur_3_rd25_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<400, 576>(result, bright_weights_normed_gauss_blur_3_rd25_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd26_res = bright_weights_normed_gauss_blur_3_rd26_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<416, 576>(result, bright_weights_normed_gauss_blur_3_rd26_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd27_res = bright_weights_normed_gauss_blur_3_rd27_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<432, 576>(result, bright_weights_normed_gauss_blur_3_rd27_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd28_res = bright_weights_normed_gauss_blur_3_rd28_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<448, 576>(result, bright_weights_normed_gauss_blur_3_rd28_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd29_res = bright_weights_normed_gauss_blur_3_rd29_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<464, 576>(result, bright_weights_normed_gauss_blur_3_rd29_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd30_res = bright_weights_normed_gauss_blur_3_rd30_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<480, 576>(result, bright_weights_normed_gauss_blur_3_rd30_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd31_res = bright_weights_normed_gauss_blur_3_rd31_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<496, 576>(result, bright_weights_normed_gauss_blur_3_rd31_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd32_res = bright_weights_normed_gauss_blur_3_rd32_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<512, 576>(result, bright_weights_normed_gauss_blur_3_rd32_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd33_res = bright_weights_normed_gauss_blur_3_rd33_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<528, 576>(result, bright_weights_normed_gauss_blur_3_rd33_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd34_res = bright_weights_normed_gauss_blur_3_rd34_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<544, 576>(result, bright_weights_normed_gauss_blur_3_rd34_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd35_res = bright_weights_normed_gauss_blur_3_rd35_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<560, 576>(result, bright_weights_normed_gauss_blur_3_rd35_res);
	return result;
}

// bright_weights_normed_gauss_ds_2_update_0_write
//	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0
//	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1
//	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2
//	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3
inline void bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write_bundle_write(hw_uint<64>& bright_weights_normed_gauss_ds_2_update_0_write, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_res = bright_weights_normed_gauss_ds_2_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_write(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_res, bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_res = bright_weights_normed_gauss_ds_2_update_0_write.extract<16, 31>();
	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_write(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_res, bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_res = bright_weights_normed_gauss_ds_2_update_0_write.extract<32, 47>();
	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_write(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write2_res, bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_res = bright_weights_normed_gauss_ds_2_update_0_write.extract<48, 63>();
	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_write(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write3_res, bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
}

// fused_level_2_update_0_read
//	fused_level_2_rd0
//	fused_level_2_rd1
//	fused_level_2_rd2
//	fused_level_2_rd3
inline hw_uint<64> bright_weights_normed_gauss_ds_2_fused_level_2_update_0_read_bundle_read(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // fused_level_2_rd0
    // fused_level_2_rd1
    // fused_level_2_rd2
    // fused_level_2_rd3

	hw_uint<64> result;
	hw_uint<16> fused_level_2_rd0_res = fused_level_2_rd0_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, fused_level_2_rd0_res);
	hw_uint<16> fused_level_2_rd1_res = fused_level_2_rd1_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, fused_level_2_rd1_res);
	hw_uint<16> fused_level_2_rd2_res = fused_level_2_rd2_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, fused_level_2_rd2_res);
	hw_uint<16> fused_level_2_rd3_res = fused_level_2_rd3_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, fused_level_2_rd3_res);
	return result;
}

#include "hw_classes.h"

struct bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache {
	// RAM Box: {[0, 238], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1_to_fused_level_3_rd1_cache {
	// RAM Box: {[1, 239], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_3_cache {
  // # of banks: 2
  bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0;
  bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1_to_fused_level_3_rd1_cache bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1_to_fused_level_3_rd1;
};



inline void bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_3.bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.push(bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0);
}

inline void bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1_write(hw_uint<16>& bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_3.bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1_to_fused_level_3_rd1.push(bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1);
}

inline hw_uint<16> fused_level_3_rd0_select(bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd0 read pattern: { fused_level_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_3[2d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 38] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0 = bright_weights_normed_gauss_ds_3.bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_3_rd1_select(bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd1 read pattern: { fused_level_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_3[1 + 2d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 38] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1 = bright_weights_normed_gauss_ds_3.bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1_to_fused_level_3_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_ds_3_update_0_write
//	bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0
//	bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1
inline void bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write_bundle_write(hw_uint<32>& bright_weights_normed_gauss_ds_3_update_0_write, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_res = bright_weights_normed_gauss_ds_3_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_write(bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_res, bright_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1_res = bright_weights_normed_gauss_ds_3_update_0_write.extract<16, 31>();
	bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1_write(bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write1_res, bright_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
}

// fused_level_3_update_0_read
//	fused_level_3_rd0
//	fused_level_3_rd1
inline hw_uint<32> bright_weights_normed_gauss_ds_3_fused_level_3_update_0_read_bundle_read(bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // fused_level_3_rd0
    // fused_level_3_rd1

	hw_uint<32> result;
	hw_uint<16> fused_level_3_rd0_res = fused_level_3_rd0_select(bright_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 32>(result, fused_level_3_rd0_res);
	hw_uint<16> fused_level_3_rd1_res = fused_level_3_rd1_select(bright_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
	set_at<16, 32>(result, fused_level_3_rd1_res);
	return result;
}

#include "hw_classes.h"

struct dark_dark_update_0_write0_merged_banks_11_cache {
	// RAM Box: {[0, 1952], [0, 1086]}
	// Capacity: 248
	// # of read delays: 6
  // 0, 1, 123, 124, 246, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 121> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_124() {
		return f6;
	}

	inline hw_uint<16> peek_245() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_246() {
		return f8;
	}

	inline hw_uint<16> peek_247() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write1_merged_banks_11_cache {
	// RAM Box: {[1, 1953], [0, 1086]}
	// Capacity: 248
	// # of read delays: 6
  // 0, 1, 123, 124, 246, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 121> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_124() {
		return f6;
	}

	inline hw_uint<16> peek_245() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_246() {
		return f8;
	}

	inline hw_uint<16> peek_247() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write10_merged_banks_11_cache {
	// RAM Box: {[10, 1962], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write11_merged_banks_11_cache {
	// RAM Box: {[11, 1963], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write12_merged_banks_11_cache {
	// RAM Box: {[12, 1964], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write13_merged_banks_11_cache {
	// RAM Box: {[13, 1965], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write14_merged_banks_11_cache {
	// RAM Box: {[14, 1966], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write15_merged_banks_11_cache {
	// RAM Box: {[15, 1967], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write2_merged_banks_11_cache {
	// RAM Box: {[2, 1954], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write3_merged_banks_11_cache {
	// RAM Box: {[3, 1955], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write4_merged_banks_11_cache {
	// RAM Box: {[4, 1956], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write5_merged_banks_11_cache {
	// RAM Box: {[5, 1957], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write6_merged_banks_11_cache {
	// RAM Box: {[6, 1958], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write7_merged_banks_11_cache {
	// RAM Box: {[7, 1959], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write8_merged_banks_11_cache {
	// RAM Box: {[8, 1960], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write9_merged_banks_11_cache {
	// RAM Box: {[9, 1961], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_cache {
  // # of banks: 16
  dark_dark_update_0_write0_merged_banks_11_cache dark_dark_update_0_write0_merged_banks_11;
  dark_dark_update_0_write1_merged_banks_11_cache dark_dark_update_0_write1_merged_banks_11;
  dark_dark_update_0_write10_merged_banks_11_cache dark_dark_update_0_write10_merged_banks_11;
  dark_dark_update_0_write11_merged_banks_11_cache dark_dark_update_0_write11_merged_banks_11;
  dark_dark_update_0_write12_merged_banks_11_cache dark_dark_update_0_write12_merged_banks_11;
  dark_dark_update_0_write13_merged_banks_11_cache dark_dark_update_0_write13_merged_banks_11;
  dark_dark_update_0_write14_merged_banks_11_cache dark_dark_update_0_write14_merged_banks_11;
  dark_dark_update_0_write15_merged_banks_11_cache dark_dark_update_0_write15_merged_banks_11;
  dark_dark_update_0_write2_merged_banks_11_cache dark_dark_update_0_write2_merged_banks_11;
  dark_dark_update_0_write3_merged_banks_11_cache dark_dark_update_0_write3_merged_banks_11;
  dark_dark_update_0_write4_merged_banks_11_cache dark_dark_update_0_write4_merged_banks_11;
  dark_dark_update_0_write5_merged_banks_11_cache dark_dark_update_0_write5_merged_banks_11;
  dark_dark_update_0_write6_merged_banks_11_cache dark_dark_update_0_write6_merged_banks_11;
  dark_dark_update_0_write7_merged_banks_11_cache dark_dark_update_0_write7_merged_banks_11;
  dark_dark_update_0_write8_merged_banks_11_cache dark_dark_update_0_write8_merged_banks_11;
  dark_dark_update_0_write9_merged_banks_11_cache dark_dark_update_0_write9_merged_banks_11;
};



inline void dark_dark_update_0_write0_write(hw_uint<16>& dark_dark_update_0_write0, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write0_merged_banks_11.push(dark_dark_update_0_write0);
}

inline void dark_dark_update_0_write1_write(hw_uint<16>& dark_dark_update_0_write1, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write1_merged_banks_11.push(dark_dark_update_0_write1);
}

inline void dark_dark_update_0_write10_write(hw_uint<16>& dark_dark_update_0_write10, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write10_merged_banks_11.push(dark_dark_update_0_write10);
}

inline void dark_dark_update_0_write11_write(hw_uint<16>& dark_dark_update_0_write11, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write11_merged_banks_11.push(dark_dark_update_0_write11);
}

inline void dark_dark_update_0_write12_write(hw_uint<16>& dark_dark_update_0_write12, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write12_merged_banks_11.push(dark_dark_update_0_write12);
}

inline void dark_dark_update_0_write13_write(hw_uint<16>& dark_dark_update_0_write13, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write13_merged_banks_11.push(dark_dark_update_0_write13);
}

inline void dark_dark_update_0_write14_write(hw_uint<16>& dark_dark_update_0_write14, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write14_merged_banks_11.push(dark_dark_update_0_write14);
}

inline void dark_dark_update_0_write15_write(hw_uint<16>& dark_dark_update_0_write15, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write15_merged_banks_11.push(dark_dark_update_0_write15);
}

inline void dark_dark_update_0_write2_write(hw_uint<16>& dark_dark_update_0_write2, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write2_merged_banks_11.push(dark_dark_update_0_write2);
}

inline void dark_dark_update_0_write3_write(hw_uint<16>& dark_dark_update_0_write3, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write3_merged_banks_11.push(dark_dark_update_0_write3);
}

inline void dark_dark_update_0_write4_write(hw_uint<16>& dark_dark_update_0_write4, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write4_merged_banks_11.push(dark_dark_update_0_write4);
}

inline void dark_dark_update_0_write5_write(hw_uint<16>& dark_dark_update_0_write5, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write5_merged_banks_11.push(dark_dark_update_0_write5);
}

inline void dark_dark_update_0_write6_write(hw_uint<16>& dark_dark_update_0_write6, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write6_merged_banks_11.push(dark_dark_update_0_write6);
}

inline void dark_dark_update_0_write7_write(hw_uint<16>& dark_dark_update_0_write7, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write7_merged_banks_11.push(dark_dark_update_0_write7);
}

inline void dark_dark_update_0_write8_write(hw_uint<16>& dark_dark_update_0_write8, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write8_merged_banks_11.push(dark_dark_update_0_write8);
}

inline void dark_dark_update_0_write9_write(hw_uint<16>& dark_dark_update_0_write9, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write9_merged_banks_11.push(dark_dark_update_0_write9);
}

inline hw_uint<16> dark_gauss_blur_1_rd0_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd0 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd1_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd1 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd10_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd10 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd100_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd100 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write11 = dark.dark_dark_update_0_write11_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd101_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd101 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write11 = dark.dark_dark_update_0_write11_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd102_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd102 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write12 = dark.dark_dark_update_0_write12_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd103_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd103 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write12 = dark.dark_dark_update_0_write12_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd104_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd104 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write12 = dark.dark_dark_update_0_write12_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd105_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd105 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write13 = dark.dark_dark_update_0_write13_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd106_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd106 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write13 = dark.dark_dark_update_0_write13_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd107_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd107 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write13 = dark.dark_dark_update_0_write13_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd108_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd108 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write12 = dark.dark_dark_update_0_write12_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd109_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd109 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write12 = dark.dark_dark_update_0_write12_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd11_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd11 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd110_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd110 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write12 = dark.dark_dark_update_0_write12_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd111_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd111 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write13 = dark.dark_dark_update_0_write13_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd112_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd112 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write13 = dark.dark_dark_update_0_write13_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd113_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd113 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write13 = dark.dark_dark_update_0_write13_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd114_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd114 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write14 = dark.dark_dark_update_0_write14_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd115_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd115 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write14 = dark.dark_dark_update_0_write14_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd116_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd116 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write14 = dark.dark_dark_update_0_write14_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd117_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd117 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write13 = dark.dark_dark_update_0_write13_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd118_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd118 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write13 = dark.dark_dark_update_0_write13_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd119_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd119 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write13 = dark.dark_dark_update_0_write13_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd12_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd12 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd120_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd120 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write14 = dark.dark_dark_update_0_write14_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd121_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd121 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write14 = dark.dark_dark_update_0_write14_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd122_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd122 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write14 = dark.dark_dark_update_0_write14_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd123_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd123 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write15 = dark.dark_dark_update_0_write15_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd124_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd124 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write15 = dark.dark_dark_update_0_write15_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd125_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd125 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write15 = dark.dark_dark_update_0_write15_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd126_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd126 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write14 = dark.dark_dark_update_0_write14_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd127_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd127 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write14 = dark.dark_dark_update_0_write14_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd128_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd128 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write14 = dark.dark_dark_update_0_write14_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd129_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd129 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write15 = dark.dark_dark_update_0_write15_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd13_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd13 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd130_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd130 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write15 = dark.dark_dark_update_0_write15_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd131_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd131 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write15 = dark.dark_dark_update_0_write15_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd132_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd132 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[16 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_11.peek_246();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd133_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd133 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[16 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_11.peek_123();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd134_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd134 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[16 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd135_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd135 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write15 = dark.dark_dark_update_0_write15_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd136_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd136 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write15 = dark.dark_dark_update_0_write15_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd137_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd137 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write15 = dark.dark_dark_update_0_write15_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd138_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd138 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[16 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_11.peek_246();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd139_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd139 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[16 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_11.peek_123();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd14_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd14 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd140_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd140 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[16 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd141_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd141 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[17 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_11.peek_246();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd142_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd142 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[17 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_11.peek_123();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd143_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd143 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[17 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd15_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd15 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd16_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd16 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd17_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd17 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd18_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd18 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd19_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd19 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd2_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd2 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd20_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd20 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd21_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd21 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd22_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd22 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd23_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd23 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd24_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd24 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd25_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd25 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd26_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd26 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd27_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd27 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd28_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd28 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd29_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd29 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd3_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd3 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd30_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd30 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd31_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd31 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd32_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd32 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd33_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd33 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd34_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd34 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd35_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd35 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd36_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd36 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd37_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd37 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd38_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd38 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd39_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd39 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd4_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd4 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd40_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd40 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd41_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd41 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd42_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd42 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd43_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd43 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd44_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd44 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd45_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd45 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd46_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd46 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd47_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd47 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd48_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd48 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd49_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd49 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd5_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd5 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd50_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd50 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd51_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd51 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd52_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd52 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd53_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd53 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd54_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd54 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd55_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd55 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd56_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd56 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd57_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd57 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd58_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd58 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd59_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd59 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd6_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd6 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd60_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd60 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write8 = dark.dark_dark_update_0_write8_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd61_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd61 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write8 = dark.dark_dark_update_0_write8_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd62_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd62 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write8 = dark.dark_dark_update_0_write8_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd63_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd63 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd64_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd64 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd65_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd65 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd66_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd66 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write8 = dark.dark_dark_update_0_write8_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd67_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd67 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write8 = dark.dark_dark_update_0_write8_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd68_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd68 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write8 = dark.dark_dark_update_0_write8_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd69_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd69 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write9 = dark.dark_dark_update_0_write9_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd7_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd7 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd70_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd70 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write9 = dark.dark_dark_update_0_write9_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd71_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd71 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write9 = dark.dark_dark_update_0_write9_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd72_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd72 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write8 = dark.dark_dark_update_0_write8_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd73_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd73 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write8 = dark.dark_dark_update_0_write8_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd74_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd74 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write8 = dark.dark_dark_update_0_write8_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd75_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd75 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write9 = dark.dark_dark_update_0_write9_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd76_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd76 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write9 = dark.dark_dark_update_0_write9_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd77_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd77 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write9 = dark.dark_dark_update_0_write9_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd78_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd78 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write10 = dark.dark_dark_update_0_write10_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd79_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd79 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write10 = dark.dark_dark_update_0_write10_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd8_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd8 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd80_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd80 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write10 = dark.dark_dark_update_0_write10_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd81_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd81 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write9 = dark.dark_dark_update_0_write9_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd82_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd82 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write9 = dark.dark_dark_update_0_write9_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd83_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd83 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write9 = dark.dark_dark_update_0_write9_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd84_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd84 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write10 = dark.dark_dark_update_0_write10_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd85_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd85 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write10 = dark.dark_dark_update_0_write10_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd86_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd86 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write10 = dark.dark_dark_update_0_write10_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd87_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd87 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write11 = dark.dark_dark_update_0_write11_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd88_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd88 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write11 = dark.dark_dark_update_0_write11_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd89_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd89 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write11 = dark.dark_dark_update_0_write11_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd9_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd9 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd90_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd90 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write10 = dark.dark_dark_update_0_write10_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd91_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd91 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write10 = dark.dark_dark_update_0_write10_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd92_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd92 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write10 = dark.dark_dark_update_0_write10_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd93_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd93 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write11 = dark.dark_dark_update_0_write11_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd94_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd94 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write11 = dark.dark_dark_update_0_write11_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd95_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd95 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write11 = dark.dark_dark_update_0_write11_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd96_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd96 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write12 = dark.dark_dark_update_0_write12_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd97_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd97 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write12 = dark.dark_dark_update_0_write12_merged_banks_11.peek_124();
  return value_dark_dark_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd98_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd98 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write12 = dark.dark_dark_update_0_write12_merged_banks_11.peek_1();
  return value_dark_dark_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd99_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd99 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write11 = dark.dark_dark_update_0_write11_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd0_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd0 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd1_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd1 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[1 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd10_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd10 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[10 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write10 = dark.dark_dark_update_0_write10_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd11_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd11 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[11 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write11 = dark.dark_dark_update_0_write11_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd12_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd12 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[12 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write12 = dark.dark_dark_update_0_write12_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd13_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd13 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[13 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write13 = dark.dark_dark_update_0_write13_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd14_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd14 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[14 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write14 = dark.dark_dark_update_0_write14_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd15_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd15 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[15 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write15 = dark.dark_dark_update_0_write15_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd2_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd2 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[2 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd3_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd3 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[3 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd4_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd4 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[4 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd5_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd5 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[5 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd6_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd6 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[6 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd7_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd7 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[7 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd8_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd8 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[8 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write8 = dark.dark_dark_update_0_write8_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd9_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd9 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[9 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write9 = dark.dark_dark_update_0_write9_merged_banks_11.peek_247();
  return value_dark_dark_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_weights_rd0_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd0 read pattern: { dark_weights_update_0[d0, d1] -> dark[16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_rd1_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd1 read pattern: { dark_weights_update_0[d0, d1] -> dark[1 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_rd10_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd10 read pattern: { dark_weights_update_0[d0, d1] -> dark[10 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write10 = dark.dark_dark_update_0_write10_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_rd11_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd11 read pattern: { dark_weights_update_0[d0, d1] -> dark[11 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write11 = dark.dark_dark_update_0_write11_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_weights_rd12_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd12 read pattern: { dark_weights_update_0[d0, d1] -> dark[12 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write12 = dark.dark_dark_update_0_write12_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_rd13_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd13 read pattern: { dark_weights_update_0[d0, d1] -> dark[13 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write13 = dark.dark_dark_update_0_write13_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_rd14_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd14 read pattern: { dark_weights_update_0[d0, d1] -> dark[14 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write14 = dark.dark_dark_update_0_write14_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_rd15_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd15 read pattern: { dark_weights_update_0[d0, d1] -> dark[15 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write15 = dark.dark_dark_update_0_write15_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_rd2_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd2 read pattern: { dark_weights_update_0[d0, d1] -> dark[2 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_rd3_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd3 read pattern: { dark_weights_update_0[d0, d1] -> dark[3 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_rd4_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd4 read pattern: { dark_weights_update_0[d0, d1] -> dark[4 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_rd5_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd5 read pattern: { dark_weights_update_0[d0, d1] -> dark[5 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_rd6_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd6 read pattern: { dark_weights_update_0[d0, d1] -> dark[6 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_rd7_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd7 read pattern: { dark_weights_update_0[d0, d1] -> dark[7 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_rd8_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd8 read pattern: { dark_weights_update_0[d0, d1] -> dark[8 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write8 = dark.dark_dark_update_0_write8_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_rd9_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd9 read pattern: { dark_weights_update_0[d0, d1] -> dark[9 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_dark_update_0_write9 = dark.dark_dark_update_0_write9_merged_banks_11.peek_0();
  return value_dark_dark_update_0_write9;
  return 0;
}

// # of bundles = 4
// dark_gauss_blur_1_update_0_read
//	dark_gauss_blur_1_rd0
//	dark_gauss_blur_1_rd1
//	dark_gauss_blur_1_rd2
//	dark_gauss_blur_1_rd3
//	dark_gauss_blur_1_rd4
//	dark_gauss_blur_1_rd5
//	dark_gauss_blur_1_rd6
//	dark_gauss_blur_1_rd7
//	dark_gauss_blur_1_rd8
//	dark_gauss_blur_1_rd9
//	dark_gauss_blur_1_rd10
//	dark_gauss_blur_1_rd11
//	dark_gauss_blur_1_rd12
//	dark_gauss_blur_1_rd13
//	dark_gauss_blur_1_rd14
//	dark_gauss_blur_1_rd15
//	dark_gauss_blur_1_rd16
//	dark_gauss_blur_1_rd17
//	dark_gauss_blur_1_rd18
//	dark_gauss_blur_1_rd19
//	dark_gauss_blur_1_rd20
//	dark_gauss_blur_1_rd21
//	dark_gauss_blur_1_rd22
//	dark_gauss_blur_1_rd23
//	dark_gauss_blur_1_rd24
//	dark_gauss_blur_1_rd25
//	dark_gauss_blur_1_rd26
//	dark_gauss_blur_1_rd27
//	dark_gauss_blur_1_rd28
//	dark_gauss_blur_1_rd29
//	dark_gauss_blur_1_rd30
//	dark_gauss_blur_1_rd31
//	dark_gauss_blur_1_rd32
//	dark_gauss_blur_1_rd33
//	dark_gauss_blur_1_rd34
//	dark_gauss_blur_1_rd35
//	dark_gauss_blur_1_rd36
//	dark_gauss_blur_1_rd37
//	dark_gauss_blur_1_rd38
//	dark_gauss_blur_1_rd39
//	dark_gauss_blur_1_rd40
//	dark_gauss_blur_1_rd41
//	dark_gauss_blur_1_rd42
//	dark_gauss_blur_1_rd43
//	dark_gauss_blur_1_rd44
//	dark_gauss_blur_1_rd45
//	dark_gauss_blur_1_rd46
//	dark_gauss_blur_1_rd47
//	dark_gauss_blur_1_rd48
//	dark_gauss_blur_1_rd49
//	dark_gauss_blur_1_rd50
//	dark_gauss_blur_1_rd51
//	dark_gauss_blur_1_rd52
//	dark_gauss_blur_1_rd53
//	dark_gauss_blur_1_rd54
//	dark_gauss_blur_1_rd55
//	dark_gauss_blur_1_rd56
//	dark_gauss_blur_1_rd57
//	dark_gauss_blur_1_rd58
//	dark_gauss_blur_1_rd59
//	dark_gauss_blur_1_rd60
//	dark_gauss_blur_1_rd61
//	dark_gauss_blur_1_rd62
//	dark_gauss_blur_1_rd63
//	dark_gauss_blur_1_rd64
//	dark_gauss_blur_1_rd65
//	dark_gauss_blur_1_rd66
//	dark_gauss_blur_1_rd67
//	dark_gauss_blur_1_rd68
//	dark_gauss_blur_1_rd69
//	dark_gauss_blur_1_rd70
//	dark_gauss_blur_1_rd71
//	dark_gauss_blur_1_rd72
//	dark_gauss_blur_1_rd73
//	dark_gauss_blur_1_rd74
//	dark_gauss_blur_1_rd75
//	dark_gauss_blur_1_rd76
//	dark_gauss_blur_1_rd77
//	dark_gauss_blur_1_rd78
//	dark_gauss_blur_1_rd79
//	dark_gauss_blur_1_rd80
//	dark_gauss_blur_1_rd81
//	dark_gauss_blur_1_rd82
//	dark_gauss_blur_1_rd83
//	dark_gauss_blur_1_rd84
//	dark_gauss_blur_1_rd85
//	dark_gauss_blur_1_rd86
//	dark_gauss_blur_1_rd87
//	dark_gauss_blur_1_rd88
//	dark_gauss_blur_1_rd89
//	dark_gauss_blur_1_rd90
//	dark_gauss_blur_1_rd91
//	dark_gauss_blur_1_rd92
//	dark_gauss_blur_1_rd93
//	dark_gauss_blur_1_rd94
//	dark_gauss_blur_1_rd95
//	dark_gauss_blur_1_rd96
//	dark_gauss_blur_1_rd97
//	dark_gauss_blur_1_rd98
//	dark_gauss_blur_1_rd99
//	dark_gauss_blur_1_rd100
//	dark_gauss_blur_1_rd101
//	dark_gauss_blur_1_rd102
//	dark_gauss_blur_1_rd103
//	dark_gauss_blur_1_rd104
//	dark_gauss_blur_1_rd105
//	dark_gauss_blur_1_rd106
//	dark_gauss_blur_1_rd107
//	dark_gauss_blur_1_rd108
//	dark_gauss_blur_1_rd109
//	dark_gauss_blur_1_rd110
//	dark_gauss_blur_1_rd111
//	dark_gauss_blur_1_rd112
//	dark_gauss_blur_1_rd113
//	dark_gauss_blur_1_rd114
//	dark_gauss_blur_1_rd115
//	dark_gauss_blur_1_rd116
//	dark_gauss_blur_1_rd117
//	dark_gauss_blur_1_rd118
//	dark_gauss_blur_1_rd119
//	dark_gauss_blur_1_rd120
//	dark_gauss_blur_1_rd121
//	dark_gauss_blur_1_rd122
//	dark_gauss_blur_1_rd123
//	dark_gauss_blur_1_rd124
//	dark_gauss_blur_1_rd125
//	dark_gauss_blur_1_rd126
//	dark_gauss_blur_1_rd127
//	dark_gauss_blur_1_rd128
//	dark_gauss_blur_1_rd129
//	dark_gauss_blur_1_rd130
//	dark_gauss_blur_1_rd131
//	dark_gauss_blur_1_rd132
//	dark_gauss_blur_1_rd133
//	dark_gauss_blur_1_rd134
//	dark_gauss_blur_1_rd135
//	dark_gauss_blur_1_rd136
//	dark_gauss_blur_1_rd137
//	dark_gauss_blur_1_rd138
//	dark_gauss_blur_1_rd139
//	dark_gauss_blur_1_rd140
//	dark_gauss_blur_1_rd141
//	dark_gauss_blur_1_rd142
//	dark_gauss_blur_1_rd143
inline hw_uint<2304> dark_dark_gauss_blur_1_update_0_read_bundle_read(dark_cache& dark, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 144
    // dark_gauss_blur_1_rd0
    // dark_gauss_blur_1_rd1
    // dark_gauss_blur_1_rd2
    // dark_gauss_blur_1_rd3
    // dark_gauss_blur_1_rd4
    // dark_gauss_blur_1_rd5
    // dark_gauss_blur_1_rd6
    // dark_gauss_blur_1_rd7
    // dark_gauss_blur_1_rd8
    // dark_gauss_blur_1_rd9
    // dark_gauss_blur_1_rd10
    // dark_gauss_blur_1_rd11
    // dark_gauss_blur_1_rd12
    // dark_gauss_blur_1_rd13
    // dark_gauss_blur_1_rd14
    // dark_gauss_blur_1_rd15
    // dark_gauss_blur_1_rd16
    // dark_gauss_blur_1_rd17
    // dark_gauss_blur_1_rd18
    // dark_gauss_blur_1_rd19
    // dark_gauss_blur_1_rd20
    // dark_gauss_blur_1_rd21
    // dark_gauss_blur_1_rd22
    // dark_gauss_blur_1_rd23
    // dark_gauss_blur_1_rd24
    // dark_gauss_blur_1_rd25
    // dark_gauss_blur_1_rd26
    // dark_gauss_blur_1_rd27
    // dark_gauss_blur_1_rd28
    // dark_gauss_blur_1_rd29
    // dark_gauss_blur_1_rd30
    // dark_gauss_blur_1_rd31
    // dark_gauss_blur_1_rd32
    // dark_gauss_blur_1_rd33
    // dark_gauss_blur_1_rd34
    // dark_gauss_blur_1_rd35
    // dark_gauss_blur_1_rd36
    // dark_gauss_blur_1_rd37
    // dark_gauss_blur_1_rd38
    // dark_gauss_blur_1_rd39
    // dark_gauss_blur_1_rd40
    // dark_gauss_blur_1_rd41
    // dark_gauss_blur_1_rd42
    // dark_gauss_blur_1_rd43
    // dark_gauss_blur_1_rd44
    // dark_gauss_blur_1_rd45
    // dark_gauss_blur_1_rd46
    // dark_gauss_blur_1_rd47
    // dark_gauss_blur_1_rd48
    // dark_gauss_blur_1_rd49
    // dark_gauss_blur_1_rd50
    // dark_gauss_blur_1_rd51
    // dark_gauss_blur_1_rd52
    // dark_gauss_blur_1_rd53
    // dark_gauss_blur_1_rd54
    // dark_gauss_blur_1_rd55
    // dark_gauss_blur_1_rd56
    // dark_gauss_blur_1_rd57
    // dark_gauss_blur_1_rd58
    // dark_gauss_blur_1_rd59
    // dark_gauss_blur_1_rd60
    // dark_gauss_blur_1_rd61
    // dark_gauss_blur_1_rd62
    // dark_gauss_blur_1_rd63
    // dark_gauss_blur_1_rd64
    // dark_gauss_blur_1_rd65
    // dark_gauss_blur_1_rd66
    // dark_gauss_blur_1_rd67
    // dark_gauss_blur_1_rd68
    // dark_gauss_blur_1_rd69
    // dark_gauss_blur_1_rd70
    // dark_gauss_blur_1_rd71
    // dark_gauss_blur_1_rd72
    // dark_gauss_blur_1_rd73
    // dark_gauss_blur_1_rd74
    // dark_gauss_blur_1_rd75
    // dark_gauss_blur_1_rd76
    // dark_gauss_blur_1_rd77
    // dark_gauss_blur_1_rd78
    // dark_gauss_blur_1_rd79
    // dark_gauss_blur_1_rd80
    // dark_gauss_blur_1_rd81
    // dark_gauss_blur_1_rd82
    // dark_gauss_blur_1_rd83
    // dark_gauss_blur_1_rd84
    // dark_gauss_blur_1_rd85
    // dark_gauss_blur_1_rd86
    // dark_gauss_blur_1_rd87
    // dark_gauss_blur_1_rd88
    // dark_gauss_blur_1_rd89
    // dark_gauss_blur_1_rd90
    // dark_gauss_blur_1_rd91
    // dark_gauss_blur_1_rd92
    // dark_gauss_blur_1_rd93
    // dark_gauss_blur_1_rd94
    // dark_gauss_blur_1_rd95
    // dark_gauss_blur_1_rd96
    // dark_gauss_blur_1_rd97
    // dark_gauss_blur_1_rd98
    // dark_gauss_blur_1_rd99
    // dark_gauss_blur_1_rd100
    // dark_gauss_blur_1_rd101
    // dark_gauss_blur_1_rd102
    // dark_gauss_blur_1_rd103
    // dark_gauss_blur_1_rd104
    // dark_gauss_blur_1_rd105
    // dark_gauss_blur_1_rd106
    // dark_gauss_blur_1_rd107
    // dark_gauss_blur_1_rd108
    // dark_gauss_blur_1_rd109
    // dark_gauss_blur_1_rd110
    // dark_gauss_blur_1_rd111
    // dark_gauss_blur_1_rd112
    // dark_gauss_blur_1_rd113
    // dark_gauss_blur_1_rd114
    // dark_gauss_blur_1_rd115
    // dark_gauss_blur_1_rd116
    // dark_gauss_blur_1_rd117
    // dark_gauss_blur_1_rd118
    // dark_gauss_blur_1_rd119
    // dark_gauss_blur_1_rd120
    // dark_gauss_blur_1_rd121
    // dark_gauss_blur_1_rd122
    // dark_gauss_blur_1_rd123
    // dark_gauss_blur_1_rd124
    // dark_gauss_blur_1_rd125
    // dark_gauss_blur_1_rd126
    // dark_gauss_blur_1_rd127
    // dark_gauss_blur_1_rd128
    // dark_gauss_blur_1_rd129
    // dark_gauss_blur_1_rd130
    // dark_gauss_blur_1_rd131
    // dark_gauss_blur_1_rd132
    // dark_gauss_blur_1_rd133
    // dark_gauss_blur_1_rd134
    // dark_gauss_blur_1_rd135
    // dark_gauss_blur_1_rd136
    // dark_gauss_blur_1_rd137
    // dark_gauss_blur_1_rd138
    // dark_gauss_blur_1_rd139
    // dark_gauss_blur_1_rd140
    // dark_gauss_blur_1_rd141
    // dark_gauss_blur_1_rd142
    // dark_gauss_blur_1_rd143

	hw_uint<2304> result;
	hw_uint<16> dark_gauss_blur_1_rd0_res = dark_gauss_blur_1_rd0_select(dark, d0, d1, dynamic_address);
	set_at<0, 2304>(result, dark_gauss_blur_1_rd0_res);
	hw_uint<16> dark_gauss_blur_1_rd1_res = dark_gauss_blur_1_rd1_select(dark, d0, d1, dynamic_address);
	set_at<16, 2304>(result, dark_gauss_blur_1_rd1_res);
	hw_uint<16> dark_gauss_blur_1_rd2_res = dark_gauss_blur_1_rd2_select(dark, d0, d1, dynamic_address);
	set_at<32, 2304>(result, dark_gauss_blur_1_rd2_res);
	hw_uint<16> dark_gauss_blur_1_rd3_res = dark_gauss_blur_1_rd3_select(dark, d0, d1, dynamic_address);
	set_at<48, 2304>(result, dark_gauss_blur_1_rd3_res);
	hw_uint<16> dark_gauss_blur_1_rd4_res = dark_gauss_blur_1_rd4_select(dark, d0, d1, dynamic_address);
	set_at<64, 2304>(result, dark_gauss_blur_1_rd4_res);
	hw_uint<16> dark_gauss_blur_1_rd5_res = dark_gauss_blur_1_rd5_select(dark, d0, d1, dynamic_address);
	set_at<80, 2304>(result, dark_gauss_blur_1_rd5_res);
	hw_uint<16> dark_gauss_blur_1_rd6_res = dark_gauss_blur_1_rd6_select(dark, d0, d1, dynamic_address);
	set_at<96, 2304>(result, dark_gauss_blur_1_rd6_res);
	hw_uint<16> dark_gauss_blur_1_rd7_res = dark_gauss_blur_1_rd7_select(dark, d0, d1, dynamic_address);
	set_at<112, 2304>(result, dark_gauss_blur_1_rd7_res);
	hw_uint<16> dark_gauss_blur_1_rd8_res = dark_gauss_blur_1_rd8_select(dark, d0, d1, dynamic_address);
	set_at<128, 2304>(result, dark_gauss_blur_1_rd8_res);
	hw_uint<16> dark_gauss_blur_1_rd9_res = dark_gauss_blur_1_rd9_select(dark, d0, d1, dynamic_address);
	set_at<144, 2304>(result, dark_gauss_blur_1_rd9_res);
	hw_uint<16> dark_gauss_blur_1_rd10_res = dark_gauss_blur_1_rd10_select(dark, d0, d1, dynamic_address);
	set_at<160, 2304>(result, dark_gauss_blur_1_rd10_res);
	hw_uint<16> dark_gauss_blur_1_rd11_res = dark_gauss_blur_1_rd11_select(dark, d0, d1, dynamic_address);
	set_at<176, 2304>(result, dark_gauss_blur_1_rd11_res);
	hw_uint<16> dark_gauss_blur_1_rd12_res = dark_gauss_blur_1_rd12_select(dark, d0, d1, dynamic_address);
	set_at<192, 2304>(result, dark_gauss_blur_1_rd12_res);
	hw_uint<16> dark_gauss_blur_1_rd13_res = dark_gauss_blur_1_rd13_select(dark, d0, d1, dynamic_address);
	set_at<208, 2304>(result, dark_gauss_blur_1_rd13_res);
	hw_uint<16> dark_gauss_blur_1_rd14_res = dark_gauss_blur_1_rd14_select(dark, d0, d1, dynamic_address);
	set_at<224, 2304>(result, dark_gauss_blur_1_rd14_res);
	hw_uint<16> dark_gauss_blur_1_rd15_res = dark_gauss_blur_1_rd15_select(dark, d0, d1, dynamic_address);
	set_at<240, 2304>(result, dark_gauss_blur_1_rd15_res);
	hw_uint<16> dark_gauss_blur_1_rd16_res = dark_gauss_blur_1_rd16_select(dark, d0, d1, dynamic_address);
	set_at<256, 2304>(result, dark_gauss_blur_1_rd16_res);
	hw_uint<16> dark_gauss_blur_1_rd17_res = dark_gauss_blur_1_rd17_select(dark, d0, d1, dynamic_address);
	set_at<272, 2304>(result, dark_gauss_blur_1_rd17_res);
	hw_uint<16> dark_gauss_blur_1_rd18_res = dark_gauss_blur_1_rd18_select(dark, d0, d1, dynamic_address);
	set_at<288, 2304>(result, dark_gauss_blur_1_rd18_res);
	hw_uint<16> dark_gauss_blur_1_rd19_res = dark_gauss_blur_1_rd19_select(dark, d0, d1, dynamic_address);
	set_at<304, 2304>(result, dark_gauss_blur_1_rd19_res);
	hw_uint<16> dark_gauss_blur_1_rd20_res = dark_gauss_blur_1_rd20_select(dark, d0, d1, dynamic_address);
	set_at<320, 2304>(result, dark_gauss_blur_1_rd20_res);
	hw_uint<16> dark_gauss_blur_1_rd21_res = dark_gauss_blur_1_rd21_select(dark, d0, d1, dynamic_address);
	set_at<336, 2304>(result, dark_gauss_blur_1_rd21_res);
	hw_uint<16> dark_gauss_blur_1_rd22_res = dark_gauss_blur_1_rd22_select(dark, d0, d1, dynamic_address);
	set_at<352, 2304>(result, dark_gauss_blur_1_rd22_res);
	hw_uint<16> dark_gauss_blur_1_rd23_res = dark_gauss_blur_1_rd23_select(dark, d0, d1, dynamic_address);
	set_at<368, 2304>(result, dark_gauss_blur_1_rd23_res);
	hw_uint<16> dark_gauss_blur_1_rd24_res = dark_gauss_blur_1_rd24_select(dark, d0, d1, dynamic_address);
	set_at<384, 2304>(result, dark_gauss_blur_1_rd24_res);
	hw_uint<16> dark_gauss_blur_1_rd25_res = dark_gauss_blur_1_rd25_select(dark, d0, d1, dynamic_address);
	set_at<400, 2304>(result, dark_gauss_blur_1_rd25_res);
	hw_uint<16> dark_gauss_blur_1_rd26_res = dark_gauss_blur_1_rd26_select(dark, d0, d1, dynamic_address);
	set_at<416, 2304>(result, dark_gauss_blur_1_rd26_res);
	hw_uint<16> dark_gauss_blur_1_rd27_res = dark_gauss_blur_1_rd27_select(dark, d0, d1, dynamic_address);
	set_at<432, 2304>(result, dark_gauss_blur_1_rd27_res);
	hw_uint<16> dark_gauss_blur_1_rd28_res = dark_gauss_blur_1_rd28_select(dark, d0, d1, dynamic_address);
	set_at<448, 2304>(result, dark_gauss_blur_1_rd28_res);
	hw_uint<16> dark_gauss_blur_1_rd29_res = dark_gauss_blur_1_rd29_select(dark, d0, d1, dynamic_address);
	set_at<464, 2304>(result, dark_gauss_blur_1_rd29_res);
	hw_uint<16> dark_gauss_blur_1_rd30_res = dark_gauss_blur_1_rd30_select(dark, d0, d1, dynamic_address);
	set_at<480, 2304>(result, dark_gauss_blur_1_rd30_res);
	hw_uint<16> dark_gauss_blur_1_rd31_res = dark_gauss_blur_1_rd31_select(dark, d0, d1, dynamic_address);
	set_at<496, 2304>(result, dark_gauss_blur_1_rd31_res);
	hw_uint<16> dark_gauss_blur_1_rd32_res = dark_gauss_blur_1_rd32_select(dark, d0, d1, dynamic_address);
	set_at<512, 2304>(result, dark_gauss_blur_1_rd32_res);
	hw_uint<16> dark_gauss_blur_1_rd33_res = dark_gauss_blur_1_rd33_select(dark, d0, d1, dynamic_address);
	set_at<528, 2304>(result, dark_gauss_blur_1_rd33_res);
	hw_uint<16> dark_gauss_blur_1_rd34_res = dark_gauss_blur_1_rd34_select(dark, d0, d1, dynamic_address);
	set_at<544, 2304>(result, dark_gauss_blur_1_rd34_res);
	hw_uint<16> dark_gauss_blur_1_rd35_res = dark_gauss_blur_1_rd35_select(dark, d0, d1, dynamic_address);
	set_at<560, 2304>(result, dark_gauss_blur_1_rd35_res);
	hw_uint<16> dark_gauss_blur_1_rd36_res = dark_gauss_blur_1_rd36_select(dark, d0, d1, dynamic_address);
	set_at<576, 2304>(result, dark_gauss_blur_1_rd36_res);
	hw_uint<16> dark_gauss_blur_1_rd37_res = dark_gauss_blur_1_rd37_select(dark, d0, d1, dynamic_address);
	set_at<592, 2304>(result, dark_gauss_blur_1_rd37_res);
	hw_uint<16> dark_gauss_blur_1_rd38_res = dark_gauss_blur_1_rd38_select(dark, d0, d1, dynamic_address);
	set_at<608, 2304>(result, dark_gauss_blur_1_rd38_res);
	hw_uint<16> dark_gauss_blur_1_rd39_res = dark_gauss_blur_1_rd39_select(dark, d0, d1, dynamic_address);
	set_at<624, 2304>(result, dark_gauss_blur_1_rd39_res);
	hw_uint<16> dark_gauss_blur_1_rd40_res = dark_gauss_blur_1_rd40_select(dark, d0, d1, dynamic_address);
	set_at<640, 2304>(result, dark_gauss_blur_1_rd40_res);
	hw_uint<16> dark_gauss_blur_1_rd41_res = dark_gauss_blur_1_rd41_select(dark, d0, d1, dynamic_address);
	set_at<656, 2304>(result, dark_gauss_blur_1_rd41_res);
	hw_uint<16> dark_gauss_blur_1_rd42_res = dark_gauss_blur_1_rd42_select(dark, d0, d1, dynamic_address);
	set_at<672, 2304>(result, dark_gauss_blur_1_rd42_res);
	hw_uint<16> dark_gauss_blur_1_rd43_res = dark_gauss_blur_1_rd43_select(dark, d0, d1, dynamic_address);
	set_at<688, 2304>(result, dark_gauss_blur_1_rd43_res);
	hw_uint<16> dark_gauss_blur_1_rd44_res = dark_gauss_blur_1_rd44_select(dark, d0, d1, dynamic_address);
	set_at<704, 2304>(result, dark_gauss_blur_1_rd44_res);
	hw_uint<16> dark_gauss_blur_1_rd45_res = dark_gauss_blur_1_rd45_select(dark, d0, d1, dynamic_address);
	set_at<720, 2304>(result, dark_gauss_blur_1_rd45_res);
	hw_uint<16> dark_gauss_blur_1_rd46_res = dark_gauss_blur_1_rd46_select(dark, d0, d1, dynamic_address);
	set_at<736, 2304>(result, dark_gauss_blur_1_rd46_res);
	hw_uint<16> dark_gauss_blur_1_rd47_res = dark_gauss_blur_1_rd47_select(dark, d0, d1, dynamic_address);
	set_at<752, 2304>(result, dark_gauss_blur_1_rd47_res);
	hw_uint<16> dark_gauss_blur_1_rd48_res = dark_gauss_blur_1_rd48_select(dark, d0, d1, dynamic_address);
	set_at<768, 2304>(result, dark_gauss_blur_1_rd48_res);
	hw_uint<16> dark_gauss_blur_1_rd49_res = dark_gauss_blur_1_rd49_select(dark, d0, d1, dynamic_address);
	set_at<784, 2304>(result, dark_gauss_blur_1_rd49_res);
	hw_uint<16> dark_gauss_blur_1_rd50_res = dark_gauss_blur_1_rd50_select(dark, d0, d1, dynamic_address);
	set_at<800, 2304>(result, dark_gauss_blur_1_rd50_res);
	hw_uint<16> dark_gauss_blur_1_rd51_res = dark_gauss_blur_1_rd51_select(dark, d0, d1, dynamic_address);
	set_at<816, 2304>(result, dark_gauss_blur_1_rd51_res);
	hw_uint<16> dark_gauss_blur_1_rd52_res = dark_gauss_blur_1_rd52_select(dark, d0, d1, dynamic_address);
	set_at<832, 2304>(result, dark_gauss_blur_1_rd52_res);
	hw_uint<16> dark_gauss_blur_1_rd53_res = dark_gauss_blur_1_rd53_select(dark, d0, d1, dynamic_address);
	set_at<848, 2304>(result, dark_gauss_blur_1_rd53_res);
	hw_uint<16> dark_gauss_blur_1_rd54_res = dark_gauss_blur_1_rd54_select(dark, d0, d1, dynamic_address);
	set_at<864, 2304>(result, dark_gauss_blur_1_rd54_res);
	hw_uint<16> dark_gauss_blur_1_rd55_res = dark_gauss_blur_1_rd55_select(dark, d0, d1, dynamic_address);
	set_at<880, 2304>(result, dark_gauss_blur_1_rd55_res);
	hw_uint<16> dark_gauss_blur_1_rd56_res = dark_gauss_blur_1_rd56_select(dark, d0, d1, dynamic_address);
	set_at<896, 2304>(result, dark_gauss_blur_1_rd56_res);
	hw_uint<16> dark_gauss_blur_1_rd57_res = dark_gauss_blur_1_rd57_select(dark, d0, d1, dynamic_address);
	set_at<912, 2304>(result, dark_gauss_blur_1_rd57_res);
	hw_uint<16> dark_gauss_blur_1_rd58_res = dark_gauss_blur_1_rd58_select(dark, d0, d1, dynamic_address);
	set_at<928, 2304>(result, dark_gauss_blur_1_rd58_res);
	hw_uint<16> dark_gauss_blur_1_rd59_res = dark_gauss_blur_1_rd59_select(dark, d0, d1, dynamic_address);
	set_at<944, 2304>(result, dark_gauss_blur_1_rd59_res);
	hw_uint<16> dark_gauss_blur_1_rd60_res = dark_gauss_blur_1_rd60_select(dark, d0, d1, dynamic_address);
	set_at<960, 2304>(result, dark_gauss_blur_1_rd60_res);
	hw_uint<16> dark_gauss_blur_1_rd61_res = dark_gauss_blur_1_rd61_select(dark, d0, d1, dynamic_address);
	set_at<976, 2304>(result, dark_gauss_blur_1_rd61_res);
	hw_uint<16> dark_gauss_blur_1_rd62_res = dark_gauss_blur_1_rd62_select(dark, d0, d1, dynamic_address);
	set_at<992, 2304>(result, dark_gauss_blur_1_rd62_res);
	hw_uint<16> dark_gauss_blur_1_rd63_res = dark_gauss_blur_1_rd63_select(dark, d0, d1, dynamic_address);
	set_at<1008, 2304>(result, dark_gauss_blur_1_rd63_res);
	hw_uint<16> dark_gauss_blur_1_rd64_res = dark_gauss_blur_1_rd64_select(dark, d0, d1, dynamic_address);
	set_at<1024, 2304>(result, dark_gauss_blur_1_rd64_res);
	hw_uint<16> dark_gauss_blur_1_rd65_res = dark_gauss_blur_1_rd65_select(dark, d0, d1, dynamic_address);
	set_at<1040, 2304>(result, dark_gauss_blur_1_rd65_res);
	hw_uint<16> dark_gauss_blur_1_rd66_res = dark_gauss_blur_1_rd66_select(dark, d0, d1, dynamic_address);
	set_at<1056, 2304>(result, dark_gauss_blur_1_rd66_res);
	hw_uint<16> dark_gauss_blur_1_rd67_res = dark_gauss_blur_1_rd67_select(dark, d0, d1, dynamic_address);
	set_at<1072, 2304>(result, dark_gauss_blur_1_rd67_res);
	hw_uint<16> dark_gauss_blur_1_rd68_res = dark_gauss_blur_1_rd68_select(dark, d0, d1, dynamic_address);
	set_at<1088, 2304>(result, dark_gauss_blur_1_rd68_res);
	hw_uint<16> dark_gauss_blur_1_rd69_res = dark_gauss_blur_1_rd69_select(dark, d0, d1, dynamic_address);
	set_at<1104, 2304>(result, dark_gauss_blur_1_rd69_res);
	hw_uint<16> dark_gauss_blur_1_rd70_res = dark_gauss_blur_1_rd70_select(dark, d0, d1, dynamic_address);
	set_at<1120, 2304>(result, dark_gauss_blur_1_rd70_res);
	hw_uint<16> dark_gauss_blur_1_rd71_res = dark_gauss_blur_1_rd71_select(dark, d0, d1, dynamic_address);
	set_at<1136, 2304>(result, dark_gauss_blur_1_rd71_res);
	hw_uint<16> dark_gauss_blur_1_rd72_res = dark_gauss_blur_1_rd72_select(dark, d0, d1, dynamic_address);
	set_at<1152, 2304>(result, dark_gauss_blur_1_rd72_res);
	hw_uint<16> dark_gauss_blur_1_rd73_res = dark_gauss_blur_1_rd73_select(dark, d0, d1, dynamic_address);
	set_at<1168, 2304>(result, dark_gauss_blur_1_rd73_res);
	hw_uint<16> dark_gauss_blur_1_rd74_res = dark_gauss_blur_1_rd74_select(dark, d0, d1, dynamic_address);
	set_at<1184, 2304>(result, dark_gauss_blur_1_rd74_res);
	hw_uint<16> dark_gauss_blur_1_rd75_res = dark_gauss_blur_1_rd75_select(dark, d0, d1, dynamic_address);
	set_at<1200, 2304>(result, dark_gauss_blur_1_rd75_res);
	hw_uint<16> dark_gauss_blur_1_rd76_res = dark_gauss_blur_1_rd76_select(dark, d0, d1, dynamic_address);
	set_at<1216, 2304>(result, dark_gauss_blur_1_rd76_res);
	hw_uint<16> dark_gauss_blur_1_rd77_res = dark_gauss_blur_1_rd77_select(dark, d0, d1, dynamic_address);
	set_at<1232, 2304>(result, dark_gauss_blur_1_rd77_res);
	hw_uint<16> dark_gauss_blur_1_rd78_res = dark_gauss_blur_1_rd78_select(dark, d0, d1, dynamic_address);
	set_at<1248, 2304>(result, dark_gauss_blur_1_rd78_res);
	hw_uint<16> dark_gauss_blur_1_rd79_res = dark_gauss_blur_1_rd79_select(dark, d0, d1, dynamic_address);
	set_at<1264, 2304>(result, dark_gauss_blur_1_rd79_res);
	hw_uint<16> dark_gauss_blur_1_rd80_res = dark_gauss_blur_1_rd80_select(dark, d0, d1, dynamic_address);
	set_at<1280, 2304>(result, dark_gauss_blur_1_rd80_res);
	hw_uint<16> dark_gauss_blur_1_rd81_res = dark_gauss_blur_1_rd81_select(dark, d0, d1, dynamic_address);
	set_at<1296, 2304>(result, dark_gauss_blur_1_rd81_res);
	hw_uint<16> dark_gauss_blur_1_rd82_res = dark_gauss_blur_1_rd82_select(dark, d0, d1, dynamic_address);
	set_at<1312, 2304>(result, dark_gauss_blur_1_rd82_res);
	hw_uint<16> dark_gauss_blur_1_rd83_res = dark_gauss_blur_1_rd83_select(dark, d0, d1, dynamic_address);
	set_at<1328, 2304>(result, dark_gauss_blur_1_rd83_res);
	hw_uint<16> dark_gauss_blur_1_rd84_res = dark_gauss_blur_1_rd84_select(dark, d0, d1, dynamic_address);
	set_at<1344, 2304>(result, dark_gauss_blur_1_rd84_res);
	hw_uint<16> dark_gauss_blur_1_rd85_res = dark_gauss_blur_1_rd85_select(dark, d0, d1, dynamic_address);
	set_at<1360, 2304>(result, dark_gauss_blur_1_rd85_res);
	hw_uint<16> dark_gauss_blur_1_rd86_res = dark_gauss_blur_1_rd86_select(dark, d0, d1, dynamic_address);
	set_at<1376, 2304>(result, dark_gauss_blur_1_rd86_res);
	hw_uint<16> dark_gauss_blur_1_rd87_res = dark_gauss_blur_1_rd87_select(dark, d0, d1, dynamic_address);
	set_at<1392, 2304>(result, dark_gauss_blur_1_rd87_res);
	hw_uint<16> dark_gauss_blur_1_rd88_res = dark_gauss_blur_1_rd88_select(dark, d0, d1, dynamic_address);
	set_at<1408, 2304>(result, dark_gauss_blur_1_rd88_res);
	hw_uint<16> dark_gauss_blur_1_rd89_res = dark_gauss_blur_1_rd89_select(dark, d0, d1, dynamic_address);
	set_at<1424, 2304>(result, dark_gauss_blur_1_rd89_res);
	hw_uint<16> dark_gauss_blur_1_rd90_res = dark_gauss_blur_1_rd90_select(dark, d0, d1, dynamic_address);
	set_at<1440, 2304>(result, dark_gauss_blur_1_rd90_res);
	hw_uint<16> dark_gauss_blur_1_rd91_res = dark_gauss_blur_1_rd91_select(dark, d0, d1, dynamic_address);
	set_at<1456, 2304>(result, dark_gauss_blur_1_rd91_res);
	hw_uint<16> dark_gauss_blur_1_rd92_res = dark_gauss_blur_1_rd92_select(dark, d0, d1, dynamic_address);
	set_at<1472, 2304>(result, dark_gauss_blur_1_rd92_res);
	hw_uint<16> dark_gauss_blur_1_rd93_res = dark_gauss_blur_1_rd93_select(dark, d0, d1, dynamic_address);
	set_at<1488, 2304>(result, dark_gauss_blur_1_rd93_res);
	hw_uint<16> dark_gauss_blur_1_rd94_res = dark_gauss_blur_1_rd94_select(dark, d0, d1, dynamic_address);
	set_at<1504, 2304>(result, dark_gauss_blur_1_rd94_res);
	hw_uint<16> dark_gauss_blur_1_rd95_res = dark_gauss_blur_1_rd95_select(dark, d0, d1, dynamic_address);
	set_at<1520, 2304>(result, dark_gauss_blur_1_rd95_res);
	hw_uint<16> dark_gauss_blur_1_rd96_res = dark_gauss_blur_1_rd96_select(dark, d0, d1, dynamic_address);
	set_at<1536, 2304>(result, dark_gauss_blur_1_rd96_res);
	hw_uint<16> dark_gauss_blur_1_rd97_res = dark_gauss_blur_1_rd97_select(dark, d0, d1, dynamic_address);
	set_at<1552, 2304>(result, dark_gauss_blur_1_rd97_res);
	hw_uint<16> dark_gauss_blur_1_rd98_res = dark_gauss_blur_1_rd98_select(dark, d0, d1, dynamic_address);
	set_at<1568, 2304>(result, dark_gauss_blur_1_rd98_res);
	hw_uint<16> dark_gauss_blur_1_rd99_res = dark_gauss_blur_1_rd99_select(dark, d0, d1, dynamic_address);
	set_at<1584, 2304>(result, dark_gauss_blur_1_rd99_res);
	hw_uint<16> dark_gauss_blur_1_rd100_res = dark_gauss_blur_1_rd100_select(dark, d0, d1, dynamic_address);
	set_at<1600, 2304>(result, dark_gauss_blur_1_rd100_res);
	hw_uint<16> dark_gauss_blur_1_rd101_res = dark_gauss_blur_1_rd101_select(dark, d0, d1, dynamic_address);
	set_at<1616, 2304>(result, dark_gauss_blur_1_rd101_res);
	hw_uint<16> dark_gauss_blur_1_rd102_res = dark_gauss_blur_1_rd102_select(dark, d0, d1, dynamic_address);
	set_at<1632, 2304>(result, dark_gauss_blur_1_rd102_res);
	hw_uint<16> dark_gauss_blur_1_rd103_res = dark_gauss_blur_1_rd103_select(dark, d0, d1, dynamic_address);
	set_at<1648, 2304>(result, dark_gauss_blur_1_rd103_res);
	hw_uint<16> dark_gauss_blur_1_rd104_res = dark_gauss_blur_1_rd104_select(dark, d0, d1, dynamic_address);
	set_at<1664, 2304>(result, dark_gauss_blur_1_rd104_res);
	hw_uint<16> dark_gauss_blur_1_rd105_res = dark_gauss_blur_1_rd105_select(dark, d0, d1, dynamic_address);
	set_at<1680, 2304>(result, dark_gauss_blur_1_rd105_res);
	hw_uint<16> dark_gauss_blur_1_rd106_res = dark_gauss_blur_1_rd106_select(dark, d0, d1, dynamic_address);
	set_at<1696, 2304>(result, dark_gauss_blur_1_rd106_res);
	hw_uint<16> dark_gauss_blur_1_rd107_res = dark_gauss_blur_1_rd107_select(dark, d0, d1, dynamic_address);
	set_at<1712, 2304>(result, dark_gauss_blur_1_rd107_res);
	hw_uint<16> dark_gauss_blur_1_rd108_res = dark_gauss_blur_1_rd108_select(dark, d0, d1, dynamic_address);
	set_at<1728, 2304>(result, dark_gauss_blur_1_rd108_res);
	hw_uint<16> dark_gauss_blur_1_rd109_res = dark_gauss_blur_1_rd109_select(dark, d0, d1, dynamic_address);
	set_at<1744, 2304>(result, dark_gauss_blur_1_rd109_res);
	hw_uint<16> dark_gauss_blur_1_rd110_res = dark_gauss_blur_1_rd110_select(dark, d0, d1, dynamic_address);
	set_at<1760, 2304>(result, dark_gauss_blur_1_rd110_res);
	hw_uint<16> dark_gauss_blur_1_rd111_res = dark_gauss_blur_1_rd111_select(dark, d0, d1, dynamic_address);
	set_at<1776, 2304>(result, dark_gauss_blur_1_rd111_res);
	hw_uint<16> dark_gauss_blur_1_rd112_res = dark_gauss_blur_1_rd112_select(dark, d0, d1, dynamic_address);
	set_at<1792, 2304>(result, dark_gauss_blur_1_rd112_res);
	hw_uint<16> dark_gauss_blur_1_rd113_res = dark_gauss_blur_1_rd113_select(dark, d0, d1, dynamic_address);
	set_at<1808, 2304>(result, dark_gauss_blur_1_rd113_res);
	hw_uint<16> dark_gauss_blur_1_rd114_res = dark_gauss_blur_1_rd114_select(dark, d0, d1, dynamic_address);
	set_at<1824, 2304>(result, dark_gauss_blur_1_rd114_res);
	hw_uint<16> dark_gauss_blur_1_rd115_res = dark_gauss_blur_1_rd115_select(dark, d0, d1, dynamic_address);
	set_at<1840, 2304>(result, dark_gauss_blur_1_rd115_res);
	hw_uint<16> dark_gauss_blur_1_rd116_res = dark_gauss_blur_1_rd116_select(dark, d0, d1, dynamic_address);
	set_at<1856, 2304>(result, dark_gauss_blur_1_rd116_res);
	hw_uint<16> dark_gauss_blur_1_rd117_res = dark_gauss_blur_1_rd117_select(dark, d0, d1, dynamic_address);
	set_at<1872, 2304>(result, dark_gauss_blur_1_rd117_res);
	hw_uint<16> dark_gauss_blur_1_rd118_res = dark_gauss_blur_1_rd118_select(dark, d0, d1, dynamic_address);
	set_at<1888, 2304>(result, dark_gauss_blur_1_rd118_res);
	hw_uint<16> dark_gauss_blur_1_rd119_res = dark_gauss_blur_1_rd119_select(dark, d0, d1, dynamic_address);
	set_at<1904, 2304>(result, dark_gauss_blur_1_rd119_res);
	hw_uint<16> dark_gauss_blur_1_rd120_res = dark_gauss_blur_1_rd120_select(dark, d0, d1, dynamic_address);
	set_at<1920, 2304>(result, dark_gauss_blur_1_rd120_res);
	hw_uint<16> dark_gauss_blur_1_rd121_res = dark_gauss_blur_1_rd121_select(dark, d0, d1, dynamic_address);
	set_at<1936, 2304>(result, dark_gauss_blur_1_rd121_res);
	hw_uint<16> dark_gauss_blur_1_rd122_res = dark_gauss_blur_1_rd122_select(dark, d0, d1, dynamic_address);
	set_at<1952, 2304>(result, dark_gauss_blur_1_rd122_res);
	hw_uint<16> dark_gauss_blur_1_rd123_res = dark_gauss_blur_1_rd123_select(dark, d0, d1, dynamic_address);
	set_at<1968, 2304>(result, dark_gauss_blur_1_rd123_res);
	hw_uint<16> dark_gauss_blur_1_rd124_res = dark_gauss_blur_1_rd124_select(dark, d0, d1, dynamic_address);
	set_at<1984, 2304>(result, dark_gauss_blur_1_rd124_res);
	hw_uint<16> dark_gauss_blur_1_rd125_res = dark_gauss_blur_1_rd125_select(dark, d0, d1, dynamic_address);
	set_at<2000, 2304>(result, dark_gauss_blur_1_rd125_res);
	hw_uint<16> dark_gauss_blur_1_rd126_res = dark_gauss_blur_1_rd126_select(dark, d0, d1, dynamic_address);
	set_at<2016, 2304>(result, dark_gauss_blur_1_rd126_res);
	hw_uint<16> dark_gauss_blur_1_rd127_res = dark_gauss_blur_1_rd127_select(dark, d0, d1, dynamic_address);
	set_at<2032, 2304>(result, dark_gauss_blur_1_rd127_res);
	hw_uint<16> dark_gauss_blur_1_rd128_res = dark_gauss_blur_1_rd128_select(dark, d0, d1, dynamic_address);
	set_at<2048, 2304>(result, dark_gauss_blur_1_rd128_res);
	hw_uint<16> dark_gauss_blur_1_rd129_res = dark_gauss_blur_1_rd129_select(dark, d0, d1, dynamic_address);
	set_at<2064, 2304>(result, dark_gauss_blur_1_rd129_res);
	hw_uint<16> dark_gauss_blur_1_rd130_res = dark_gauss_blur_1_rd130_select(dark, d0, d1, dynamic_address);
	set_at<2080, 2304>(result, dark_gauss_blur_1_rd130_res);
	hw_uint<16> dark_gauss_blur_1_rd131_res = dark_gauss_blur_1_rd131_select(dark, d0, d1, dynamic_address);
	set_at<2096, 2304>(result, dark_gauss_blur_1_rd131_res);
	hw_uint<16> dark_gauss_blur_1_rd132_res = dark_gauss_blur_1_rd132_select(dark, d0, d1, dynamic_address);
	set_at<2112, 2304>(result, dark_gauss_blur_1_rd132_res);
	hw_uint<16> dark_gauss_blur_1_rd133_res = dark_gauss_blur_1_rd133_select(dark, d0, d1, dynamic_address);
	set_at<2128, 2304>(result, dark_gauss_blur_1_rd133_res);
	hw_uint<16> dark_gauss_blur_1_rd134_res = dark_gauss_blur_1_rd134_select(dark, d0, d1, dynamic_address);
	set_at<2144, 2304>(result, dark_gauss_blur_1_rd134_res);
	hw_uint<16> dark_gauss_blur_1_rd135_res = dark_gauss_blur_1_rd135_select(dark, d0, d1, dynamic_address);
	set_at<2160, 2304>(result, dark_gauss_blur_1_rd135_res);
	hw_uint<16> dark_gauss_blur_1_rd136_res = dark_gauss_blur_1_rd136_select(dark, d0, d1, dynamic_address);
	set_at<2176, 2304>(result, dark_gauss_blur_1_rd136_res);
	hw_uint<16> dark_gauss_blur_1_rd137_res = dark_gauss_blur_1_rd137_select(dark, d0, d1, dynamic_address);
	set_at<2192, 2304>(result, dark_gauss_blur_1_rd137_res);
	hw_uint<16> dark_gauss_blur_1_rd138_res = dark_gauss_blur_1_rd138_select(dark, d0, d1, dynamic_address);
	set_at<2208, 2304>(result, dark_gauss_blur_1_rd138_res);
	hw_uint<16> dark_gauss_blur_1_rd139_res = dark_gauss_blur_1_rd139_select(dark, d0, d1, dynamic_address);
	set_at<2224, 2304>(result, dark_gauss_blur_1_rd139_res);
	hw_uint<16> dark_gauss_blur_1_rd140_res = dark_gauss_blur_1_rd140_select(dark, d0, d1, dynamic_address);
	set_at<2240, 2304>(result, dark_gauss_blur_1_rd140_res);
	hw_uint<16> dark_gauss_blur_1_rd141_res = dark_gauss_blur_1_rd141_select(dark, d0, d1, dynamic_address);
	set_at<2256, 2304>(result, dark_gauss_blur_1_rd141_res);
	hw_uint<16> dark_gauss_blur_1_rd142_res = dark_gauss_blur_1_rd142_select(dark, d0, d1, dynamic_address);
	set_at<2272, 2304>(result, dark_gauss_blur_1_rd142_res);
	hw_uint<16> dark_gauss_blur_1_rd143_res = dark_gauss_blur_1_rd143_select(dark, d0, d1, dynamic_address);
	set_at<2288, 2304>(result, dark_gauss_blur_1_rd143_res);
	return result;
}

// dark_laplace_diff_0_update_0_read
//	dark_laplace_diff_0_rd0
//	dark_laplace_diff_0_rd1
//	dark_laplace_diff_0_rd2
//	dark_laplace_diff_0_rd3
//	dark_laplace_diff_0_rd4
//	dark_laplace_diff_0_rd5
//	dark_laplace_diff_0_rd6
//	dark_laplace_diff_0_rd7
//	dark_laplace_diff_0_rd8
//	dark_laplace_diff_0_rd9
//	dark_laplace_diff_0_rd10
//	dark_laplace_diff_0_rd11
//	dark_laplace_diff_0_rd12
//	dark_laplace_diff_0_rd13
//	dark_laplace_diff_0_rd14
//	dark_laplace_diff_0_rd15
inline hw_uint<256> dark_dark_laplace_diff_0_update_0_read_bundle_read(dark_cache& dark, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // dark_laplace_diff_0_rd0
    // dark_laplace_diff_0_rd1
    // dark_laplace_diff_0_rd2
    // dark_laplace_diff_0_rd3
    // dark_laplace_diff_0_rd4
    // dark_laplace_diff_0_rd5
    // dark_laplace_diff_0_rd6
    // dark_laplace_diff_0_rd7
    // dark_laplace_diff_0_rd8
    // dark_laplace_diff_0_rd9
    // dark_laplace_diff_0_rd10
    // dark_laplace_diff_0_rd11
    // dark_laplace_diff_0_rd12
    // dark_laplace_diff_0_rd13
    // dark_laplace_diff_0_rd14
    // dark_laplace_diff_0_rd15

	hw_uint<256> result;
	hw_uint<16> dark_laplace_diff_0_rd0_res = dark_laplace_diff_0_rd0_select(dark, d0, d1, dynamic_address);
	set_at<0, 256>(result, dark_laplace_diff_0_rd0_res);
	hw_uint<16> dark_laplace_diff_0_rd1_res = dark_laplace_diff_0_rd1_select(dark, d0, d1, dynamic_address);
	set_at<16, 256>(result, dark_laplace_diff_0_rd1_res);
	hw_uint<16> dark_laplace_diff_0_rd2_res = dark_laplace_diff_0_rd2_select(dark, d0, d1, dynamic_address);
	set_at<32, 256>(result, dark_laplace_diff_0_rd2_res);
	hw_uint<16> dark_laplace_diff_0_rd3_res = dark_laplace_diff_0_rd3_select(dark, d0, d1, dynamic_address);
	set_at<48, 256>(result, dark_laplace_diff_0_rd3_res);
	hw_uint<16> dark_laplace_diff_0_rd4_res = dark_laplace_diff_0_rd4_select(dark, d0, d1, dynamic_address);
	set_at<64, 256>(result, dark_laplace_diff_0_rd4_res);
	hw_uint<16> dark_laplace_diff_0_rd5_res = dark_laplace_diff_0_rd5_select(dark, d0, d1, dynamic_address);
	set_at<80, 256>(result, dark_laplace_diff_0_rd5_res);
	hw_uint<16> dark_laplace_diff_0_rd6_res = dark_laplace_diff_0_rd6_select(dark, d0, d1, dynamic_address);
	set_at<96, 256>(result, dark_laplace_diff_0_rd6_res);
	hw_uint<16> dark_laplace_diff_0_rd7_res = dark_laplace_diff_0_rd7_select(dark, d0, d1, dynamic_address);
	set_at<112, 256>(result, dark_laplace_diff_0_rd7_res);
	hw_uint<16> dark_laplace_diff_0_rd8_res = dark_laplace_diff_0_rd8_select(dark, d0, d1, dynamic_address);
	set_at<128, 256>(result, dark_laplace_diff_0_rd8_res);
	hw_uint<16> dark_laplace_diff_0_rd9_res = dark_laplace_diff_0_rd9_select(dark, d0, d1, dynamic_address);
	set_at<144, 256>(result, dark_laplace_diff_0_rd9_res);
	hw_uint<16> dark_laplace_diff_0_rd10_res = dark_laplace_diff_0_rd10_select(dark, d0, d1, dynamic_address);
	set_at<160, 256>(result, dark_laplace_diff_0_rd10_res);
	hw_uint<16> dark_laplace_diff_0_rd11_res = dark_laplace_diff_0_rd11_select(dark, d0, d1, dynamic_address);
	set_at<176, 256>(result, dark_laplace_diff_0_rd11_res);
	hw_uint<16> dark_laplace_diff_0_rd12_res = dark_laplace_diff_0_rd12_select(dark, d0, d1, dynamic_address);
	set_at<192, 256>(result, dark_laplace_diff_0_rd12_res);
	hw_uint<16> dark_laplace_diff_0_rd13_res = dark_laplace_diff_0_rd13_select(dark, d0, d1, dynamic_address);
	set_at<208, 256>(result, dark_laplace_diff_0_rd13_res);
	hw_uint<16> dark_laplace_diff_0_rd14_res = dark_laplace_diff_0_rd14_select(dark, d0, d1, dynamic_address);
	set_at<224, 256>(result, dark_laplace_diff_0_rd14_res);
	hw_uint<16> dark_laplace_diff_0_rd15_res = dark_laplace_diff_0_rd15_select(dark, d0, d1, dynamic_address);
	set_at<240, 256>(result, dark_laplace_diff_0_rd15_res);
	return result;
}

// dark_update_0_write
//	dark_dark_update_0_write0
//	dark_dark_update_0_write1
//	dark_dark_update_0_write2
//	dark_dark_update_0_write3
//	dark_dark_update_0_write4
//	dark_dark_update_0_write5
//	dark_dark_update_0_write6
//	dark_dark_update_0_write7
//	dark_dark_update_0_write8
//	dark_dark_update_0_write9
//	dark_dark_update_0_write10
//	dark_dark_update_0_write11
//	dark_dark_update_0_write12
//	dark_dark_update_0_write13
//	dark_dark_update_0_write14
//	dark_dark_update_0_write15
inline void dark_dark_update_0_write_bundle_write(hw_uint<256>& dark_update_0_write, dark_cache& dark, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_dark_update_0_write0_res = dark_update_0_write.extract<0, 15>();
	dark_dark_update_0_write0_write(dark_dark_update_0_write0_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write1_res = dark_update_0_write.extract<16, 31>();
	dark_dark_update_0_write1_write(dark_dark_update_0_write1_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write2_res = dark_update_0_write.extract<32, 47>();
	dark_dark_update_0_write2_write(dark_dark_update_0_write2_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write3_res = dark_update_0_write.extract<48, 63>();
	dark_dark_update_0_write3_write(dark_dark_update_0_write3_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write4_res = dark_update_0_write.extract<64, 79>();
	dark_dark_update_0_write4_write(dark_dark_update_0_write4_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write5_res = dark_update_0_write.extract<80, 95>();
	dark_dark_update_0_write5_write(dark_dark_update_0_write5_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write6_res = dark_update_0_write.extract<96, 111>();
	dark_dark_update_0_write6_write(dark_dark_update_0_write6_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write7_res = dark_update_0_write.extract<112, 127>();
	dark_dark_update_0_write7_write(dark_dark_update_0_write7_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write8_res = dark_update_0_write.extract<128, 143>();
	dark_dark_update_0_write8_write(dark_dark_update_0_write8_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write9_res = dark_update_0_write.extract<144, 159>();
	dark_dark_update_0_write9_write(dark_dark_update_0_write9_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write10_res = dark_update_0_write.extract<160, 175>();
	dark_dark_update_0_write10_write(dark_dark_update_0_write10_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write11_res = dark_update_0_write.extract<176, 191>();
	dark_dark_update_0_write11_write(dark_dark_update_0_write11_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write12_res = dark_update_0_write.extract<192, 207>();
	dark_dark_update_0_write12_write(dark_dark_update_0_write12_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write13_res = dark_update_0_write.extract<208, 223>();
	dark_dark_update_0_write13_write(dark_dark_update_0_write13_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write14_res = dark_update_0_write.extract<224, 239>();
	dark_dark_update_0_write14_write(dark_dark_update_0_write14_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write15_res = dark_update_0_write.extract<240, 255>();
	dark_dark_update_0_write15_write(dark_dark_update_0_write15_res, dark, d0, d1, dynamic_address);
}

// dark_weights_update_0_read
//	dark_weights_rd0
//	dark_weights_rd1
//	dark_weights_rd2
//	dark_weights_rd3
//	dark_weights_rd4
//	dark_weights_rd5
//	dark_weights_rd6
//	dark_weights_rd7
//	dark_weights_rd8
//	dark_weights_rd9
//	dark_weights_rd10
//	dark_weights_rd11
//	dark_weights_rd12
//	dark_weights_rd13
//	dark_weights_rd14
//	dark_weights_rd15
inline hw_uint<256> dark_dark_weights_update_0_read_bundle_read(dark_cache& dark, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // dark_weights_rd0
    // dark_weights_rd1
    // dark_weights_rd2
    // dark_weights_rd3
    // dark_weights_rd4
    // dark_weights_rd5
    // dark_weights_rd6
    // dark_weights_rd7
    // dark_weights_rd8
    // dark_weights_rd9
    // dark_weights_rd10
    // dark_weights_rd11
    // dark_weights_rd12
    // dark_weights_rd13
    // dark_weights_rd14
    // dark_weights_rd15

	hw_uint<256> result;
	hw_uint<16> dark_weights_rd0_res = dark_weights_rd0_select(dark, d0, d1, dynamic_address);
	set_at<0, 256>(result, dark_weights_rd0_res);
	hw_uint<16> dark_weights_rd1_res = dark_weights_rd1_select(dark, d0, d1, dynamic_address);
	set_at<16, 256>(result, dark_weights_rd1_res);
	hw_uint<16> dark_weights_rd2_res = dark_weights_rd2_select(dark, d0, d1, dynamic_address);
	set_at<32, 256>(result, dark_weights_rd2_res);
	hw_uint<16> dark_weights_rd3_res = dark_weights_rd3_select(dark, d0, d1, dynamic_address);
	set_at<48, 256>(result, dark_weights_rd3_res);
	hw_uint<16> dark_weights_rd4_res = dark_weights_rd4_select(dark, d0, d1, dynamic_address);
	set_at<64, 256>(result, dark_weights_rd4_res);
	hw_uint<16> dark_weights_rd5_res = dark_weights_rd5_select(dark, d0, d1, dynamic_address);
	set_at<80, 256>(result, dark_weights_rd5_res);
	hw_uint<16> dark_weights_rd6_res = dark_weights_rd6_select(dark, d0, d1, dynamic_address);
	set_at<96, 256>(result, dark_weights_rd6_res);
	hw_uint<16> dark_weights_rd7_res = dark_weights_rd7_select(dark, d0, d1, dynamic_address);
	set_at<112, 256>(result, dark_weights_rd7_res);
	hw_uint<16> dark_weights_rd8_res = dark_weights_rd8_select(dark, d0, d1, dynamic_address);
	set_at<128, 256>(result, dark_weights_rd8_res);
	hw_uint<16> dark_weights_rd9_res = dark_weights_rd9_select(dark, d0, d1, dynamic_address);
	set_at<144, 256>(result, dark_weights_rd9_res);
	hw_uint<16> dark_weights_rd10_res = dark_weights_rd10_select(dark, d0, d1, dynamic_address);
	set_at<160, 256>(result, dark_weights_rd10_res);
	hw_uint<16> dark_weights_rd11_res = dark_weights_rd11_select(dark, d0, d1, dynamic_address);
	set_at<176, 256>(result, dark_weights_rd11_res);
	hw_uint<16> dark_weights_rd12_res = dark_weights_rd12_select(dark, d0, d1, dynamic_address);
	set_at<192, 256>(result, dark_weights_rd12_res);
	hw_uint<16> dark_weights_rd13_res = dark_weights_rd13_select(dark, d0, d1, dynamic_address);
	set_at<208, 256>(result, dark_weights_rd13_res);
	hw_uint<16> dark_weights_rd14_res = dark_weights_rd14_select(dark, d0, d1, dynamic_address);
	set_at<224, 256>(result, dark_weights_rd14_res);
	hw_uint<16> dark_weights_rd15_res = dark_weights_rd15_select(dark, d0, d1, dynamic_address);
	set_at<240, 256>(result, dark_weights_rd15_res);
	return result;
}

#include "hw_classes.h"

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_to_dark_gauss_ds_1_rd0_cache {
	// RAM Box: {[0, 1936], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_to_dark_gauss_ds_1_rd1_cache {
	// RAM Box: {[2, 1938], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_to_dark_gauss_ds_1_rd2_cache {
	// RAM Box: {[4, 1940], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_to_dark_gauss_ds_1_rd3_cache {
	// RAM Box: {[6, 1942], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8_to_dark_gauss_ds_1_rd4_cache {
	// RAM Box: {[8, 1944], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10_to_dark_gauss_ds_1_rd5_cache {
	// RAM Box: {[10, 1946], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12_to_dark_gauss_ds_1_rd6_cache {
	// RAM Box: {[12, 1948], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14_to_dark_gauss_ds_1_rd7_cache {
	// RAM Box: {[14, 1950], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_cache {
  // # of banks: 8
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_to_dark_gauss_ds_1_rd0_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_to_dark_gauss_ds_1_rd0;
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_to_dark_gauss_ds_1_rd1_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_to_dark_gauss_ds_1_rd1;
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_to_dark_gauss_ds_1_rd2_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_to_dark_gauss_ds_1_rd2;
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_to_dark_gauss_ds_1_rd3_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_to_dark_gauss_ds_1_rd3;
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8_to_dark_gauss_ds_1_rd4_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8_to_dark_gauss_ds_1_rd4;
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10_to_dark_gauss_ds_1_rd5_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10_to_dark_gauss_ds_1_rd5;
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12_to_dark_gauss_ds_1_rd6_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12_to_dark_gauss_ds_1_rd6;
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14_to_dark_gauss_ds_1_rd7_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14_to_dark_gauss_ds_1_rd7;
};



inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_to_dark_gauss_ds_1_rd0.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10_to_dark_gauss_ds_1_rd5.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write11_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write11, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12_to_dark_gauss_ds_1_rd6.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write13_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write13, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14_to_dark_gauss_ds_1_rd7.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write15_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write15, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_to_dark_gauss_ds_1_rd1.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_to_dark_gauss_ds_1_rd2.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_to_dark_gauss_ds_1_rd3.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8_to_dark_gauss_ds_1_rd4.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write9_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write9, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_gauss_ds_1_rd0_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd0 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_to_dark_gauss_ds_1_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_rd1_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd1 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[2 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_to_dark_gauss_ds_1_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_rd2_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd2 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[4 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_to_dark_gauss_ds_1_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_rd3_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd3 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[6 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_to_dark_gauss_ds_1_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_rd4_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd4 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[8 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8_to_dark_gauss_ds_1_rd4.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_rd5_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd5 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[10 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10_to_dark_gauss_ds_1_rd5.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_rd6_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd6 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[12 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12_to_dark_gauss_ds_1_rd6.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_rd7_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd7 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[14 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14_to_dark_gauss_ds_1_rd7.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_1_update_0_write
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write9
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write11
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write13
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write15
inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write_bundle_write(hw_uint<256>& dark_gauss_blur_1_update_0_write, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_res = dark_gauss_blur_1_update_0_write.extract<0, 15>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1_res = dark_gauss_blur_1_update_0_write.extract<16, 31>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_res = dark_gauss_blur_1_update_0_write.extract<32, 47>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3_res = dark_gauss_blur_1_update_0_write.extract<48, 63>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_res = dark_gauss_blur_1_update_0_write.extract<64, 79>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5_res = dark_gauss_blur_1_update_0_write.extract<80, 95>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_res = dark_gauss_blur_1_update_0_write.extract<96, 111>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7_res = dark_gauss_blur_1_update_0_write.extract<112, 127>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8_res = dark_gauss_blur_1_update_0_write.extract<128, 143>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write8_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write9_res = dark_gauss_blur_1_update_0_write.extract<144, 159>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write9_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write9_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10_res = dark_gauss_blur_1_update_0_write.extract<160, 175>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write10_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write11_res = dark_gauss_blur_1_update_0_write.extract<176, 191>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write11_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write11_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12_res = dark_gauss_blur_1_update_0_write.extract<192, 207>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write12_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write13_res = dark_gauss_blur_1_update_0_write.extract<208, 223>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write13_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write13_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14_res = dark_gauss_blur_1_update_0_write.extract<224, 239>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write14_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write15_res = dark_gauss_blur_1_update_0_write.extract<240, 255>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write15_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write15_res, dark_gauss_blur_1, d0, d1, dynamic_address);
}

// dark_gauss_ds_1_update_0_read
//	dark_gauss_ds_1_rd0
//	dark_gauss_ds_1_rd1
//	dark_gauss_ds_1_rd2
//	dark_gauss_ds_1_rd3
//	dark_gauss_ds_1_rd4
//	dark_gauss_ds_1_rd5
//	dark_gauss_ds_1_rd6
//	dark_gauss_ds_1_rd7
inline hw_uint<128> dark_gauss_blur_1_dark_gauss_ds_1_update_0_read_bundle_read(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // dark_gauss_ds_1_rd0
    // dark_gauss_ds_1_rd1
    // dark_gauss_ds_1_rd2
    // dark_gauss_ds_1_rd3
    // dark_gauss_ds_1_rd4
    // dark_gauss_ds_1_rd5
    // dark_gauss_ds_1_rd6
    // dark_gauss_ds_1_rd7

	hw_uint<128> result;
	hw_uint<16> dark_gauss_ds_1_rd0_res = dark_gauss_ds_1_rd0_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, dark_gauss_ds_1_rd0_res);
	hw_uint<16> dark_gauss_ds_1_rd1_res = dark_gauss_ds_1_rd1_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, dark_gauss_ds_1_rd1_res);
	hw_uint<16> dark_gauss_ds_1_rd2_res = dark_gauss_ds_1_rd2_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, dark_gauss_ds_1_rd2_res);
	hw_uint<16> dark_gauss_ds_1_rd3_res = dark_gauss_ds_1_rd3_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, dark_gauss_ds_1_rd3_res);
	hw_uint<16> dark_gauss_ds_1_rd4_res = dark_gauss_ds_1_rd4_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, dark_gauss_ds_1_rd4_res);
	hw_uint<16> dark_gauss_ds_1_rd5_res = dark_gauss_ds_1_rd5_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, dark_gauss_ds_1_rd5_res);
	hw_uint<16> dark_gauss_ds_1_rd6_res = dark_gauss_ds_1_rd6_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, dark_gauss_ds_1_rd6_res);
	hw_uint<16> dark_gauss_ds_1_rd7_res = dark_gauss_ds_1_rd7_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, dark_gauss_ds_1_rd7_res);
	return result;
}

#include "hw_classes.h"

struct dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_to_dark_gauss_ds_2_rd0_cache {
	// RAM Box: {[0, 960], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_to_dark_gauss_ds_2_rd1_cache {
	// RAM Box: {[2, 962], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4_to_dark_gauss_ds_2_rd2_cache {
	// RAM Box: {[4, 964], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6_to_dark_gauss_ds_2_rd3_cache {
	// RAM Box: {[6, 966], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_2_cache {
  // # of banks: 4
  dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_to_dark_gauss_ds_2_rd0_cache dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_to_dark_gauss_ds_2_rd0;
  dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_to_dark_gauss_ds_2_rd1_cache dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_to_dark_gauss_ds_2_rd1;
  dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4_to_dark_gauss_ds_2_rd2_cache dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4_to_dark_gauss_ds_2_rd2;
  dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6_to_dark_gauss_ds_2_rd3_cache dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6_to_dark_gauss_ds_2_rd3;
};



inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_to_dark_gauss_ds_2_rd0.push(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0);
}

inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_to_dark_gauss_ds_2_rd1.push(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2);
}

inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4_to_dark_gauss_ds_2_rd2.push(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4);
}

inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write5_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write5, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6_to_dark_gauss_ds_2_rd3.push(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6);
}

inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write7_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write7, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_gauss_ds_2_rd0_select(dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_rd0 read pattern: { dark_gauss_ds_2_update_0[d0, d1] -> dark_gauss_blur_2[8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0 = dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_to_dark_gauss_ds_2_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_rd1_select(dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_rd1 read pattern: { dark_gauss_ds_2_update_0[d0, d1] -> dark_gauss_blur_2[2 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2 = dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_to_dark_gauss_ds_2_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_rd2_select(dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_rd2 read pattern: { dark_gauss_ds_2_update_0[d0, d1] -> dark_gauss_blur_2[4 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4 = dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4_to_dark_gauss_ds_2_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_rd3_select(dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_rd3 read pattern: { dark_gauss_ds_2_update_0[d0, d1] -> dark_gauss_blur_2[6 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6 = dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6_to_dark_gauss_ds_2_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_2_update_0_write
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write5
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write7
inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write_bundle_write(hw_uint<128>& dark_gauss_blur_2_update_0_write, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_res = dark_gauss_blur_2_update_0_write.extract<0, 15>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_res, dark_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1_res = dark_gauss_blur_2_update_0_write.extract<16, 31>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1_res, dark_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_res = dark_gauss_blur_2_update_0_write.extract<32, 47>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_res, dark_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3_res = dark_gauss_blur_2_update_0_write.extract<48, 63>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3_res, dark_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4_res = dark_gauss_blur_2_update_0_write.extract<64, 79>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write4_res, dark_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write5_res = dark_gauss_blur_2_update_0_write.extract<80, 95>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write5_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write5_res, dark_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6_res = dark_gauss_blur_2_update_0_write.extract<96, 111>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write6_res, dark_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write7_res = dark_gauss_blur_2_update_0_write.extract<112, 127>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write7_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write7_res, dark_gauss_blur_2, d0, d1, dynamic_address);
}

// dark_gauss_ds_2_update_0_read
//	dark_gauss_ds_2_rd0
//	dark_gauss_ds_2_rd1
//	dark_gauss_ds_2_rd2
//	dark_gauss_ds_2_rd3
inline hw_uint<64> dark_gauss_blur_2_dark_gauss_ds_2_update_0_read_bundle_read(dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // dark_gauss_ds_2_rd0
    // dark_gauss_ds_2_rd1
    // dark_gauss_ds_2_rd2
    // dark_gauss_ds_2_rd3

	hw_uint<64> result;
	hw_uint<16> dark_gauss_ds_2_rd0_res = dark_gauss_ds_2_rd0_select(dark_gauss_blur_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, dark_gauss_ds_2_rd0_res);
	hw_uint<16> dark_gauss_ds_2_rd1_res = dark_gauss_ds_2_rd1_select(dark_gauss_blur_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, dark_gauss_ds_2_rd1_res);
	hw_uint<16> dark_gauss_ds_2_rd2_res = dark_gauss_ds_2_rd2_select(dark_gauss_blur_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, dark_gauss_ds_2_rd2_res);
	hw_uint<16> dark_gauss_ds_2_rd3_res = dark_gauss_ds_2_rd3_select(dark_gauss_blur_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, dark_gauss_ds_2_rd3_res);
	return result;
}

#include "hw_classes.h"

struct dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_to_dark_gauss_ds_3_rd0_cache {
	// RAM Box: {[0, 476], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2_to_dark_gauss_ds_3_rd1_cache {
	// RAM Box: {[2, 478], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_3_cache {
  // # of banks: 2
  dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_to_dark_gauss_ds_3_rd0_cache dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_to_dark_gauss_ds_3_rd0;
  dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2_to_dark_gauss_ds_3_rd1_cache dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2_to_dark_gauss_ds_3_rd1;
};



inline void dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_write(hw_uint<16>& dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0, dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_3.dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_to_dark_gauss_ds_3_rd0.push(dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0);
}

inline void dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1_write(hw_uint<16>& dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1, dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2_write(hw_uint<16>& dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2, dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_3.dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2_to_dark_gauss_ds_3_rd1.push(dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2);
}

inline void dark_gauss_blur_3_dark_gauss_blur_3_update_0_write3_write(hw_uint<16>& dark_gauss_blur_3_dark_gauss_blur_3_update_0_write3, dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_gauss_ds_3_rd0_select(dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_3_rd0 read pattern: { dark_gauss_ds_3_update_0[d0, d1] -> dark_gauss_blur_3[4d0, 2d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { dark_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 27] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  auto value_dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0 = dark_gauss_blur_3.dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_to_dark_gauss_ds_3_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_3_rd1_select(dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_3_rd1 read pattern: { dark_gauss_ds_3_update_0[d0, d1] -> dark_gauss_blur_3[2 + 4d0, 2d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { dark_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 27] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  auto value_dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2 = dark_gauss_blur_3.dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2_to_dark_gauss_ds_3_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_3_update_0_write
//	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0
//	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1
//	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2
//	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write3
inline void dark_gauss_blur_3_dark_gauss_blur_3_update_0_write_bundle_write(hw_uint<64>& dark_gauss_blur_3_update_0_write, dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_res = dark_gauss_blur_3_update_0_write.extract<0, 15>();
	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_write(dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_res, dark_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1_res = dark_gauss_blur_3_update_0_write.extract<16, 31>();
	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1_write(dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1_res, dark_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2_res = dark_gauss_blur_3_update_0_write.extract<32, 47>();
	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2_write(dark_gauss_blur_3_dark_gauss_blur_3_update_0_write2_res, dark_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_3_dark_gauss_blur_3_update_0_write3_res = dark_gauss_blur_3_update_0_write.extract<48, 63>();
	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write3_write(dark_gauss_blur_3_dark_gauss_blur_3_update_0_write3_res, dark_gauss_blur_3, d0, d1, dynamic_address);
}

// dark_gauss_ds_3_update_0_read
//	dark_gauss_ds_3_rd0
//	dark_gauss_ds_3_rd1
inline hw_uint<32> dark_gauss_blur_3_dark_gauss_ds_3_update_0_read_bundle_read(dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // dark_gauss_ds_3_rd0
    // dark_gauss_ds_3_rd1

	hw_uint<32> result;
	hw_uint<16> dark_gauss_ds_3_rd0_res = dark_gauss_ds_3_rd0_select(dark_gauss_blur_3, d0, d1, dynamic_address);
	set_at<0, 32>(result, dark_gauss_ds_3_rd0_res);
	hw_uint<16> dark_gauss_ds_3_rd1_res = dark_gauss_ds_3_rd1_select(dark_gauss_blur_3, d0, d1, dynamic_address);
	set_at<16, 32>(result, dark_gauss_ds_3_rd1_res);
	return result;
}

#include "hw_classes.h"

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd0_cache {
	// RAM Box: {[0, 968], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd1_cache {
	// RAM Box: {[0, 968], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_to_dark_laplace_us_0_rd10_cache {
	// RAM Box: {[5, 973], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_to_dark_laplace_us_0_rd11_cache {
	// RAM Box: {[5, 973], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_to_dark_laplace_us_0_rd12_cache {
	// RAM Box: {[6, 974], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_to_dark_laplace_us_0_rd13_cache {
	// RAM Box: {[6, 974], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_to_dark_laplace_us_0_rd14_cache {
	// RAM Box: {[7, 975], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_to_dark_laplace_us_0_rd15_cache {
	// RAM Box: {[7, 975], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd2_cache {
	// RAM Box: {[1, 969], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd3_cache {
	// RAM Box: {[1, 969], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd4_cache {
	// RAM Box: {[2, 970], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd5_cache {
	// RAM Box: {[2, 970], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd6_cache {
	// RAM Box: {[3, 971], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd7_cache {
	// RAM Box: {[3, 971], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_to_dark_laplace_us_0_rd8_cache {
	// RAM Box: {[4, 972], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_to_dark_laplace_us_0_rd9_cache {
	// RAM Box: {[4, 972], [0, 542]}
	// Capacity: 122
	// # of read delays: 121
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121
	fifo<hw_uint<16>, 122> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(121 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10_cache {
	// RAM Box: {[0, 968], [0, 542]}
	// Capacity: 246
	// # of read delays: 6
  // 0, 1, 122, 123, 244, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 120> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_123() {
		return f6;
	}

	inline hw_uint<16> peek_243() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_244() {
		return f8;
	}

	inline hw_uint<16> peek_245() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10_cache {
	// RAM Box: {[1, 969], [0, 542]}
	// Capacity: 246
	// # of read delays: 6
  // 0, 1, 122, 123, 244, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 120> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_123() {
		return f6;
	}

	inline hw_uint<16> peek_243() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_244() {
		return f8;
	}

	inline hw_uint<16> peek_245() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10_cache {
	// RAM Box: {[2, 970], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10_cache {
	// RAM Box: {[3, 971], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10_cache {
	// RAM Box: {[4, 972], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10_cache {
	// RAM Box: {[5, 973], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10_cache {
	// RAM Box: {[6, 974], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10_cache {
	// RAM Box: {[7, 975], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_cache {
  // # of banks: 24
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd0_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd0;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd1_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd1;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_to_dark_laplace_us_0_rd10_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_to_dark_laplace_us_0_rd10;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_to_dark_laplace_us_0_rd11_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_to_dark_laplace_us_0_rd11;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_to_dark_laplace_us_0_rd12_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_to_dark_laplace_us_0_rd12;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_to_dark_laplace_us_0_rd13_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_to_dark_laplace_us_0_rd13;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_to_dark_laplace_us_0_rd14_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_to_dark_laplace_us_0_rd14;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_to_dark_laplace_us_0_rd15_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_to_dark_laplace_us_0_rd15;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd2_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd2;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd3_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd3;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd4_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd4;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd5_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd5;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd6_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd6;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd7_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd7;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_to_dark_laplace_us_0_rd8_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_to_dark_laplace_us_0_rd8;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_to_dark_laplace_us_0_rd9_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_to_dark_laplace_us_0_rd9;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10;
};



inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd0.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd1.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0);
}

inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd2.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd3.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1);
}

inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd4.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd5.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2);
}

inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd6.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd7.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3);
}

inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_to_dark_laplace_us_0_rd8.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_to_dark_laplace_us_0_rd9.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4);
}

inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_to_dark_laplace_us_0_rd10.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_to_dark_laplace_us_0_rd11.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5);
}

inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_to_dark_laplace_us_0_rd12.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_to_dark_laplace_us_0_rd13.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6);
}

inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_to_dark_laplace_us_0_rd14.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_to_dark_laplace_us_0_rd15.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7);
}

inline hw_uint<16> dark_gauss_blur_2_rd0_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd0 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd1_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd1 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd10_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd10 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd11_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd11 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd12_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd12 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd13_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd13 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd14_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd14 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd15_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd15 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd16_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd16 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd17_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd17 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd18_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd18 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd19_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd19 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd2_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd2 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd20_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd20 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd21_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd21 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd22_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd22 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd23_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd23 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd24_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd24 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd25_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd25 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd26_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd26 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd27_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd27 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd28_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd28 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd29_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd29 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd3_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd3 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd30_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd30 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd31_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd31 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd32_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd32 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd33_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd33 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd34_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd34 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd35_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd35 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd36_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd36 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd37_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd37 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd38_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd38 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd39_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd39 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd4_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd4 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd40_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd40 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd41_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd41 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd42_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd42 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd43_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd43 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd44_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd44 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd45_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd45 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd46_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd46 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd47_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd47 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd48_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd48 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd49_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd49 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd5_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd5 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd50_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd50 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd51_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd51 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd52_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd52 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd53_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd53 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd54_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd54 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd55_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd55 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd56_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd56 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd57_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd57 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd58_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd58 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd59_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd59 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd6_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd6 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd60_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd60 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[8 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10.peek_244();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd61_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd61 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[8 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10.peek_122();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd62_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd62 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[8 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10.peek_0();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd63_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd63 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd64_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd64 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd65_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd65 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd66_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd66 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[8 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10.peek_244();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd67_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd67 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[8 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10.peek_122();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd68_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd68 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[8 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10.peek_0();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd69_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd69 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[9 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10.peek_244();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd7_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd7 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd70_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd70 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[9 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10.peek_122();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd71_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd71 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[9 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10.peek_0();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd8_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd8 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd9_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd9 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd0_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd0 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd1_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd1 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd2_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd2 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd3_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd3 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd4_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd4 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd5_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd5 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd6_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd6 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd7_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd7 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd0_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd0 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd1_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd1 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd10_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd10 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_to_dark_laplace_us_0_rd10.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd11_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd11 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[5 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_to_dark_laplace_us_0_rd11.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd12_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd12 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_to_dark_laplace_us_0_rd12.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd13_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd13 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[6 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_to_dark_laplace_us_0_rd13.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd14_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd14 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_to_dark_laplace_us_0_rd14.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd15_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd15 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[7 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_to_dark_laplace_us_0_rd15.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd2_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd2 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[1 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd3_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd3 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[1 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd4_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd4 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd4.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd5_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd5 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[2 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd5.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd6_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd6 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd6.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd7_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd7 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[3 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd7.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd8_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd8 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_to_dark_laplace_us_0_rd8.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd9_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd9 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[4 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_to_dark_laplace_us_0_rd9.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((121 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4;
  return 0;
}

// # of bundles = 4
// dark_gauss_blur_2_update_0_read
//	dark_gauss_blur_2_rd0
//	dark_gauss_blur_2_rd1
//	dark_gauss_blur_2_rd2
//	dark_gauss_blur_2_rd3
//	dark_gauss_blur_2_rd4
//	dark_gauss_blur_2_rd5
//	dark_gauss_blur_2_rd6
//	dark_gauss_blur_2_rd7
//	dark_gauss_blur_2_rd8
//	dark_gauss_blur_2_rd9
//	dark_gauss_blur_2_rd10
//	dark_gauss_blur_2_rd11
//	dark_gauss_blur_2_rd12
//	dark_gauss_blur_2_rd13
//	dark_gauss_blur_2_rd14
//	dark_gauss_blur_2_rd15
//	dark_gauss_blur_2_rd16
//	dark_gauss_blur_2_rd17
//	dark_gauss_blur_2_rd18
//	dark_gauss_blur_2_rd19
//	dark_gauss_blur_2_rd20
//	dark_gauss_blur_2_rd21
//	dark_gauss_blur_2_rd22
//	dark_gauss_blur_2_rd23
//	dark_gauss_blur_2_rd24
//	dark_gauss_blur_2_rd25
//	dark_gauss_blur_2_rd26
//	dark_gauss_blur_2_rd27
//	dark_gauss_blur_2_rd28
//	dark_gauss_blur_2_rd29
//	dark_gauss_blur_2_rd30
//	dark_gauss_blur_2_rd31
//	dark_gauss_blur_2_rd32
//	dark_gauss_blur_2_rd33
//	dark_gauss_blur_2_rd34
//	dark_gauss_blur_2_rd35
//	dark_gauss_blur_2_rd36
//	dark_gauss_blur_2_rd37
//	dark_gauss_blur_2_rd38
//	dark_gauss_blur_2_rd39
//	dark_gauss_blur_2_rd40
//	dark_gauss_blur_2_rd41
//	dark_gauss_blur_2_rd42
//	dark_gauss_blur_2_rd43
//	dark_gauss_blur_2_rd44
//	dark_gauss_blur_2_rd45
//	dark_gauss_blur_2_rd46
//	dark_gauss_blur_2_rd47
//	dark_gauss_blur_2_rd48
//	dark_gauss_blur_2_rd49
//	dark_gauss_blur_2_rd50
//	dark_gauss_blur_2_rd51
//	dark_gauss_blur_2_rd52
//	dark_gauss_blur_2_rd53
//	dark_gauss_blur_2_rd54
//	dark_gauss_blur_2_rd55
//	dark_gauss_blur_2_rd56
//	dark_gauss_blur_2_rd57
//	dark_gauss_blur_2_rd58
//	dark_gauss_blur_2_rd59
//	dark_gauss_blur_2_rd60
//	dark_gauss_blur_2_rd61
//	dark_gauss_blur_2_rd62
//	dark_gauss_blur_2_rd63
//	dark_gauss_blur_2_rd64
//	dark_gauss_blur_2_rd65
//	dark_gauss_blur_2_rd66
//	dark_gauss_blur_2_rd67
//	dark_gauss_blur_2_rd68
//	dark_gauss_blur_2_rd69
//	dark_gauss_blur_2_rd70
//	dark_gauss_blur_2_rd71
inline hw_uint<1152> dark_gauss_ds_1_dark_gauss_blur_2_update_0_read_bundle_read(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 72
    // dark_gauss_blur_2_rd0
    // dark_gauss_blur_2_rd1
    // dark_gauss_blur_2_rd2
    // dark_gauss_blur_2_rd3
    // dark_gauss_blur_2_rd4
    // dark_gauss_blur_2_rd5
    // dark_gauss_blur_2_rd6
    // dark_gauss_blur_2_rd7
    // dark_gauss_blur_2_rd8
    // dark_gauss_blur_2_rd9
    // dark_gauss_blur_2_rd10
    // dark_gauss_blur_2_rd11
    // dark_gauss_blur_2_rd12
    // dark_gauss_blur_2_rd13
    // dark_gauss_blur_2_rd14
    // dark_gauss_blur_2_rd15
    // dark_gauss_blur_2_rd16
    // dark_gauss_blur_2_rd17
    // dark_gauss_blur_2_rd18
    // dark_gauss_blur_2_rd19
    // dark_gauss_blur_2_rd20
    // dark_gauss_blur_2_rd21
    // dark_gauss_blur_2_rd22
    // dark_gauss_blur_2_rd23
    // dark_gauss_blur_2_rd24
    // dark_gauss_blur_2_rd25
    // dark_gauss_blur_2_rd26
    // dark_gauss_blur_2_rd27
    // dark_gauss_blur_2_rd28
    // dark_gauss_blur_2_rd29
    // dark_gauss_blur_2_rd30
    // dark_gauss_blur_2_rd31
    // dark_gauss_blur_2_rd32
    // dark_gauss_blur_2_rd33
    // dark_gauss_blur_2_rd34
    // dark_gauss_blur_2_rd35
    // dark_gauss_blur_2_rd36
    // dark_gauss_blur_2_rd37
    // dark_gauss_blur_2_rd38
    // dark_gauss_blur_2_rd39
    // dark_gauss_blur_2_rd40
    // dark_gauss_blur_2_rd41
    // dark_gauss_blur_2_rd42
    // dark_gauss_blur_2_rd43
    // dark_gauss_blur_2_rd44
    // dark_gauss_blur_2_rd45
    // dark_gauss_blur_2_rd46
    // dark_gauss_blur_2_rd47
    // dark_gauss_blur_2_rd48
    // dark_gauss_blur_2_rd49
    // dark_gauss_blur_2_rd50
    // dark_gauss_blur_2_rd51
    // dark_gauss_blur_2_rd52
    // dark_gauss_blur_2_rd53
    // dark_gauss_blur_2_rd54
    // dark_gauss_blur_2_rd55
    // dark_gauss_blur_2_rd56
    // dark_gauss_blur_2_rd57
    // dark_gauss_blur_2_rd58
    // dark_gauss_blur_2_rd59
    // dark_gauss_blur_2_rd60
    // dark_gauss_blur_2_rd61
    // dark_gauss_blur_2_rd62
    // dark_gauss_blur_2_rd63
    // dark_gauss_blur_2_rd64
    // dark_gauss_blur_2_rd65
    // dark_gauss_blur_2_rd66
    // dark_gauss_blur_2_rd67
    // dark_gauss_blur_2_rd68
    // dark_gauss_blur_2_rd69
    // dark_gauss_blur_2_rd70
    // dark_gauss_blur_2_rd71

	hw_uint<1152> result;
	hw_uint<16> dark_gauss_blur_2_rd0_res = dark_gauss_blur_2_rd0_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 1152>(result, dark_gauss_blur_2_rd0_res);
	hw_uint<16> dark_gauss_blur_2_rd1_res = dark_gauss_blur_2_rd1_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 1152>(result, dark_gauss_blur_2_rd1_res);
	hw_uint<16> dark_gauss_blur_2_rd2_res = dark_gauss_blur_2_rd2_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 1152>(result, dark_gauss_blur_2_rd2_res);
	hw_uint<16> dark_gauss_blur_2_rd3_res = dark_gauss_blur_2_rd3_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 1152>(result, dark_gauss_blur_2_rd3_res);
	hw_uint<16> dark_gauss_blur_2_rd4_res = dark_gauss_blur_2_rd4_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 1152>(result, dark_gauss_blur_2_rd4_res);
	hw_uint<16> dark_gauss_blur_2_rd5_res = dark_gauss_blur_2_rd5_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 1152>(result, dark_gauss_blur_2_rd5_res);
	hw_uint<16> dark_gauss_blur_2_rd6_res = dark_gauss_blur_2_rd6_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 1152>(result, dark_gauss_blur_2_rd6_res);
	hw_uint<16> dark_gauss_blur_2_rd7_res = dark_gauss_blur_2_rd7_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 1152>(result, dark_gauss_blur_2_rd7_res);
	hw_uint<16> dark_gauss_blur_2_rd8_res = dark_gauss_blur_2_rd8_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<128, 1152>(result, dark_gauss_blur_2_rd8_res);
	hw_uint<16> dark_gauss_blur_2_rd9_res = dark_gauss_blur_2_rd9_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<144, 1152>(result, dark_gauss_blur_2_rd9_res);
	hw_uint<16> dark_gauss_blur_2_rd10_res = dark_gauss_blur_2_rd10_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<160, 1152>(result, dark_gauss_blur_2_rd10_res);
	hw_uint<16> dark_gauss_blur_2_rd11_res = dark_gauss_blur_2_rd11_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<176, 1152>(result, dark_gauss_blur_2_rd11_res);
	hw_uint<16> dark_gauss_blur_2_rd12_res = dark_gauss_blur_2_rd12_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<192, 1152>(result, dark_gauss_blur_2_rd12_res);
	hw_uint<16> dark_gauss_blur_2_rd13_res = dark_gauss_blur_2_rd13_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<208, 1152>(result, dark_gauss_blur_2_rd13_res);
	hw_uint<16> dark_gauss_blur_2_rd14_res = dark_gauss_blur_2_rd14_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<224, 1152>(result, dark_gauss_blur_2_rd14_res);
	hw_uint<16> dark_gauss_blur_2_rd15_res = dark_gauss_blur_2_rd15_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<240, 1152>(result, dark_gauss_blur_2_rd15_res);
	hw_uint<16> dark_gauss_blur_2_rd16_res = dark_gauss_blur_2_rd16_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<256, 1152>(result, dark_gauss_blur_2_rd16_res);
	hw_uint<16> dark_gauss_blur_2_rd17_res = dark_gauss_blur_2_rd17_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<272, 1152>(result, dark_gauss_blur_2_rd17_res);
	hw_uint<16> dark_gauss_blur_2_rd18_res = dark_gauss_blur_2_rd18_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<288, 1152>(result, dark_gauss_blur_2_rd18_res);
	hw_uint<16> dark_gauss_blur_2_rd19_res = dark_gauss_blur_2_rd19_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<304, 1152>(result, dark_gauss_blur_2_rd19_res);
	hw_uint<16> dark_gauss_blur_2_rd20_res = dark_gauss_blur_2_rd20_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<320, 1152>(result, dark_gauss_blur_2_rd20_res);
	hw_uint<16> dark_gauss_blur_2_rd21_res = dark_gauss_blur_2_rd21_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<336, 1152>(result, dark_gauss_blur_2_rd21_res);
	hw_uint<16> dark_gauss_blur_2_rd22_res = dark_gauss_blur_2_rd22_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<352, 1152>(result, dark_gauss_blur_2_rd22_res);
	hw_uint<16> dark_gauss_blur_2_rd23_res = dark_gauss_blur_2_rd23_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<368, 1152>(result, dark_gauss_blur_2_rd23_res);
	hw_uint<16> dark_gauss_blur_2_rd24_res = dark_gauss_blur_2_rd24_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<384, 1152>(result, dark_gauss_blur_2_rd24_res);
	hw_uint<16> dark_gauss_blur_2_rd25_res = dark_gauss_blur_2_rd25_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<400, 1152>(result, dark_gauss_blur_2_rd25_res);
	hw_uint<16> dark_gauss_blur_2_rd26_res = dark_gauss_blur_2_rd26_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<416, 1152>(result, dark_gauss_blur_2_rd26_res);
	hw_uint<16> dark_gauss_blur_2_rd27_res = dark_gauss_blur_2_rd27_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<432, 1152>(result, dark_gauss_blur_2_rd27_res);
	hw_uint<16> dark_gauss_blur_2_rd28_res = dark_gauss_blur_2_rd28_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<448, 1152>(result, dark_gauss_blur_2_rd28_res);
	hw_uint<16> dark_gauss_blur_2_rd29_res = dark_gauss_blur_2_rd29_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<464, 1152>(result, dark_gauss_blur_2_rd29_res);
	hw_uint<16> dark_gauss_blur_2_rd30_res = dark_gauss_blur_2_rd30_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<480, 1152>(result, dark_gauss_blur_2_rd30_res);
	hw_uint<16> dark_gauss_blur_2_rd31_res = dark_gauss_blur_2_rd31_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<496, 1152>(result, dark_gauss_blur_2_rd31_res);
	hw_uint<16> dark_gauss_blur_2_rd32_res = dark_gauss_blur_2_rd32_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<512, 1152>(result, dark_gauss_blur_2_rd32_res);
	hw_uint<16> dark_gauss_blur_2_rd33_res = dark_gauss_blur_2_rd33_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<528, 1152>(result, dark_gauss_blur_2_rd33_res);
	hw_uint<16> dark_gauss_blur_2_rd34_res = dark_gauss_blur_2_rd34_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<544, 1152>(result, dark_gauss_blur_2_rd34_res);
	hw_uint<16> dark_gauss_blur_2_rd35_res = dark_gauss_blur_2_rd35_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<560, 1152>(result, dark_gauss_blur_2_rd35_res);
	hw_uint<16> dark_gauss_blur_2_rd36_res = dark_gauss_blur_2_rd36_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<576, 1152>(result, dark_gauss_blur_2_rd36_res);
	hw_uint<16> dark_gauss_blur_2_rd37_res = dark_gauss_blur_2_rd37_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<592, 1152>(result, dark_gauss_blur_2_rd37_res);
	hw_uint<16> dark_gauss_blur_2_rd38_res = dark_gauss_blur_2_rd38_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<608, 1152>(result, dark_gauss_blur_2_rd38_res);
	hw_uint<16> dark_gauss_blur_2_rd39_res = dark_gauss_blur_2_rd39_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<624, 1152>(result, dark_gauss_blur_2_rd39_res);
	hw_uint<16> dark_gauss_blur_2_rd40_res = dark_gauss_blur_2_rd40_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<640, 1152>(result, dark_gauss_blur_2_rd40_res);
	hw_uint<16> dark_gauss_blur_2_rd41_res = dark_gauss_blur_2_rd41_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<656, 1152>(result, dark_gauss_blur_2_rd41_res);
	hw_uint<16> dark_gauss_blur_2_rd42_res = dark_gauss_blur_2_rd42_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<672, 1152>(result, dark_gauss_blur_2_rd42_res);
	hw_uint<16> dark_gauss_blur_2_rd43_res = dark_gauss_blur_2_rd43_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<688, 1152>(result, dark_gauss_blur_2_rd43_res);
	hw_uint<16> dark_gauss_blur_2_rd44_res = dark_gauss_blur_2_rd44_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<704, 1152>(result, dark_gauss_blur_2_rd44_res);
	hw_uint<16> dark_gauss_blur_2_rd45_res = dark_gauss_blur_2_rd45_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<720, 1152>(result, dark_gauss_blur_2_rd45_res);
	hw_uint<16> dark_gauss_blur_2_rd46_res = dark_gauss_blur_2_rd46_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<736, 1152>(result, dark_gauss_blur_2_rd46_res);
	hw_uint<16> dark_gauss_blur_2_rd47_res = dark_gauss_blur_2_rd47_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<752, 1152>(result, dark_gauss_blur_2_rd47_res);
	hw_uint<16> dark_gauss_blur_2_rd48_res = dark_gauss_blur_2_rd48_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<768, 1152>(result, dark_gauss_blur_2_rd48_res);
	hw_uint<16> dark_gauss_blur_2_rd49_res = dark_gauss_blur_2_rd49_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<784, 1152>(result, dark_gauss_blur_2_rd49_res);
	hw_uint<16> dark_gauss_blur_2_rd50_res = dark_gauss_blur_2_rd50_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<800, 1152>(result, dark_gauss_blur_2_rd50_res);
	hw_uint<16> dark_gauss_blur_2_rd51_res = dark_gauss_blur_2_rd51_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<816, 1152>(result, dark_gauss_blur_2_rd51_res);
	hw_uint<16> dark_gauss_blur_2_rd52_res = dark_gauss_blur_2_rd52_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<832, 1152>(result, dark_gauss_blur_2_rd52_res);
	hw_uint<16> dark_gauss_blur_2_rd53_res = dark_gauss_blur_2_rd53_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<848, 1152>(result, dark_gauss_blur_2_rd53_res);
	hw_uint<16> dark_gauss_blur_2_rd54_res = dark_gauss_blur_2_rd54_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<864, 1152>(result, dark_gauss_blur_2_rd54_res);
	hw_uint<16> dark_gauss_blur_2_rd55_res = dark_gauss_blur_2_rd55_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<880, 1152>(result, dark_gauss_blur_2_rd55_res);
	hw_uint<16> dark_gauss_blur_2_rd56_res = dark_gauss_blur_2_rd56_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<896, 1152>(result, dark_gauss_blur_2_rd56_res);
	hw_uint<16> dark_gauss_blur_2_rd57_res = dark_gauss_blur_2_rd57_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<912, 1152>(result, dark_gauss_blur_2_rd57_res);
	hw_uint<16> dark_gauss_blur_2_rd58_res = dark_gauss_blur_2_rd58_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<928, 1152>(result, dark_gauss_blur_2_rd58_res);
	hw_uint<16> dark_gauss_blur_2_rd59_res = dark_gauss_blur_2_rd59_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<944, 1152>(result, dark_gauss_blur_2_rd59_res);
	hw_uint<16> dark_gauss_blur_2_rd60_res = dark_gauss_blur_2_rd60_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<960, 1152>(result, dark_gauss_blur_2_rd60_res);
	hw_uint<16> dark_gauss_blur_2_rd61_res = dark_gauss_blur_2_rd61_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<976, 1152>(result, dark_gauss_blur_2_rd61_res);
	hw_uint<16> dark_gauss_blur_2_rd62_res = dark_gauss_blur_2_rd62_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<992, 1152>(result, dark_gauss_blur_2_rd62_res);
	hw_uint<16> dark_gauss_blur_2_rd63_res = dark_gauss_blur_2_rd63_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1008, 1152>(result, dark_gauss_blur_2_rd63_res);
	hw_uint<16> dark_gauss_blur_2_rd64_res = dark_gauss_blur_2_rd64_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1024, 1152>(result, dark_gauss_blur_2_rd64_res);
	hw_uint<16> dark_gauss_blur_2_rd65_res = dark_gauss_blur_2_rd65_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1040, 1152>(result, dark_gauss_blur_2_rd65_res);
	hw_uint<16> dark_gauss_blur_2_rd66_res = dark_gauss_blur_2_rd66_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1056, 1152>(result, dark_gauss_blur_2_rd66_res);
	hw_uint<16> dark_gauss_blur_2_rd67_res = dark_gauss_blur_2_rd67_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1072, 1152>(result, dark_gauss_blur_2_rd67_res);
	hw_uint<16> dark_gauss_blur_2_rd68_res = dark_gauss_blur_2_rd68_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1088, 1152>(result, dark_gauss_blur_2_rd68_res);
	hw_uint<16> dark_gauss_blur_2_rd69_res = dark_gauss_blur_2_rd69_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1104, 1152>(result, dark_gauss_blur_2_rd69_res);
	hw_uint<16> dark_gauss_blur_2_rd70_res = dark_gauss_blur_2_rd70_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1120, 1152>(result, dark_gauss_blur_2_rd70_res);
	hw_uint<16> dark_gauss_blur_2_rd71_res = dark_gauss_blur_2_rd71_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1136, 1152>(result, dark_gauss_blur_2_rd71_res);
	return result;
}

// dark_gauss_ds_1_update_0_write
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7
inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write_bundle_write(hw_uint<128>& dark_gauss_ds_1_update_0_write, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_res = dark_gauss_ds_1_update_0_write.extract<0, 15>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_res, dark_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_res = dark_gauss_ds_1_update_0_write.extract<16, 31>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_res, dark_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_res = dark_gauss_ds_1_update_0_write.extract<32, 47>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_res, dark_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_res = dark_gauss_ds_1_update_0_write.extract<48, 63>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_res, dark_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_res = dark_gauss_ds_1_update_0_write.extract<64, 79>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write4_res, dark_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_res = dark_gauss_ds_1_update_0_write.extract<80, 95>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write5_res, dark_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_res = dark_gauss_ds_1_update_0_write.extract<96, 111>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write6_res, dark_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_res = dark_gauss_ds_1_update_0_write.extract<112, 127>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write7_res, dark_gauss_ds_1, d0, d1, dynamic_address);
}

// dark_laplace_diff_1_update_0_read
//	dark_laplace_diff_1_rd0
//	dark_laplace_diff_1_rd1
//	dark_laplace_diff_1_rd2
//	dark_laplace_diff_1_rd3
//	dark_laplace_diff_1_rd4
//	dark_laplace_diff_1_rd5
//	dark_laplace_diff_1_rd6
//	dark_laplace_diff_1_rd7
inline hw_uint<128> dark_gauss_ds_1_dark_laplace_diff_1_update_0_read_bundle_read(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // dark_laplace_diff_1_rd0
    // dark_laplace_diff_1_rd1
    // dark_laplace_diff_1_rd2
    // dark_laplace_diff_1_rd3
    // dark_laplace_diff_1_rd4
    // dark_laplace_diff_1_rd5
    // dark_laplace_diff_1_rd6
    // dark_laplace_diff_1_rd7

	hw_uint<128> result;
	hw_uint<16> dark_laplace_diff_1_rd0_res = dark_laplace_diff_1_rd0_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, dark_laplace_diff_1_rd0_res);
	hw_uint<16> dark_laplace_diff_1_rd1_res = dark_laplace_diff_1_rd1_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, dark_laplace_diff_1_rd1_res);
	hw_uint<16> dark_laplace_diff_1_rd2_res = dark_laplace_diff_1_rd2_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, dark_laplace_diff_1_rd2_res);
	hw_uint<16> dark_laplace_diff_1_rd3_res = dark_laplace_diff_1_rd3_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, dark_laplace_diff_1_rd3_res);
	hw_uint<16> dark_laplace_diff_1_rd4_res = dark_laplace_diff_1_rd4_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, dark_laplace_diff_1_rd4_res);
	hw_uint<16> dark_laplace_diff_1_rd5_res = dark_laplace_diff_1_rd5_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, dark_laplace_diff_1_rd5_res);
	hw_uint<16> dark_laplace_diff_1_rd6_res = dark_laplace_diff_1_rd6_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, dark_laplace_diff_1_rd6_res);
	hw_uint<16> dark_laplace_diff_1_rd7_res = dark_laplace_diff_1_rd7_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, dark_laplace_diff_1_rd7_res);
	return result;
}

// dark_laplace_us_0_update_0_read
//	dark_laplace_us_0_rd0
//	dark_laplace_us_0_rd1
//	dark_laplace_us_0_rd2
//	dark_laplace_us_0_rd3
//	dark_laplace_us_0_rd4
//	dark_laplace_us_0_rd5
//	dark_laplace_us_0_rd6
//	dark_laplace_us_0_rd7
//	dark_laplace_us_0_rd8
//	dark_laplace_us_0_rd9
//	dark_laplace_us_0_rd10
//	dark_laplace_us_0_rd11
//	dark_laplace_us_0_rd12
//	dark_laplace_us_0_rd13
//	dark_laplace_us_0_rd14
//	dark_laplace_us_0_rd15
inline hw_uint<256> dark_gauss_ds_1_dark_laplace_us_0_update_0_read_bundle_read(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // dark_laplace_us_0_rd0
    // dark_laplace_us_0_rd1
    // dark_laplace_us_0_rd2
    // dark_laplace_us_0_rd3
    // dark_laplace_us_0_rd4
    // dark_laplace_us_0_rd5
    // dark_laplace_us_0_rd6
    // dark_laplace_us_0_rd7
    // dark_laplace_us_0_rd8
    // dark_laplace_us_0_rd9
    // dark_laplace_us_0_rd10
    // dark_laplace_us_0_rd11
    // dark_laplace_us_0_rd12
    // dark_laplace_us_0_rd13
    // dark_laplace_us_0_rd14
    // dark_laplace_us_0_rd15

	hw_uint<256> result;
	hw_uint<16> dark_laplace_us_0_rd0_res = dark_laplace_us_0_rd0_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 256>(result, dark_laplace_us_0_rd0_res);
	hw_uint<16> dark_laplace_us_0_rd1_res = dark_laplace_us_0_rd1_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 256>(result, dark_laplace_us_0_rd1_res);
	hw_uint<16> dark_laplace_us_0_rd2_res = dark_laplace_us_0_rd2_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 256>(result, dark_laplace_us_0_rd2_res);
	hw_uint<16> dark_laplace_us_0_rd3_res = dark_laplace_us_0_rd3_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 256>(result, dark_laplace_us_0_rd3_res);
	hw_uint<16> dark_laplace_us_0_rd4_res = dark_laplace_us_0_rd4_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 256>(result, dark_laplace_us_0_rd4_res);
	hw_uint<16> dark_laplace_us_0_rd5_res = dark_laplace_us_0_rd5_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 256>(result, dark_laplace_us_0_rd5_res);
	hw_uint<16> dark_laplace_us_0_rd6_res = dark_laplace_us_0_rd6_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 256>(result, dark_laplace_us_0_rd6_res);
	hw_uint<16> dark_laplace_us_0_rd7_res = dark_laplace_us_0_rd7_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 256>(result, dark_laplace_us_0_rd7_res);
	hw_uint<16> dark_laplace_us_0_rd8_res = dark_laplace_us_0_rd8_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<128, 256>(result, dark_laplace_us_0_rd8_res);
	hw_uint<16> dark_laplace_us_0_rd9_res = dark_laplace_us_0_rd9_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<144, 256>(result, dark_laplace_us_0_rd9_res);
	hw_uint<16> dark_laplace_us_0_rd10_res = dark_laplace_us_0_rd10_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<160, 256>(result, dark_laplace_us_0_rd10_res);
	hw_uint<16> dark_laplace_us_0_rd11_res = dark_laplace_us_0_rd11_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<176, 256>(result, dark_laplace_us_0_rd11_res);
	hw_uint<16> dark_laplace_us_0_rd12_res = dark_laplace_us_0_rd12_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<192, 256>(result, dark_laplace_us_0_rd12_res);
	hw_uint<16> dark_laplace_us_0_rd13_res = dark_laplace_us_0_rd13_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<208, 256>(result, dark_laplace_us_0_rd13_res);
	hw_uint<16> dark_laplace_us_0_rd14_res = dark_laplace_us_0_rd14_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<224, 256>(result, dark_laplace_us_0_rd14_res);
	hw_uint<16> dark_laplace_us_0_rd15_res = dark_laplace_us_0_rd15_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<240, 256>(result, dark_laplace_us_0_rd15_res);
	return result;
}

#include "hw_classes.h"

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_diff_2_rd0_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_diff_2_rd1_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_diff_2_rd2_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_diff_2_rd3_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd0_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd1_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd2_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd3_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_us_1_rd4_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_us_1_rd5_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_us_1_rd6_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_us_1_rd7_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 121
	// # of read delays: 121
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	fifo<hw_uint<16>, 121> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(120 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 244
	// # of read delays: 6
  // 0, 1, 121, 122, 242, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 119> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 119> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_120() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_121() {
		return f4;
	}

	inline hw_uint<16> peek_122() {
		return f6;
	}

	inline hw_uint<16> peek_241() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_242() {
		return f8;
	}

	inline hw_uint<16> peek_243() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 244
	// # of read delays: 6
  // 0, 1, 121, 122, 242, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 119> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 119> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_120() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_121() {
		return f4;
	}

	inline hw_uint<16> peek_122() {
		return f6;
	}

	inline hw_uint<16> peek_241() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_242() {
		return f8;
	}

	inline hw_uint<16> peek_243() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 244
	// # of read delays: 4
  // 0, 1, 122, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 120> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_242() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_243() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 244
	// # of read delays: 4
  // 0, 1, 122, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 120> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_242() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_243() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_2_cache {
  // # of banks: 16
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_diff_2_rd0_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_diff_2_rd0;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_diff_2_rd1_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_diff_2_rd1;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_diff_2_rd2_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_diff_2_rd2;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_diff_2_rd3_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_diff_2_rd3;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd0_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd0;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd1_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd1;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd2_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd2;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd3_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd3;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_us_1_rd4_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_us_1_rd4;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_us_1_rd5_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_us_1_rd5;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_us_1_rd6_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_us_1_rd6;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_us_1_rd7_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_us_1_rd7;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9;
};



inline void dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_write(hw_uint<16>& dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0, dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_diff_2_rd0.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd0.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd1.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0);
}

inline void dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_write(hw_uint<16>& dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1, dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_diff_2_rd1.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd2.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd3.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1);
}

inline void dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_write(hw_uint<16>& dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2, dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_diff_2_rd2.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_us_1_rd4.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_us_1_rd5.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2);
}

inline void dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_write(hw_uint<16>& dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3, dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_diff_2_rd3.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_us_1_rd6.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_us_1_rd7.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3);
}

inline hw_uint<16> dark_gauss_blur_3_rd0_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd0 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_243();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd1_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd1 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_122();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd10_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd10 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_122();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd11_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd11 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd12_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd12 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd13_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd13 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd14_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd14 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd15_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd15 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd16_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd16 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd17_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd17 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd18_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd18 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd19_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd19 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd2_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd2 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd20_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd20 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd21_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd21 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd22_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd22 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd23_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd23 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd24_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd24 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[4 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_242();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd25_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd25 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[4 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_121();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd26_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd26 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[4 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd27_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd27 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd28_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd28 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd29_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd29 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd3_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd3 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_243();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd30_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd30 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[4 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_242();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd31_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd31 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[4 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_121();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd32_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd32 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[4 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd33_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd33 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[5 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_242();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd34_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd34 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[5 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_121();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd35_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd35 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[5 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_0();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd4_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd4 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_122();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd5_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd5 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd6_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd6 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd7_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd7 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd8_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd8 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd9_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd9 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_243();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_2_rd0_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd0 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_gauss_ds_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_diff_2_rd0.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_2_rd1_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd1 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_diff_2_rd1.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_2_rd2_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd2 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_diff_2_rd2.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_2_rd3_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd3 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_diff_2_rd3.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd0_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd0 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd1_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd1 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd2_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd2 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[1 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd3_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd3 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[1 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd4_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd4 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_us_1_rd4.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd5_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd5 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[2 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_to_dark_laplace_us_1_rd5.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd6_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd6 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_us_1_rd6.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd7_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd7 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[3 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_to_dark_laplace_us_1_rd7.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((120 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3;
  return 0;
}

// # of bundles = 4
// dark_gauss_blur_3_update_0_read
//	dark_gauss_blur_3_rd0
//	dark_gauss_blur_3_rd1
//	dark_gauss_blur_3_rd2
//	dark_gauss_blur_3_rd3
//	dark_gauss_blur_3_rd4
//	dark_gauss_blur_3_rd5
//	dark_gauss_blur_3_rd6
//	dark_gauss_blur_3_rd7
//	dark_gauss_blur_3_rd8
//	dark_gauss_blur_3_rd9
//	dark_gauss_blur_3_rd10
//	dark_gauss_blur_3_rd11
//	dark_gauss_blur_3_rd12
//	dark_gauss_blur_3_rd13
//	dark_gauss_blur_3_rd14
//	dark_gauss_blur_3_rd15
//	dark_gauss_blur_3_rd16
//	dark_gauss_blur_3_rd17
//	dark_gauss_blur_3_rd18
//	dark_gauss_blur_3_rd19
//	dark_gauss_blur_3_rd20
//	dark_gauss_blur_3_rd21
//	dark_gauss_blur_3_rd22
//	dark_gauss_blur_3_rd23
//	dark_gauss_blur_3_rd24
//	dark_gauss_blur_3_rd25
//	dark_gauss_blur_3_rd26
//	dark_gauss_blur_3_rd27
//	dark_gauss_blur_3_rd28
//	dark_gauss_blur_3_rd29
//	dark_gauss_blur_3_rd30
//	dark_gauss_blur_3_rd31
//	dark_gauss_blur_3_rd32
//	dark_gauss_blur_3_rd33
//	dark_gauss_blur_3_rd34
//	dark_gauss_blur_3_rd35
inline hw_uint<576> dark_gauss_ds_2_dark_gauss_blur_3_update_0_read_bundle_read(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 36
    // dark_gauss_blur_3_rd0
    // dark_gauss_blur_3_rd1
    // dark_gauss_blur_3_rd2
    // dark_gauss_blur_3_rd3
    // dark_gauss_blur_3_rd4
    // dark_gauss_blur_3_rd5
    // dark_gauss_blur_3_rd6
    // dark_gauss_blur_3_rd7
    // dark_gauss_blur_3_rd8
    // dark_gauss_blur_3_rd9
    // dark_gauss_blur_3_rd10
    // dark_gauss_blur_3_rd11
    // dark_gauss_blur_3_rd12
    // dark_gauss_blur_3_rd13
    // dark_gauss_blur_3_rd14
    // dark_gauss_blur_3_rd15
    // dark_gauss_blur_3_rd16
    // dark_gauss_blur_3_rd17
    // dark_gauss_blur_3_rd18
    // dark_gauss_blur_3_rd19
    // dark_gauss_blur_3_rd20
    // dark_gauss_blur_3_rd21
    // dark_gauss_blur_3_rd22
    // dark_gauss_blur_3_rd23
    // dark_gauss_blur_3_rd24
    // dark_gauss_blur_3_rd25
    // dark_gauss_blur_3_rd26
    // dark_gauss_blur_3_rd27
    // dark_gauss_blur_3_rd28
    // dark_gauss_blur_3_rd29
    // dark_gauss_blur_3_rd30
    // dark_gauss_blur_3_rd31
    // dark_gauss_blur_3_rd32
    // dark_gauss_blur_3_rd33
    // dark_gauss_blur_3_rd34
    // dark_gauss_blur_3_rd35

	hw_uint<576> result;
	hw_uint<16> dark_gauss_blur_3_rd0_res = dark_gauss_blur_3_rd0_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 576>(result, dark_gauss_blur_3_rd0_res);
	hw_uint<16> dark_gauss_blur_3_rd1_res = dark_gauss_blur_3_rd1_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 576>(result, dark_gauss_blur_3_rd1_res);
	hw_uint<16> dark_gauss_blur_3_rd2_res = dark_gauss_blur_3_rd2_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 576>(result, dark_gauss_blur_3_rd2_res);
	hw_uint<16> dark_gauss_blur_3_rd3_res = dark_gauss_blur_3_rd3_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 576>(result, dark_gauss_blur_3_rd3_res);
	hw_uint<16> dark_gauss_blur_3_rd4_res = dark_gauss_blur_3_rd4_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<64, 576>(result, dark_gauss_blur_3_rd4_res);
	hw_uint<16> dark_gauss_blur_3_rd5_res = dark_gauss_blur_3_rd5_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<80, 576>(result, dark_gauss_blur_3_rd5_res);
	hw_uint<16> dark_gauss_blur_3_rd6_res = dark_gauss_blur_3_rd6_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<96, 576>(result, dark_gauss_blur_3_rd6_res);
	hw_uint<16> dark_gauss_blur_3_rd7_res = dark_gauss_blur_3_rd7_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<112, 576>(result, dark_gauss_blur_3_rd7_res);
	hw_uint<16> dark_gauss_blur_3_rd8_res = dark_gauss_blur_3_rd8_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<128, 576>(result, dark_gauss_blur_3_rd8_res);
	hw_uint<16> dark_gauss_blur_3_rd9_res = dark_gauss_blur_3_rd9_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<144, 576>(result, dark_gauss_blur_3_rd9_res);
	hw_uint<16> dark_gauss_blur_3_rd10_res = dark_gauss_blur_3_rd10_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<160, 576>(result, dark_gauss_blur_3_rd10_res);
	hw_uint<16> dark_gauss_blur_3_rd11_res = dark_gauss_blur_3_rd11_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<176, 576>(result, dark_gauss_blur_3_rd11_res);
	hw_uint<16> dark_gauss_blur_3_rd12_res = dark_gauss_blur_3_rd12_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<192, 576>(result, dark_gauss_blur_3_rd12_res);
	hw_uint<16> dark_gauss_blur_3_rd13_res = dark_gauss_blur_3_rd13_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<208, 576>(result, dark_gauss_blur_3_rd13_res);
	hw_uint<16> dark_gauss_blur_3_rd14_res = dark_gauss_blur_3_rd14_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<224, 576>(result, dark_gauss_blur_3_rd14_res);
	hw_uint<16> dark_gauss_blur_3_rd15_res = dark_gauss_blur_3_rd15_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<240, 576>(result, dark_gauss_blur_3_rd15_res);
	hw_uint<16> dark_gauss_blur_3_rd16_res = dark_gauss_blur_3_rd16_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<256, 576>(result, dark_gauss_blur_3_rd16_res);
	hw_uint<16> dark_gauss_blur_3_rd17_res = dark_gauss_blur_3_rd17_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<272, 576>(result, dark_gauss_blur_3_rd17_res);
	hw_uint<16> dark_gauss_blur_3_rd18_res = dark_gauss_blur_3_rd18_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<288, 576>(result, dark_gauss_blur_3_rd18_res);
	hw_uint<16> dark_gauss_blur_3_rd19_res = dark_gauss_blur_3_rd19_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<304, 576>(result, dark_gauss_blur_3_rd19_res);
	hw_uint<16> dark_gauss_blur_3_rd20_res = dark_gauss_blur_3_rd20_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<320, 576>(result, dark_gauss_blur_3_rd20_res);
	hw_uint<16> dark_gauss_blur_3_rd21_res = dark_gauss_blur_3_rd21_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<336, 576>(result, dark_gauss_blur_3_rd21_res);
	hw_uint<16> dark_gauss_blur_3_rd22_res = dark_gauss_blur_3_rd22_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<352, 576>(result, dark_gauss_blur_3_rd22_res);
	hw_uint<16> dark_gauss_blur_3_rd23_res = dark_gauss_blur_3_rd23_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<368, 576>(result, dark_gauss_blur_3_rd23_res);
	hw_uint<16> dark_gauss_blur_3_rd24_res = dark_gauss_blur_3_rd24_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<384, 576>(result, dark_gauss_blur_3_rd24_res);
	hw_uint<16> dark_gauss_blur_3_rd25_res = dark_gauss_blur_3_rd25_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<400, 576>(result, dark_gauss_blur_3_rd25_res);
	hw_uint<16> dark_gauss_blur_3_rd26_res = dark_gauss_blur_3_rd26_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<416, 576>(result, dark_gauss_blur_3_rd26_res);
	hw_uint<16> dark_gauss_blur_3_rd27_res = dark_gauss_blur_3_rd27_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<432, 576>(result, dark_gauss_blur_3_rd27_res);
	hw_uint<16> dark_gauss_blur_3_rd28_res = dark_gauss_blur_3_rd28_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<448, 576>(result, dark_gauss_blur_3_rd28_res);
	hw_uint<16> dark_gauss_blur_3_rd29_res = dark_gauss_blur_3_rd29_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<464, 576>(result, dark_gauss_blur_3_rd29_res);
	hw_uint<16> dark_gauss_blur_3_rd30_res = dark_gauss_blur_3_rd30_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<480, 576>(result, dark_gauss_blur_3_rd30_res);
	hw_uint<16> dark_gauss_blur_3_rd31_res = dark_gauss_blur_3_rd31_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<496, 576>(result, dark_gauss_blur_3_rd31_res);
	hw_uint<16> dark_gauss_blur_3_rd32_res = dark_gauss_blur_3_rd32_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<512, 576>(result, dark_gauss_blur_3_rd32_res);
	hw_uint<16> dark_gauss_blur_3_rd33_res = dark_gauss_blur_3_rd33_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<528, 576>(result, dark_gauss_blur_3_rd33_res);
	hw_uint<16> dark_gauss_blur_3_rd34_res = dark_gauss_blur_3_rd34_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<544, 576>(result, dark_gauss_blur_3_rd34_res);
	hw_uint<16> dark_gauss_blur_3_rd35_res = dark_gauss_blur_3_rd35_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<560, 576>(result, dark_gauss_blur_3_rd35_res);
	return result;
}

// dark_gauss_ds_2_update_0_write
//	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0
//	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1
//	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2
//	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3
inline void dark_gauss_ds_2_dark_gauss_ds_2_update_0_write_bundle_write(hw_uint<64>& dark_gauss_ds_2_update_0_write, dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_res = dark_gauss_ds_2_update_0_write.extract<0, 15>();
	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_write(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_res, dark_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_res = dark_gauss_ds_2_update_0_write.extract<16, 31>();
	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_write(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_res, dark_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_res = dark_gauss_ds_2_update_0_write.extract<32, 47>();
	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_write(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write2_res, dark_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_res = dark_gauss_ds_2_update_0_write.extract<48, 63>();
	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_write(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write3_res, dark_gauss_ds_2, d0, d1, dynamic_address);
}

// dark_laplace_diff_2_update_0_read
//	dark_laplace_diff_2_rd0
//	dark_laplace_diff_2_rd1
//	dark_laplace_diff_2_rd2
//	dark_laplace_diff_2_rd3
inline hw_uint<64> dark_gauss_ds_2_dark_laplace_diff_2_update_0_read_bundle_read(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // dark_laplace_diff_2_rd0
    // dark_laplace_diff_2_rd1
    // dark_laplace_diff_2_rd2
    // dark_laplace_diff_2_rd3

	hw_uint<64> result;
	hw_uint<16> dark_laplace_diff_2_rd0_res = dark_laplace_diff_2_rd0_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, dark_laplace_diff_2_rd0_res);
	hw_uint<16> dark_laplace_diff_2_rd1_res = dark_laplace_diff_2_rd1_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, dark_laplace_diff_2_rd1_res);
	hw_uint<16> dark_laplace_diff_2_rd2_res = dark_laplace_diff_2_rd2_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, dark_laplace_diff_2_rd2_res);
	hw_uint<16> dark_laplace_diff_2_rd3_res = dark_laplace_diff_2_rd3_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, dark_laplace_diff_2_rd3_res);
	return result;
}

// dark_laplace_us_1_update_0_read
//	dark_laplace_us_1_rd0
//	dark_laplace_us_1_rd1
//	dark_laplace_us_1_rd2
//	dark_laplace_us_1_rd3
//	dark_laplace_us_1_rd4
//	dark_laplace_us_1_rd5
//	dark_laplace_us_1_rd6
//	dark_laplace_us_1_rd7
inline hw_uint<128> dark_gauss_ds_2_dark_laplace_us_1_update_0_read_bundle_read(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // dark_laplace_us_1_rd0
    // dark_laplace_us_1_rd1
    // dark_laplace_us_1_rd2
    // dark_laplace_us_1_rd3
    // dark_laplace_us_1_rd4
    // dark_laplace_us_1_rd5
    // dark_laplace_us_1_rd6
    // dark_laplace_us_1_rd7

	hw_uint<128> result;
	hw_uint<16> dark_laplace_us_1_rd0_res = dark_laplace_us_1_rd0_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 128>(result, dark_laplace_us_1_rd0_res);
	hw_uint<16> dark_laplace_us_1_rd1_res = dark_laplace_us_1_rd1_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 128>(result, dark_laplace_us_1_rd1_res);
	hw_uint<16> dark_laplace_us_1_rd2_res = dark_laplace_us_1_rd2_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 128>(result, dark_laplace_us_1_rd2_res);
	hw_uint<16> dark_laplace_us_1_rd3_res = dark_laplace_us_1_rd3_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 128>(result, dark_laplace_us_1_rd3_res);
	hw_uint<16> dark_laplace_us_1_rd4_res = dark_laplace_us_1_rd4_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<64, 128>(result, dark_laplace_us_1_rd4_res);
	hw_uint<16> dark_laplace_us_1_rd5_res = dark_laplace_us_1_rd5_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<80, 128>(result, dark_laplace_us_1_rd5_res);
	hw_uint<16> dark_laplace_us_1_rd6_res = dark_laplace_us_1_rd6_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<96, 128>(result, dark_laplace_us_1_rd6_res);
	hw_uint<16> dark_laplace_us_1_rd7_res = dark_laplace_us_1_rd7_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<112, 128>(result, dark_laplace_us_1_rd7_res);
	return result;
}

#include "hw_classes.h"

struct dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd0_cache {
	// RAM Box: {[0, 238], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd1_cache {
	// RAM Box: {[0, 238], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_dark_laplace_us_2_rd2_cache {
	// RAM Box: {[1, 239], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_dark_laplace_us_2_rd3_cache {
	// RAM Box: {[1, 239], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache {
	// RAM Box: {[0, 238], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_fused_level_3_rd1_cache {
	// RAM Box: {[1, 239], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_cache {
  // # of banks: 6
  dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd0_cache dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd0;
  dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd1_cache dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd1;
  dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_dark_laplace_us_2_rd2_cache dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_dark_laplace_us_2_rd2;
  dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_dark_laplace_us_2_rd3_cache dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_dark_laplace_us_2_rd3;
  dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_fused_level_3_rd0;
  dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_fused_level_3_rd1_cache dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_fused_level_3_rd1;
};



inline void dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_write(hw_uint<16>& dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0, dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd0.push(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0);
  dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd1.push(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0);
  dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.push(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0);
}

inline void dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_write(hw_uint<16>& dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1, dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_dark_laplace_us_2_rd2.push(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1);
  dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_dark_laplace_us_2_rd3.push(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1);
  dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_fused_level_3_rd1.push(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1);
}

inline hw_uint<16> dark_laplace_us_2_rd0_select(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_2_rd0 read pattern: { dark_laplace_us_2_update_0[d0, d1] -> dark_gauss_ds_3[2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 32] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 27] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0 = dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_us_2_rd1_select(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_2_rd1 read pattern: { dark_laplace_us_2_update_0[d0, d1] -> dark_gauss_ds_3[2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 32] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 27] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0 = dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_us_2_rd2_select(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_2_rd2 read pattern: { dark_laplace_us_2_update_0[d0, d1] -> dark_gauss_ds_3[1 + 2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 32] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 27] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1 = dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_dark_laplace_us_2_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_us_2_rd3_select(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_2_rd3 read pattern: { dark_laplace_us_2_update_0[d0, d1] -> dark_gauss_ds_3[1 + 2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 32] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 27] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1 = dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_dark_laplace_us_2_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_3_rd0_select(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd0 read pattern: { fused_level_3_update_0[d0, d1] -> dark_gauss_ds_3[2d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { dark_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 27] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0 = dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_3_rd1_select(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd1 read pattern: { fused_level_3_update_0[d0, d1] -> dark_gauss_ds_3[1 + 2d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { dark_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 27] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1 = dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_to_fused_level_3_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1;
  return 0;
}

// # of bundles = 3
// dark_gauss_ds_3_update_0_write
//	dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0
//	dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1
inline void dark_gauss_ds_3_dark_gauss_ds_3_update_0_write_bundle_write(hw_uint<32>& dark_gauss_ds_3_update_0_write, dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_res = dark_gauss_ds_3_update_0_write.extract<0, 15>();
	dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_write(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_res, dark_gauss_ds_3, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_res = dark_gauss_ds_3_update_0_write.extract<16, 31>();
	dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_write(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write1_res, dark_gauss_ds_3, d0, d1, dynamic_address);
}

// dark_laplace_us_2_update_0_read
//	dark_laplace_us_2_rd0
//	dark_laplace_us_2_rd1
//	dark_laplace_us_2_rd2
//	dark_laplace_us_2_rd3
inline hw_uint<64> dark_gauss_ds_3_dark_laplace_us_2_update_0_read_bundle_read(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // dark_laplace_us_2_rd0
    // dark_laplace_us_2_rd1
    // dark_laplace_us_2_rd2
    // dark_laplace_us_2_rd3

	hw_uint<64> result;
	hw_uint<16> dark_laplace_us_2_rd0_res = dark_laplace_us_2_rd0_select(dark_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 64>(result, dark_laplace_us_2_rd0_res);
	hw_uint<16> dark_laplace_us_2_rd1_res = dark_laplace_us_2_rd1_select(dark_gauss_ds_3, d0, d1, dynamic_address);
	set_at<16, 64>(result, dark_laplace_us_2_rd1_res);
	hw_uint<16> dark_laplace_us_2_rd2_res = dark_laplace_us_2_rd2_select(dark_gauss_ds_3, d0, d1, dynamic_address);
	set_at<32, 64>(result, dark_laplace_us_2_rd2_res);
	hw_uint<16> dark_laplace_us_2_rd3_res = dark_laplace_us_2_rd3_select(dark_gauss_ds_3, d0, d1, dynamic_address);
	set_at<48, 64>(result, dark_laplace_us_2_rd3_res);
	return result;
}

// fused_level_3_update_0_read
//	fused_level_3_rd0
//	fused_level_3_rd1
inline hw_uint<32> dark_gauss_ds_3_fused_level_3_update_0_read_bundle_read(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // fused_level_3_rd0
    // fused_level_3_rd1

	hw_uint<32> result;
	hw_uint<16> fused_level_3_rd0_res = fused_level_3_rd0_select(dark_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 32>(result, fused_level_3_rd0_res);
	hw_uint<16> fused_level_3_rd1_res = fused_level_3_rd1_select(dark_gauss_ds_3, d0, d1, dynamic_address);
	set_at<16, 32>(result, fused_level_3_rd1_res);
	return result;
}

#include "hw_classes.h"

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_to_fused_level_0_rd0_cache {
	// RAM Box: {[0, 1904], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_to_fused_level_0_rd1_cache {
	// RAM Box: {[1, 1905], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10_to_fused_level_0_rd10_cache {
	// RAM Box: {[10, 1914], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11_to_fused_level_0_rd11_cache {
	// RAM Box: {[11, 1915], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12_to_fused_level_0_rd12_cache {
	// RAM Box: {[12, 1916], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13_to_fused_level_0_rd13_cache {
	// RAM Box: {[13, 1917], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14_to_fused_level_0_rd14_cache {
	// RAM Box: {[14, 1918], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15_to_fused_level_0_rd15_cache {
	// RAM Box: {[15, 1919], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_to_fused_level_0_rd2_cache {
	// RAM Box: {[2, 1906], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_to_fused_level_0_rd3_cache {
	// RAM Box: {[3, 1907], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_to_fused_level_0_rd4_cache {
	// RAM Box: {[4, 1908], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_to_fused_level_0_rd5_cache {
	// RAM Box: {[5, 1909], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_to_fused_level_0_rd6_cache {
	// RAM Box: {[6, 1910], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_to_fused_level_0_rd7_cache {
	// RAM Box: {[7, 1911], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8_to_fused_level_0_rd8_cache {
	// RAM Box: {[8, 1912], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9_to_fused_level_0_rd9_cache {
	// RAM Box: {[9, 1913], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_cache {
  // # of banks: 16
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_to_fused_level_0_rd0_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_to_fused_level_0_rd0;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_to_fused_level_0_rd1_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_to_fused_level_0_rd1;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10_to_fused_level_0_rd10_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10_to_fused_level_0_rd10;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11_to_fused_level_0_rd11_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11_to_fused_level_0_rd11;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12_to_fused_level_0_rd12_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12_to_fused_level_0_rd12;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13_to_fused_level_0_rd13_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13_to_fused_level_0_rd13;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14_to_fused_level_0_rd14_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14_to_fused_level_0_rd14;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15_to_fused_level_0_rd15_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15_to_fused_level_0_rd15;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_to_fused_level_0_rd2_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_to_fused_level_0_rd2;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_to_fused_level_0_rd3_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_to_fused_level_0_rd3;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_to_fused_level_0_rd4_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_to_fused_level_0_rd4;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_to_fused_level_0_rd5_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_to_fused_level_0_rd5;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_to_fused_level_0_rd6_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_to_fused_level_0_rd6;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_to_fused_level_0_rd7_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_to_fused_level_0_rd7;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8_to_fused_level_0_rd8_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8_to_fused_level_0_rd8;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9_to_fused_level_0_rd9_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9_to_fused_level_0_rd9;
};



inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_to_fused_level_0_rd0.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_to_fused_level_0_rd1.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10_to_fused_level_0_rd10.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11_to_fused_level_0_rd11.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12_to_fused_level_0_rd12.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13_to_fused_level_0_rd13.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14_to_fused_level_0_rd14.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15_to_fused_level_0_rd15.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_to_fused_level_0_rd2.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_to_fused_level_0_rd3.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_to_fused_level_0_rd4.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_to_fused_level_0_rd5.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_to_fused_level_0_rd6.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_to_fused_level_0_rd7.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8_to_fused_level_0_rd8.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9_to_fused_level_0_rd9.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9);
}

inline hw_uint<16> fused_level_0_rd0_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd0 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_to_fused_level_0_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_0_rd1_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd1 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[1 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_to_fused_level_0_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_0_rd10_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd10 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[10 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10_to_fused_level_0_rd10.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10;
  return 0;
}

inline hw_uint<16> fused_level_0_rd11_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd11 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[11 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11_to_fused_level_0_rd11.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11;
  return 0;
}

inline hw_uint<16> fused_level_0_rd12_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd12 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[12 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12_to_fused_level_0_rd12.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12;
  return 0;
}

inline hw_uint<16> fused_level_0_rd13_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd13 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[13 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13_to_fused_level_0_rd13.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13;
  return 0;
}

inline hw_uint<16> fused_level_0_rd14_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd14 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[14 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14_to_fused_level_0_rd14.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14;
  return 0;
}

inline hw_uint<16> fused_level_0_rd15_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd15 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[15 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15_to_fused_level_0_rd15.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15;
  return 0;
}

inline hw_uint<16> fused_level_0_rd2_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd2 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[2 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_to_fused_level_0_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_0_rd3_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd3 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[3 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_to_fused_level_0_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_0_rd4_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd4 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[4 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_to_fused_level_0_rd4.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_0_rd5_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd5 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[5 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_to_fused_level_0_rd5.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_0_rd6_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd6 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[6 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_to_fused_level_0_rd6.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_0_rd7_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd7 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[7 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_to_fused_level_0_rd7.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7;
  return 0;
}

inline hw_uint<16> fused_level_0_rd8_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd8 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[8 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8_to_fused_level_0_rd8.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8;
  return 0;
}

inline hw_uint<16> fused_level_0_rd9_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd9 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[9 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9_to_fused_level_0_rd9.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_0_update_0_write
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15
inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write_bundle_write(hw_uint<256>& dark_laplace_diff_0_update_0_write, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_res = dark_laplace_diff_0_update_0_write.extract<0, 15>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_res = dark_laplace_diff_0_update_0_write.extract<16, 31>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_res = dark_laplace_diff_0_update_0_write.extract<32, 47>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_res = dark_laplace_diff_0_update_0_write.extract<48, 63>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_res = dark_laplace_diff_0_update_0_write.extract<64, 79>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_res = dark_laplace_diff_0_update_0_write.extract<80, 95>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_res = dark_laplace_diff_0_update_0_write.extract<96, 111>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_res = dark_laplace_diff_0_update_0_write.extract<112, 127>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8_res = dark_laplace_diff_0_update_0_write.extract<128, 143>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write8_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9_res = dark_laplace_diff_0_update_0_write.extract<144, 159>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write9_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10_res = dark_laplace_diff_0_update_0_write.extract<160, 175>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write10_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11_res = dark_laplace_diff_0_update_0_write.extract<176, 191>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write11_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12_res = dark_laplace_diff_0_update_0_write.extract<192, 207>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write12_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13_res = dark_laplace_diff_0_update_0_write.extract<208, 223>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write13_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14_res = dark_laplace_diff_0_update_0_write.extract<224, 239>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write14_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15_res = dark_laplace_diff_0_update_0_write.extract<240, 255>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write15_res, dark_laplace_diff_0, d0, d1, dynamic_address);
}

// fused_level_0_update_0_read
//	fused_level_0_rd0
//	fused_level_0_rd1
//	fused_level_0_rd2
//	fused_level_0_rd3
//	fused_level_0_rd4
//	fused_level_0_rd5
//	fused_level_0_rd6
//	fused_level_0_rd7
//	fused_level_0_rd8
//	fused_level_0_rd9
//	fused_level_0_rd10
//	fused_level_0_rd11
//	fused_level_0_rd12
//	fused_level_0_rd13
//	fused_level_0_rd14
//	fused_level_0_rd15
inline hw_uint<256> dark_laplace_diff_0_fused_level_0_update_0_read_bundle_read(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // fused_level_0_rd0
    // fused_level_0_rd1
    // fused_level_0_rd2
    // fused_level_0_rd3
    // fused_level_0_rd4
    // fused_level_0_rd5
    // fused_level_0_rd6
    // fused_level_0_rd7
    // fused_level_0_rd8
    // fused_level_0_rd9
    // fused_level_0_rd10
    // fused_level_0_rd11
    // fused_level_0_rd12
    // fused_level_0_rd13
    // fused_level_0_rd14
    // fused_level_0_rd15

	hw_uint<256> result;
	hw_uint<16> fused_level_0_rd0_res = fused_level_0_rd0_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<0, 256>(result, fused_level_0_rd0_res);
	hw_uint<16> fused_level_0_rd1_res = fused_level_0_rd1_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<16, 256>(result, fused_level_0_rd1_res);
	hw_uint<16> fused_level_0_rd2_res = fused_level_0_rd2_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<32, 256>(result, fused_level_0_rd2_res);
	hw_uint<16> fused_level_0_rd3_res = fused_level_0_rd3_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<48, 256>(result, fused_level_0_rd3_res);
	hw_uint<16> fused_level_0_rd4_res = fused_level_0_rd4_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<64, 256>(result, fused_level_0_rd4_res);
	hw_uint<16> fused_level_0_rd5_res = fused_level_0_rd5_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<80, 256>(result, fused_level_0_rd5_res);
	hw_uint<16> fused_level_0_rd6_res = fused_level_0_rd6_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<96, 256>(result, fused_level_0_rd6_res);
	hw_uint<16> fused_level_0_rd7_res = fused_level_0_rd7_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<112, 256>(result, fused_level_0_rd7_res);
	hw_uint<16> fused_level_0_rd8_res = fused_level_0_rd8_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<128, 256>(result, fused_level_0_rd8_res);
	hw_uint<16> fused_level_0_rd9_res = fused_level_0_rd9_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<144, 256>(result, fused_level_0_rd9_res);
	hw_uint<16> fused_level_0_rd10_res = fused_level_0_rd10_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<160, 256>(result, fused_level_0_rd10_res);
	hw_uint<16> fused_level_0_rd11_res = fused_level_0_rd11_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<176, 256>(result, fused_level_0_rd11_res);
	hw_uint<16> fused_level_0_rd12_res = fused_level_0_rd12_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<192, 256>(result, fused_level_0_rd12_res);
	hw_uint<16> fused_level_0_rd13_res = fused_level_0_rd13_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<208, 256>(result, fused_level_0_rd13_res);
	hw_uint<16> fused_level_0_rd14_res = fused_level_0_rd14_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<224, 256>(result, fused_level_0_rd14_res);
	hw_uint<16> fused_level_0_rd15_res = fused_level_0_rd15_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<240, 256>(result, fused_level_0_rd15_res);
	return result;
}

#include "hw_classes.h"

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_to_fused_level_1_rd0_cache {
	// RAM Box: {[0, 952], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_to_fused_level_1_rd1_cache {
	// RAM Box: {[1, 953], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_to_fused_level_1_rd2_cache {
	// RAM Box: {[2, 954], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_to_fused_level_1_rd3_cache {
	// RAM Box: {[3, 955], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4_to_fused_level_1_rd4_cache {
	// RAM Box: {[4, 956], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5_to_fused_level_1_rd5_cache {
	// RAM Box: {[5, 957], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6_to_fused_level_1_rd6_cache {
	// RAM Box: {[6, 958], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7_to_fused_level_1_rd7_cache {
	// RAM Box: {[7, 959], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_cache {
  // # of banks: 8
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_to_fused_level_1_rd0_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_to_fused_level_1_rd0;
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_to_fused_level_1_rd1_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_to_fused_level_1_rd1;
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_to_fused_level_1_rd2_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_to_fused_level_1_rd2;
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_to_fused_level_1_rd3_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_to_fused_level_1_rd3;
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4_to_fused_level_1_rd4_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4_to_fused_level_1_rd4;
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5_to_fused_level_1_rd5_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5_to_fused_level_1_rd5;
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6_to_fused_level_1_rd6_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6_to_fused_level_1_rd6;
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7_to_fused_level_1_rd7_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7_to_fused_level_1_rd7;
};



inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_to_fused_level_1_rd0.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0);
}

inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_to_fused_level_1_rd1.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1);
}

inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_to_fused_level_1_rd2.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2);
}

inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_to_fused_level_1_rd3.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3);
}

inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4_to_fused_level_1_rd4.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4);
}

inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5_to_fused_level_1_rd5.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5);
}

inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6_to_fused_level_1_rd6.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6);
}

inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7_to_fused_level_1_rd7.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7);
}

inline hw_uint<16> fused_level_1_rd0_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd0 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_to_fused_level_1_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_1_rd1_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd1 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[1 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_to_fused_level_1_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_1_rd2_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd2 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[2 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_to_fused_level_1_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_1_rd3_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd3 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[3 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_to_fused_level_1_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_1_rd4_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd4 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[4 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4_to_fused_level_1_rd4.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_1_rd5_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd5 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[5 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5_to_fused_level_1_rd5.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_1_rd6_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd6 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[6 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6_to_fused_level_1_rd6.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_1_rd7_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd7 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[7 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7_to_fused_level_1_rd7.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_1_update_0_write
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7
inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write_bundle_write(hw_uint<128>& dark_laplace_diff_1_update_0_write, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_res = dark_laplace_diff_1_update_0_write.extract<0, 15>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_res, dark_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_res = dark_laplace_diff_1_update_0_write.extract<16, 31>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_res, dark_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_res = dark_laplace_diff_1_update_0_write.extract<32, 47>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_res, dark_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_res = dark_laplace_diff_1_update_0_write.extract<48, 63>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_res, dark_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4_res = dark_laplace_diff_1_update_0_write.extract<64, 79>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write4_res, dark_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5_res = dark_laplace_diff_1_update_0_write.extract<80, 95>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write5_res, dark_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6_res = dark_laplace_diff_1_update_0_write.extract<96, 111>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write6_res, dark_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7_res = dark_laplace_diff_1_update_0_write.extract<112, 127>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write7_res, dark_laplace_diff_1, d0, d1, dynamic_address);
}

// fused_level_1_update_0_read
//	fused_level_1_rd0
//	fused_level_1_rd1
//	fused_level_1_rd2
//	fused_level_1_rd3
//	fused_level_1_rd4
//	fused_level_1_rd5
//	fused_level_1_rd6
//	fused_level_1_rd7
inline hw_uint<128> dark_laplace_diff_1_fused_level_1_update_0_read_bundle_read(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // fused_level_1_rd0
    // fused_level_1_rd1
    // fused_level_1_rd2
    // fused_level_1_rd3
    // fused_level_1_rd4
    // fused_level_1_rd5
    // fused_level_1_rd6
    // fused_level_1_rd7

	hw_uint<128> result;
	hw_uint<16> fused_level_1_rd0_res = fused_level_1_rd0_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, fused_level_1_rd0_res);
	hw_uint<16> fused_level_1_rd1_res = fused_level_1_rd1_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, fused_level_1_rd1_res);
	hw_uint<16> fused_level_1_rd2_res = fused_level_1_rd2_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, fused_level_1_rd2_res);
	hw_uint<16> fused_level_1_rd3_res = fused_level_1_rd3_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, fused_level_1_rd3_res);
	hw_uint<16> fused_level_1_rd4_res = fused_level_1_rd4_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, fused_level_1_rd4_res);
	hw_uint<16> fused_level_1_rd5_res = fused_level_1_rd5_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, fused_level_1_rd5_res);
	hw_uint<16> fused_level_1_rd6_res = fused_level_1_rd6_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, fused_level_1_rd6_res);
	hw_uint<16> fused_level_1_rd7_res = fused_level_1_rd7_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, fused_level_1_rd7_res);
	return result;
}

#include "hw_classes.h"

struct dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_to_fused_level_2_rd0_cache {
	// RAM Box: {[0, 476], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_to_fused_level_2_rd1_cache {
	// RAM Box: {[1, 477], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2_to_fused_level_2_rd2_cache {
	// RAM Box: {[2, 478], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3_to_fused_level_2_rd3_cache {
	// RAM Box: {[3, 479], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_2_cache {
  // # of banks: 4
  dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_to_fused_level_2_rd0_cache dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_to_fused_level_2_rd0;
  dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_to_fused_level_2_rd1_cache dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_to_fused_level_2_rd1;
  dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2_to_fused_level_2_rd2_cache dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2_to_fused_level_2_rd2;
  dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3_to_fused_level_2_rd3_cache dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3_to_fused_level_2_rd3;
};



inline void dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_write(hw_uint<16>& dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0, dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_to_fused_level_2_rd0.push(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0);
}

inline void dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_write(hw_uint<16>& dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1, dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_to_fused_level_2_rd1.push(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1);
}

inline void dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2_write(hw_uint<16>& dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2, dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2_to_fused_level_2_rd2.push(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2);
}

inline void dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3_write(hw_uint<16>& dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3, dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3_to_fused_level_2_rd3.push(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3);
}

inline hw_uint<16> fused_level_2_rd0_select(dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd0 read pattern: { fused_level_2_update_0[d0, d1] -> dark_laplace_diff_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0 = dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_to_fused_level_2_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_2_rd1_select(dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd1 read pattern: { fused_level_2_update_0[d0, d1] -> dark_laplace_diff_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1 = dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_to_fused_level_2_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_2_rd2_select(dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd2 read pattern: { fused_level_2_update_0[d0, d1] -> dark_laplace_diff_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2 = dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2_to_fused_level_2_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_2_rd3_select(dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd3 read pattern: { fused_level_2_update_0[d0, d1] -> dark_laplace_diff_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3 = dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3_to_fused_level_2_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_2_update_0_write
//	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0
//	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1
//	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2
//	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3
inline void dark_laplace_diff_2_dark_laplace_diff_2_update_0_write_bundle_write(hw_uint<64>& dark_laplace_diff_2_update_0_write, dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_res = dark_laplace_diff_2_update_0_write.extract<0, 15>();
	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_write(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_res, dark_laplace_diff_2, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_res = dark_laplace_diff_2_update_0_write.extract<16, 31>();
	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_write(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_res, dark_laplace_diff_2, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2_res = dark_laplace_diff_2_update_0_write.extract<32, 47>();
	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2_write(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write2_res, dark_laplace_diff_2, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3_res = dark_laplace_diff_2_update_0_write.extract<48, 63>();
	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3_write(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write3_res, dark_laplace_diff_2, d0, d1, dynamic_address);
}

// fused_level_2_update_0_read
//	fused_level_2_rd0
//	fused_level_2_rd1
//	fused_level_2_rd2
//	fused_level_2_rd3
inline hw_uint<64> dark_laplace_diff_2_fused_level_2_update_0_read_bundle_read(dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // fused_level_2_rd0
    // fused_level_2_rd1
    // fused_level_2_rd2
    // fused_level_2_rd3

	hw_uint<64> result;
	hw_uint<16> fused_level_2_rd0_res = fused_level_2_rd0_select(dark_laplace_diff_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, fused_level_2_rd0_res);
	hw_uint<16> fused_level_2_rd1_res = fused_level_2_rd1_select(dark_laplace_diff_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, fused_level_2_rd1_res);
	hw_uint<16> fused_level_2_rd2_res = fused_level_2_rd2_select(dark_laplace_diff_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, fused_level_2_rd2_res);
	hw_uint<16> fused_level_2_rd3_res = fused_level_2_rd3_select(dark_laplace_diff_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, fused_level_2_rd3_res);
	return result;
}

#include "hw_classes.h"

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write0_to_dark_laplace_diff_0_rd0_cache {
	// RAM Box: {[0, 1904], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write1_to_dark_laplace_diff_0_rd1_cache {
	// RAM Box: {[1, 1905], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write10_to_dark_laplace_diff_0_rd10_cache {
	// RAM Box: {[10, 1914], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write11_to_dark_laplace_diff_0_rd11_cache {
	// RAM Box: {[11, 1915], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write12_to_dark_laplace_diff_0_rd12_cache {
	// RAM Box: {[12, 1916], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write13_to_dark_laplace_diff_0_rd13_cache {
	// RAM Box: {[13, 1917], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write14_to_dark_laplace_diff_0_rd14_cache {
	// RAM Box: {[14, 1918], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write15_to_dark_laplace_diff_0_rd15_cache {
	// RAM Box: {[15, 1919], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write2_to_dark_laplace_diff_0_rd2_cache {
	// RAM Box: {[2, 1906], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write3_to_dark_laplace_diff_0_rd3_cache {
	// RAM Box: {[3, 1907], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write4_to_dark_laplace_diff_0_rd4_cache {
	// RAM Box: {[4, 1908], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write5_to_dark_laplace_diff_0_rd5_cache {
	// RAM Box: {[5, 1909], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write6_to_dark_laplace_diff_0_rd6_cache {
	// RAM Box: {[6, 1910], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write7_to_dark_laplace_diff_0_rd7_cache {
	// RAM Box: {[7, 1911], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write8_to_dark_laplace_diff_0_rd8_cache {
	// RAM Box: {[8, 1912], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write9_to_dark_laplace_diff_0_rd9_cache {
	// RAM Box: {[9, 1913], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_cache {
  // # of banks: 16
  dark_laplace_us_0_dark_laplace_us_0_update_0_write0_to_dark_laplace_diff_0_rd0_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write0_to_dark_laplace_diff_0_rd0;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write1_to_dark_laplace_diff_0_rd1_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write1_to_dark_laplace_diff_0_rd1;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write10_to_dark_laplace_diff_0_rd10_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write10_to_dark_laplace_diff_0_rd10;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write11_to_dark_laplace_diff_0_rd11_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write11_to_dark_laplace_diff_0_rd11;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write12_to_dark_laplace_diff_0_rd12_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write12_to_dark_laplace_diff_0_rd12;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write13_to_dark_laplace_diff_0_rd13_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write13_to_dark_laplace_diff_0_rd13;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write14_to_dark_laplace_diff_0_rd14_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write14_to_dark_laplace_diff_0_rd14;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write15_to_dark_laplace_diff_0_rd15_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write15_to_dark_laplace_diff_0_rd15;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write2_to_dark_laplace_diff_0_rd2_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write2_to_dark_laplace_diff_0_rd2;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write3_to_dark_laplace_diff_0_rd3_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write3_to_dark_laplace_diff_0_rd3;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write4_to_dark_laplace_diff_0_rd4_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write4_to_dark_laplace_diff_0_rd4;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write5_to_dark_laplace_diff_0_rd5_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write5_to_dark_laplace_diff_0_rd5;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write6_to_dark_laplace_diff_0_rd6_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write6_to_dark_laplace_diff_0_rd6;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write7_to_dark_laplace_diff_0_rd7_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write7_to_dark_laplace_diff_0_rd7;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write8_to_dark_laplace_diff_0_rd8_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write8_to_dark_laplace_diff_0_rd8;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write9_to_dark_laplace_diff_0_rd9_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write9_to_dark_laplace_diff_0_rd9;
};



inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write0_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write0, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write0_to_dark_laplace_diff_0_rd0.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write0);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write1_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write1, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write1_to_dark_laplace_diff_0_rd1.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write1);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write10_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write10, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write10_to_dark_laplace_diff_0_rd10.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write10);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write11_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write11, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write11_to_dark_laplace_diff_0_rd11.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write11);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write12_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write12, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write12_to_dark_laplace_diff_0_rd12.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write12);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write13_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write13, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write13_to_dark_laplace_diff_0_rd13.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write13);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write14_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write14, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write14_to_dark_laplace_diff_0_rd14.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write14);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write15_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write15, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write15_to_dark_laplace_diff_0_rd15.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write15);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write2_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write2, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write2_to_dark_laplace_diff_0_rd2.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write2);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write3_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write3, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write3_to_dark_laplace_diff_0_rd3.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write3);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write4_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write4, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write4_to_dark_laplace_diff_0_rd4.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write4);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write5_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write5, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write5_to_dark_laplace_diff_0_rd5.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write5);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write6_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write6, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write6_to_dark_laplace_diff_0_rd6.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write6);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write7_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write7, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write7_to_dark_laplace_diff_0_rd7.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write7);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write8_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write8, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write8_to_dark_laplace_diff_0_rd8.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write8);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write9_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write9, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write9_to_dark_laplace_diff_0_rd9.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write9);
}

inline hw_uint<16> dark_laplace_diff_0_rd0_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd0 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write0 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write0_to_dark_laplace_diff_0_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd1_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd1 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[1 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write1 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write1_to_dark_laplace_diff_0_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd10_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd10 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[10 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write10 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write10_to_dark_laplace_diff_0_rd10.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd11_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd11 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[11 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write11 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write11_to_dark_laplace_diff_0_rd11.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd12_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd12 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[12 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write12 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write12_to_dark_laplace_diff_0_rd12.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd13_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd13 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[13 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write13 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write13_to_dark_laplace_diff_0_rd13.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd14_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd14 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[14 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write14 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write14_to_dark_laplace_diff_0_rd14.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd15_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd15 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[15 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write15 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write15_to_dark_laplace_diff_0_rd15.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd2_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd2 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[2 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write2 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write2_to_dark_laplace_diff_0_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd3_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd3 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[3 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write3 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write3_to_dark_laplace_diff_0_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd4_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd4 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[4 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write4 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write4_to_dark_laplace_diff_0_rd4.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd5_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd5 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[5 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write5 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write5_to_dark_laplace_diff_0_rd5.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd6_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd6 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[6 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write6 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write6_to_dark_laplace_diff_0_rd6.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd7_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd7 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[7 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write7 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write7_to_dark_laplace_diff_0_rd7.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd8_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd8 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[8 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write8 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write8_to_dark_laplace_diff_0_rd8.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd9_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd9 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[9 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write9 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write9_to_dark_laplace_diff_0_rd9.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write9;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_0_update_0_read
//	dark_laplace_diff_0_rd0
//	dark_laplace_diff_0_rd1
//	dark_laplace_diff_0_rd2
//	dark_laplace_diff_0_rd3
//	dark_laplace_diff_0_rd4
//	dark_laplace_diff_0_rd5
//	dark_laplace_diff_0_rd6
//	dark_laplace_diff_0_rd7
//	dark_laplace_diff_0_rd8
//	dark_laplace_diff_0_rd9
//	dark_laplace_diff_0_rd10
//	dark_laplace_diff_0_rd11
//	dark_laplace_diff_0_rd12
//	dark_laplace_diff_0_rd13
//	dark_laplace_diff_0_rd14
//	dark_laplace_diff_0_rd15
inline hw_uint<256> dark_laplace_us_0_dark_laplace_diff_0_update_0_read_bundle_read(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // dark_laplace_diff_0_rd0
    // dark_laplace_diff_0_rd1
    // dark_laplace_diff_0_rd2
    // dark_laplace_diff_0_rd3
    // dark_laplace_diff_0_rd4
    // dark_laplace_diff_0_rd5
    // dark_laplace_diff_0_rd6
    // dark_laplace_diff_0_rd7
    // dark_laplace_diff_0_rd8
    // dark_laplace_diff_0_rd9
    // dark_laplace_diff_0_rd10
    // dark_laplace_diff_0_rd11
    // dark_laplace_diff_0_rd12
    // dark_laplace_diff_0_rd13
    // dark_laplace_diff_0_rd14
    // dark_laplace_diff_0_rd15

	hw_uint<256> result;
	hw_uint<16> dark_laplace_diff_0_rd0_res = dark_laplace_diff_0_rd0_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<0, 256>(result, dark_laplace_diff_0_rd0_res);
	hw_uint<16> dark_laplace_diff_0_rd1_res = dark_laplace_diff_0_rd1_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<16, 256>(result, dark_laplace_diff_0_rd1_res);
	hw_uint<16> dark_laplace_diff_0_rd2_res = dark_laplace_diff_0_rd2_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<32, 256>(result, dark_laplace_diff_0_rd2_res);
	hw_uint<16> dark_laplace_diff_0_rd3_res = dark_laplace_diff_0_rd3_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<48, 256>(result, dark_laplace_diff_0_rd3_res);
	hw_uint<16> dark_laplace_diff_0_rd4_res = dark_laplace_diff_0_rd4_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<64, 256>(result, dark_laplace_diff_0_rd4_res);
	hw_uint<16> dark_laplace_diff_0_rd5_res = dark_laplace_diff_0_rd5_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<80, 256>(result, dark_laplace_diff_0_rd5_res);
	hw_uint<16> dark_laplace_diff_0_rd6_res = dark_laplace_diff_0_rd6_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<96, 256>(result, dark_laplace_diff_0_rd6_res);
	hw_uint<16> dark_laplace_diff_0_rd7_res = dark_laplace_diff_0_rd7_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<112, 256>(result, dark_laplace_diff_0_rd7_res);
	hw_uint<16> dark_laplace_diff_0_rd8_res = dark_laplace_diff_0_rd8_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<128, 256>(result, dark_laplace_diff_0_rd8_res);
	hw_uint<16> dark_laplace_diff_0_rd9_res = dark_laplace_diff_0_rd9_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<144, 256>(result, dark_laplace_diff_0_rd9_res);
	hw_uint<16> dark_laplace_diff_0_rd10_res = dark_laplace_diff_0_rd10_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<160, 256>(result, dark_laplace_diff_0_rd10_res);
	hw_uint<16> dark_laplace_diff_0_rd11_res = dark_laplace_diff_0_rd11_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<176, 256>(result, dark_laplace_diff_0_rd11_res);
	hw_uint<16> dark_laplace_diff_0_rd12_res = dark_laplace_diff_0_rd12_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<192, 256>(result, dark_laplace_diff_0_rd12_res);
	hw_uint<16> dark_laplace_diff_0_rd13_res = dark_laplace_diff_0_rd13_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<208, 256>(result, dark_laplace_diff_0_rd13_res);
	hw_uint<16> dark_laplace_diff_0_rd14_res = dark_laplace_diff_0_rd14_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<224, 256>(result, dark_laplace_diff_0_rd14_res);
	hw_uint<16> dark_laplace_diff_0_rd15_res = dark_laplace_diff_0_rd15_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<240, 256>(result, dark_laplace_diff_0_rd15_res);
	return result;
}

// dark_laplace_us_0_update_0_write
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write0
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write1
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write2
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write3
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write4
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write5
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write6
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write7
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write8
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write9
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write10
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write11
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write12
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write13
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write14
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write15
inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write_bundle_write(hw_uint<256>& dark_laplace_us_0_update_0_write, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write0_res = dark_laplace_us_0_update_0_write.extract<0, 15>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write0_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write0_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write1_res = dark_laplace_us_0_update_0_write.extract<16, 31>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write1_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write1_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write2_res = dark_laplace_us_0_update_0_write.extract<32, 47>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write2_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write2_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write3_res = dark_laplace_us_0_update_0_write.extract<48, 63>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write3_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write3_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write4_res = dark_laplace_us_0_update_0_write.extract<64, 79>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write4_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write4_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write5_res = dark_laplace_us_0_update_0_write.extract<80, 95>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write5_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write5_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write6_res = dark_laplace_us_0_update_0_write.extract<96, 111>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write6_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write6_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write7_res = dark_laplace_us_0_update_0_write.extract<112, 127>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write7_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write7_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write8_res = dark_laplace_us_0_update_0_write.extract<128, 143>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write8_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write8_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write9_res = dark_laplace_us_0_update_0_write.extract<144, 159>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write9_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write9_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write10_res = dark_laplace_us_0_update_0_write.extract<160, 175>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write10_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write10_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write11_res = dark_laplace_us_0_update_0_write.extract<176, 191>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write11_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write11_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write12_res = dark_laplace_us_0_update_0_write.extract<192, 207>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write12_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write12_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write13_res = dark_laplace_us_0_update_0_write.extract<208, 223>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write13_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write13_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write14_res = dark_laplace_us_0_update_0_write.extract<224, 239>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write14_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write14_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write15_res = dark_laplace_us_0_update_0_write.extract<240, 255>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write15_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write15_res, dark_laplace_us_0, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write0_to_dark_laplace_diff_1_rd0_cache {
	// RAM Box: {[0, 952], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write1_to_dark_laplace_diff_1_rd1_cache {
	// RAM Box: {[1, 953], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write2_to_dark_laplace_diff_1_rd2_cache {
	// RAM Box: {[2, 954], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write3_to_dark_laplace_diff_1_rd3_cache {
	// RAM Box: {[3, 955], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write4_to_dark_laplace_diff_1_rd4_cache {
	// RAM Box: {[4, 956], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write5_to_dark_laplace_diff_1_rd5_cache {
	// RAM Box: {[5, 957], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write6_to_dark_laplace_diff_1_rd6_cache {
	// RAM Box: {[6, 958], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write7_to_dark_laplace_diff_1_rd7_cache {
	// RAM Box: {[7, 959], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_cache {
  // # of banks: 8
  dark_laplace_us_1_dark_laplace_us_1_update_0_write0_to_dark_laplace_diff_1_rd0_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write0_to_dark_laplace_diff_1_rd0;
  dark_laplace_us_1_dark_laplace_us_1_update_0_write1_to_dark_laplace_diff_1_rd1_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write1_to_dark_laplace_diff_1_rd1;
  dark_laplace_us_1_dark_laplace_us_1_update_0_write2_to_dark_laplace_diff_1_rd2_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write2_to_dark_laplace_diff_1_rd2;
  dark_laplace_us_1_dark_laplace_us_1_update_0_write3_to_dark_laplace_diff_1_rd3_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write3_to_dark_laplace_diff_1_rd3;
  dark_laplace_us_1_dark_laplace_us_1_update_0_write4_to_dark_laplace_diff_1_rd4_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write4_to_dark_laplace_diff_1_rd4;
  dark_laplace_us_1_dark_laplace_us_1_update_0_write5_to_dark_laplace_diff_1_rd5_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write5_to_dark_laplace_diff_1_rd5;
  dark_laplace_us_1_dark_laplace_us_1_update_0_write6_to_dark_laplace_diff_1_rd6_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write6_to_dark_laplace_diff_1_rd6;
  dark_laplace_us_1_dark_laplace_us_1_update_0_write7_to_dark_laplace_diff_1_rd7_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write7_to_dark_laplace_diff_1_rd7;
};



inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write0_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write0, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write0_to_dark_laplace_diff_1_rd0.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write0);
}

inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write1_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write1, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write1_to_dark_laplace_diff_1_rd1.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write1);
}

inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write2_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write2, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write2_to_dark_laplace_diff_1_rd2.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write2);
}

inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write3_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write3, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write3_to_dark_laplace_diff_1_rd3.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write3);
}

inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write4_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write4, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write4_to_dark_laplace_diff_1_rd4.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write4);
}

inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write5_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write5, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write5_to_dark_laplace_diff_1_rd5.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write5);
}

inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write6_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write6, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write6_to_dark_laplace_diff_1_rd6.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write6);
}

inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write7_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write7, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write7_to_dark_laplace_diff_1_rd7.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write7);
}

inline hw_uint<16> dark_laplace_diff_1_rd0_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd0 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write0 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write0_to_dark_laplace_diff_1_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd1_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd1 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[1 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write1 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write1_to_dark_laplace_diff_1_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd2_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd2 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[2 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write2 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write2_to_dark_laplace_diff_1_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd3_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd3 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[3 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write3 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write3_to_dark_laplace_diff_1_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd4_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd4 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[4 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write4 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write4_to_dark_laplace_diff_1_rd4.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd5_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd5 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[5 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write5 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write5_to_dark_laplace_diff_1_rd5.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd6_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd6 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[6 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write6 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write6_to_dark_laplace_diff_1_rd6.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd7_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd7 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[7 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write7 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write7_to_dark_laplace_diff_1_rd7.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write7;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_1_update_0_read
//	dark_laplace_diff_1_rd0
//	dark_laplace_diff_1_rd1
//	dark_laplace_diff_1_rd2
//	dark_laplace_diff_1_rd3
//	dark_laplace_diff_1_rd4
//	dark_laplace_diff_1_rd5
//	dark_laplace_diff_1_rd6
//	dark_laplace_diff_1_rd7
inline hw_uint<128> dark_laplace_us_1_dark_laplace_diff_1_update_0_read_bundle_read(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // dark_laplace_diff_1_rd0
    // dark_laplace_diff_1_rd1
    // dark_laplace_diff_1_rd2
    // dark_laplace_diff_1_rd3
    // dark_laplace_diff_1_rd4
    // dark_laplace_diff_1_rd5
    // dark_laplace_diff_1_rd6
    // dark_laplace_diff_1_rd7

	hw_uint<128> result;
	hw_uint<16> dark_laplace_diff_1_rd0_res = dark_laplace_diff_1_rd0_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, dark_laplace_diff_1_rd0_res);
	hw_uint<16> dark_laplace_diff_1_rd1_res = dark_laplace_diff_1_rd1_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, dark_laplace_diff_1_rd1_res);
	hw_uint<16> dark_laplace_diff_1_rd2_res = dark_laplace_diff_1_rd2_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, dark_laplace_diff_1_rd2_res);
	hw_uint<16> dark_laplace_diff_1_rd3_res = dark_laplace_diff_1_rd3_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, dark_laplace_diff_1_rd3_res);
	hw_uint<16> dark_laplace_diff_1_rd4_res = dark_laplace_diff_1_rd4_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, dark_laplace_diff_1_rd4_res);
	hw_uint<16> dark_laplace_diff_1_rd5_res = dark_laplace_diff_1_rd5_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, dark_laplace_diff_1_rd5_res);
	hw_uint<16> dark_laplace_diff_1_rd6_res = dark_laplace_diff_1_rd6_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, dark_laplace_diff_1_rd6_res);
	hw_uint<16> dark_laplace_diff_1_rd7_res = dark_laplace_diff_1_rd7_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, dark_laplace_diff_1_rd7_res);
	return result;
}

// dark_laplace_us_1_update_0_write
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write0
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write1
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write2
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write3
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write4
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write5
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write6
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write7
inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write_bundle_write(hw_uint<128>& dark_laplace_us_1_update_0_write, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write0_res = dark_laplace_us_1_update_0_write.extract<0, 15>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write0_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write0_res, dark_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write1_res = dark_laplace_us_1_update_0_write.extract<16, 31>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write1_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write1_res, dark_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write2_res = dark_laplace_us_1_update_0_write.extract<32, 47>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write2_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write2_res, dark_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write3_res = dark_laplace_us_1_update_0_write.extract<48, 63>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write3_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write3_res, dark_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write4_res = dark_laplace_us_1_update_0_write.extract<64, 79>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write4_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write4_res, dark_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write5_res = dark_laplace_us_1_update_0_write.extract<80, 95>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write5_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write5_res, dark_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write6_res = dark_laplace_us_1_update_0_write.extract<96, 111>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write6_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write6_res, dark_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write7_res = dark_laplace_us_1_update_0_write.extract<112, 127>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write7_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write7_res, dark_laplace_us_1, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct dark_laplace_us_2_dark_laplace_us_2_update_0_write0_to_dark_laplace_diff_2_rd0_cache {
	// RAM Box: {[0, 476], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_2_dark_laplace_us_2_update_0_write1_to_dark_laplace_diff_2_rd1_cache {
	// RAM Box: {[1, 477], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_2_dark_laplace_us_2_update_0_write2_to_dark_laplace_diff_2_rd2_cache {
	// RAM Box: {[2, 478], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_2_dark_laplace_us_2_update_0_write3_to_dark_laplace_diff_2_rd3_cache {
	// RAM Box: {[3, 479], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_2_cache {
  // # of banks: 4
  dark_laplace_us_2_dark_laplace_us_2_update_0_write0_to_dark_laplace_diff_2_rd0_cache dark_laplace_us_2_dark_laplace_us_2_update_0_write0_to_dark_laplace_diff_2_rd0;
  dark_laplace_us_2_dark_laplace_us_2_update_0_write1_to_dark_laplace_diff_2_rd1_cache dark_laplace_us_2_dark_laplace_us_2_update_0_write1_to_dark_laplace_diff_2_rd1;
  dark_laplace_us_2_dark_laplace_us_2_update_0_write2_to_dark_laplace_diff_2_rd2_cache dark_laplace_us_2_dark_laplace_us_2_update_0_write2_to_dark_laplace_diff_2_rd2;
  dark_laplace_us_2_dark_laplace_us_2_update_0_write3_to_dark_laplace_diff_2_rd3_cache dark_laplace_us_2_dark_laplace_us_2_update_0_write3_to_dark_laplace_diff_2_rd3;
};



inline void dark_laplace_us_2_dark_laplace_us_2_update_0_write0_write(hw_uint<16>& dark_laplace_us_2_dark_laplace_us_2_update_0_write0, dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
  dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write0_to_dark_laplace_diff_2_rd0.push(dark_laplace_us_2_dark_laplace_us_2_update_0_write0);
}

inline void dark_laplace_us_2_dark_laplace_us_2_update_0_write1_write(hw_uint<16>& dark_laplace_us_2_dark_laplace_us_2_update_0_write1, dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
  dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write1_to_dark_laplace_diff_2_rd1.push(dark_laplace_us_2_dark_laplace_us_2_update_0_write1);
}

inline void dark_laplace_us_2_dark_laplace_us_2_update_0_write2_write(hw_uint<16>& dark_laplace_us_2_dark_laplace_us_2_update_0_write2, dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
  dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write2_to_dark_laplace_diff_2_rd2.push(dark_laplace_us_2_dark_laplace_us_2_update_0_write2);
}

inline void dark_laplace_us_2_dark_laplace_us_2_update_0_write3_write(hw_uint<16>& dark_laplace_us_2_dark_laplace_us_2_update_0_write3, dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
  dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write3_to_dark_laplace_diff_2_rd3.push(dark_laplace_us_2_dark_laplace_us_2_update_0_write3);
}

inline hw_uint<16> dark_laplace_diff_2_rd0_select(dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd0 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_laplace_us_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 32] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_dark_laplace_us_2_dark_laplace_us_2_update_0_write0 = dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write0_to_dark_laplace_diff_2_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_2_dark_laplace_us_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_2_rd1_select(dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd1 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_laplace_us_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 32] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_dark_laplace_us_2_dark_laplace_us_2_update_0_write1 = dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write1_to_dark_laplace_diff_2_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_2_dark_laplace_us_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_2_rd2_select(dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd2 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_laplace_us_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 32] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_dark_laplace_us_2_dark_laplace_us_2_update_0_write2 = dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write2_to_dark_laplace_diff_2_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_2_dark_laplace_us_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_2_rd3_select(dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd3 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_laplace_us_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 32] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_dark_laplace_us_2_dark_laplace_us_2_update_0_write3 = dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write3_to_dark_laplace_diff_2_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_2_dark_laplace_us_2_update_0_write3;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_2_update_0_read
//	dark_laplace_diff_2_rd0
//	dark_laplace_diff_2_rd1
//	dark_laplace_diff_2_rd2
//	dark_laplace_diff_2_rd3
inline hw_uint<64> dark_laplace_us_2_dark_laplace_diff_2_update_0_read_bundle_read(dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // dark_laplace_diff_2_rd0
    // dark_laplace_diff_2_rd1
    // dark_laplace_diff_2_rd2
    // dark_laplace_diff_2_rd3

	hw_uint<64> result;
	hw_uint<16> dark_laplace_diff_2_rd0_res = dark_laplace_diff_2_rd0_select(dark_laplace_us_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, dark_laplace_diff_2_rd0_res);
	hw_uint<16> dark_laplace_diff_2_rd1_res = dark_laplace_diff_2_rd1_select(dark_laplace_us_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, dark_laplace_diff_2_rd1_res);
	hw_uint<16> dark_laplace_diff_2_rd2_res = dark_laplace_diff_2_rd2_select(dark_laplace_us_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, dark_laplace_diff_2_rd2_res);
	hw_uint<16> dark_laplace_diff_2_rd3_res = dark_laplace_diff_2_rd3_select(dark_laplace_us_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, dark_laplace_diff_2_rd3_res);
	return result;
}

// dark_laplace_us_2_update_0_write
//	dark_laplace_us_2_dark_laplace_us_2_update_0_write0
//	dark_laplace_us_2_dark_laplace_us_2_update_0_write1
//	dark_laplace_us_2_dark_laplace_us_2_update_0_write2
//	dark_laplace_us_2_dark_laplace_us_2_update_0_write3
inline void dark_laplace_us_2_dark_laplace_us_2_update_0_write_bundle_write(hw_uint<64>& dark_laplace_us_2_update_0_write, dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_us_2_dark_laplace_us_2_update_0_write0_res = dark_laplace_us_2_update_0_write.extract<0, 15>();
	dark_laplace_us_2_dark_laplace_us_2_update_0_write0_write(dark_laplace_us_2_dark_laplace_us_2_update_0_write0_res, dark_laplace_us_2, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_2_dark_laplace_us_2_update_0_write1_res = dark_laplace_us_2_update_0_write.extract<16, 31>();
	dark_laplace_us_2_dark_laplace_us_2_update_0_write1_write(dark_laplace_us_2_dark_laplace_us_2_update_0_write1_res, dark_laplace_us_2, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_2_dark_laplace_us_2_update_0_write2_res = dark_laplace_us_2_update_0_write.extract<32, 47>();
	dark_laplace_us_2_dark_laplace_us_2_update_0_write2_write(dark_laplace_us_2_dark_laplace_us_2_update_0_write2_res, dark_laplace_us_2, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_2_dark_laplace_us_2_update_0_write3_res = dark_laplace_us_2_update_0_write.extract<48, 63>();
	dark_laplace_us_2_dark_laplace_us_2_update_0_write3_write(dark_laplace_us_2_dark_laplace_us_2_update_0_write3_res, dark_laplace_us_2, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct dark_weights_dark_weights_update_0_write0_merged_banks_2_cache {
	// RAM Box: {[0, 1952], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write1_merged_banks_2_cache {
	// RAM Box: {[1, 1953], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write10_merged_banks_2_cache {
	// RAM Box: {[10, 1962], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write11_merged_banks_2_cache {
	// RAM Box: {[11, 1963], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write12_merged_banks_2_cache {
	// RAM Box: {[12, 1964], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write13_merged_banks_2_cache {
	// RAM Box: {[13, 1965], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write14_merged_banks_2_cache {
	// RAM Box: {[14, 1966], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write15_merged_banks_2_cache {
	// RAM Box: {[15, 1967], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write2_merged_banks_2_cache {
	// RAM Box: {[2, 1954], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write3_merged_banks_2_cache {
	// RAM Box: {[3, 1955], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write4_merged_banks_2_cache {
	// RAM Box: {[4, 1956], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write5_merged_banks_2_cache {
	// RAM Box: {[5, 1957], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write6_merged_banks_2_cache {
	// RAM Box: {[6, 1958], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write7_merged_banks_2_cache {
	// RAM Box: {[7, 1959], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write8_merged_banks_2_cache {
	// RAM Box: {[8, 1960], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_dark_weights_update_0_write9_merged_banks_2_cache {
	// RAM Box: {[9, 1961], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct dark_weights_cache {
  // # of banks: 16
  dark_weights_dark_weights_update_0_write0_merged_banks_2_cache dark_weights_dark_weights_update_0_write0_merged_banks_2;
  dark_weights_dark_weights_update_0_write1_merged_banks_2_cache dark_weights_dark_weights_update_0_write1_merged_banks_2;
  dark_weights_dark_weights_update_0_write10_merged_banks_2_cache dark_weights_dark_weights_update_0_write10_merged_banks_2;
  dark_weights_dark_weights_update_0_write11_merged_banks_2_cache dark_weights_dark_weights_update_0_write11_merged_banks_2;
  dark_weights_dark_weights_update_0_write12_merged_banks_2_cache dark_weights_dark_weights_update_0_write12_merged_banks_2;
  dark_weights_dark_weights_update_0_write13_merged_banks_2_cache dark_weights_dark_weights_update_0_write13_merged_banks_2;
  dark_weights_dark_weights_update_0_write14_merged_banks_2_cache dark_weights_dark_weights_update_0_write14_merged_banks_2;
  dark_weights_dark_weights_update_0_write15_merged_banks_2_cache dark_weights_dark_weights_update_0_write15_merged_banks_2;
  dark_weights_dark_weights_update_0_write2_merged_banks_2_cache dark_weights_dark_weights_update_0_write2_merged_banks_2;
  dark_weights_dark_weights_update_0_write3_merged_banks_2_cache dark_weights_dark_weights_update_0_write3_merged_banks_2;
  dark_weights_dark_weights_update_0_write4_merged_banks_2_cache dark_weights_dark_weights_update_0_write4_merged_banks_2;
  dark_weights_dark_weights_update_0_write5_merged_banks_2_cache dark_weights_dark_weights_update_0_write5_merged_banks_2;
  dark_weights_dark_weights_update_0_write6_merged_banks_2_cache dark_weights_dark_weights_update_0_write6_merged_banks_2;
  dark_weights_dark_weights_update_0_write7_merged_banks_2_cache dark_weights_dark_weights_update_0_write7_merged_banks_2;
  dark_weights_dark_weights_update_0_write8_merged_banks_2_cache dark_weights_dark_weights_update_0_write8_merged_banks_2;
  dark_weights_dark_weights_update_0_write9_merged_banks_2_cache dark_weights_dark_weights_update_0_write9_merged_banks_2;
};



inline void dark_weights_dark_weights_update_0_write0_write(hw_uint<16>& dark_weights_dark_weights_update_0_write0, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write0_merged_banks_2.push(dark_weights_dark_weights_update_0_write0);
}

inline void dark_weights_dark_weights_update_0_write1_write(hw_uint<16>& dark_weights_dark_weights_update_0_write1, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write1_merged_banks_2.push(dark_weights_dark_weights_update_0_write1);
}

inline void dark_weights_dark_weights_update_0_write10_write(hw_uint<16>& dark_weights_dark_weights_update_0_write10, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write10_merged_banks_2.push(dark_weights_dark_weights_update_0_write10);
}

inline void dark_weights_dark_weights_update_0_write11_write(hw_uint<16>& dark_weights_dark_weights_update_0_write11, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write11_merged_banks_2.push(dark_weights_dark_weights_update_0_write11);
}

inline void dark_weights_dark_weights_update_0_write12_write(hw_uint<16>& dark_weights_dark_weights_update_0_write12, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write12_merged_banks_2.push(dark_weights_dark_weights_update_0_write12);
}

inline void dark_weights_dark_weights_update_0_write13_write(hw_uint<16>& dark_weights_dark_weights_update_0_write13, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write13_merged_banks_2.push(dark_weights_dark_weights_update_0_write13);
}

inline void dark_weights_dark_weights_update_0_write14_write(hw_uint<16>& dark_weights_dark_weights_update_0_write14, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write14_merged_banks_2.push(dark_weights_dark_weights_update_0_write14);
}

inline void dark_weights_dark_weights_update_0_write15_write(hw_uint<16>& dark_weights_dark_weights_update_0_write15, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write15_merged_banks_2.push(dark_weights_dark_weights_update_0_write15);
}

inline void dark_weights_dark_weights_update_0_write2_write(hw_uint<16>& dark_weights_dark_weights_update_0_write2, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write2_merged_banks_2.push(dark_weights_dark_weights_update_0_write2);
}

inline void dark_weights_dark_weights_update_0_write3_write(hw_uint<16>& dark_weights_dark_weights_update_0_write3, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write3_merged_banks_2.push(dark_weights_dark_weights_update_0_write3);
}

inline void dark_weights_dark_weights_update_0_write4_write(hw_uint<16>& dark_weights_dark_weights_update_0_write4, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write4_merged_banks_2.push(dark_weights_dark_weights_update_0_write4);
}

inline void dark_weights_dark_weights_update_0_write5_write(hw_uint<16>& dark_weights_dark_weights_update_0_write5, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write5_merged_banks_2.push(dark_weights_dark_weights_update_0_write5);
}

inline void dark_weights_dark_weights_update_0_write6_write(hw_uint<16>& dark_weights_dark_weights_update_0_write6, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write6_merged_banks_2.push(dark_weights_dark_weights_update_0_write6);
}

inline void dark_weights_dark_weights_update_0_write7_write(hw_uint<16>& dark_weights_dark_weights_update_0_write7, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write7_merged_banks_2.push(dark_weights_dark_weights_update_0_write7);
}

inline void dark_weights_dark_weights_update_0_write8_write(hw_uint<16>& dark_weights_dark_weights_update_0_write8, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write8_merged_banks_2.push(dark_weights_dark_weights_update_0_write8);
}

inline void dark_weights_dark_weights_update_0_write9_write(hw_uint<16>& dark_weights_dark_weights_update_0_write9, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write9_merged_banks_2.push(dark_weights_dark_weights_update_0_write9);
}

inline hw_uint<16> dark_weights_normed_rd0_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd0 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write0 = dark_weights.dark_weights_dark_weights_update_0_write0_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd1_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd1 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[1 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write1 = dark_weights.dark_weights_dark_weights_update_0_write1_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd10_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd10 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[10 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write10 = dark_weights.dark_weights_dark_weights_update_0_write10_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd11_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd11 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[11 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write11 = dark_weights.dark_weights_dark_weights_update_0_write11_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd12_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd12 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[12 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write12 = dark_weights.dark_weights_dark_weights_update_0_write12_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd13_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd13 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[13 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write13 = dark_weights.dark_weights_dark_weights_update_0_write13_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd14_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd14 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[14 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write14 = dark_weights.dark_weights_dark_weights_update_0_write14_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd15_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd15 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[15 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write15 = dark_weights.dark_weights_dark_weights_update_0_write15_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd2_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd2 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[2 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write2 = dark_weights.dark_weights_dark_weights_update_0_write2_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd3_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd3 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[3 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write3 = dark_weights.dark_weights_dark_weights_update_0_write3_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd4_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd4 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[4 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write4 = dark_weights.dark_weights_dark_weights_update_0_write4_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd5_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd5 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[5 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write5 = dark_weights.dark_weights_dark_weights_update_0_write5_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd6_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd6 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[6 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write6 = dark_weights.dark_weights_dark_weights_update_0_write6_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd7_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd7 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[7 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write7 = dark_weights.dark_weights_dark_weights_update_0_write7_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd8_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd8 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[8 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write8 = dark_weights.dark_weights_dark_weights_update_0_write8_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd9_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd9 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[9 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write9 = dark_weights.dark_weights_dark_weights_update_0_write9_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write9;
  return 0;
}

inline hw_uint<16> weight_sums_rd0_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd0 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write0 = dark_weights.dark_weights_dark_weights_update_0_write0_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write0;
  return 0;
}

inline hw_uint<16> weight_sums_rd1_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd1 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[1 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write1 = dark_weights.dark_weights_dark_weights_update_0_write1_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write1;
  return 0;
}

inline hw_uint<16> weight_sums_rd10_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd10 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[10 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write10 = dark_weights.dark_weights_dark_weights_update_0_write10_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write10;
  return 0;
}

inline hw_uint<16> weight_sums_rd11_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd11 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[11 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write11 = dark_weights.dark_weights_dark_weights_update_0_write11_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write11;
  return 0;
}

inline hw_uint<16> weight_sums_rd12_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd12 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[12 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write12 = dark_weights.dark_weights_dark_weights_update_0_write12_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write12;
  return 0;
}

inline hw_uint<16> weight_sums_rd13_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd13 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[13 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write13 = dark_weights.dark_weights_dark_weights_update_0_write13_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write13;
  return 0;
}

inline hw_uint<16> weight_sums_rd14_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd14 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[14 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write14 = dark_weights.dark_weights_dark_weights_update_0_write14_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write14;
  return 0;
}

inline hw_uint<16> weight_sums_rd15_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd15 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[15 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write15 = dark_weights.dark_weights_dark_weights_update_0_write15_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write15;
  return 0;
}

inline hw_uint<16> weight_sums_rd2_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd2 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[2 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write2 = dark_weights.dark_weights_dark_weights_update_0_write2_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write2;
  return 0;
}

inline hw_uint<16> weight_sums_rd3_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd3 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[3 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write3 = dark_weights.dark_weights_dark_weights_update_0_write3_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write3;
  return 0;
}

inline hw_uint<16> weight_sums_rd4_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd4 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[4 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write4 = dark_weights.dark_weights_dark_weights_update_0_write4_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write4;
  return 0;
}

inline hw_uint<16> weight_sums_rd5_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd5 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[5 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write5 = dark_weights.dark_weights_dark_weights_update_0_write5_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write5;
  return 0;
}

inline hw_uint<16> weight_sums_rd6_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd6 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[6 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write6 = dark_weights.dark_weights_dark_weights_update_0_write6_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write6;
  return 0;
}

inline hw_uint<16> weight_sums_rd7_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd7 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[7 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write7 = dark_weights.dark_weights_dark_weights_update_0_write7_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write7;
  return 0;
}

inline hw_uint<16> weight_sums_rd8_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd8 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[8 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write8 = dark_weights.dark_weights_dark_weights_update_0_write8_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write8;
  return 0;
}

inline hw_uint<16> weight_sums_rd9_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // weight_sums_rd9 read pattern: { weight_sums_update_0[d0, d1] -> dark_weights[9 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_write9 = dark_weights.dark_weights_dark_weights_update_0_write9_merged_banks_2.peek_0();
  return value_dark_weights_dark_weights_update_0_write9;
  return 0;
}

// # of bundles = 3
// dark_weights_normed_update_0_read
//	dark_weights_normed_rd0
//	dark_weights_normed_rd1
//	dark_weights_normed_rd2
//	dark_weights_normed_rd3
//	dark_weights_normed_rd4
//	dark_weights_normed_rd5
//	dark_weights_normed_rd6
//	dark_weights_normed_rd7
//	dark_weights_normed_rd8
//	dark_weights_normed_rd9
//	dark_weights_normed_rd10
//	dark_weights_normed_rd11
//	dark_weights_normed_rd12
//	dark_weights_normed_rd13
//	dark_weights_normed_rd14
//	dark_weights_normed_rd15
inline hw_uint<256> dark_weights_dark_weights_normed_update_0_read_bundle_read(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // dark_weights_normed_rd0
    // dark_weights_normed_rd1
    // dark_weights_normed_rd2
    // dark_weights_normed_rd3
    // dark_weights_normed_rd4
    // dark_weights_normed_rd5
    // dark_weights_normed_rd6
    // dark_weights_normed_rd7
    // dark_weights_normed_rd8
    // dark_weights_normed_rd9
    // dark_weights_normed_rd10
    // dark_weights_normed_rd11
    // dark_weights_normed_rd12
    // dark_weights_normed_rd13
    // dark_weights_normed_rd14
    // dark_weights_normed_rd15

	hw_uint<256> result;
	hw_uint<16> dark_weights_normed_rd0_res = dark_weights_normed_rd0_select(dark_weights, d0, d1, dynamic_address);
	set_at<0, 256>(result, dark_weights_normed_rd0_res);
	hw_uint<16> dark_weights_normed_rd1_res = dark_weights_normed_rd1_select(dark_weights, d0, d1, dynamic_address);
	set_at<16, 256>(result, dark_weights_normed_rd1_res);
	hw_uint<16> dark_weights_normed_rd2_res = dark_weights_normed_rd2_select(dark_weights, d0, d1, dynamic_address);
	set_at<32, 256>(result, dark_weights_normed_rd2_res);
	hw_uint<16> dark_weights_normed_rd3_res = dark_weights_normed_rd3_select(dark_weights, d0, d1, dynamic_address);
	set_at<48, 256>(result, dark_weights_normed_rd3_res);
	hw_uint<16> dark_weights_normed_rd4_res = dark_weights_normed_rd4_select(dark_weights, d0, d1, dynamic_address);
	set_at<64, 256>(result, dark_weights_normed_rd4_res);
	hw_uint<16> dark_weights_normed_rd5_res = dark_weights_normed_rd5_select(dark_weights, d0, d1, dynamic_address);
	set_at<80, 256>(result, dark_weights_normed_rd5_res);
	hw_uint<16> dark_weights_normed_rd6_res = dark_weights_normed_rd6_select(dark_weights, d0, d1, dynamic_address);
	set_at<96, 256>(result, dark_weights_normed_rd6_res);
	hw_uint<16> dark_weights_normed_rd7_res = dark_weights_normed_rd7_select(dark_weights, d0, d1, dynamic_address);
	set_at<112, 256>(result, dark_weights_normed_rd7_res);
	hw_uint<16> dark_weights_normed_rd8_res = dark_weights_normed_rd8_select(dark_weights, d0, d1, dynamic_address);
	set_at<128, 256>(result, dark_weights_normed_rd8_res);
	hw_uint<16> dark_weights_normed_rd9_res = dark_weights_normed_rd9_select(dark_weights, d0, d1, dynamic_address);
	set_at<144, 256>(result, dark_weights_normed_rd9_res);
	hw_uint<16> dark_weights_normed_rd10_res = dark_weights_normed_rd10_select(dark_weights, d0, d1, dynamic_address);
	set_at<160, 256>(result, dark_weights_normed_rd10_res);
	hw_uint<16> dark_weights_normed_rd11_res = dark_weights_normed_rd11_select(dark_weights, d0, d1, dynamic_address);
	set_at<176, 256>(result, dark_weights_normed_rd11_res);
	hw_uint<16> dark_weights_normed_rd12_res = dark_weights_normed_rd12_select(dark_weights, d0, d1, dynamic_address);
	set_at<192, 256>(result, dark_weights_normed_rd12_res);
	hw_uint<16> dark_weights_normed_rd13_res = dark_weights_normed_rd13_select(dark_weights, d0, d1, dynamic_address);
	set_at<208, 256>(result, dark_weights_normed_rd13_res);
	hw_uint<16> dark_weights_normed_rd14_res = dark_weights_normed_rd14_select(dark_weights, d0, d1, dynamic_address);
	set_at<224, 256>(result, dark_weights_normed_rd14_res);
	hw_uint<16> dark_weights_normed_rd15_res = dark_weights_normed_rd15_select(dark_weights, d0, d1, dynamic_address);
	set_at<240, 256>(result, dark_weights_normed_rd15_res);
	return result;
}

// dark_weights_update_0_write
//	dark_weights_dark_weights_update_0_write0
//	dark_weights_dark_weights_update_0_write1
//	dark_weights_dark_weights_update_0_write2
//	dark_weights_dark_weights_update_0_write3
//	dark_weights_dark_weights_update_0_write4
//	dark_weights_dark_weights_update_0_write5
//	dark_weights_dark_weights_update_0_write6
//	dark_weights_dark_weights_update_0_write7
//	dark_weights_dark_weights_update_0_write8
//	dark_weights_dark_weights_update_0_write9
//	dark_weights_dark_weights_update_0_write10
//	dark_weights_dark_weights_update_0_write11
//	dark_weights_dark_weights_update_0_write12
//	dark_weights_dark_weights_update_0_write13
//	dark_weights_dark_weights_update_0_write14
//	dark_weights_dark_weights_update_0_write15
inline void dark_weights_dark_weights_update_0_write_bundle_write(hw_uint<256>& dark_weights_update_0_write, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_dark_weights_update_0_write0_res = dark_weights_update_0_write.extract<0, 15>();
	dark_weights_dark_weights_update_0_write0_write(dark_weights_dark_weights_update_0_write0_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write1_res = dark_weights_update_0_write.extract<16, 31>();
	dark_weights_dark_weights_update_0_write1_write(dark_weights_dark_weights_update_0_write1_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write2_res = dark_weights_update_0_write.extract<32, 47>();
	dark_weights_dark_weights_update_0_write2_write(dark_weights_dark_weights_update_0_write2_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write3_res = dark_weights_update_0_write.extract<48, 63>();
	dark_weights_dark_weights_update_0_write3_write(dark_weights_dark_weights_update_0_write3_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write4_res = dark_weights_update_0_write.extract<64, 79>();
	dark_weights_dark_weights_update_0_write4_write(dark_weights_dark_weights_update_0_write4_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write5_res = dark_weights_update_0_write.extract<80, 95>();
	dark_weights_dark_weights_update_0_write5_write(dark_weights_dark_weights_update_0_write5_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write6_res = dark_weights_update_0_write.extract<96, 111>();
	dark_weights_dark_weights_update_0_write6_write(dark_weights_dark_weights_update_0_write6_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write7_res = dark_weights_update_0_write.extract<112, 127>();
	dark_weights_dark_weights_update_0_write7_write(dark_weights_dark_weights_update_0_write7_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write8_res = dark_weights_update_0_write.extract<128, 143>();
	dark_weights_dark_weights_update_0_write8_write(dark_weights_dark_weights_update_0_write8_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write9_res = dark_weights_update_0_write.extract<144, 159>();
	dark_weights_dark_weights_update_0_write9_write(dark_weights_dark_weights_update_0_write9_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write10_res = dark_weights_update_0_write.extract<160, 175>();
	dark_weights_dark_weights_update_0_write10_write(dark_weights_dark_weights_update_0_write10_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write11_res = dark_weights_update_0_write.extract<176, 191>();
	dark_weights_dark_weights_update_0_write11_write(dark_weights_dark_weights_update_0_write11_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write12_res = dark_weights_update_0_write.extract<192, 207>();
	dark_weights_dark_weights_update_0_write12_write(dark_weights_dark_weights_update_0_write12_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write13_res = dark_weights_update_0_write.extract<208, 223>();
	dark_weights_dark_weights_update_0_write13_write(dark_weights_dark_weights_update_0_write13_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write14_res = dark_weights_update_0_write.extract<224, 239>();
	dark_weights_dark_weights_update_0_write14_write(dark_weights_dark_weights_update_0_write14_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write15_res = dark_weights_update_0_write.extract<240, 255>();
	dark_weights_dark_weights_update_0_write15_write(dark_weights_dark_weights_update_0_write15_res, dark_weights, d0, d1, dynamic_address);
}

// weight_sums_update_0_read
//	weight_sums_rd0
//	weight_sums_rd1
//	weight_sums_rd2
//	weight_sums_rd3
//	weight_sums_rd4
//	weight_sums_rd5
//	weight_sums_rd6
//	weight_sums_rd7
//	weight_sums_rd8
//	weight_sums_rd9
//	weight_sums_rd10
//	weight_sums_rd11
//	weight_sums_rd12
//	weight_sums_rd13
//	weight_sums_rd14
//	weight_sums_rd15
inline hw_uint<256> dark_weights_weight_sums_update_0_read_bundle_read(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // weight_sums_rd0
    // weight_sums_rd1
    // weight_sums_rd2
    // weight_sums_rd3
    // weight_sums_rd4
    // weight_sums_rd5
    // weight_sums_rd6
    // weight_sums_rd7
    // weight_sums_rd8
    // weight_sums_rd9
    // weight_sums_rd10
    // weight_sums_rd11
    // weight_sums_rd12
    // weight_sums_rd13
    // weight_sums_rd14
    // weight_sums_rd15

	hw_uint<256> result;
	hw_uint<16> weight_sums_rd0_res = weight_sums_rd0_select(dark_weights, d0, d1, dynamic_address);
	set_at<0, 256>(result, weight_sums_rd0_res);
	hw_uint<16> weight_sums_rd1_res = weight_sums_rd1_select(dark_weights, d0, d1, dynamic_address);
	set_at<16, 256>(result, weight_sums_rd1_res);
	hw_uint<16> weight_sums_rd2_res = weight_sums_rd2_select(dark_weights, d0, d1, dynamic_address);
	set_at<32, 256>(result, weight_sums_rd2_res);
	hw_uint<16> weight_sums_rd3_res = weight_sums_rd3_select(dark_weights, d0, d1, dynamic_address);
	set_at<48, 256>(result, weight_sums_rd3_res);
	hw_uint<16> weight_sums_rd4_res = weight_sums_rd4_select(dark_weights, d0, d1, dynamic_address);
	set_at<64, 256>(result, weight_sums_rd4_res);
	hw_uint<16> weight_sums_rd5_res = weight_sums_rd5_select(dark_weights, d0, d1, dynamic_address);
	set_at<80, 256>(result, weight_sums_rd5_res);
	hw_uint<16> weight_sums_rd6_res = weight_sums_rd6_select(dark_weights, d0, d1, dynamic_address);
	set_at<96, 256>(result, weight_sums_rd6_res);
	hw_uint<16> weight_sums_rd7_res = weight_sums_rd7_select(dark_weights, d0, d1, dynamic_address);
	set_at<112, 256>(result, weight_sums_rd7_res);
	hw_uint<16> weight_sums_rd8_res = weight_sums_rd8_select(dark_weights, d0, d1, dynamic_address);
	set_at<128, 256>(result, weight_sums_rd8_res);
	hw_uint<16> weight_sums_rd9_res = weight_sums_rd9_select(dark_weights, d0, d1, dynamic_address);
	set_at<144, 256>(result, weight_sums_rd9_res);
	hw_uint<16> weight_sums_rd10_res = weight_sums_rd10_select(dark_weights, d0, d1, dynamic_address);
	set_at<160, 256>(result, weight_sums_rd10_res);
	hw_uint<16> weight_sums_rd11_res = weight_sums_rd11_select(dark_weights, d0, d1, dynamic_address);
	set_at<176, 256>(result, weight_sums_rd11_res);
	hw_uint<16> weight_sums_rd12_res = weight_sums_rd12_select(dark_weights, d0, d1, dynamic_address);
	set_at<192, 256>(result, weight_sums_rd12_res);
	hw_uint<16> weight_sums_rd13_res = weight_sums_rd13_select(dark_weights, d0, d1, dynamic_address);
	set_at<208, 256>(result, weight_sums_rd13_res);
	hw_uint<16> weight_sums_rd14_res = weight_sums_rd14_select(dark_weights, d0, d1, dynamic_address);
	set_at<224, 256>(result, weight_sums_rd14_res);
	hw_uint<16> weight_sums_rd15_res = weight_sums_rd15_select(dark_weights, d0, d1, dynamic_address);
	set_at<240, 256>(result, weight_sums_rd15_res);
	return result;
}

#include "hw_classes.h"

struct dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10_cache {
	// RAM Box: {[0, 1952], [0, 1086]}
	// Capacity: 248
	// # of read delays: 6
  // 0, 1, 123, 124, 246, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 121> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_124() {
		return f6;
	}

	inline hw_uint<16> peek_245() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_246() {
		return f8;
	}

	inline hw_uint<16> peek_247() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10_cache {
	// RAM Box: {[1, 1953], [0, 1086]}
	// Capacity: 248
	// # of read delays: 6
  // 0, 1, 123, 124, 246, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 121> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_124() {
		return f6;
	}

	inline hw_uint<16> peek_245() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_246() {
		return f8;
	}

	inline hw_uint<16> peek_247() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10_cache {
	// RAM Box: {[10, 1962], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10_cache {
	// RAM Box: {[11, 1963], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10_cache {
	// RAM Box: {[12, 1964], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10_cache {
	// RAM Box: {[13, 1965], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10_cache {
	// RAM Box: {[14, 1966], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10_cache {
	// RAM Box: {[15, 1967], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10_cache {
	// RAM Box: {[2, 1954], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10_cache {
	// RAM Box: {[3, 1955], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10_cache {
	// RAM Box: {[4, 1956], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10_cache {
	// RAM Box: {[5, 1957], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10_cache {
	// RAM Box: {[6, 1958], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10_cache {
	// RAM Box: {[7, 1959], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10_cache {
	// RAM Box: {[8, 1960], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10_cache {
	// RAM Box: {[9, 1961], [0, 1086]}
	// Capacity: 248
	// # of read delays: 4
  // 0, 1, 124, 247
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 122> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 122> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_123() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_124() {
		return f4;
	}

	inline hw_uint<16> peek_246() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_247() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 122
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 122 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_cache {
  // # of banks: 16
  dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10;
  dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10_cache dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10;
};



inline void dark_weights_normed_dark_weights_normed_update_0_write0_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write0, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write0);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write1_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write1, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write1);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write10_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write10, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write10);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write11_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write11, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write11);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write12_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write12, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write12);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write13_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write13, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write13);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write14_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write14, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write14);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write15_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write15, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write15);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write2_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write2, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write2);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write3_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write3, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write3);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write4_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write4, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write4);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write5_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write5, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write5);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write6_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write6, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write6);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write7_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write7, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write7);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write8_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write8, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write8);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write9_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write9, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10.push(dark_weights_normed_dark_weights_normed_update_0_write9);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd0_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd0 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd1_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd1 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd10_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd10 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd100_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd100 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write11 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd101_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd101 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write11 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd102_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd102 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write12 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd103_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd103 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write12 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd104_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd104 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write12 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd105_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd105 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write13 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd106_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd106 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write13 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd107_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd107 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write13 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd108_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd108 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write12 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd109_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd109 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write12 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd11_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd11 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd110_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd110 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write12 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd111_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd111 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write13 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd112_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd112 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write13 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd113_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd113 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write13 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd114_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd114 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write14 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd115_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd115 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write14 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd116_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd116 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write14 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd117_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd117 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[13 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write13 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd118_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd118 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[13 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write13 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd119_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd119 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[13 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write13 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd12_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd12 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd120_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd120 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write14 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd121_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd121 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write14 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd122_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd122 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write14 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd123_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd123 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write15 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd124_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd124 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write15 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd125_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd125 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write15 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd126_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd126 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[14 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write14 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd127_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd127 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[14 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write14 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd128_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd128 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[14 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write14 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd129_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd129 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write15 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd13_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd13 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd130_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd130 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write15 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd131_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd131 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write15 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd132_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd132 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[16 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10.peek_246();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd133_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd133 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[16 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10.peek_123();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd134_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd134 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[16 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10.peek_0();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd135_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd135 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[15 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write15 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd136_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd136 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[15 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write15 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd137_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd137 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[15 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write15 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd138_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd138 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[16 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10.peek_246();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd139_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd139 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[16 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10.peek_123();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd14_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd14 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd140_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd140 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[16 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10.peek_0();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd141_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd141 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[17 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10.peek_246();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd142_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd142 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[17 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10.peek_123();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd143_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd143 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[17 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10.peek_0();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd15_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd15 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd16_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd16 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd17_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd17 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd18_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd18 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd19_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd19 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd2_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd2 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd20_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd20 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd21_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd21 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd22_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd22 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd23_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd23 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd24_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd24 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd25_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd25 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd26_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd26 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd27_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd27 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd28_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd28 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd29_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd29 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd3_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd3 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd30_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd30 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd31_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd31 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd32_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd32 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd33_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd33 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd34_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd34 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd35_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd35 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd36_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd36 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd37_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd37 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd38_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd38 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd39_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd39 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd4_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd4 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd40_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd40 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd41_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd41 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd42_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd42 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd43_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd43 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd44_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd44 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd45_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd45 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd46_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd46 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd47_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd47 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd48_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd48 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd49_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd49 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd5_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd5 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd50_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd50 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd51_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd51 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd52_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd52 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd53_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd53 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd54_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd54 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd55_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd55 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd56_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd56 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd57_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd57 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd58_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd58 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd59_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd59 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd6_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd6 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd60_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd60 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write8 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd61_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd61 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write8 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd62_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd62 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write8 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd63_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd63 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd64_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd64 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd65_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd65 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd66_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd66 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write8 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd67_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd67 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write8 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd68_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd68 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write8 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd69_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd69 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write9 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd7_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd7 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd70_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd70 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write9 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd71_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd71 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write9 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd72_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd72 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write8 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd73_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd73 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write8 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd74_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd74 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write8 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd75_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd75 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write9 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd76_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd76 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write9 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd77_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd77 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write9 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd78_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd78 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write10 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd79_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd79 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write10 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd8_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd8 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd80_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd80 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write10 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd81_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd81 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[9 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write9 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd82_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd82 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[9 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write9 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd83_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd83 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[9 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write9 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd84_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd84 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write10 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd85_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd85 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write10 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd86_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd86 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write10 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd87_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd87 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write11 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd88_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd88 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write11 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd89_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd89 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write11 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd9_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd9 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd90_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd90 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[10 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write10 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd91_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd91 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[10 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write10 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd92_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd92 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[10 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write10 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd93_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd93 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write11 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd94_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd94 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[11 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write11 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd95_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd95 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[11 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write11 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd96_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd96 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[12 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write12 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd97_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd97 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[12 + 16d0, 1 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write12 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10.peek_124();
  return value_dark_weights_normed_dark_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd98_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd98 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[12 + 16d0, 2 + d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write12 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd99_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd99 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[11 + 16d0, d1] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write11 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> fused_level_0_rd0_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd0 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_0_rd1_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd1 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[1 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_0_rd10_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd10 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[10 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write10 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write10_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write10;
  return 0;
}

inline hw_uint<16> fused_level_0_rd11_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd11 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[11 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write11 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write11_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write11;
  return 0;
}

inline hw_uint<16> fused_level_0_rd12_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd12 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[12 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write12 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write12_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write12;
  return 0;
}

inline hw_uint<16> fused_level_0_rd13_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd13 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[13 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write13 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write13_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write13;
  return 0;
}

inline hw_uint<16> fused_level_0_rd14_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd14 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[14 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write14 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write14_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write14;
  return 0;
}

inline hw_uint<16> fused_level_0_rd15_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd15 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[15 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write15 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write15_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write15;
  return 0;
}

inline hw_uint<16> fused_level_0_rd2_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd2 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[2 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_0_rd3_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd3 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[3 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_0_rd4_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd4 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[4 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_0_rd5_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd5 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[5 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_0_rd6_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd6 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[6 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_0_rd7_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd7 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[7 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> fused_level_0_rd8_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd8 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[8 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write8 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write8_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write8;
  return 0;
}

inline hw_uint<16> fused_level_0_rd9_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd9 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[9 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write9 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write9_merged_banks_10.peek_247();
  return value_dark_weights_normed_dark_weights_normed_update_0_write9;
  return 0;
}

// # of bundles = 3
// dark_weights_normed_gauss_blur_1_update_0_read
//	dark_weights_normed_gauss_blur_1_rd0
//	dark_weights_normed_gauss_blur_1_rd1
//	dark_weights_normed_gauss_blur_1_rd2
//	dark_weights_normed_gauss_blur_1_rd3
//	dark_weights_normed_gauss_blur_1_rd4
//	dark_weights_normed_gauss_blur_1_rd5
//	dark_weights_normed_gauss_blur_1_rd6
//	dark_weights_normed_gauss_blur_1_rd7
//	dark_weights_normed_gauss_blur_1_rd8
//	dark_weights_normed_gauss_blur_1_rd9
//	dark_weights_normed_gauss_blur_1_rd10
//	dark_weights_normed_gauss_blur_1_rd11
//	dark_weights_normed_gauss_blur_1_rd12
//	dark_weights_normed_gauss_blur_1_rd13
//	dark_weights_normed_gauss_blur_1_rd14
//	dark_weights_normed_gauss_blur_1_rd15
//	dark_weights_normed_gauss_blur_1_rd16
//	dark_weights_normed_gauss_blur_1_rd17
//	dark_weights_normed_gauss_blur_1_rd18
//	dark_weights_normed_gauss_blur_1_rd19
//	dark_weights_normed_gauss_blur_1_rd20
//	dark_weights_normed_gauss_blur_1_rd21
//	dark_weights_normed_gauss_blur_1_rd22
//	dark_weights_normed_gauss_blur_1_rd23
//	dark_weights_normed_gauss_blur_1_rd24
//	dark_weights_normed_gauss_blur_1_rd25
//	dark_weights_normed_gauss_blur_1_rd26
//	dark_weights_normed_gauss_blur_1_rd27
//	dark_weights_normed_gauss_blur_1_rd28
//	dark_weights_normed_gauss_blur_1_rd29
//	dark_weights_normed_gauss_blur_1_rd30
//	dark_weights_normed_gauss_blur_1_rd31
//	dark_weights_normed_gauss_blur_1_rd32
//	dark_weights_normed_gauss_blur_1_rd33
//	dark_weights_normed_gauss_blur_1_rd34
//	dark_weights_normed_gauss_blur_1_rd35
//	dark_weights_normed_gauss_blur_1_rd36
//	dark_weights_normed_gauss_blur_1_rd37
//	dark_weights_normed_gauss_blur_1_rd38
//	dark_weights_normed_gauss_blur_1_rd39
//	dark_weights_normed_gauss_blur_1_rd40
//	dark_weights_normed_gauss_blur_1_rd41
//	dark_weights_normed_gauss_blur_1_rd42
//	dark_weights_normed_gauss_blur_1_rd43
//	dark_weights_normed_gauss_blur_1_rd44
//	dark_weights_normed_gauss_blur_1_rd45
//	dark_weights_normed_gauss_blur_1_rd46
//	dark_weights_normed_gauss_blur_1_rd47
//	dark_weights_normed_gauss_blur_1_rd48
//	dark_weights_normed_gauss_blur_1_rd49
//	dark_weights_normed_gauss_blur_1_rd50
//	dark_weights_normed_gauss_blur_1_rd51
//	dark_weights_normed_gauss_blur_1_rd52
//	dark_weights_normed_gauss_blur_1_rd53
//	dark_weights_normed_gauss_blur_1_rd54
//	dark_weights_normed_gauss_blur_1_rd55
//	dark_weights_normed_gauss_blur_1_rd56
//	dark_weights_normed_gauss_blur_1_rd57
//	dark_weights_normed_gauss_blur_1_rd58
//	dark_weights_normed_gauss_blur_1_rd59
//	dark_weights_normed_gauss_blur_1_rd60
//	dark_weights_normed_gauss_blur_1_rd61
//	dark_weights_normed_gauss_blur_1_rd62
//	dark_weights_normed_gauss_blur_1_rd63
//	dark_weights_normed_gauss_blur_1_rd64
//	dark_weights_normed_gauss_blur_1_rd65
//	dark_weights_normed_gauss_blur_1_rd66
//	dark_weights_normed_gauss_blur_1_rd67
//	dark_weights_normed_gauss_blur_1_rd68
//	dark_weights_normed_gauss_blur_1_rd69
//	dark_weights_normed_gauss_blur_1_rd70
//	dark_weights_normed_gauss_blur_1_rd71
//	dark_weights_normed_gauss_blur_1_rd72
//	dark_weights_normed_gauss_blur_1_rd73
//	dark_weights_normed_gauss_blur_1_rd74
//	dark_weights_normed_gauss_blur_1_rd75
//	dark_weights_normed_gauss_blur_1_rd76
//	dark_weights_normed_gauss_blur_1_rd77
//	dark_weights_normed_gauss_blur_1_rd78
//	dark_weights_normed_gauss_blur_1_rd79
//	dark_weights_normed_gauss_blur_1_rd80
//	dark_weights_normed_gauss_blur_1_rd81
//	dark_weights_normed_gauss_blur_1_rd82
//	dark_weights_normed_gauss_blur_1_rd83
//	dark_weights_normed_gauss_blur_1_rd84
//	dark_weights_normed_gauss_blur_1_rd85
//	dark_weights_normed_gauss_blur_1_rd86
//	dark_weights_normed_gauss_blur_1_rd87
//	dark_weights_normed_gauss_blur_1_rd88
//	dark_weights_normed_gauss_blur_1_rd89
//	dark_weights_normed_gauss_blur_1_rd90
//	dark_weights_normed_gauss_blur_1_rd91
//	dark_weights_normed_gauss_blur_1_rd92
//	dark_weights_normed_gauss_blur_1_rd93
//	dark_weights_normed_gauss_blur_1_rd94
//	dark_weights_normed_gauss_blur_1_rd95
//	dark_weights_normed_gauss_blur_1_rd96
//	dark_weights_normed_gauss_blur_1_rd97
//	dark_weights_normed_gauss_blur_1_rd98
//	dark_weights_normed_gauss_blur_1_rd99
//	dark_weights_normed_gauss_blur_1_rd100
//	dark_weights_normed_gauss_blur_1_rd101
//	dark_weights_normed_gauss_blur_1_rd102
//	dark_weights_normed_gauss_blur_1_rd103
//	dark_weights_normed_gauss_blur_1_rd104
//	dark_weights_normed_gauss_blur_1_rd105
//	dark_weights_normed_gauss_blur_1_rd106
//	dark_weights_normed_gauss_blur_1_rd107
//	dark_weights_normed_gauss_blur_1_rd108
//	dark_weights_normed_gauss_blur_1_rd109
//	dark_weights_normed_gauss_blur_1_rd110
//	dark_weights_normed_gauss_blur_1_rd111
//	dark_weights_normed_gauss_blur_1_rd112
//	dark_weights_normed_gauss_blur_1_rd113
//	dark_weights_normed_gauss_blur_1_rd114
//	dark_weights_normed_gauss_blur_1_rd115
//	dark_weights_normed_gauss_blur_1_rd116
//	dark_weights_normed_gauss_blur_1_rd117
//	dark_weights_normed_gauss_blur_1_rd118
//	dark_weights_normed_gauss_blur_1_rd119
//	dark_weights_normed_gauss_blur_1_rd120
//	dark_weights_normed_gauss_blur_1_rd121
//	dark_weights_normed_gauss_blur_1_rd122
//	dark_weights_normed_gauss_blur_1_rd123
//	dark_weights_normed_gauss_blur_1_rd124
//	dark_weights_normed_gauss_blur_1_rd125
//	dark_weights_normed_gauss_blur_1_rd126
//	dark_weights_normed_gauss_blur_1_rd127
//	dark_weights_normed_gauss_blur_1_rd128
//	dark_weights_normed_gauss_blur_1_rd129
//	dark_weights_normed_gauss_blur_1_rd130
//	dark_weights_normed_gauss_blur_1_rd131
//	dark_weights_normed_gauss_blur_1_rd132
//	dark_weights_normed_gauss_blur_1_rd133
//	dark_weights_normed_gauss_blur_1_rd134
//	dark_weights_normed_gauss_blur_1_rd135
//	dark_weights_normed_gauss_blur_1_rd136
//	dark_weights_normed_gauss_blur_1_rd137
//	dark_weights_normed_gauss_blur_1_rd138
//	dark_weights_normed_gauss_blur_1_rd139
//	dark_weights_normed_gauss_blur_1_rd140
//	dark_weights_normed_gauss_blur_1_rd141
//	dark_weights_normed_gauss_blur_1_rd142
//	dark_weights_normed_gauss_blur_1_rd143
inline hw_uint<2304> dark_weights_normed_dark_weights_normed_gauss_blur_1_update_0_read_bundle_read(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 144
    // dark_weights_normed_gauss_blur_1_rd0
    // dark_weights_normed_gauss_blur_1_rd1
    // dark_weights_normed_gauss_blur_1_rd2
    // dark_weights_normed_gauss_blur_1_rd3
    // dark_weights_normed_gauss_blur_1_rd4
    // dark_weights_normed_gauss_blur_1_rd5
    // dark_weights_normed_gauss_blur_1_rd6
    // dark_weights_normed_gauss_blur_1_rd7
    // dark_weights_normed_gauss_blur_1_rd8
    // dark_weights_normed_gauss_blur_1_rd9
    // dark_weights_normed_gauss_blur_1_rd10
    // dark_weights_normed_gauss_blur_1_rd11
    // dark_weights_normed_gauss_blur_1_rd12
    // dark_weights_normed_gauss_blur_1_rd13
    // dark_weights_normed_gauss_blur_1_rd14
    // dark_weights_normed_gauss_blur_1_rd15
    // dark_weights_normed_gauss_blur_1_rd16
    // dark_weights_normed_gauss_blur_1_rd17
    // dark_weights_normed_gauss_blur_1_rd18
    // dark_weights_normed_gauss_blur_1_rd19
    // dark_weights_normed_gauss_blur_1_rd20
    // dark_weights_normed_gauss_blur_1_rd21
    // dark_weights_normed_gauss_blur_1_rd22
    // dark_weights_normed_gauss_blur_1_rd23
    // dark_weights_normed_gauss_blur_1_rd24
    // dark_weights_normed_gauss_blur_1_rd25
    // dark_weights_normed_gauss_blur_1_rd26
    // dark_weights_normed_gauss_blur_1_rd27
    // dark_weights_normed_gauss_blur_1_rd28
    // dark_weights_normed_gauss_blur_1_rd29
    // dark_weights_normed_gauss_blur_1_rd30
    // dark_weights_normed_gauss_blur_1_rd31
    // dark_weights_normed_gauss_blur_1_rd32
    // dark_weights_normed_gauss_blur_1_rd33
    // dark_weights_normed_gauss_blur_1_rd34
    // dark_weights_normed_gauss_blur_1_rd35
    // dark_weights_normed_gauss_blur_1_rd36
    // dark_weights_normed_gauss_blur_1_rd37
    // dark_weights_normed_gauss_blur_1_rd38
    // dark_weights_normed_gauss_blur_1_rd39
    // dark_weights_normed_gauss_blur_1_rd40
    // dark_weights_normed_gauss_blur_1_rd41
    // dark_weights_normed_gauss_blur_1_rd42
    // dark_weights_normed_gauss_blur_1_rd43
    // dark_weights_normed_gauss_blur_1_rd44
    // dark_weights_normed_gauss_blur_1_rd45
    // dark_weights_normed_gauss_blur_1_rd46
    // dark_weights_normed_gauss_blur_1_rd47
    // dark_weights_normed_gauss_blur_1_rd48
    // dark_weights_normed_gauss_blur_1_rd49
    // dark_weights_normed_gauss_blur_1_rd50
    // dark_weights_normed_gauss_blur_1_rd51
    // dark_weights_normed_gauss_blur_1_rd52
    // dark_weights_normed_gauss_blur_1_rd53
    // dark_weights_normed_gauss_blur_1_rd54
    // dark_weights_normed_gauss_blur_1_rd55
    // dark_weights_normed_gauss_blur_1_rd56
    // dark_weights_normed_gauss_blur_1_rd57
    // dark_weights_normed_gauss_blur_1_rd58
    // dark_weights_normed_gauss_blur_1_rd59
    // dark_weights_normed_gauss_blur_1_rd60
    // dark_weights_normed_gauss_blur_1_rd61
    // dark_weights_normed_gauss_blur_1_rd62
    // dark_weights_normed_gauss_blur_1_rd63
    // dark_weights_normed_gauss_blur_1_rd64
    // dark_weights_normed_gauss_blur_1_rd65
    // dark_weights_normed_gauss_blur_1_rd66
    // dark_weights_normed_gauss_blur_1_rd67
    // dark_weights_normed_gauss_blur_1_rd68
    // dark_weights_normed_gauss_blur_1_rd69
    // dark_weights_normed_gauss_blur_1_rd70
    // dark_weights_normed_gauss_blur_1_rd71
    // dark_weights_normed_gauss_blur_1_rd72
    // dark_weights_normed_gauss_blur_1_rd73
    // dark_weights_normed_gauss_blur_1_rd74
    // dark_weights_normed_gauss_blur_1_rd75
    // dark_weights_normed_gauss_blur_1_rd76
    // dark_weights_normed_gauss_blur_1_rd77
    // dark_weights_normed_gauss_blur_1_rd78
    // dark_weights_normed_gauss_blur_1_rd79
    // dark_weights_normed_gauss_blur_1_rd80
    // dark_weights_normed_gauss_blur_1_rd81
    // dark_weights_normed_gauss_blur_1_rd82
    // dark_weights_normed_gauss_blur_1_rd83
    // dark_weights_normed_gauss_blur_1_rd84
    // dark_weights_normed_gauss_blur_1_rd85
    // dark_weights_normed_gauss_blur_1_rd86
    // dark_weights_normed_gauss_blur_1_rd87
    // dark_weights_normed_gauss_blur_1_rd88
    // dark_weights_normed_gauss_blur_1_rd89
    // dark_weights_normed_gauss_blur_1_rd90
    // dark_weights_normed_gauss_blur_1_rd91
    // dark_weights_normed_gauss_blur_1_rd92
    // dark_weights_normed_gauss_blur_1_rd93
    // dark_weights_normed_gauss_blur_1_rd94
    // dark_weights_normed_gauss_blur_1_rd95
    // dark_weights_normed_gauss_blur_1_rd96
    // dark_weights_normed_gauss_blur_1_rd97
    // dark_weights_normed_gauss_blur_1_rd98
    // dark_weights_normed_gauss_blur_1_rd99
    // dark_weights_normed_gauss_blur_1_rd100
    // dark_weights_normed_gauss_blur_1_rd101
    // dark_weights_normed_gauss_blur_1_rd102
    // dark_weights_normed_gauss_blur_1_rd103
    // dark_weights_normed_gauss_blur_1_rd104
    // dark_weights_normed_gauss_blur_1_rd105
    // dark_weights_normed_gauss_blur_1_rd106
    // dark_weights_normed_gauss_blur_1_rd107
    // dark_weights_normed_gauss_blur_1_rd108
    // dark_weights_normed_gauss_blur_1_rd109
    // dark_weights_normed_gauss_blur_1_rd110
    // dark_weights_normed_gauss_blur_1_rd111
    // dark_weights_normed_gauss_blur_1_rd112
    // dark_weights_normed_gauss_blur_1_rd113
    // dark_weights_normed_gauss_blur_1_rd114
    // dark_weights_normed_gauss_blur_1_rd115
    // dark_weights_normed_gauss_blur_1_rd116
    // dark_weights_normed_gauss_blur_1_rd117
    // dark_weights_normed_gauss_blur_1_rd118
    // dark_weights_normed_gauss_blur_1_rd119
    // dark_weights_normed_gauss_blur_1_rd120
    // dark_weights_normed_gauss_blur_1_rd121
    // dark_weights_normed_gauss_blur_1_rd122
    // dark_weights_normed_gauss_blur_1_rd123
    // dark_weights_normed_gauss_blur_1_rd124
    // dark_weights_normed_gauss_blur_1_rd125
    // dark_weights_normed_gauss_blur_1_rd126
    // dark_weights_normed_gauss_blur_1_rd127
    // dark_weights_normed_gauss_blur_1_rd128
    // dark_weights_normed_gauss_blur_1_rd129
    // dark_weights_normed_gauss_blur_1_rd130
    // dark_weights_normed_gauss_blur_1_rd131
    // dark_weights_normed_gauss_blur_1_rd132
    // dark_weights_normed_gauss_blur_1_rd133
    // dark_weights_normed_gauss_blur_1_rd134
    // dark_weights_normed_gauss_blur_1_rd135
    // dark_weights_normed_gauss_blur_1_rd136
    // dark_weights_normed_gauss_blur_1_rd137
    // dark_weights_normed_gauss_blur_1_rd138
    // dark_weights_normed_gauss_blur_1_rd139
    // dark_weights_normed_gauss_blur_1_rd140
    // dark_weights_normed_gauss_blur_1_rd141
    // dark_weights_normed_gauss_blur_1_rd142
    // dark_weights_normed_gauss_blur_1_rd143

	hw_uint<2304> result;
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd0_res = dark_weights_normed_gauss_blur_1_rd0_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<0, 2304>(result, dark_weights_normed_gauss_blur_1_rd0_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd1_res = dark_weights_normed_gauss_blur_1_rd1_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<16, 2304>(result, dark_weights_normed_gauss_blur_1_rd1_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd2_res = dark_weights_normed_gauss_blur_1_rd2_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<32, 2304>(result, dark_weights_normed_gauss_blur_1_rd2_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd3_res = dark_weights_normed_gauss_blur_1_rd3_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<48, 2304>(result, dark_weights_normed_gauss_blur_1_rd3_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd4_res = dark_weights_normed_gauss_blur_1_rd4_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<64, 2304>(result, dark_weights_normed_gauss_blur_1_rd4_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd5_res = dark_weights_normed_gauss_blur_1_rd5_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<80, 2304>(result, dark_weights_normed_gauss_blur_1_rd5_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd6_res = dark_weights_normed_gauss_blur_1_rd6_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<96, 2304>(result, dark_weights_normed_gauss_blur_1_rd6_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd7_res = dark_weights_normed_gauss_blur_1_rd7_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<112, 2304>(result, dark_weights_normed_gauss_blur_1_rd7_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd8_res = dark_weights_normed_gauss_blur_1_rd8_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<128, 2304>(result, dark_weights_normed_gauss_blur_1_rd8_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd9_res = dark_weights_normed_gauss_blur_1_rd9_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<144, 2304>(result, dark_weights_normed_gauss_blur_1_rd9_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd10_res = dark_weights_normed_gauss_blur_1_rd10_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<160, 2304>(result, dark_weights_normed_gauss_blur_1_rd10_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd11_res = dark_weights_normed_gauss_blur_1_rd11_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<176, 2304>(result, dark_weights_normed_gauss_blur_1_rd11_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd12_res = dark_weights_normed_gauss_blur_1_rd12_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<192, 2304>(result, dark_weights_normed_gauss_blur_1_rd12_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd13_res = dark_weights_normed_gauss_blur_1_rd13_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<208, 2304>(result, dark_weights_normed_gauss_blur_1_rd13_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd14_res = dark_weights_normed_gauss_blur_1_rd14_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<224, 2304>(result, dark_weights_normed_gauss_blur_1_rd14_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd15_res = dark_weights_normed_gauss_blur_1_rd15_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<240, 2304>(result, dark_weights_normed_gauss_blur_1_rd15_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd16_res = dark_weights_normed_gauss_blur_1_rd16_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<256, 2304>(result, dark_weights_normed_gauss_blur_1_rd16_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd17_res = dark_weights_normed_gauss_blur_1_rd17_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<272, 2304>(result, dark_weights_normed_gauss_blur_1_rd17_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd18_res = dark_weights_normed_gauss_blur_1_rd18_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<288, 2304>(result, dark_weights_normed_gauss_blur_1_rd18_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd19_res = dark_weights_normed_gauss_blur_1_rd19_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<304, 2304>(result, dark_weights_normed_gauss_blur_1_rd19_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd20_res = dark_weights_normed_gauss_blur_1_rd20_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<320, 2304>(result, dark_weights_normed_gauss_blur_1_rd20_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd21_res = dark_weights_normed_gauss_blur_1_rd21_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<336, 2304>(result, dark_weights_normed_gauss_blur_1_rd21_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd22_res = dark_weights_normed_gauss_blur_1_rd22_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<352, 2304>(result, dark_weights_normed_gauss_blur_1_rd22_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd23_res = dark_weights_normed_gauss_blur_1_rd23_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<368, 2304>(result, dark_weights_normed_gauss_blur_1_rd23_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd24_res = dark_weights_normed_gauss_blur_1_rd24_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<384, 2304>(result, dark_weights_normed_gauss_blur_1_rd24_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd25_res = dark_weights_normed_gauss_blur_1_rd25_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<400, 2304>(result, dark_weights_normed_gauss_blur_1_rd25_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd26_res = dark_weights_normed_gauss_blur_1_rd26_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<416, 2304>(result, dark_weights_normed_gauss_blur_1_rd26_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd27_res = dark_weights_normed_gauss_blur_1_rd27_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<432, 2304>(result, dark_weights_normed_gauss_blur_1_rd27_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd28_res = dark_weights_normed_gauss_blur_1_rd28_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<448, 2304>(result, dark_weights_normed_gauss_blur_1_rd28_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd29_res = dark_weights_normed_gauss_blur_1_rd29_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<464, 2304>(result, dark_weights_normed_gauss_blur_1_rd29_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd30_res = dark_weights_normed_gauss_blur_1_rd30_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<480, 2304>(result, dark_weights_normed_gauss_blur_1_rd30_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd31_res = dark_weights_normed_gauss_blur_1_rd31_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<496, 2304>(result, dark_weights_normed_gauss_blur_1_rd31_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd32_res = dark_weights_normed_gauss_blur_1_rd32_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<512, 2304>(result, dark_weights_normed_gauss_blur_1_rd32_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd33_res = dark_weights_normed_gauss_blur_1_rd33_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<528, 2304>(result, dark_weights_normed_gauss_blur_1_rd33_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd34_res = dark_weights_normed_gauss_blur_1_rd34_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<544, 2304>(result, dark_weights_normed_gauss_blur_1_rd34_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd35_res = dark_weights_normed_gauss_blur_1_rd35_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<560, 2304>(result, dark_weights_normed_gauss_blur_1_rd35_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd36_res = dark_weights_normed_gauss_blur_1_rd36_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<576, 2304>(result, dark_weights_normed_gauss_blur_1_rd36_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd37_res = dark_weights_normed_gauss_blur_1_rd37_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<592, 2304>(result, dark_weights_normed_gauss_blur_1_rd37_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd38_res = dark_weights_normed_gauss_blur_1_rd38_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<608, 2304>(result, dark_weights_normed_gauss_blur_1_rd38_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd39_res = dark_weights_normed_gauss_blur_1_rd39_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<624, 2304>(result, dark_weights_normed_gauss_blur_1_rd39_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd40_res = dark_weights_normed_gauss_blur_1_rd40_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<640, 2304>(result, dark_weights_normed_gauss_blur_1_rd40_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd41_res = dark_weights_normed_gauss_blur_1_rd41_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<656, 2304>(result, dark_weights_normed_gauss_blur_1_rd41_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd42_res = dark_weights_normed_gauss_blur_1_rd42_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<672, 2304>(result, dark_weights_normed_gauss_blur_1_rd42_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd43_res = dark_weights_normed_gauss_blur_1_rd43_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<688, 2304>(result, dark_weights_normed_gauss_blur_1_rd43_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd44_res = dark_weights_normed_gauss_blur_1_rd44_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<704, 2304>(result, dark_weights_normed_gauss_blur_1_rd44_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd45_res = dark_weights_normed_gauss_blur_1_rd45_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<720, 2304>(result, dark_weights_normed_gauss_blur_1_rd45_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd46_res = dark_weights_normed_gauss_blur_1_rd46_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<736, 2304>(result, dark_weights_normed_gauss_blur_1_rd46_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd47_res = dark_weights_normed_gauss_blur_1_rd47_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<752, 2304>(result, dark_weights_normed_gauss_blur_1_rd47_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd48_res = dark_weights_normed_gauss_blur_1_rd48_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<768, 2304>(result, dark_weights_normed_gauss_blur_1_rd48_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd49_res = dark_weights_normed_gauss_blur_1_rd49_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<784, 2304>(result, dark_weights_normed_gauss_blur_1_rd49_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd50_res = dark_weights_normed_gauss_blur_1_rd50_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<800, 2304>(result, dark_weights_normed_gauss_blur_1_rd50_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd51_res = dark_weights_normed_gauss_blur_1_rd51_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<816, 2304>(result, dark_weights_normed_gauss_blur_1_rd51_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd52_res = dark_weights_normed_gauss_blur_1_rd52_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<832, 2304>(result, dark_weights_normed_gauss_blur_1_rd52_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd53_res = dark_weights_normed_gauss_blur_1_rd53_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<848, 2304>(result, dark_weights_normed_gauss_blur_1_rd53_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd54_res = dark_weights_normed_gauss_blur_1_rd54_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<864, 2304>(result, dark_weights_normed_gauss_blur_1_rd54_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd55_res = dark_weights_normed_gauss_blur_1_rd55_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<880, 2304>(result, dark_weights_normed_gauss_blur_1_rd55_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd56_res = dark_weights_normed_gauss_blur_1_rd56_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<896, 2304>(result, dark_weights_normed_gauss_blur_1_rd56_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd57_res = dark_weights_normed_gauss_blur_1_rd57_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<912, 2304>(result, dark_weights_normed_gauss_blur_1_rd57_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd58_res = dark_weights_normed_gauss_blur_1_rd58_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<928, 2304>(result, dark_weights_normed_gauss_blur_1_rd58_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd59_res = dark_weights_normed_gauss_blur_1_rd59_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<944, 2304>(result, dark_weights_normed_gauss_blur_1_rd59_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd60_res = dark_weights_normed_gauss_blur_1_rd60_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<960, 2304>(result, dark_weights_normed_gauss_blur_1_rd60_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd61_res = dark_weights_normed_gauss_blur_1_rd61_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<976, 2304>(result, dark_weights_normed_gauss_blur_1_rd61_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd62_res = dark_weights_normed_gauss_blur_1_rd62_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<992, 2304>(result, dark_weights_normed_gauss_blur_1_rd62_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd63_res = dark_weights_normed_gauss_blur_1_rd63_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1008, 2304>(result, dark_weights_normed_gauss_blur_1_rd63_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd64_res = dark_weights_normed_gauss_blur_1_rd64_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1024, 2304>(result, dark_weights_normed_gauss_blur_1_rd64_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd65_res = dark_weights_normed_gauss_blur_1_rd65_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1040, 2304>(result, dark_weights_normed_gauss_blur_1_rd65_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd66_res = dark_weights_normed_gauss_blur_1_rd66_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1056, 2304>(result, dark_weights_normed_gauss_blur_1_rd66_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd67_res = dark_weights_normed_gauss_blur_1_rd67_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1072, 2304>(result, dark_weights_normed_gauss_blur_1_rd67_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd68_res = dark_weights_normed_gauss_blur_1_rd68_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1088, 2304>(result, dark_weights_normed_gauss_blur_1_rd68_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd69_res = dark_weights_normed_gauss_blur_1_rd69_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1104, 2304>(result, dark_weights_normed_gauss_blur_1_rd69_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd70_res = dark_weights_normed_gauss_blur_1_rd70_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1120, 2304>(result, dark_weights_normed_gauss_blur_1_rd70_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd71_res = dark_weights_normed_gauss_blur_1_rd71_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1136, 2304>(result, dark_weights_normed_gauss_blur_1_rd71_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd72_res = dark_weights_normed_gauss_blur_1_rd72_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1152, 2304>(result, dark_weights_normed_gauss_blur_1_rd72_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd73_res = dark_weights_normed_gauss_blur_1_rd73_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1168, 2304>(result, dark_weights_normed_gauss_blur_1_rd73_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd74_res = dark_weights_normed_gauss_blur_1_rd74_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1184, 2304>(result, dark_weights_normed_gauss_blur_1_rd74_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd75_res = dark_weights_normed_gauss_blur_1_rd75_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1200, 2304>(result, dark_weights_normed_gauss_blur_1_rd75_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd76_res = dark_weights_normed_gauss_blur_1_rd76_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1216, 2304>(result, dark_weights_normed_gauss_blur_1_rd76_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd77_res = dark_weights_normed_gauss_blur_1_rd77_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1232, 2304>(result, dark_weights_normed_gauss_blur_1_rd77_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd78_res = dark_weights_normed_gauss_blur_1_rd78_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1248, 2304>(result, dark_weights_normed_gauss_blur_1_rd78_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd79_res = dark_weights_normed_gauss_blur_1_rd79_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1264, 2304>(result, dark_weights_normed_gauss_blur_1_rd79_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd80_res = dark_weights_normed_gauss_blur_1_rd80_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1280, 2304>(result, dark_weights_normed_gauss_blur_1_rd80_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd81_res = dark_weights_normed_gauss_blur_1_rd81_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1296, 2304>(result, dark_weights_normed_gauss_blur_1_rd81_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd82_res = dark_weights_normed_gauss_blur_1_rd82_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1312, 2304>(result, dark_weights_normed_gauss_blur_1_rd82_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd83_res = dark_weights_normed_gauss_blur_1_rd83_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1328, 2304>(result, dark_weights_normed_gauss_blur_1_rd83_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd84_res = dark_weights_normed_gauss_blur_1_rd84_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1344, 2304>(result, dark_weights_normed_gauss_blur_1_rd84_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd85_res = dark_weights_normed_gauss_blur_1_rd85_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1360, 2304>(result, dark_weights_normed_gauss_blur_1_rd85_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd86_res = dark_weights_normed_gauss_blur_1_rd86_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1376, 2304>(result, dark_weights_normed_gauss_blur_1_rd86_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd87_res = dark_weights_normed_gauss_blur_1_rd87_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1392, 2304>(result, dark_weights_normed_gauss_blur_1_rd87_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd88_res = dark_weights_normed_gauss_blur_1_rd88_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1408, 2304>(result, dark_weights_normed_gauss_blur_1_rd88_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd89_res = dark_weights_normed_gauss_blur_1_rd89_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1424, 2304>(result, dark_weights_normed_gauss_blur_1_rd89_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd90_res = dark_weights_normed_gauss_blur_1_rd90_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1440, 2304>(result, dark_weights_normed_gauss_blur_1_rd90_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd91_res = dark_weights_normed_gauss_blur_1_rd91_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1456, 2304>(result, dark_weights_normed_gauss_blur_1_rd91_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd92_res = dark_weights_normed_gauss_blur_1_rd92_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1472, 2304>(result, dark_weights_normed_gauss_blur_1_rd92_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd93_res = dark_weights_normed_gauss_blur_1_rd93_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1488, 2304>(result, dark_weights_normed_gauss_blur_1_rd93_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd94_res = dark_weights_normed_gauss_blur_1_rd94_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1504, 2304>(result, dark_weights_normed_gauss_blur_1_rd94_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd95_res = dark_weights_normed_gauss_blur_1_rd95_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1520, 2304>(result, dark_weights_normed_gauss_blur_1_rd95_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd96_res = dark_weights_normed_gauss_blur_1_rd96_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1536, 2304>(result, dark_weights_normed_gauss_blur_1_rd96_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd97_res = dark_weights_normed_gauss_blur_1_rd97_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1552, 2304>(result, dark_weights_normed_gauss_blur_1_rd97_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd98_res = dark_weights_normed_gauss_blur_1_rd98_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1568, 2304>(result, dark_weights_normed_gauss_blur_1_rd98_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd99_res = dark_weights_normed_gauss_blur_1_rd99_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1584, 2304>(result, dark_weights_normed_gauss_blur_1_rd99_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd100_res = dark_weights_normed_gauss_blur_1_rd100_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1600, 2304>(result, dark_weights_normed_gauss_blur_1_rd100_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd101_res = dark_weights_normed_gauss_blur_1_rd101_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1616, 2304>(result, dark_weights_normed_gauss_blur_1_rd101_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd102_res = dark_weights_normed_gauss_blur_1_rd102_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1632, 2304>(result, dark_weights_normed_gauss_blur_1_rd102_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd103_res = dark_weights_normed_gauss_blur_1_rd103_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1648, 2304>(result, dark_weights_normed_gauss_blur_1_rd103_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd104_res = dark_weights_normed_gauss_blur_1_rd104_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1664, 2304>(result, dark_weights_normed_gauss_blur_1_rd104_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd105_res = dark_weights_normed_gauss_blur_1_rd105_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1680, 2304>(result, dark_weights_normed_gauss_blur_1_rd105_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd106_res = dark_weights_normed_gauss_blur_1_rd106_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1696, 2304>(result, dark_weights_normed_gauss_blur_1_rd106_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd107_res = dark_weights_normed_gauss_blur_1_rd107_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1712, 2304>(result, dark_weights_normed_gauss_blur_1_rd107_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd108_res = dark_weights_normed_gauss_blur_1_rd108_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1728, 2304>(result, dark_weights_normed_gauss_blur_1_rd108_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd109_res = dark_weights_normed_gauss_blur_1_rd109_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1744, 2304>(result, dark_weights_normed_gauss_blur_1_rd109_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd110_res = dark_weights_normed_gauss_blur_1_rd110_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1760, 2304>(result, dark_weights_normed_gauss_blur_1_rd110_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd111_res = dark_weights_normed_gauss_blur_1_rd111_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1776, 2304>(result, dark_weights_normed_gauss_blur_1_rd111_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd112_res = dark_weights_normed_gauss_blur_1_rd112_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1792, 2304>(result, dark_weights_normed_gauss_blur_1_rd112_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd113_res = dark_weights_normed_gauss_blur_1_rd113_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1808, 2304>(result, dark_weights_normed_gauss_blur_1_rd113_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd114_res = dark_weights_normed_gauss_blur_1_rd114_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1824, 2304>(result, dark_weights_normed_gauss_blur_1_rd114_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd115_res = dark_weights_normed_gauss_blur_1_rd115_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1840, 2304>(result, dark_weights_normed_gauss_blur_1_rd115_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd116_res = dark_weights_normed_gauss_blur_1_rd116_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1856, 2304>(result, dark_weights_normed_gauss_blur_1_rd116_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd117_res = dark_weights_normed_gauss_blur_1_rd117_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1872, 2304>(result, dark_weights_normed_gauss_blur_1_rd117_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd118_res = dark_weights_normed_gauss_blur_1_rd118_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1888, 2304>(result, dark_weights_normed_gauss_blur_1_rd118_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd119_res = dark_weights_normed_gauss_blur_1_rd119_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1904, 2304>(result, dark_weights_normed_gauss_blur_1_rd119_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd120_res = dark_weights_normed_gauss_blur_1_rd120_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1920, 2304>(result, dark_weights_normed_gauss_blur_1_rd120_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd121_res = dark_weights_normed_gauss_blur_1_rd121_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1936, 2304>(result, dark_weights_normed_gauss_blur_1_rd121_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd122_res = dark_weights_normed_gauss_blur_1_rd122_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1952, 2304>(result, dark_weights_normed_gauss_blur_1_rd122_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd123_res = dark_weights_normed_gauss_blur_1_rd123_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1968, 2304>(result, dark_weights_normed_gauss_blur_1_rd123_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd124_res = dark_weights_normed_gauss_blur_1_rd124_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1984, 2304>(result, dark_weights_normed_gauss_blur_1_rd124_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd125_res = dark_weights_normed_gauss_blur_1_rd125_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2000, 2304>(result, dark_weights_normed_gauss_blur_1_rd125_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd126_res = dark_weights_normed_gauss_blur_1_rd126_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2016, 2304>(result, dark_weights_normed_gauss_blur_1_rd126_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd127_res = dark_weights_normed_gauss_blur_1_rd127_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2032, 2304>(result, dark_weights_normed_gauss_blur_1_rd127_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd128_res = dark_weights_normed_gauss_blur_1_rd128_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2048, 2304>(result, dark_weights_normed_gauss_blur_1_rd128_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd129_res = dark_weights_normed_gauss_blur_1_rd129_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2064, 2304>(result, dark_weights_normed_gauss_blur_1_rd129_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd130_res = dark_weights_normed_gauss_blur_1_rd130_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2080, 2304>(result, dark_weights_normed_gauss_blur_1_rd130_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd131_res = dark_weights_normed_gauss_blur_1_rd131_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2096, 2304>(result, dark_weights_normed_gauss_blur_1_rd131_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd132_res = dark_weights_normed_gauss_blur_1_rd132_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2112, 2304>(result, dark_weights_normed_gauss_blur_1_rd132_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd133_res = dark_weights_normed_gauss_blur_1_rd133_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2128, 2304>(result, dark_weights_normed_gauss_blur_1_rd133_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd134_res = dark_weights_normed_gauss_blur_1_rd134_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2144, 2304>(result, dark_weights_normed_gauss_blur_1_rd134_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd135_res = dark_weights_normed_gauss_blur_1_rd135_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2160, 2304>(result, dark_weights_normed_gauss_blur_1_rd135_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd136_res = dark_weights_normed_gauss_blur_1_rd136_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2176, 2304>(result, dark_weights_normed_gauss_blur_1_rd136_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd137_res = dark_weights_normed_gauss_blur_1_rd137_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2192, 2304>(result, dark_weights_normed_gauss_blur_1_rd137_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd138_res = dark_weights_normed_gauss_blur_1_rd138_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2208, 2304>(result, dark_weights_normed_gauss_blur_1_rd138_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd139_res = dark_weights_normed_gauss_blur_1_rd139_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2224, 2304>(result, dark_weights_normed_gauss_blur_1_rd139_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd140_res = dark_weights_normed_gauss_blur_1_rd140_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2240, 2304>(result, dark_weights_normed_gauss_blur_1_rd140_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd141_res = dark_weights_normed_gauss_blur_1_rd141_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2256, 2304>(result, dark_weights_normed_gauss_blur_1_rd141_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd142_res = dark_weights_normed_gauss_blur_1_rd142_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2272, 2304>(result, dark_weights_normed_gauss_blur_1_rd142_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd143_res = dark_weights_normed_gauss_blur_1_rd143_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<2288, 2304>(result, dark_weights_normed_gauss_blur_1_rd143_res);
	return result;
}

// dark_weights_normed_update_0_write
//	dark_weights_normed_dark_weights_normed_update_0_write0
//	dark_weights_normed_dark_weights_normed_update_0_write1
//	dark_weights_normed_dark_weights_normed_update_0_write2
//	dark_weights_normed_dark_weights_normed_update_0_write3
//	dark_weights_normed_dark_weights_normed_update_0_write4
//	dark_weights_normed_dark_weights_normed_update_0_write5
//	dark_weights_normed_dark_weights_normed_update_0_write6
//	dark_weights_normed_dark_weights_normed_update_0_write7
//	dark_weights_normed_dark_weights_normed_update_0_write8
//	dark_weights_normed_dark_weights_normed_update_0_write9
//	dark_weights_normed_dark_weights_normed_update_0_write10
//	dark_weights_normed_dark_weights_normed_update_0_write11
//	dark_weights_normed_dark_weights_normed_update_0_write12
//	dark_weights_normed_dark_weights_normed_update_0_write13
//	dark_weights_normed_dark_weights_normed_update_0_write14
//	dark_weights_normed_dark_weights_normed_update_0_write15
inline void dark_weights_normed_dark_weights_normed_update_0_write_bundle_write(hw_uint<256>& dark_weights_normed_update_0_write, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write0_res = dark_weights_normed_update_0_write.extract<0, 15>();
	dark_weights_normed_dark_weights_normed_update_0_write0_write(dark_weights_normed_dark_weights_normed_update_0_write0_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write1_res = dark_weights_normed_update_0_write.extract<16, 31>();
	dark_weights_normed_dark_weights_normed_update_0_write1_write(dark_weights_normed_dark_weights_normed_update_0_write1_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write2_res = dark_weights_normed_update_0_write.extract<32, 47>();
	dark_weights_normed_dark_weights_normed_update_0_write2_write(dark_weights_normed_dark_weights_normed_update_0_write2_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write3_res = dark_weights_normed_update_0_write.extract<48, 63>();
	dark_weights_normed_dark_weights_normed_update_0_write3_write(dark_weights_normed_dark_weights_normed_update_0_write3_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write4_res = dark_weights_normed_update_0_write.extract<64, 79>();
	dark_weights_normed_dark_weights_normed_update_0_write4_write(dark_weights_normed_dark_weights_normed_update_0_write4_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write5_res = dark_weights_normed_update_0_write.extract<80, 95>();
	dark_weights_normed_dark_weights_normed_update_0_write5_write(dark_weights_normed_dark_weights_normed_update_0_write5_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write6_res = dark_weights_normed_update_0_write.extract<96, 111>();
	dark_weights_normed_dark_weights_normed_update_0_write6_write(dark_weights_normed_dark_weights_normed_update_0_write6_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write7_res = dark_weights_normed_update_0_write.extract<112, 127>();
	dark_weights_normed_dark_weights_normed_update_0_write7_write(dark_weights_normed_dark_weights_normed_update_0_write7_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write8_res = dark_weights_normed_update_0_write.extract<128, 143>();
	dark_weights_normed_dark_weights_normed_update_0_write8_write(dark_weights_normed_dark_weights_normed_update_0_write8_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write9_res = dark_weights_normed_update_0_write.extract<144, 159>();
	dark_weights_normed_dark_weights_normed_update_0_write9_write(dark_weights_normed_dark_weights_normed_update_0_write9_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write10_res = dark_weights_normed_update_0_write.extract<160, 175>();
	dark_weights_normed_dark_weights_normed_update_0_write10_write(dark_weights_normed_dark_weights_normed_update_0_write10_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write11_res = dark_weights_normed_update_0_write.extract<176, 191>();
	dark_weights_normed_dark_weights_normed_update_0_write11_write(dark_weights_normed_dark_weights_normed_update_0_write11_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write12_res = dark_weights_normed_update_0_write.extract<192, 207>();
	dark_weights_normed_dark_weights_normed_update_0_write12_write(dark_weights_normed_dark_weights_normed_update_0_write12_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write13_res = dark_weights_normed_update_0_write.extract<208, 223>();
	dark_weights_normed_dark_weights_normed_update_0_write13_write(dark_weights_normed_dark_weights_normed_update_0_write13_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write14_res = dark_weights_normed_update_0_write.extract<224, 239>();
	dark_weights_normed_dark_weights_normed_update_0_write14_write(dark_weights_normed_dark_weights_normed_update_0_write14_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write15_res = dark_weights_normed_update_0_write.extract<240, 255>();
	dark_weights_normed_dark_weights_normed_update_0_write15_write(dark_weights_normed_dark_weights_normed_update_0_write15_res, dark_weights_normed, d0, d1, dynamic_address);
}

// fused_level_0_update_0_read
//	fused_level_0_rd0
//	fused_level_0_rd1
//	fused_level_0_rd2
//	fused_level_0_rd3
//	fused_level_0_rd4
//	fused_level_0_rd5
//	fused_level_0_rd6
//	fused_level_0_rd7
//	fused_level_0_rd8
//	fused_level_0_rd9
//	fused_level_0_rd10
//	fused_level_0_rd11
//	fused_level_0_rd12
//	fused_level_0_rd13
//	fused_level_0_rd14
//	fused_level_0_rd15
inline hw_uint<256> dark_weights_normed_fused_level_0_update_0_read_bundle_read(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // fused_level_0_rd0
    // fused_level_0_rd1
    // fused_level_0_rd2
    // fused_level_0_rd3
    // fused_level_0_rd4
    // fused_level_0_rd5
    // fused_level_0_rd6
    // fused_level_0_rd7
    // fused_level_0_rd8
    // fused_level_0_rd9
    // fused_level_0_rd10
    // fused_level_0_rd11
    // fused_level_0_rd12
    // fused_level_0_rd13
    // fused_level_0_rd14
    // fused_level_0_rd15

	hw_uint<256> result;
	hw_uint<16> fused_level_0_rd0_res = fused_level_0_rd0_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<0, 256>(result, fused_level_0_rd0_res);
	hw_uint<16> fused_level_0_rd1_res = fused_level_0_rd1_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<16, 256>(result, fused_level_0_rd1_res);
	hw_uint<16> fused_level_0_rd2_res = fused_level_0_rd2_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<32, 256>(result, fused_level_0_rd2_res);
	hw_uint<16> fused_level_0_rd3_res = fused_level_0_rd3_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<48, 256>(result, fused_level_0_rd3_res);
	hw_uint<16> fused_level_0_rd4_res = fused_level_0_rd4_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<64, 256>(result, fused_level_0_rd4_res);
	hw_uint<16> fused_level_0_rd5_res = fused_level_0_rd5_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<80, 256>(result, fused_level_0_rd5_res);
	hw_uint<16> fused_level_0_rd6_res = fused_level_0_rd6_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<96, 256>(result, fused_level_0_rd6_res);
	hw_uint<16> fused_level_0_rd7_res = fused_level_0_rd7_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<112, 256>(result, fused_level_0_rd7_res);
	hw_uint<16> fused_level_0_rd8_res = fused_level_0_rd8_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<128, 256>(result, fused_level_0_rd8_res);
	hw_uint<16> fused_level_0_rd9_res = fused_level_0_rd9_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<144, 256>(result, fused_level_0_rd9_res);
	hw_uint<16> fused_level_0_rd10_res = fused_level_0_rd10_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<160, 256>(result, fused_level_0_rd10_res);
	hw_uint<16> fused_level_0_rd11_res = fused_level_0_rd11_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<176, 256>(result, fused_level_0_rd11_res);
	hw_uint<16> fused_level_0_rd12_res = fused_level_0_rd12_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<192, 256>(result, fused_level_0_rd12_res);
	hw_uint<16> fused_level_0_rd13_res = fused_level_0_rd13_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<208, 256>(result, fused_level_0_rd13_res);
	hw_uint<16> fused_level_0_rd14_res = fused_level_0_rd14_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<224, 256>(result, fused_level_0_rd14_res);
	hw_uint<16> fused_level_0_rd15_res = fused_level_0_rd15_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<240, 256>(result, fused_level_0_rd15_res);
	return result;
}

#include "hw_classes.h"

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_to_dark_weights_normed_gauss_ds_1_rd0_cache {
	// RAM Box: {[0, 1936], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_to_dark_weights_normed_gauss_ds_1_rd1_cache {
	// RAM Box: {[2, 1938], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_to_dark_weights_normed_gauss_ds_1_rd2_cache {
	// RAM Box: {[4, 1940], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_to_dark_weights_normed_gauss_ds_1_rd3_cache {
	// RAM Box: {[6, 1942], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8_to_dark_weights_normed_gauss_ds_1_rd4_cache {
	// RAM Box: {[8, 1944], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10_to_dark_weights_normed_gauss_ds_1_rd5_cache {
	// RAM Box: {[10, 1946], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12_to_dark_weights_normed_gauss_ds_1_rd6_cache {
	// RAM Box: {[12, 1948], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14_to_dark_weights_normed_gauss_ds_1_rd7_cache {
	// RAM Box: {[14, 1950], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_cache {
  // # of banks: 8
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_to_dark_weights_normed_gauss_ds_1_rd0_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_to_dark_weights_normed_gauss_ds_1_rd0;
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_to_dark_weights_normed_gauss_ds_1_rd1_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_to_dark_weights_normed_gauss_ds_1_rd1;
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_to_dark_weights_normed_gauss_ds_1_rd2_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_to_dark_weights_normed_gauss_ds_1_rd2;
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_to_dark_weights_normed_gauss_ds_1_rd3_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_to_dark_weights_normed_gauss_ds_1_rd3;
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8_to_dark_weights_normed_gauss_ds_1_rd4_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8_to_dark_weights_normed_gauss_ds_1_rd4;
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10_to_dark_weights_normed_gauss_ds_1_rd5_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10_to_dark_weights_normed_gauss_ds_1_rd5;
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12_to_dark_weights_normed_gauss_ds_1_rd6_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12_to_dark_weights_normed_gauss_ds_1_rd6;
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14_to_dark_weights_normed_gauss_ds_1_rd7_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14_to_dark_weights_normed_gauss_ds_1_rd7;
};



inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_to_dark_weights_normed_gauss_ds_1_rd0.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10_to_dark_weights_normed_gauss_ds_1_rd5.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write11_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write11, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12_to_dark_weights_normed_gauss_ds_1_rd6.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write13_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write13, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14_to_dark_weights_normed_gauss_ds_1_rd7.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write15_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write15, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_to_dark_weights_normed_gauss_ds_1_rd1.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_to_dark_weights_normed_gauss_ds_1_rd2.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_to_dark_weights_normed_gauss_ds_1_rd3.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8_to_dark_weights_normed_gauss_ds_1_rd4.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write9_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write9, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd0_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd0 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_to_dark_weights_normed_gauss_ds_1_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd1_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd1 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[2 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_to_dark_weights_normed_gauss_ds_1_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd2_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd2 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[4 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_to_dark_weights_normed_gauss_ds_1_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd3_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd3 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[6 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_to_dark_weights_normed_gauss_ds_1_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd4_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd4 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[8 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8_to_dark_weights_normed_gauss_ds_1_rd4.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd5_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd5 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[10 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10_to_dark_weights_normed_gauss_ds_1_rd5.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd6_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd6 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[12 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12_to_dark_weights_normed_gauss_ds_1_rd6.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd7_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd7 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[14 + 16d0, 2d1] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14_to_dark_weights_normed_gauss_ds_1_rd7.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_1_update_0_write
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write9
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write11
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write13
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write15
inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write_bundle_write(hw_uint<256>& dark_weights_normed_gauss_blur_1_update_0_write, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<16, 31>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<32, 47>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<48, 63>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<64, 79>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<80, 95>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<96, 111>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<112, 127>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<128, 143>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write8_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write9_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<144, 159>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write9_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write9_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<160, 175>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write10_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write11_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<176, 191>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write11_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write11_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<192, 207>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write12_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write13_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<208, 223>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write13_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write13_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<224, 239>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write14_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write15_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<240, 255>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write15_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write15_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
}

// dark_weights_normed_gauss_ds_1_update_0_read
//	dark_weights_normed_gauss_ds_1_rd0
//	dark_weights_normed_gauss_ds_1_rd1
//	dark_weights_normed_gauss_ds_1_rd2
//	dark_weights_normed_gauss_ds_1_rd3
//	dark_weights_normed_gauss_ds_1_rd4
//	dark_weights_normed_gauss_ds_1_rd5
//	dark_weights_normed_gauss_ds_1_rd6
//	dark_weights_normed_gauss_ds_1_rd7
inline hw_uint<128> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_ds_1_update_0_read_bundle_read(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // dark_weights_normed_gauss_ds_1_rd0
    // dark_weights_normed_gauss_ds_1_rd1
    // dark_weights_normed_gauss_ds_1_rd2
    // dark_weights_normed_gauss_ds_1_rd3
    // dark_weights_normed_gauss_ds_1_rd4
    // dark_weights_normed_gauss_ds_1_rd5
    // dark_weights_normed_gauss_ds_1_rd6
    // dark_weights_normed_gauss_ds_1_rd7

	hw_uint<128> result;
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd0_res = dark_weights_normed_gauss_ds_1_rd0_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, dark_weights_normed_gauss_ds_1_rd0_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd1_res = dark_weights_normed_gauss_ds_1_rd1_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, dark_weights_normed_gauss_ds_1_rd1_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd2_res = dark_weights_normed_gauss_ds_1_rd2_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, dark_weights_normed_gauss_ds_1_rd2_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd3_res = dark_weights_normed_gauss_ds_1_rd3_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, dark_weights_normed_gauss_ds_1_rd3_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd4_res = dark_weights_normed_gauss_ds_1_rd4_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, dark_weights_normed_gauss_ds_1_rd4_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd5_res = dark_weights_normed_gauss_ds_1_rd5_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, dark_weights_normed_gauss_ds_1_rd5_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd6_res = dark_weights_normed_gauss_ds_1_rd6_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, dark_weights_normed_gauss_ds_1_rd6_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd7_res = dark_weights_normed_gauss_ds_1_rd7_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, dark_weights_normed_gauss_ds_1_rd7_res);
	return result;
}

#include "hw_classes.h"

struct dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_to_dark_weights_normed_gauss_ds_2_rd0_cache {
	// RAM Box: {[0, 960], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_to_dark_weights_normed_gauss_ds_2_rd1_cache {
	// RAM Box: {[2, 962], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4_to_dark_weights_normed_gauss_ds_2_rd2_cache {
	// RAM Box: {[4, 964], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6_to_dark_weights_normed_gauss_ds_2_rd3_cache {
	// RAM Box: {[6, 966], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_2_cache {
  // # of banks: 4
  dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_to_dark_weights_normed_gauss_ds_2_rd0_cache dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_to_dark_weights_normed_gauss_ds_2_rd0;
  dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_to_dark_weights_normed_gauss_ds_2_rd1_cache dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_to_dark_weights_normed_gauss_ds_2_rd1;
  dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4_to_dark_weights_normed_gauss_ds_2_rd2_cache dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4_to_dark_weights_normed_gauss_ds_2_rd2;
  dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6_to_dark_weights_normed_gauss_ds_2_rd3_cache dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6_to_dark_weights_normed_gauss_ds_2_rd3;
};



inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_to_dark_weights_normed_gauss_ds_2_rd0.push(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0);
}

inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_to_dark_weights_normed_gauss_ds_2_rd1.push(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2);
}

inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4_to_dark_weights_normed_gauss_ds_2_rd2.push(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4);
}

inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write5_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write5, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6_to_dark_weights_normed_gauss_ds_2_rd3.push(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6);
}

inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write7_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write7, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_rd0_select(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_rd0 read pattern: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> dark_weights_normed_gauss_blur_2[8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0 = dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_to_dark_weights_normed_gauss_ds_2_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_rd1_select(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_rd1 read pattern: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> dark_weights_normed_gauss_blur_2[2 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2 = dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_to_dark_weights_normed_gauss_ds_2_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_rd2_select(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_rd2 read pattern: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> dark_weights_normed_gauss_blur_2[4 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4 = dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4_to_dark_weights_normed_gauss_ds_2_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_rd3_select(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_rd3 read pattern: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> dark_weights_normed_gauss_blur_2[6 + 8d0, 2d1] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Read schedule : { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  // Write schedule: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  auto value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6 = dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6_to_dark_weights_normed_gauss_ds_2_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_2_update_0_write
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write5
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write7
inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write_bundle_write(hw_uint<128>& dark_weights_normed_gauss_blur_2_update_0_write, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<16, 31>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<32, 47>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<48, 63>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<64, 79>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write4_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write5_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<80, 95>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write5_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write5_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<96, 111>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write6_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write7_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<112, 127>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write7_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write7_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
}

// dark_weights_normed_gauss_ds_2_update_0_read
//	dark_weights_normed_gauss_ds_2_rd0
//	dark_weights_normed_gauss_ds_2_rd1
//	dark_weights_normed_gauss_ds_2_rd2
//	dark_weights_normed_gauss_ds_2_rd3
inline hw_uint<64> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_ds_2_update_0_read_bundle_read(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // dark_weights_normed_gauss_ds_2_rd0
    // dark_weights_normed_gauss_ds_2_rd1
    // dark_weights_normed_gauss_ds_2_rd2
    // dark_weights_normed_gauss_ds_2_rd3

	hw_uint<64> result;
	hw_uint<16> dark_weights_normed_gauss_ds_2_rd0_res = dark_weights_normed_gauss_ds_2_rd0_select(dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, dark_weights_normed_gauss_ds_2_rd0_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_rd1_res = dark_weights_normed_gauss_ds_2_rd1_select(dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, dark_weights_normed_gauss_ds_2_rd1_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_rd2_res = dark_weights_normed_gauss_ds_2_rd2_select(dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, dark_weights_normed_gauss_ds_2_rd2_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_rd3_res = dark_weights_normed_gauss_ds_2_rd3_select(dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, dark_weights_normed_gauss_ds_2_rd3_res);
	return result;
}

#include "hw_classes.h"

struct dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_to_dark_weights_normed_gauss_ds_3_rd0_cache {
	// RAM Box: {[0, 476], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2_to_dark_weights_normed_gauss_ds_3_rd1_cache {
	// RAM Box: {[2, 478], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_3_cache {
  // # of banks: 2
  dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_to_dark_weights_normed_gauss_ds_3_rd0_cache dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_to_dark_weights_normed_gauss_ds_3_rd0;
  dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2_to_dark_weights_normed_gauss_ds_3_rd1_cache dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2_to_dark_weights_normed_gauss_ds_3_rd1;
};



inline void dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_3.dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_to_dark_weights_normed_gauss_ds_3_rd0.push(dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0);
}

inline void dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1_write(hw_uint<16>& dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2_write(hw_uint<16>& dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_3.dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2_to_dark_weights_normed_gauss_ds_3_rd1.push(dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2);
}

inline void dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write3_write(hw_uint<16>& dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write3, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_weights_normed_gauss_ds_3_rd0_select(dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_3_rd0 read pattern: { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> dark_weights_normed_gauss_blur_3[4d0, 2d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 31] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  auto value_dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0 = dark_weights_normed_gauss_blur_3.dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_to_dark_weights_normed_gauss_ds_3_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_3_rd1_select(dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_3_rd1 read pattern: { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> dark_weights_normed_gauss_blur_3[2 + 4d0, 2d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 31] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  auto value_dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2 = dark_weights_normed_gauss_blur_3.dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2_to_dark_weights_normed_gauss_ds_3_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_3_update_0_write
//	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0
//	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1
//	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2
//	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write3
inline void dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write_bundle_write(hw_uint<64>& dark_weights_normed_gauss_blur_3_update_0_write, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_res = dark_weights_normed_gauss_blur_3_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_write(dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_res, dark_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1_res = dark_weights_normed_gauss_blur_3_update_0_write.extract<16, 31>();
	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1_write(dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1_res, dark_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2_res = dark_weights_normed_gauss_blur_3_update_0_write.extract<32, 47>();
	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2_write(dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write2_res, dark_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write3_res = dark_weights_normed_gauss_blur_3_update_0_write.extract<48, 63>();
	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write3_write(dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write3_res, dark_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
}

// dark_weights_normed_gauss_ds_3_update_0_read
//	dark_weights_normed_gauss_ds_3_rd0
//	dark_weights_normed_gauss_ds_3_rd1
inline hw_uint<32> dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_ds_3_update_0_read_bundle_read(dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // dark_weights_normed_gauss_ds_3_rd0
    // dark_weights_normed_gauss_ds_3_rd1

	hw_uint<32> result;
	hw_uint<16> dark_weights_normed_gauss_ds_3_rd0_res = dark_weights_normed_gauss_ds_3_rd0_select(dark_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	set_at<0, 32>(result, dark_weights_normed_gauss_ds_3_rd0_res);
	hw_uint<16> dark_weights_normed_gauss_ds_3_rd1_res = dark_weights_normed_gauss_ds_3_rd1_select(dark_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	set_at<16, 32>(result, dark_weights_normed_gauss_ds_3_rd1_res);
	return result;
}

#include "hw_classes.h"

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10_cache {
	// RAM Box: {[0, 968], [0, 542]}
	// Capacity: 246
	// # of read delays: 6
  // 0, 1, 122, 123, 244, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 120> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_123() {
		return f6;
	}

	inline hw_uint<16> peek_243() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_244() {
		return f8;
	}

	inline hw_uint<16> peek_245() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10_cache {
	// RAM Box: {[1, 969], [0, 542]}
	// Capacity: 246
	// # of read delays: 6
  // 0, 1, 122, 123, 244, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 120> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_123() {
		return f6;
	}

	inline hw_uint<16> peek_243() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_244() {
		return f8;
	}

	inline hw_uint<16> peek_245() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10_cache {
	// RAM Box: {[2, 970], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10_cache {
	// RAM Box: {[3, 971], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10_cache {
	// RAM Box: {[4, 972], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10_cache {
	// RAM Box: {[5, 973], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10_cache {
	// RAM Box: {[6, 974], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10_cache {
	// RAM Box: {[7, 975], [0, 542]}
	// Capacity: 246
	// # of read delays: 4
  // 0, 1, 123, 245
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 121> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 121> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_122() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_123() {
		return f4;
	}

	inline hw_uint<16> peek_244() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_245() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 121
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 121 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_cache {
  // # of banks: 8
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10;
};



inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0);
}

inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1);
}

inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2);
}

inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3);
}

inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4);
}

inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5);
}

inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6);
}

inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd0_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd0 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd1_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd1 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd10_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd10 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd11_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd11 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd12_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd12 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd13_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd13 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd14_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd14 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd15_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd15 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd16_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd16 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd17_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd17 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd18_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd18 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd19_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd19 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd2_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd2 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd20_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd20 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd21_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd21 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd22_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd22 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd23_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd23 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd24_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd24 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd25_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd25 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd26_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd26 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd27_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd27 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd28_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd28 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd29_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd29 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd3_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd3 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd30_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd30 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd31_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd31 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd32_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd32 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd33_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd33 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd34_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd34 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd35_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd35 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd36_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd36 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd37_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd37 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd38_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd38 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd39_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd39 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd4_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd4 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd40_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd40 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd41_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd41 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd42_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd42 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd43_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd43 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd44_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd44 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd45_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd45 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd46_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd46 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[5 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd47_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd47 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[5 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd48_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd48 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd49_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd49 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd5_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd5 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd50_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd50 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd51_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd51 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd52_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd52 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd53_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd53 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd54_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd54 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd55_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd55 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[6 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd56_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd56 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[6 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd57_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd57 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd58_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd58 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd59_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd59 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd6_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd6 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd60_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd60 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[8 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_244();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd61_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd61 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[8 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_122();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd62_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd62 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[8 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_0();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd63_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd63 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd64_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd64 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[7 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd65_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd65 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[7 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd66_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd66 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[8 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_244();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd67_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd67 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[8 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_122();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd68_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd68 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[8 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_0();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd69_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd69 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[9 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_244();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd7_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd7 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_123();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd70_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd70 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[9 + 8d0, 1 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_122();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd71_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd71 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[9 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_0();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd8_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd8 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 8d0, 2 + d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd9_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd9 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_1_rd0_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd0 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_1_rd1_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd1 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_1_rd2_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd2 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_1_rd3_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd3 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_1_rd4_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd4 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_1_rd5_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd5 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[5 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_1_rd6_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd6 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[6 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_1_rd7_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd7 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[7 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_merged_banks_10.peek_245();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7;
  return 0;
}

// # of bundles = 3
// dark_weights_normed_gauss_blur_2_update_0_read
//	dark_weights_normed_gauss_blur_2_rd0
//	dark_weights_normed_gauss_blur_2_rd1
//	dark_weights_normed_gauss_blur_2_rd2
//	dark_weights_normed_gauss_blur_2_rd3
//	dark_weights_normed_gauss_blur_2_rd4
//	dark_weights_normed_gauss_blur_2_rd5
//	dark_weights_normed_gauss_blur_2_rd6
//	dark_weights_normed_gauss_blur_2_rd7
//	dark_weights_normed_gauss_blur_2_rd8
//	dark_weights_normed_gauss_blur_2_rd9
//	dark_weights_normed_gauss_blur_2_rd10
//	dark_weights_normed_gauss_blur_2_rd11
//	dark_weights_normed_gauss_blur_2_rd12
//	dark_weights_normed_gauss_blur_2_rd13
//	dark_weights_normed_gauss_blur_2_rd14
//	dark_weights_normed_gauss_blur_2_rd15
//	dark_weights_normed_gauss_blur_2_rd16
//	dark_weights_normed_gauss_blur_2_rd17
//	dark_weights_normed_gauss_blur_2_rd18
//	dark_weights_normed_gauss_blur_2_rd19
//	dark_weights_normed_gauss_blur_2_rd20
//	dark_weights_normed_gauss_blur_2_rd21
//	dark_weights_normed_gauss_blur_2_rd22
//	dark_weights_normed_gauss_blur_2_rd23
//	dark_weights_normed_gauss_blur_2_rd24
//	dark_weights_normed_gauss_blur_2_rd25
//	dark_weights_normed_gauss_blur_2_rd26
//	dark_weights_normed_gauss_blur_2_rd27
//	dark_weights_normed_gauss_blur_2_rd28
//	dark_weights_normed_gauss_blur_2_rd29
//	dark_weights_normed_gauss_blur_2_rd30
//	dark_weights_normed_gauss_blur_2_rd31
//	dark_weights_normed_gauss_blur_2_rd32
//	dark_weights_normed_gauss_blur_2_rd33
//	dark_weights_normed_gauss_blur_2_rd34
//	dark_weights_normed_gauss_blur_2_rd35
//	dark_weights_normed_gauss_blur_2_rd36
//	dark_weights_normed_gauss_blur_2_rd37
//	dark_weights_normed_gauss_blur_2_rd38
//	dark_weights_normed_gauss_blur_2_rd39
//	dark_weights_normed_gauss_blur_2_rd40
//	dark_weights_normed_gauss_blur_2_rd41
//	dark_weights_normed_gauss_blur_2_rd42
//	dark_weights_normed_gauss_blur_2_rd43
//	dark_weights_normed_gauss_blur_2_rd44
//	dark_weights_normed_gauss_blur_2_rd45
//	dark_weights_normed_gauss_blur_2_rd46
//	dark_weights_normed_gauss_blur_2_rd47
//	dark_weights_normed_gauss_blur_2_rd48
//	dark_weights_normed_gauss_blur_2_rd49
//	dark_weights_normed_gauss_blur_2_rd50
//	dark_weights_normed_gauss_blur_2_rd51
//	dark_weights_normed_gauss_blur_2_rd52
//	dark_weights_normed_gauss_blur_2_rd53
//	dark_weights_normed_gauss_blur_2_rd54
//	dark_weights_normed_gauss_blur_2_rd55
//	dark_weights_normed_gauss_blur_2_rd56
//	dark_weights_normed_gauss_blur_2_rd57
//	dark_weights_normed_gauss_blur_2_rd58
//	dark_weights_normed_gauss_blur_2_rd59
//	dark_weights_normed_gauss_blur_2_rd60
//	dark_weights_normed_gauss_blur_2_rd61
//	dark_weights_normed_gauss_blur_2_rd62
//	dark_weights_normed_gauss_blur_2_rd63
//	dark_weights_normed_gauss_blur_2_rd64
//	dark_weights_normed_gauss_blur_2_rd65
//	dark_weights_normed_gauss_blur_2_rd66
//	dark_weights_normed_gauss_blur_2_rd67
//	dark_weights_normed_gauss_blur_2_rd68
//	dark_weights_normed_gauss_blur_2_rd69
//	dark_weights_normed_gauss_blur_2_rd70
//	dark_weights_normed_gauss_blur_2_rd71
inline hw_uint<1152> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_blur_2_update_0_read_bundle_read(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 72
    // dark_weights_normed_gauss_blur_2_rd0
    // dark_weights_normed_gauss_blur_2_rd1
    // dark_weights_normed_gauss_blur_2_rd2
    // dark_weights_normed_gauss_blur_2_rd3
    // dark_weights_normed_gauss_blur_2_rd4
    // dark_weights_normed_gauss_blur_2_rd5
    // dark_weights_normed_gauss_blur_2_rd6
    // dark_weights_normed_gauss_blur_2_rd7
    // dark_weights_normed_gauss_blur_2_rd8
    // dark_weights_normed_gauss_blur_2_rd9
    // dark_weights_normed_gauss_blur_2_rd10
    // dark_weights_normed_gauss_blur_2_rd11
    // dark_weights_normed_gauss_blur_2_rd12
    // dark_weights_normed_gauss_blur_2_rd13
    // dark_weights_normed_gauss_blur_2_rd14
    // dark_weights_normed_gauss_blur_2_rd15
    // dark_weights_normed_gauss_blur_2_rd16
    // dark_weights_normed_gauss_blur_2_rd17
    // dark_weights_normed_gauss_blur_2_rd18
    // dark_weights_normed_gauss_blur_2_rd19
    // dark_weights_normed_gauss_blur_2_rd20
    // dark_weights_normed_gauss_blur_2_rd21
    // dark_weights_normed_gauss_blur_2_rd22
    // dark_weights_normed_gauss_blur_2_rd23
    // dark_weights_normed_gauss_blur_2_rd24
    // dark_weights_normed_gauss_blur_2_rd25
    // dark_weights_normed_gauss_blur_2_rd26
    // dark_weights_normed_gauss_blur_2_rd27
    // dark_weights_normed_gauss_blur_2_rd28
    // dark_weights_normed_gauss_blur_2_rd29
    // dark_weights_normed_gauss_blur_2_rd30
    // dark_weights_normed_gauss_blur_2_rd31
    // dark_weights_normed_gauss_blur_2_rd32
    // dark_weights_normed_gauss_blur_2_rd33
    // dark_weights_normed_gauss_blur_2_rd34
    // dark_weights_normed_gauss_blur_2_rd35
    // dark_weights_normed_gauss_blur_2_rd36
    // dark_weights_normed_gauss_blur_2_rd37
    // dark_weights_normed_gauss_blur_2_rd38
    // dark_weights_normed_gauss_blur_2_rd39
    // dark_weights_normed_gauss_blur_2_rd40
    // dark_weights_normed_gauss_blur_2_rd41
    // dark_weights_normed_gauss_blur_2_rd42
    // dark_weights_normed_gauss_blur_2_rd43
    // dark_weights_normed_gauss_blur_2_rd44
    // dark_weights_normed_gauss_blur_2_rd45
    // dark_weights_normed_gauss_blur_2_rd46
    // dark_weights_normed_gauss_blur_2_rd47
    // dark_weights_normed_gauss_blur_2_rd48
    // dark_weights_normed_gauss_blur_2_rd49
    // dark_weights_normed_gauss_blur_2_rd50
    // dark_weights_normed_gauss_blur_2_rd51
    // dark_weights_normed_gauss_blur_2_rd52
    // dark_weights_normed_gauss_blur_2_rd53
    // dark_weights_normed_gauss_blur_2_rd54
    // dark_weights_normed_gauss_blur_2_rd55
    // dark_weights_normed_gauss_blur_2_rd56
    // dark_weights_normed_gauss_blur_2_rd57
    // dark_weights_normed_gauss_blur_2_rd58
    // dark_weights_normed_gauss_blur_2_rd59
    // dark_weights_normed_gauss_blur_2_rd60
    // dark_weights_normed_gauss_blur_2_rd61
    // dark_weights_normed_gauss_blur_2_rd62
    // dark_weights_normed_gauss_blur_2_rd63
    // dark_weights_normed_gauss_blur_2_rd64
    // dark_weights_normed_gauss_blur_2_rd65
    // dark_weights_normed_gauss_blur_2_rd66
    // dark_weights_normed_gauss_blur_2_rd67
    // dark_weights_normed_gauss_blur_2_rd68
    // dark_weights_normed_gauss_blur_2_rd69
    // dark_weights_normed_gauss_blur_2_rd70
    // dark_weights_normed_gauss_blur_2_rd71

	hw_uint<1152> result;
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd0_res = dark_weights_normed_gauss_blur_2_rd0_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 1152>(result, dark_weights_normed_gauss_blur_2_rd0_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd1_res = dark_weights_normed_gauss_blur_2_rd1_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 1152>(result, dark_weights_normed_gauss_blur_2_rd1_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd2_res = dark_weights_normed_gauss_blur_2_rd2_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 1152>(result, dark_weights_normed_gauss_blur_2_rd2_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd3_res = dark_weights_normed_gauss_blur_2_rd3_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 1152>(result, dark_weights_normed_gauss_blur_2_rd3_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd4_res = dark_weights_normed_gauss_blur_2_rd4_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 1152>(result, dark_weights_normed_gauss_blur_2_rd4_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd5_res = dark_weights_normed_gauss_blur_2_rd5_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 1152>(result, dark_weights_normed_gauss_blur_2_rd5_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd6_res = dark_weights_normed_gauss_blur_2_rd6_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 1152>(result, dark_weights_normed_gauss_blur_2_rd6_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd7_res = dark_weights_normed_gauss_blur_2_rd7_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 1152>(result, dark_weights_normed_gauss_blur_2_rd7_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd8_res = dark_weights_normed_gauss_blur_2_rd8_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<128, 1152>(result, dark_weights_normed_gauss_blur_2_rd8_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd9_res = dark_weights_normed_gauss_blur_2_rd9_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<144, 1152>(result, dark_weights_normed_gauss_blur_2_rd9_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd10_res = dark_weights_normed_gauss_blur_2_rd10_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<160, 1152>(result, dark_weights_normed_gauss_blur_2_rd10_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd11_res = dark_weights_normed_gauss_blur_2_rd11_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<176, 1152>(result, dark_weights_normed_gauss_blur_2_rd11_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd12_res = dark_weights_normed_gauss_blur_2_rd12_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<192, 1152>(result, dark_weights_normed_gauss_blur_2_rd12_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd13_res = dark_weights_normed_gauss_blur_2_rd13_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<208, 1152>(result, dark_weights_normed_gauss_blur_2_rd13_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd14_res = dark_weights_normed_gauss_blur_2_rd14_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<224, 1152>(result, dark_weights_normed_gauss_blur_2_rd14_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd15_res = dark_weights_normed_gauss_blur_2_rd15_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<240, 1152>(result, dark_weights_normed_gauss_blur_2_rd15_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd16_res = dark_weights_normed_gauss_blur_2_rd16_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<256, 1152>(result, dark_weights_normed_gauss_blur_2_rd16_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd17_res = dark_weights_normed_gauss_blur_2_rd17_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<272, 1152>(result, dark_weights_normed_gauss_blur_2_rd17_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd18_res = dark_weights_normed_gauss_blur_2_rd18_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<288, 1152>(result, dark_weights_normed_gauss_blur_2_rd18_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd19_res = dark_weights_normed_gauss_blur_2_rd19_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<304, 1152>(result, dark_weights_normed_gauss_blur_2_rd19_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd20_res = dark_weights_normed_gauss_blur_2_rd20_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<320, 1152>(result, dark_weights_normed_gauss_blur_2_rd20_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd21_res = dark_weights_normed_gauss_blur_2_rd21_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<336, 1152>(result, dark_weights_normed_gauss_blur_2_rd21_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd22_res = dark_weights_normed_gauss_blur_2_rd22_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<352, 1152>(result, dark_weights_normed_gauss_blur_2_rd22_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd23_res = dark_weights_normed_gauss_blur_2_rd23_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<368, 1152>(result, dark_weights_normed_gauss_blur_2_rd23_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd24_res = dark_weights_normed_gauss_blur_2_rd24_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<384, 1152>(result, dark_weights_normed_gauss_blur_2_rd24_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd25_res = dark_weights_normed_gauss_blur_2_rd25_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<400, 1152>(result, dark_weights_normed_gauss_blur_2_rd25_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd26_res = dark_weights_normed_gauss_blur_2_rd26_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<416, 1152>(result, dark_weights_normed_gauss_blur_2_rd26_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd27_res = dark_weights_normed_gauss_blur_2_rd27_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<432, 1152>(result, dark_weights_normed_gauss_blur_2_rd27_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd28_res = dark_weights_normed_gauss_blur_2_rd28_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<448, 1152>(result, dark_weights_normed_gauss_blur_2_rd28_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd29_res = dark_weights_normed_gauss_blur_2_rd29_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<464, 1152>(result, dark_weights_normed_gauss_blur_2_rd29_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd30_res = dark_weights_normed_gauss_blur_2_rd30_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<480, 1152>(result, dark_weights_normed_gauss_blur_2_rd30_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd31_res = dark_weights_normed_gauss_blur_2_rd31_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<496, 1152>(result, dark_weights_normed_gauss_blur_2_rd31_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd32_res = dark_weights_normed_gauss_blur_2_rd32_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<512, 1152>(result, dark_weights_normed_gauss_blur_2_rd32_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd33_res = dark_weights_normed_gauss_blur_2_rd33_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<528, 1152>(result, dark_weights_normed_gauss_blur_2_rd33_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd34_res = dark_weights_normed_gauss_blur_2_rd34_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<544, 1152>(result, dark_weights_normed_gauss_blur_2_rd34_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd35_res = dark_weights_normed_gauss_blur_2_rd35_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<560, 1152>(result, dark_weights_normed_gauss_blur_2_rd35_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd36_res = dark_weights_normed_gauss_blur_2_rd36_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<576, 1152>(result, dark_weights_normed_gauss_blur_2_rd36_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd37_res = dark_weights_normed_gauss_blur_2_rd37_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<592, 1152>(result, dark_weights_normed_gauss_blur_2_rd37_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd38_res = dark_weights_normed_gauss_blur_2_rd38_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<608, 1152>(result, dark_weights_normed_gauss_blur_2_rd38_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd39_res = dark_weights_normed_gauss_blur_2_rd39_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<624, 1152>(result, dark_weights_normed_gauss_blur_2_rd39_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd40_res = dark_weights_normed_gauss_blur_2_rd40_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<640, 1152>(result, dark_weights_normed_gauss_blur_2_rd40_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd41_res = dark_weights_normed_gauss_blur_2_rd41_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<656, 1152>(result, dark_weights_normed_gauss_blur_2_rd41_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd42_res = dark_weights_normed_gauss_blur_2_rd42_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<672, 1152>(result, dark_weights_normed_gauss_blur_2_rd42_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd43_res = dark_weights_normed_gauss_blur_2_rd43_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<688, 1152>(result, dark_weights_normed_gauss_blur_2_rd43_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd44_res = dark_weights_normed_gauss_blur_2_rd44_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<704, 1152>(result, dark_weights_normed_gauss_blur_2_rd44_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd45_res = dark_weights_normed_gauss_blur_2_rd45_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<720, 1152>(result, dark_weights_normed_gauss_blur_2_rd45_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd46_res = dark_weights_normed_gauss_blur_2_rd46_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<736, 1152>(result, dark_weights_normed_gauss_blur_2_rd46_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd47_res = dark_weights_normed_gauss_blur_2_rd47_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<752, 1152>(result, dark_weights_normed_gauss_blur_2_rd47_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd48_res = dark_weights_normed_gauss_blur_2_rd48_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<768, 1152>(result, dark_weights_normed_gauss_blur_2_rd48_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd49_res = dark_weights_normed_gauss_blur_2_rd49_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<784, 1152>(result, dark_weights_normed_gauss_blur_2_rd49_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd50_res = dark_weights_normed_gauss_blur_2_rd50_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<800, 1152>(result, dark_weights_normed_gauss_blur_2_rd50_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd51_res = dark_weights_normed_gauss_blur_2_rd51_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<816, 1152>(result, dark_weights_normed_gauss_blur_2_rd51_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd52_res = dark_weights_normed_gauss_blur_2_rd52_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<832, 1152>(result, dark_weights_normed_gauss_blur_2_rd52_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd53_res = dark_weights_normed_gauss_blur_2_rd53_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<848, 1152>(result, dark_weights_normed_gauss_blur_2_rd53_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd54_res = dark_weights_normed_gauss_blur_2_rd54_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<864, 1152>(result, dark_weights_normed_gauss_blur_2_rd54_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd55_res = dark_weights_normed_gauss_blur_2_rd55_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<880, 1152>(result, dark_weights_normed_gauss_blur_2_rd55_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd56_res = dark_weights_normed_gauss_blur_2_rd56_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<896, 1152>(result, dark_weights_normed_gauss_blur_2_rd56_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd57_res = dark_weights_normed_gauss_blur_2_rd57_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<912, 1152>(result, dark_weights_normed_gauss_blur_2_rd57_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd58_res = dark_weights_normed_gauss_blur_2_rd58_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<928, 1152>(result, dark_weights_normed_gauss_blur_2_rd58_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd59_res = dark_weights_normed_gauss_blur_2_rd59_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<944, 1152>(result, dark_weights_normed_gauss_blur_2_rd59_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd60_res = dark_weights_normed_gauss_blur_2_rd60_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<960, 1152>(result, dark_weights_normed_gauss_blur_2_rd60_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd61_res = dark_weights_normed_gauss_blur_2_rd61_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<976, 1152>(result, dark_weights_normed_gauss_blur_2_rd61_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd62_res = dark_weights_normed_gauss_blur_2_rd62_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<992, 1152>(result, dark_weights_normed_gauss_blur_2_rd62_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd63_res = dark_weights_normed_gauss_blur_2_rd63_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1008, 1152>(result, dark_weights_normed_gauss_blur_2_rd63_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd64_res = dark_weights_normed_gauss_blur_2_rd64_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1024, 1152>(result, dark_weights_normed_gauss_blur_2_rd64_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd65_res = dark_weights_normed_gauss_blur_2_rd65_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1040, 1152>(result, dark_weights_normed_gauss_blur_2_rd65_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd66_res = dark_weights_normed_gauss_blur_2_rd66_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1056, 1152>(result, dark_weights_normed_gauss_blur_2_rd66_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd67_res = dark_weights_normed_gauss_blur_2_rd67_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1072, 1152>(result, dark_weights_normed_gauss_blur_2_rd67_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd68_res = dark_weights_normed_gauss_blur_2_rd68_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1088, 1152>(result, dark_weights_normed_gauss_blur_2_rd68_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd69_res = dark_weights_normed_gauss_blur_2_rd69_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1104, 1152>(result, dark_weights_normed_gauss_blur_2_rd69_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd70_res = dark_weights_normed_gauss_blur_2_rd70_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1120, 1152>(result, dark_weights_normed_gauss_blur_2_rd70_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd71_res = dark_weights_normed_gauss_blur_2_rd71_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<1136, 1152>(result, dark_weights_normed_gauss_blur_2_rd71_res);
	return result;
}

// dark_weights_normed_gauss_ds_1_update_0_write
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7
inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write_bundle_write(hw_uint<128>& dark_weights_normed_gauss_ds_1_update_0_write, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<16, 31>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<32, 47>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<48, 63>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<64, 79>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write4_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<80, 95>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write5_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<96, 111>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write6_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<112, 127>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write7_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
}

// fused_level_1_update_0_read
//	fused_level_1_rd0
//	fused_level_1_rd1
//	fused_level_1_rd2
//	fused_level_1_rd3
//	fused_level_1_rd4
//	fused_level_1_rd5
//	fused_level_1_rd6
//	fused_level_1_rd7
inline hw_uint<128> dark_weights_normed_gauss_ds_1_fused_level_1_update_0_read_bundle_read(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // fused_level_1_rd0
    // fused_level_1_rd1
    // fused_level_1_rd2
    // fused_level_1_rd3
    // fused_level_1_rd4
    // fused_level_1_rd5
    // fused_level_1_rd6
    // fused_level_1_rd7

	hw_uint<128> result;
	hw_uint<16> fused_level_1_rd0_res = fused_level_1_rd0_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, fused_level_1_rd0_res);
	hw_uint<16> fused_level_1_rd1_res = fused_level_1_rd1_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, fused_level_1_rd1_res);
	hw_uint<16> fused_level_1_rd2_res = fused_level_1_rd2_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, fused_level_1_rd2_res);
	hw_uint<16> fused_level_1_rd3_res = fused_level_1_rd3_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, fused_level_1_rd3_res);
	hw_uint<16> fused_level_1_rd4_res = fused_level_1_rd4_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, fused_level_1_rd4_res);
	hw_uint<16> fused_level_1_rd5_res = fused_level_1_rd5_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, fused_level_1_rd5_res);
	hw_uint<16> fused_level_1_rd6_res = fused_level_1_rd6_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, fused_level_1_rd6_res);
	hw_uint<16> fused_level_1_rd7_res = fused_level_1_rd7_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, fused_level_1_rd7_res);
	return result;
}

#include "hw_classes.h"

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_to_fused_level_2_rd2_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_to_fused_level_2_rd3_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 244
	// # of read delays: 123
  // 0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
	fifo<hw_uint<16>, 244> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(243 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[0, 480], [0, 270]}
	// Capacity: 244
	// # of read delays: 6
  // 0, 1, 121, 122, 242, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 119> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 119> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_120() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_121() {
		return f4;
	}

	inline hw_uint<16> peek_122() {
		return f6;
	}

	inline hw_uint<16> peek_241() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_242() {
		return f8;
	}

	inline hw_uint<16> peek_243() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[1, 481], [0, 270]}
	// Capacity: 244
	// # of read delays: 6
  // 0, 1, 121, 122, 242, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 119> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 119> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_120() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_121() {
		return f4;
	}

	inline hw_uint<16> peek_122() {
		return f6;
	}

	inline hw_uint<16> peek_241() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_242() {
		return f8;
	}

	inline hw_uint<16> peek_243() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 119
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 119 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9_cache {
	// RAM Box: {[2, 482], [0, 270]}
	// Capacity: 244
	// # of read delays: 4
  // 0, 1, 122, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 120> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_242() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_243() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9_cache {
	// RAM Box: {[3, 483], [0, 270]}
	// Capacity: 244
	// # of read delays: 4
  // 0, 1, 122, 243
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 120> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 120> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_121() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_122() {
		return f4;
	}

	inline hw_uint<16> peek_242() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_243() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 120
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 120 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_2_cache {
  // # of banks: 8
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0;
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1;
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_to_fused_level_2_rd2_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_to_fused_level_2_rd2;
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_to_fused_level_2_rd3_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_to_fused_level_2_rd3;
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9;
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9;
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9;
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9;
};



inline void dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0);
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0);
}

inline void dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_write(hw_uint<16>& dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1);
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1);
}

inline void dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_write(hw_uint<16>& dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_to_fused_level_2_rd2.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2);
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2);
}

inline void dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_write(hw_uint<16>& dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_to_fused_level_2_rd3.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3);
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd0_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd0 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_243();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd1_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd1 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_122();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd10_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd10 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_122();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd11_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd11 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd12_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd12 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd13_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd13 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd14_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd14 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd15_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd15 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd16_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd16 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd17_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd17 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd18_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd18 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd19_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd19 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd2_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd2 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd20_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd20 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd21_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd21 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd22_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd22 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd23_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd23 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd24_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd24 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[4 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_242();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd25_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd25 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[4 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_121();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd26_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd26 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[4 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd27_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd27 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_243();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd28_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd28 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[3 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_122();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd29_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd29 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[3 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd3_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd3 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_243();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd30_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd30 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[4 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_242();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd31_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd31 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[4 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_121();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd32_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd32 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[4 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd33_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd33 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[5 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_242();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd34_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd34 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[5 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_121();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd35_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd35 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[5 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_0();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd4_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd4 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_122();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd5_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd5 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd6_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd6 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_243();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd7_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd7 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 4d0, 1 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_122();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd8_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd8 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 4d0, 2 + d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd9_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd9 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_243();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_2_rd0_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd0 read pattern: { fused_level_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_2_rd1_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd1 read pattern: { fused_level_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_2_rd2_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd2 read pattern: { fused_level_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_to_fused_level_2_rd2.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_2_rd3_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd3 read pattern: { fused_level_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_to_fused_level_2_rd3.peek(/* one reader or all rams */ (268 - d1 >= 0) ? (243) : (-269 + d1 == 0) ? ((241 - d0)) : 0);
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3;
  return 0;
}

// # of bundles = 3
// dark_weights_normed_gauss_blur_3_update_0_read
//	dark_weights_normed_gauss_blur_3_rd0
//	dark_weights_normed_gauss_blur_3_rd1
//	dark_weights_normed_gauss_blur_3_rd2
//	dark_weights_normed_gauss_blur_3_rd3
//	dark_weights_normed_gauss_blur_3_rd4
//	dark_weights_normed_gauss_blur_3_rd5
//	dark_weights_normed_gauss_blur_3_rd6
//	dark_weights_normed_gauss_blur_3_rd7
//	dark_weights_normed_gauss_blur_3_rd8
//	dark_weights_normed_gauss_blur_3_rd9
//	dark_weights_normed_gauss_blur_3_rd10
//	dark_weights_normed_gauss_blur_3_rd11
//	dark_weights_normed_gauss_blur_3_rd12
//	dark_weights_normed_gauss_blur_3_rd13
//	dark_weights_normed_gauss_blur_3_rd14
//	dark_weights_normed_gauss_blur_3_rd15
//	dark_weights_normed_gauss_blur_3_rd16
//	dark_weights_normed_gauss_blur_3_rd17
//	dark_weights_normed_gauss_blur_3_rd18
//	dark_weights_normed_gauss_blur_3_rd19
//	dark_weights_normed_gauss_blur_3_rd20
//	dark_weights_normed_gauss_blur_3_rd21
//	dark_weights_normed_gauss_blur_3_rd22
//	dark_weights_normed_gauss_blur_3_rd23
//	dark_weights_normed_gauss_blur_3_rd24
//	dark_weights_normed_gauss_blur_3_rd25
//	dark_weights_normed_gauss_blur_3_rd26
//	dark_weights_normed_gauss_blur_3_rd27
//	dark_weights_normed_gauss_blur_3_rd28
//	dark_weights_normed_gauss_blur_3_rd29
//	dark_weights_normed_gauss_blur_3_rd30
//	dark_weights_normed_gauss_blur_3_rd31
//	dark_weights_normed_gauss_blur_3_rd32
//	dark_weights_normed_gauss_blur_3_rd33
//	dark_weights_normed_gauss_blur_3_rd34
//	dark_weights_normed_gauss_blur_3_rd35
inline hw_uint<576> dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_blur_3_update_0_read_bundle_read(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 36
    // dark_weights_normed_gauss_blur_3_rd0
    // dark_weights_normed_gauss_blur_3_rd1
    // dark_weights_normed_gauss_blur_3_rd2
    // dark_weights_normed_gauss_blur_3_rd3
    // dark_weights_normed_gauss_blur_3_rd4
    // dark_weights_normed_gauss_blur_3_rd5
    // dark_weights_normed_gauss_blur_3_rd6
    // dark_weights_normed_gauss_blur_3_rd7
    // dark_weights_normed_gauss_blur_3_rd8
    // dark_weights_normed_gauss_blur_3_rd9
    // dark_weights_normed_gauss_blur_3_rd10
    // dark_weights_normed_gauss_blur_3_rd11
    // dark_weights_normed_gauss_blur_3_rd12
    // dark_weights_normed_gauss_blur_3_rd13
    // dark_weights_normed_gauss_blur_3_rd14
    // dark_weights_normed_gauss_blur_3_rd15
    // dark_weights_normed_gauss_blur_3_rd16
    // dark_weights_normed_gauss_blur_3_rd17
    // dark_weights_normed_gauss_blur_3_rd18
    // dark_weights_normed_gauss_blur_3_rd19
    // dark_weights_normed_gauss_blur_3_rd20
    // dark_weights_normed_gauss_blur_3_rd21
    // dark_weights_normed_gauss_blur_3_rd22
    // dark_weights_normed_gauss_blur_3_rd23
    // dark_weights_normed_gauss_blur_3_rd24
    // dark_weights_normed_gauss_blur_3_rd25
    // dark_weights_normed_gauss_blur_3_rd26
    // dark_weights_normed_gauss_blur_3_rd27
    // dark_weights_normed_gauss_blur_3_rd28
    // dark_weights_normed_gauss_blur_3_rd29
    // dark_weights_normed_gauss_blur_3_rd30
    // dark_weights_normed_gauss_blur_3_rd31
    // dark_weights_normed_gauss_blur_3_rd32
    // dark_weights_normed_gauss_blur_3_rd33
    // dark_weights_normed_gauss_blur_3_rd34
    // dark_weights_normed_gauss_blur_3_rd35

	hw_uint<576> result;
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd0_res = dark_weights_normed_gauss_blur_3_rd0_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 576>(result, dark_weights_normed_gauss_blur_3_rd0_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd1_res = dark_weights_normed_gauss_blur_3_rd1_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 576>(result, dark_weights_normed_gauss_blur_3_rd1_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd2_res = dark_weights_normed_gauss_blur_3_rd2_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 576>(result, dark_weights_normed_gauss_blur_3_rd2_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd3_res = dark_weights_normed_gauss_blur_3_rd3_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 576>(result, dark_weights_normed_gauss_blur_3_rd3_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd4_res = dark_weights_normed_gauss_blur_3_rd4_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<64, 576>(result, dark_weights_normed_gauss_blur_3_rd4_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd5_res = dark_weights_normed_gauss_blur_3_rd5_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<80, 576>(result, dark_weights_normed_gauss_blur_3_rd5_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd6_res = dark_weights_normed_gauss_blur_3_rd6_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<96, 576>(result, dark_weights_normed_gauss_blur_3_rd6_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd7_res = dark_weights_normed_gauss_blur_3_rd7_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<112, 576>(result, dark_weights_normed_gauss_blur_3_rd7_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd8_res = dark_weights_normed_gauss_blur_3_rd8_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<128, 576>(result, dark_weights_normed_gauss_blur_3_rd8_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd9_res = dark_weights_normed_gauss_blur_3_rd9_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<144, 576>(result, dark_weights_normed_gauss_blur_3_rd9_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd10_res = dark_weights_normed_gauss_blur_3_rd10_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<160, 576>(result, dark_weights_normed_gauss_blur_3_rd10_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd11_res = dark_weights_normed_gauss_blur_3_rd11_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<176, 576>(result, dark_weights_normed_gauss_blur_3_rd11_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd12_res = dark_weights_normed_gauss_blur_3_rd12_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<192, 576>(result, dark_weights_normed_gauss_blur_3_rd12_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd13_res = dark_weights_normed_gauss_blur_3_rd13_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<208, 576>(result, dark_weights_normed_gauss_blur_3_rd13_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd14_res = dark_weights_normed_gauss_blur_3_rd14_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<224, 576>(result, dark_weights_normed_gauss_blur_3_rd14_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd15_res = dark_weights_normed_gauss_blur_3_rd15_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<240, 576>(result, dark_weights_normed_gauss_blur_3_rd15_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd16_res = dark_weights_normed_gauss_blur_3_rd16_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<256, 576>(result, dark_weights_normed_gauss_blur_3_rd16_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd17_res = dark_weights_normed_gauss_blur_3_rd17_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<272, 576>(result, dark_weights_normed_gauss_blur_3_rd17_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd18_res = dark_weights_normed_gauss_blur_3_rd18_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<288, 576>(result, dark_weights_normed_gauss_blur_3_rd18_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd19_res = dark_weights_normed_gauss_blur_3_rd19_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<304, 576>(result, dark_weights_normed_gauss_blur_3_rd19_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd20_res = dark_weights_normed_gauss_blur_3_rd20_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<320, 576>(result, dark_weights_normed_gauss_blur_3_rd20_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd21_res = dark_weights_normed_gauss_blur_3_rd21_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<336, 576>(result, dark_weights_normed_gauss_blur_3_rd21_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd22_res = dark_weights_normed_gauss_blur_3_rd22_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<352, 576>(result, dark_weights_normed_gauss_blur_3_rd22_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd23_res = dark_weights_normed_gauss_blur_3_rd23_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<368, 576>(result, dark_weights_normed_gauss_blur_3_rd23_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd24_res = dark_weights_normed_gauss_blur_3_rd24_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<384, 576>(result, dark_weights_normed_gauss_blur_3_rd24_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd25_res = dark_weights_normed_gauss_blur_3_rd25_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<400, 576>(result, dark_weights_normed_gauss_blur_3_rd25_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd26_res = dark_weights_normed_gauss_blur_3_rd26_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<416, 576>(result, dark_weights_normed_gauss_blur_3_rd26_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd27_res = dark_weights_normed_gauss_blur_3_rd27_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<432, 576>(result, dark_weights_normed_gauss_blur_3_rd27_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd28_res = dark_weights_normed_gauss_blur_3_rd28_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<448, 576>(result, dark_weights_normed_gauss_blur_3_rd28_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd29_res = dark_weights_normed_gauss_blur_3_rd29_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<464, 576>(result, dark_weights_normed_gauss_blur_3_rd29_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd30_res = dark_weights_normed_gauss_blur_3_rd30_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<480, 576>(result, dark_weights_normed_gauss_blur_3_rd30_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd31_res = dark_weights_normed_gauss_blur_3_rd31_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<496, 576>(result, dark_weights_normed_gauss_blur_3_rd31_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd32_res = dark_weights_normed_gauss_blur_3_rd32_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<512, 576>(result, dark_weights_normed_gauss_blur_3_rd32_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd33_res = dark_weights_normed_gauss_blur_3_rd33_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<528, 576>(result, dark_weights_normed_gauss_blur_3_rd33_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd34_res = dark_weights_normed_gauss_blur_3_rd34_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<544, 576>(result, dark_weights_normed_gauss_blur_3_rd34_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd35_res = dark_weights_normed_gauss_blur_3_rd35_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<560, 576>(result, dark_weights_normed_gauss_blur_3_rd35_res);
	return result;
}

// dark_weights_normed_gauss_ds_2_update_0_write
//	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0
//	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1
//	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2
//	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3
inline void dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write_bundle_write(hw_uint<64>& dark_weights_normed_gauss_ds_2_update_0_write, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_res = dark_weights_normed_gauss_ds_2_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_write(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_res, dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_res = dark_weights_normed_gauss_ds_2_update_0_write.extract<16, 31>();
	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_write(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_res, dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_res = dark_weights_normed_gauss_ds_2_update_0_write.extract<32, 47>();
	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_write(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write2_res, dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_res = dark_weights_normed_gauss_ds_2_update_0_write.extract<48, 63>();
	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_write(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write3_res, dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
}

// fused_level_2_update_0_read
//	fused_level_2_rd0
//	fused_level_2_rd1
//	fused_level_2_rd2
//	fused_level_2_rd3
inline hw_uint<64> dark_weights_normed_gauss_ds_2_fused_level_2_update_0_read_bundle_read(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // fused_level_2_rd0
    // fused_level_2_rd1
    // fused_level_2_rd2
    // fused_level_2_rd3

	hw_uint<64> result;
	hw_uint<16> fused_level_2_rd0_res = fused_level_2_rd0_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, fused_level_2_rd0_res);
	hw_uint<16> fused_level_2_rd1_res = fused_level_2_rd1_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, fused_level_2_rd1_res);
	hw_uint<16> fused_level_2_rd2_res = fused_level_2_rd2_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, fused_level_2_rd2_res);
	hw_uint<16> fused_level_2_rd3_res = fused_level_2_rd3_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, fused_level_2_rd3_res);
	return result;
}

#include "hw_classes.h"

struct dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache {
	// RAM Box: {[0, 238], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1_to_fused_level_3_rd1_cache {
	// RAM Box: {[1, 239], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_3_cache {
  // # of banks: 2
  dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0;
  dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1_to_fused_level_3_rd1_cache dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1_to_fused_level_3_rd1;
};



inline void dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_3.dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.push(dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0);
}

inline void dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1_write(hw_uint<16>& dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_3.dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1_to_fused_level_3_rd1.push(dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1);
}

inline hw_uint<16> fused_level_3_rd0_select(dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd0 read pattern: { fused_level_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_3[2d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 31] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0 = dark_weights_normed_gauss_ds_3.dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_3_rd1_select(dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd1 read pattern: { fused_level_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_3[1 + 2d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  // Write schedule: { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 31] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1 = dark_weights_normed_gauss_ds_3.dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1_to_fused_level_3_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_ds_3_update_0_write
//	dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0
//	dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1
inline void dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write_bundle_write(hw_uint<32>& dark_weights_normed_gauss_ds_3_update_0_write, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_res = dark_weights_normed_gauss_ds_3_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_write(dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_res, dark_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1_res = dark_weights_normed_gauss_ds_3_update_0_write.extract<16, 31>();
	dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1_write(dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write1_res, dark_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
}

// fused_level_3_update_0_read
//	fused_level_3_rd0
//	fused_level_3_rd1
inline hw_uint<32> dark_weights_normed_gauss_ds_3_fused_level_3_update_0_read_bundle_read(dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // fused_level_3_rd0
    // fused_level_3_rd1

	hw_uint<32> result;
	hw_uint<16> fused_level_3_rd0_res = fused_level_3_rd0_select(dark_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 32>(result, fused_level_3_rd0_res);
	hw_uint<16> fused_level_3_rd1_res = fused_level_3_rd1_select(dark_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
	set_at<16, 32>(result, fused_level_3_rd1_res);
	return result;
}

#include "hw_classes.h"

struct final_merged_0_final_merged_0_update_0_write0_to_ef_tc_16_rd0_cache {
	// RAM Box: {[0, 1904], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write1_to_ef_tc_16_rd1_cache {
	// RAM Box: {[1, 1905], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write10_to_ef_tc_16_rd10_cache {
	// RAM Box: {[10, 1914], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write11_to_ef_tc_16_rd11_cache {
	// RAM Box: {[11, 1915], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write12_to_ef_tc_16_rd12_cache {
	// RAM Box: {[12, 1916], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write13_to_ef_tc_16_rd13_cache {
	// RAM Box: {[13, 1917], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write14_to_ef_tc_16_rd14_cache {
	// RAM Box: {[14, 1918], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write15_to_ef_tc_16_rd15_cache {
	// RAM Box: {[15, 1919], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write2_to_ef_tc_16_rd2_cache {
	// RAM Box: {[2, 1906], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write3_to_ef_tc_16_rd3_cache {
	// RAM Box: {[3, 1907], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write4_to_ef_tc_16_rd4_cache {
	// RAM Box: {[4, 1908], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write5_to_ef_tc_16_rd5_cache {
	// RAM Box: {[5, 1909], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write6_to_ef_tc_16_rd6_cache {
	// RAM Box: {[6, 1910], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write7_to_ef_tc_16_rd7_cache {
	// RAM Box: {[7, 1911], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write8_to_ef_tc_16_rd8_cache {
	// RAM Box: {[8, 1912], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write9_to_ef_tc_16_rd9_cache {
	// RAM Box: {[9, 1913], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_cache {
  // # of banks: 16
  final_merged_0_final_merged_0_update_0_write0_to_ef_tc_16_rd0_cache final_merged_0_final_merged_0_update_0_write0_to_ef_tc_16_rd0;
  final_merged_0_final_merged_0_update_0_write1_to_ef_tc_16_rd1_cache final_merged_0_final_merged_0_update_0_write1_to_ef_tc_16_rd1;
  final_merged_0_final_merged_0_update_0_write10_to_ef_tc_16_rd10_cache final_merged_0_final_merged_0_update_0_write10_to_ef_tc_16_rd10;
  final_merged_0_final_merged_0_update_0_write11_to_ef_tc_16_rd11_cache final_merged_0_final_merged_0_update_0_write11_to_ef_tc_16_rd11;
  final_merged_0_final_merged_0_update_0_write12_to_ef_tc_16_rd12_cache final_merged_0_final_merged_0_update_0_write12_to_ef_tc_16_rd12;
  final_merged_0_final_merged_0_update_0_write13_to_ef_tc_16_rd13_cache final_merged_0_final_merged_0_update_0_write13_to_ef_tc_16_rd13;
  final_merged_0_final_merged_0_update_0_write14_to_ef_tc_16_rd14_cache final_merged_0_final_merged_0_update_0_write14_to_ef_tc_16_rd14;
  final_merged_0_final_merged_0_update_0_write15_to_ef_tc_16_rd15_cache final_merged_0_final_merged_0_update_0_write15_to_ef_tc_16_rd15;
  final_merged_0_final_merged_0_update_0_write2_to_ef_tc_16_rd2_cache final_merged_0_final_merged_0_update_0_write2_to_ef_tc_16_rd2;
  final_merged_0_final_merged_0_update_0_write3_to_ef_tc_16_rd3_cache final_merged_0_final_merged_0_update_0_write3_to_ef_tc_16_rd3;
  final_merged_0_final_merged_0_update_0_write4_to_ef_tc_16_rd4_cache final_merged_0_final_merged_0_update_0_write4_to_ef_tc_16_rd4;
  final_merged_0_final_merged_0_update_0_write5_to_ef_tc_16_rd5_cache final_merged_0_final_merged_0_update_0_write5_to_ef_tc_16_rd5;
  final_merged_0_final_merged_0_update_0_write6_to_ef_tc_16_rd6_cache final_merged_0_final_merged_0_update_0_write6_to_ef_tc_16_rd6;
  final_merged_0_final_merged_0_update_0_write7_to_ef_tc_16_rd7_cache final_merged_0_final_merged_0_update_0_write7_to_ef_tc_16_rd7;
  final_merged_0_final_merged_0_update_0_write8_to_ef_tc_16_rd8_cache final_merged_0_final_merged_0_update_0_write8_to_ef_tc_16_rd8;
  final_merged_0_final_merged_0_update_0_write9_to_ef_tc_16_rd9_cache final_merged_0_final_merged_0_update_0_write9_to_ef_tc_16_rd9;
};



inline void final_merged_0_final_merged_0_update_0_write0_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write0, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write0_to_ef_tc_16_rd0.push(final_merged_0_final_merged_0_update_0_write0);
}

inline void final_merged_0_final_merged_0_update_0_write1_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write1, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write1_to_ef_tc_16_rd1.push(final_merged_0_final_merged_0_update_0_write1);
}

inline void final_merged_0_final_merged_0_update_0_write10_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write10, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write10_to_ef_tc_16_rd10.push(final_merged_0_final_merged_0_update_0_write10);
}

inline void final_merged_0_final_merged_0_update_0_write11_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write11, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write11_to_ef_tc_16_rd11.push(final_merged_0_final_merged_0_update_0_write11);
}

inline void final_merged_0_final_merged_0_update_0_write12_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write12, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write12_to_ef_tc_16_rd12.push(final_merged_0_final_merged_0_update_0_write12);
}

inline void final_merged_0_final_merged_0_update_0_write13_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write13, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write13_to_ef_tc_16_rd13.push(final_merged_0_final_merged_0_update_0_write13);
}

inline void final_merged_0_final_merged_0_update_0_write14_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write14, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write14_to_ef_tc_16_rd14.push(final_merged_0_final_merged_0_update_0_write14);
}

inline void final_merged_0_final_merged_0_update_0_write15_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write15, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write15_to_ef_tc_16_rd15.push(final_merged_0_final_merged_0_update_0_write15);
}

inline void final_merged_0_final_merged_0_update_0_write2_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write2, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write2_to_ef_tc_16_rd2.push(final_merged_0_final_merged_0_update_0_write2);
}

inline void final_merged_0_final_merged_0_update_0_write3_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write3, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write3_to_ef_tc_16_rd3.push(final_merged_0_final_merged_0_update_0_write3);
}

inline void final_merged_0_final_merged_0_update_0_write4_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write4, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write4_to_ef_tc_16_rd4.push(final_merged_0_final_merged_0_update_0_write4);
}

inline void final_merged_0_final_merged_0_update_0_write5_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write5, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write5_to_ef_tc_16_rd5.push(final_merged_0_final_merged_0_update_0_write5);
}

inline void final_merged_0_final_merged_0_update_0_write6_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write6, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write6_to_ef_tc_16_rd6.push(final_merged_0_final_merged_0_update_0_write6);
}

inline void final_merged_0_final_merged_0_update_0_write7_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write7, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write7_to_ef_tc_16_rd7.push(final_merged_0_final_merged_0_update_0_write7);
}

inline void final_merged_0_final_merged_0_update_0_write8_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write8, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write8_to_ef_tc_16_rd8.push(final_merged_0_final_merged_0_update_0_write8);
}

inline void final_merged_0_final_merged_0_update_0_write9_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write9, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write9_to_ef_tc_16_rd9.push(final_merged_0_final_merged_0_update_0_write9);
}

inline hw_uint<16> ef_tc_16_rd0_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd0 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write0 = final_merged_0.final_merged_0_final_merged_0_update_0_write0_to_ef_tc_16_rd0.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write0;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd1_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd1 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[1 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write1 = final_merged_0.final_merged_0_final_merged_0_update_0_write1_to_ef_tc_16_rd1.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write1;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd10_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd10 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[10 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write10 = final_merged_0.final_merged_0_final_merged_0_update_0_write10_to_ef_tc_16_rd10.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write10;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd11_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd11 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[11 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write11 = final_merged_0.final_merged_0_final_merged_0_update_0_write11_to_ef_tc_16_rd11.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write11;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd12_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd12 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[12 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write12 = final_merged_0.final_merged_0_final_merged_0_update_0_write12_to_ef_tc_16_rd12.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write12;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd13_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd13 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[13 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write13 = final_merged_0.final_merged_0_final_merged_0_update_0_write13_to_ef_tc_16_rd13.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write13;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd14_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd14 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[14 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write14 = final_merged_0.final_merged_0_final_merged_0_update_0_write14_to_ef_tc_16_rd14.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write14;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd15_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd15 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[15 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write15 = final_merged_0.final_merged_0_final_merged_0_update_0_write15_to_ef_tc_16_rd15.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write15;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd2_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd2 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[2 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write2 = final_merged_0.final_merged_0_final_merged_0_update_0_write2_to_ef_tc_16_rd2.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write2;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd3_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd3 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[3 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write3 = final_merged_0.final_merged_0_final_merged_0_update_0_write3_to_ef_tc_16_rd3.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write3;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd4_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd4 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[4 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write4 = final_merged_0.final_merged_0_final_merged_0_update_0_write4_to_ef_tc_16_rd4.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write4;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd5_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd5 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[5 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write5 = final_merged_0.final_merged_0_final_merged_0_update_0_write5_to_ef_tc_16_rd5.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write5;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd6_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd6 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[6 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write6 = final_merged_0.final_merged_0_final_merged_0_update_0_write6_to_ef_tc_16_rd6.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write6;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd7_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd7 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[7 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write7 = final_merged_0.final_merged_0_final_merged_0_update_0_write7_to_ef_tc_16_rd7.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write7;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd8_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd8 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[8 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write8 = final_merged_0.final_merged_0_final_merged_0_update_0_write8_to_ef_tc_16_rd8.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write8;
  return 0;
}

inline hw_uint<16> ef_tc_16_rd9_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_tc_16_rd9 read pattern: { ef_tc_16_update_0[d0, d1] -> final_merged_0[9 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_write9 = final_merged_0.final_merged_0_final_merged_0_update_0_write9_to_ef_tc_16_rd9.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write9;
  return 0;
}

// # of bundles = 2
// ef_tc_16_update_0_read
//	ef_tc_16_rd0
//	ef_tc_16_rd1
//	ef_tc_16_rd2
//	ef_tc_16_rd3
//	ef_tc_16_rd4
//	ef_tc_16_rd5
//	ef_tc_16_rd6
//	ef_tc_16_rd7
//	ef_tc_16_rd8
//	ef_tc_16_rd9
//	ef_tc_16_rd10
//	ef_tc_16_rd11
//	ef_tc_16_rd12
//	ef_tc_16_rd13
//	ef_tc_16_rd14
//	ef_tc_16_rd15
inline hw_uint<256> final_merged_0_ef_tc_16_update_0_read_bundle_read(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // ef_tc_16_rd0
    // ef_tc_16_rd1
    // ef_tc_16_rd2
    // ef_tc_16_rd3
    // ef_tc_16_rd4
    // ef_tc_16_rd5
    // ef_tc_16_rd6
    // ef_tc_16_rd7
    // ef_tc_16_rd8
    // ef_tc_16_rd9
    // ef_tc_16_rd10
    // ef_tc_16_rd11
    // ef_tc_16_rd12
    // ef_tc_16_rd13
    // ef_tc_16_rd14
    // ef_tc_16_rd15

	hw_uint<256> result;
	hw_uint<16> ef_tc_16_rd0_res = ef_tc_16_rd0_select(final_merged_0, d0, d1, dynamic_address);
	set_at<0, 256>(result, ef_tc_16_rd0_res);
	hw_uint<16> ef_tc_16_rd1_res = ef_tc_16_rd1_select(final_merged_0, d0, d1, dynamic_address);
	set_at<16, 256>(result, ef_tc_16_rd1_res);
	hw_uint<16> ef_tc_16_rd2_res = ef_tc_16_rd2_select(final_merged_0, d0, d1, dynamic_address);
	set_at<32, 256>(result, ef_tc_16_rd2_res);
	hw_uint<16> ef_tc_16_rd3_res = ef_tc_16_rd3_select(final_merged_0, d0, d1, dynamic_address);
	set_at<48, 256>(result, ef_tc_16_rd3_res);
	hw_uint<16> ef_tc_16_rd4_res = ef_tc_16_rd4_select(final_merged_0, d0, d1, dynamic_address);
	set_at<64, 256>(result, ef_tc_16_rd4_res);
	hw_uint<16> ef_tc_16_rd5_res = ef_tc_16_rd5_select(final_merged_0, d0, d1, dynamic_address);
	set_at<80, 256>(result, ef_tc_16_rd5_res);
	hw_uint<16> ef_tc_16_rd6_res = ef_tc_16_rd6_select(final_merged_0, d0, d1, dynamic_address);
	set_at<96, 256>(result, ef_tc_16_rd6_res);
	hw_uint<16> ef_tc_16_rd7_res = ef_tc_16_rd7_select(final_merged_0, d0, d1, dynamic_address);
	set_at<112, 256>(result, ef_tc_16_rd7_res);
	hw_uint<16> ef_tc_16_rd8_res = ef_tc_16_rd8_select(final_merged_0, d0, d1, dynamic_address);
	set_at<128, 256>(result, ef_tc_16_rd8_res);
	hw_uint<16> ef_tc_16_rd9_res = ef_tc_16_rd9_select(final_merged_0, d0, d1, dynamic_address);
	set_at<144, 256>(result, ef_tc_16_rd9_res);
	hw_uint<16> ef_tc_16_rd10_res = ef_tc_16_rd10_select(final_merged_0, d0, d1, dynamic_address);
	set_at<160, 256>(result, ef_tc_16_rd10_res);
	hw_uint<16> ef_tc_16_rd11_res = ef_tc_16_rd11_select(final_merged_0, d0, d1, dynamic_address);
	set_at<176, 256>(result, ef_tc_16_rd11_res);
	hw_uint<16> ef_tc_16_rd12_res = ef_tc_16_rd12_select(final_merged_0, d0, d1, dynamic_address);
	set_at<192, 256>(result, ef_tc_16_rd12_res);
	hw_uint<16> ef_tc_16_rd13_res = ef_tc_16_rd13_select(final_merged_0, d0, d1, dynamic_address);
	set_at<208, 256>(result, ef_tc_16_rd13_res);
	hw_uint<16> ef_tc_16_rd14_res = ef_tc_16_rd14_select(final_merged_0, d0, d1, dynamic_address);
	set_at<224, 256>(result, ef_tc_16_rd14_res);
	hw_uint<16> ef_tc_16_rd15_res = ef_tc_16_rd15_select(final_merged_0, d0, d1, dynamic_address);
	set_at<240, 256>(result, ef_tc_16_rd15_res);
	return result;
}

// final_merged_0_update_0_write
//	final_merged_0_final_merged_0_update_0_write0
//	final_merged_0_final_merged_0_update_0_write1
//	final_merged_0_final_merged_0_update_0_write2
//	final_merged_0_final_merged_0_update_0_write3
//	final_merged_0_final_merged_0_update_0_write4
//	final_merged_0_final_merged_0_update_0_write5
//	final_merged_0_final_merged_0_update_0_write6
//	final_merged_0_final_merged_0_update_0_write7
//	final_merged_0_final_merged_0_update_0_write8
//	final_merged_0_final_merged_0_update_0_write9
//	final_merged_0_final_merged_0_update_0_write10
//	final_merged_0_final_merged_0_update_0_write11
//	final_merged_0_final_merged_0_update_0_write12
//	final_merged_0_final_merged_0_update_0_write13
//	final_merged_0_final_merged_0_update_0_write14
//	final_merged_0_final_merged_0_update_0_write15
inline void final_merged_0_final_merged_0_update_0_write_bundle_write(hw_uint<256>& final_merged_0_update_0_write, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> final_merged_0_final_merged_0_update_0_write0_res = final_merged_0_update_0_write.extract<0, 15>();
	final_merged_0_final_merged_0_update_0_write0_write(final_merged_0_final_merged_0_update_0_write0_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write1_res = final_merged_0_update_0_write.extract<16, 31>();
	final_merged_0_final_merged_0_update_0_write1_write(final_merged_0_final_merged_0_update_0_write1_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write2_res = final_merged_0_update_0_write.extract<32, 47>();
	final_merged_0_final_merged_0_update_0_write2_write(final_merged_0_final_merged_0_update_0_write2_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write3_res = final_merged_0_update_0_write.extract<48, 63>();
	final_merged_0_final_merged_0_update_0_write3_write(final_merged_0_final_merged_0_update_0_write3_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write4_res = final_merged_0_update_0_write.extract<64, 79>();
	final_merged_0_final_merged_0_update_0_write4_write(final_merged_0_final_merged_0_update_0_write4_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write5_res = final_merged_0_update_0_write.extract<80, 95>();
	final_merged_0_final_merged_0_update_0_write5_write(final_merged_0_final_merged_0_update_0_write5_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write6_res = final_merged_0_update_0_write.extract<96, 111>();
	final_merged_0_final_merged_0_update_0_write6_write(final_merged_0_final_merged_0_update_0_write6_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write7_res = final_merged_0_update_0_write.extract<112, 127>();
	final_merged_0_final_merged_0_update_0_write7_write(final_merged_0_final_merged_0_update_0_write7_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write8_res = final_merged_0_update_0_write.extract<128, 143>();
	final_merged_0_final_merged_0_update_0_write8_write(final_merged_0_final_merged_0_update_0_write8_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write9_res = final_merged_0_update_0_write.extract<144, 159>();
	final_merged_0_final_merged_0_update_0_write9_write(final_merged_0_final_merged_0_update_0_write9_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write10_res = final_merged_0_update_0_write.extract<160, 175>();
	final_merged_0_final_merged_0_update_0_write10_write(final_merged_0_final_merged_0_update_0_write10_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write11_res = final_merged_0_update_0_write.extract<176, 191>();
	final_merged_0_final_merged_0_update_0_write11_write(final_merged_0_final_merged_0_update_0_write11_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write12_res = final_merged_0_update_0_write.extract<192, 207>();
	final_merged_0_final_merged_0_update_0_write12_write(final_merged_0_final_merged_0_update_0_write12_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write13_res = final_merged_0_update_0_write.extract<208, 223>();
	final_merged_0_final_merged_0_update_0_write13_write(final_merged_0_final_merged_0_update_0_write13_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write14_res = final_merged_0_update_0_write.extract<224, 239>();
	final_merged_0_final_merged_0_update_0_write14_write(final_merged_0_final_merged_0_update_0_write14_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write15_res = final_merged_0_update_0_write.extract<240, 255>();
	final_merged_0_final_merged_0_update_0_write15_write(final_merged_0_final_merged_0_update_0_write15_res, final_merged_0, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd0_cache {
	// RAM Box: {[0, 952], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd1_cache {
	// RAM Box: {[0, 952], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write5_to_final_merged_0_rd10_cache {
	// RAM Box: {[5, 957], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write5_to_final_merged_0_rd11_cache {
	// RAM Box: {[5, 957], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write6_to_final_merged_0_rd12_cache {
	// RAM Box: {[6, 958], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write6_to_final_merged_0_rd13_cache {
	// RAM Box: {[6, 958], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write7_to_final_merged_0_rd14_cache {
	// RAM Box: {[7, 959], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write7_to_final_merged_0_rd15_cache {
	// RAM Box: {[7, 959], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd2_cache {
	// RAM Box: {[1, 953], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd3_cache {
	// RAM Box: {[1, 953], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd4_cache {
	// RAM Box: {[2, 954], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd5_cache {
	// RAM Box: {[2, 954], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd6_cache {
	// RAM Box: {[3, 955], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd7_cache {
	// RAM Box: {[3, 955], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write4_to_final_merged_0_rd8_cache {
	// RAM Box: {[4, 956], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write4_to_final_merged_0_rd9_cache {
	// RAM Box: {[4, 956], [0, 539]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_cache {
  // # of banks: 16
  final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd0_cache final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd0;
  final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd1_cache final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd1;
  final_merged_1_final_merged_1_update_0_write5_to_final_merged_0_rd10_cache final_merged_1_final_merged_1_update_0_write5_to_final_merged_0_rd10;
  final_merged_1_final_merged_1_update_0_write5_to_final_merged_0_rd11_cache final_merged_1_final_merged_1_update_0_write5_to_final_merged_0_rd11;
  final_merged_1_final_merged_1_update_0_write6_to_final_merged_0_rd12_cache final_merged_1_final_merged_1_update_0_write6_to_final_merged_0_rd12;
  final_merged_1_final_merged_1_update_0_write6_to_final_merged_0_rd13_cache final_merged_1_final_merged_1_update_0_write6_to_final_merged_0_rd13;
  final_merged_1_final_merged_1_update_0_write7_to_final_merged_0_rd14_cache final_merged_1_final_merged_1_update_0_write7_to_final_merged_0_rd14;
  final_merged_1_final_merged_1_update_0_write7_to_final_merged_0_rd15_cache final_merged_1_final_merged_1_update_0_write7_to_final_merged_0_rd15;
  final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd2_cache final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd2;
  final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd3_cache final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd3;
  final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd4_cache final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd4;
  final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd5_cache final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd5;
  final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd6_cache final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd6;
  final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd7_cache final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd7;
  final_merged_1_final_merged_1_update_0_write4_to_final_merged_0_rd8_cache final_merged_1_final_merged_1_update_0_write4_to_final_merged_0_rd8;
  final_merged_1_final_merged_1_update_0_write4_to_final_merged_0_rd9_cache final_merged_1_final_merged_1_update_0_write4_to_final_merged_0_rd9;
};



inline void final_merged_1_final_merged_1_update_0_write0_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write0, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd0.push(final_merged_1_final_merged_1_update_0_write0);
  final_merged_1.final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd1.push(final_merged_1_final_merged_1_update_0_write0);
}

inline void final_merged_1_final_merged_1_update_0_write1_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write1, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd2.push(final_merged_1_final_merged_1_update_0_write1);
  final_merged_1.final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd3.push(final_merged_1_final_merged_1_update_0_write1);
}

inline void final_merged_1_final_merged_1_update_0_write2_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write2, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd4.push(final_merged_1_final_merged_1_update_0_write2);
  final_merged_1.final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd5.push(final_merged_1_final_merged_1_update_0_write2);
}

inline void final_merged_1_final_merged_1_update_0_write3_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write3, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd6.push(final_merged_1_final_merged_1_update_0_write3);
  final_merged_1.final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd7.push(final_merged_1_final_merged_1_update_0_write3);
}

inline void final_merged_1_final_merged_1_update_0_write4_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write4, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write4_to_final_merged_0_rd8.push(final_merged_1_final_merged_1_update_0_write4);
  final_merged_1.final_merged_1_final_merged_1_update_0_write4_to_final_merged_0_rd9.push(final_merged_1_final_merged_1_update_0_write4);
}

inline void final_merged_1_final_merged_1_update_0_write5_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write5, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write5_to_final_merged_0_rd10.push(final_merged_1_final_merged_1_update_0_write5);
  final_merged_1.final_merged_1_final_merged_1_update_0_write5_to_final_merged_0_rd11.push(final_merged_1_final_merged_1_update_0_write5);
}

inline void final_merged_1_final_merged_1_update_0_write6_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write6, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write6_to_final_merged_0_rd12.push(final_merged_1_final_merged_1_update_0_write6);
  final_merged_1.final_merged_1_final_merged_1_update_0_write6_to_final_merged_0_rd13.push(final_merged_1_final_merged_1_update_0_write6);
}

inline void final_merged_1_final_merged_1_update_0_write7_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write7, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write7_to_final_merged_0_rd14.push(final_merged_1_final_merged_1_update_0_write7);
  final_merged_1.final_merged_1_final_merged_1_update_0_write7_to_final_merged_0_rd15.push(final_merged_1_final_merged_1_update_0_write7);
}

inline hw_uint<16> final_merged_0_rd0_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd0 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write0 = final_merged_1.final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_0_rd1_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd1 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write0 = final_merged_1.final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_0_rd10_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd10 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[5 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write5 = final_merged_1.final_merged_1_final_merged_1_update_0_write5_to_final_merged_0_rd10.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write5;
  return 0;
}

inline hw_uint<16> final_merged_0_rd11_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd11 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[5 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write5 = final_merged_1.final_merged_1_final_merged_1_update_0_write5_to_final_merged_0_rd11.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write5;
  return 0;
}

inline hw_uint<16> final_merged_0_rd12_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd12 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[6 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write6 = final_merged_1.final_merged_1_final_merged_1_update_0_write6_to_final_merged_0_rd12.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write6;
  return 0;
}

inline hw_uint<16> final_merged_0_rd13_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd13 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[6 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write6 = final_merged_1.final_merged_1_final_merged_1_update_0_write6_to_final_merged_0_rd13.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write6;
  return 0;
}

inline hw_uint<16> final_merged_0_rd14_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd14 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[7 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write7 = final_merged_1.final_merged_1_final_merged_1_update_0_write7_to_final_merged_0_rd14.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write7;
  return 0;
}

inline hw_uint<16> final_merged_0_rd15_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd15 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[7 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write7 = final_merged_1.final_merged_1_final_merged_1_update_0_write7_to_final_merged_0_rd15.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write7;
  return 0;
}

inline hw_uint<16> final_merged_0_rd2_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd2 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[1 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write1 = final_merged_1.final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_0_rd3_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd3 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[1 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write1 = final_merged_1.final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_0_rd4_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd4 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[2 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write2 = final_merged_1.final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd4.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write2;
  return 0;
}

inline hw_uint<16> final_merged_0_rd5_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd5 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[2 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write2 = final_merged_1.final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd5.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write2;
  return 0;
}

inline hw_uint<16> final_merged_0_rd6_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd6 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[3 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write3 = final_merged_1.final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd6.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write3;
  return 0;
}

inline hw_uint<16> final_merged_0_rd7_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd7 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[3 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write3 = final_merged_1.final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd7.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write3;
  return 0;
}

inline hw_uint<16> final_merged_0_rd8_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd8 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[4 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write4 = final_merged_1.final_merged_1_final_merged_1_update_0_write4_to_final_merged_0_rd8.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write4;
  return 0;
}

inline hw_uint<16> final_merged_0_rd9_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd9 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[4 + 8d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_write4 = final_merged_1.final_merged_1_final_merged_1_update_0_write4_to_final_merged_0_rd9.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write4;
  return 0;
}

// # of bundles = 2
// final_merged_0_update_0_read
//	final_merged_0_rd0
//	final_merged_0_rd1
//	final_merged_0_rd2
//	final_merged_0_rd3
//	final_merged_0_rd4
//	final_merged_0_rd5
//	final_merged_0_rd6
//	final_merged_0_rd7
//	final_merged_0_rd8
//	final_merged_0_rd9
//	final_merged_0_rd10
//	final_merged_0_rd11
//	final_merged_0_rd12
//	final_merged_0_rd13
//	final_merged_0_rd14
//	final_merged_0_rd15
inline hw_uint<256> final_merged_1_final_merged_0_update_0_read_bundle_read(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // final_merged_0_rd0
    // final_merged_0_rd1
    // final_merged_0_rd2
    // final_merged_0_rd3
    // final_merged_0_rd4
    // final_merged_0_rd5
    // final_merged_0_rd6
    // final_merged_0_rd7
    // final_merged_0_rd8
    // final_merged_0_rd9
    // final_merged_0_rd10
    // final_merged_0_rd11
    // final_merged_0_rd12
    // final_merged_0_rd13
    // final_merged_0_rd14
    // final_merged_0_rd15

	hw_uint<256> result;
	hw_uint<16> final_merged_0_rd0_res = final_merged_0_rd0_select(final_merged_1, d0, d1, dynamic_address);
	set_at<0, 256>(result, final_merged_0_rd0_res);
	hw_uint<16> final_merged_0_rd1_res = final_merged_0_rd1_select(final_merged_1, d0, d1, dynamic_address);
	set_at<16, 256>(result, final_merged_0_rd1_res);
	hw_uint<16> final_merged_0_rd2_res = final_merged_0_rd2_select(final_merged_1, d0, d1, dynamic_address);
	set_at<32, 256>(result, final_merged_0_rd2_res);
	hw_uint<16> final_merged_0_rd3_res = final_merged_0_rd3_select(final_merged_1, d0, d1, dynamic_address);
	set_at<48, 256>(result, final_merged_0_rd3_res);
	hw_uint<16> final_merged_0_rd4_res = final_merged_0_rd4_select(final_merged_1, d0, d1, dynamic_address);
	set_at<64, 256>(result, final_merged_0_rd4_res);
	hw_uint<16> final_merged_0_rd5_res = final_merged_0_rd5_select(final_merged_1, d0, d1, dynamic_address);
	set_at<80, 256>(result, final_merged_0_rd5_res);
	hw_uint<16> final_merged_0_rd6_res = final_merged_0_rd6_select(final_merged_1, d0, d1, dynamic_address);
	set_at<96, 256>(result, final_merged_0_rd6_res);
	hw_uint<16> final_merged_0_rd7_res = final_merged_0_rd7_select(final_merged_1, d0, d1, dynamic_address);
	set_at<112, 256>(result, final_merged_0_rd7_res);
	hw_uint<16> final_merged_0_rd8_res = final_merged_0_rd8_select(final_merged_1, d0, d1, dynamic_address);
	set_at<128, 256>(result, final_merged_0_rd8_res);
	hw_uint<16> final_merged_0_rd9_res = final_merged_0_rd9_select(final_merged_1, d0, d1, dynamic_address);
	set_at<144, 256>(result, final_merged_0_rd9_res);
	hw_uint<16> final_merged_0_rd10_res = final_merged_0_rd10_select(final_merged_1, d0, d1, dynamic_address);
	set_at<160, 256>(result, final_merged_0_rd10_res);
	hw_uint<16> final_merged_0_rd11_res = final_merged_0_rd11_select(final_merged_1, d0, d1, dynamic_address);
	set_at<176, 256>(result, final_merged_0_rd11_res);
	hw_uint<16> final_merged_0_rd12_res = final_merged_0_rd12_select(final_merged_1, d0, d1, dynamic_address);
	set_at<192, 256>(result, final_merged_0_rd12_res);
	hw_uint<16> final_merged_0_rd13_res = final_merged_0_rd13_select(final_merged_1, d0, d1, dynamic_address);
	set_at<208, 256>(result, final_merged_0_rd13_res);
	hw_uint<16> final_merged_0_rd14_res = final_merged_0_rd14_select(final_merged_1, d0, d1, dynamic_address);
	set_at<224, 256>(result, final_merged_0_rd14_res);
	hw_uint<16> final_merged_0_rd15_res = final_merged_0_rd15_select(final_merged_1, d0, d1, dynamic_address);
	set_at<240, 256>(result, final_merged_0_rd15_res);
	return result;
}

// final_merged_1_update_0_write
//	final_merged_1_final_merged_1_update_0_write0
//	final_merged_1_final_merged_1_update_0_write1
//	final_merged_1_final_merged_1_update_0_write2
//	final_merged_1_final_merged_1_update_0_write3
//	final_merged_1_final_merged_1_update_0_write4
//	final_merged_1_final_merged_1_update_0_write5
//	final_merged_1_final_merged_1_update_0_write6
//	final_merged_1_final_merged_1_update_0_write7
inline void final_merged_1_final_merged_1_update_0_write_bundle_write(hw_uint<128>& final_merged_1_update_0_write, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> final_merged_1_final_merged_1_update_0_write0_res = final_merged_1_update_0_write.extract<0, 15>();
	final_merged_1_final_merged_1_update_0_write0_write(final_merged_1_final_merged_1_update_0_write0_res, final_merged_1, d0, d1, dynamic_address);
	hw_uint<16> final_merged_1_final_merged_1_update_0_write1_res = final_merged_1_update_0_write.extract<16, 31>();
	final_merged_1_final_merged_1_update_0_write1_write(final_merged_1_final_merged_1_update_0_write1_res, final_merged_1, d0, d1, dynamic_address);
	hw_uint<16> final_merged_1_final_merged_1_update_0_write2_res = final_merged_1_update_0_write.extract<32, 47>();
	final_merged_1_final_merged_1_update_0_write2_write(final_merged_1_final_merged_1_update_0_write2_res, final_merged_1, d0, d1, dynamic_address);
	hw_uint<16> final_merged_1_final_merged_1_update_0_write3_res = final_merged_1_update_0_write.extract<48, 63>();
	final_merged_1_final_merged_1_update_0_write3_write(final_merged_1_final_merged_1_update_0_write3_res, final_merged_1, d0, d1, dynamic_address);
	hw_uint<16> final_merged_1_final_merged_1_update_0_write4_res = final_merged_1_update_0_write.extract<64, 79>();
	final_merged_1_final_merged_1_update_0_write4_write(final_merged_1_final_merged_1_update_0_write4_res, final_merged_1, d0, d1, dynamic_address);
	hw_uint<16> final_merged_1_final_merged_1_update_0_write5_res = final_merged_1_update_0_write.extract<80, 95>();
	final_merged_1_final_merged_1_update_0_write5_write(final_merged_1_final_merged_1_update_0_write5_res, final_merged_1, d0, d1, dynamic_address);
	hw_uint<16> final_merged_1_final_merged_1_update_0_write6_res = final_merged_1_update_0_write.extract<96, 111>();
	final_merged_1_final_merged_1_update_0_write6_write(final_merged_1_final_merged_1_update_0_write6_res, final_merged_1, d0, d1, dynamic_address);
	hw_uint<16> final_merged_1_final_merged_1_update_0_write7_res = final_merged_1_update_0_write.extract<112, 127>();
	final_merged_1_final_merged_1_update_0_write7_write(final_merged_1_final_merged_1_update_0_write7_res, final_merged_1, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd0_cache {
	// RAM Box: {[0, 476], [0, 269]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd1_cache {
	// RAM Box: {[0, 476], [0, 269]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd2_cache {
	// RAM Box: {[1, 477], [0, 269]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd3_cache {
	// RAM Box: {[1, 477], [0, 269]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_final_merged_2_update_0_write2_to_final_merged_1_rd4_cache {
	// RAM Box: {[2, 478], [0, 269]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_final_merged_2_update_0_write2_to_final_merged_1_rd5_cache {
	// RAM Box: {[2, 478], [0, 269]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_final_merged_2_update_0_write3_to_final_merged_1_rd6_cache {
	// RAM Box: {[3, 479], [0, 269]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_final_merged_2_update_0_write3_to_final_merged_1_rd7_cache {
	// RAM Box: {[3, 479], [0, 269]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_cache {
  // # of banks: 8
  final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd0_cache final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd0;
  final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd1_cache final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd1;
  final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd2_cache final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd2;
  final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd3_cache final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd3;
  final_merged_2_final_merged_2_update_0_write2_to_final_merged_1_rd4_cache final_merged_2_final_merged_2_update_0_write2_to_final_merged_1_rd4;
  final_merged_2_final_merged_2_update_0_write2_to_final_merged_1_rd5_cache final_merged_2_final_merged_2_update_0_write2_to_final_merged_1_rd5;
  final_merged_2_final_merged_2_update_0_write3_to_final_merged_1_rd6_cache final_merged_2_final_merged_2_update_0_write3_to_final_merged_1_rd6;
  final_merged_2_final_merged_2_update_0_write3_to_final_merged_1_rd7_cache final_merged_2_final_merged_2_update_0_write3_to_final_merged_1_rd7;
};



inline void final_merged_2_final_merged_2_update_0_write0_write(hw_uint<16>& final_merged_2_final_merged_2_update_0_write0, final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
  final_merged_2.final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd0.push(final_merged_2_final_merged_2_update_0_write0);
  final_merged_2.final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd1.push(final_merged_2_final_merged_2_update_0_write0);
}

inline void final_merged_2_final_merged_2_update_0_write1_write(hw_uint<16>& final_merged_2_final_merged_2_update_0_write1, final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
  final_merged_2.final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd2.push(final_merged_2_final_merged_2_update_0_write1);
  final_merged_2.final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd3.push(final_merged_2_final_merged_2_update_0_write1);
}

inline void final_merged_2_final_merged_2_update_0_write2_write(hw_uint<16>& final_merged_2_final_merged_2_update_0_write2, final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
  final_merged_2.final_merged_2_final_merged_2_update_0_write2_to_final_merged_1_rd4.push(final_merged_2_final_merged_2_update_0_write2);
  final_merged_2.final_merged_2_final_merged_2_update_0_write2_to_final_merged_1_rd5.push(final_merged_2_final_merged_2_update_0_write2);
}

inline void final_merged_2_final_merged_2_update_0_write3_write(hw_uint<16>& final_merged_2_final_merged_2_update_0_write3, final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
  final_merged_2.final_merged_2_final_merged_2_update_0_write3_to_final_merged_1_rd6.push(final_merged_2_final_merged_2_update_0_write3);
  final_merged_2.final_merged_2_final_merged_2_update_0_write3_to_final_merged_1_rd7.push(final_merged_2_final_merged_2_update_0_write3);
}

inline hw_uint<16> final_merged_1_rd0_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd0 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_final_merged_2_final_merged_2_update_0_write0 = final_merged_2.final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_1_rd1_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd1 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_final_merged_2_final_merged_2_update_0_write0 = final_merged_2.final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_1_rd2_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd2 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[1 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_final_merged_2_final_merged_2_update_0_write1 = final_merged_2.final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_1_rd3_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd3 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[1 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_final_merged_2_final_merged_2_update_0_write1 = final_merged_2.final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_1_rd4_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd4 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[2 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_final_merged_2_final_merged_2_update_0_write2 = final_merged_2.final_merged_2_final_merged_2_update_0_write2_to_final_merged_1_rd4.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write2;
  return 0;
}

inline hw_uint<16> final_merged_1_rd5_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd5 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[2 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_final_merged_2_final_merged_2_update_0_write2 = final_merged_2.final_merged_2_final_merged_2_update_0_write2_to_final_merged_1_rd5.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write2;
  return 0;
}

inline hw_uint<16> final_merged_1_rd6_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd6 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[3 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_final_merged_2_final_merged_2_update_0_write3 = final_merged_2.final_merged_2_final_merged_2_update_0_write3_to_final_merged_1_rd6.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write3;
  return 0;
}

inline hw_uint<16> final_merged_1_rd7_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd7 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[3 + 4d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_final_merged_2_final_merged_2_update_0_write3 = final_merged_2.final_merged_2_final_merged_2_update_0_write3_to_final_merged_1_rd7.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write3;
  return 0;
}

// # of bundles = 2
// final_merged_1_update_0_read
//	final_merged_1_rd0
//	final_merged_1_rd1
//	final_merged_1_rd2
//	final_merged_1_rd3
//	final_merged_1_rd4
//	final_merged_1_rd5
//	final_merged_1_rd6
//	final_merged_1_rd7
inline hw_uint<128> final_merged_2_final_merged_1_update_0_read_bundle_read(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // final_merged_1_rd0
    // final_merged_1_rd1
    // final_merged_1_rd2
    // final_merged_1_rd3
    // final_merged_1_rd4
    // final_merged_1_rd5
    // final_merged_1_rd6
    // final_merged_1_rd7

	hw_uint<128> result;
	hw_uint<16> final_merged_1_rd0_res = final_merged_1_rd0_select(final_merged_2, d0, d1, dynamic_address);
	set_at<0, 128>(result, final_merged_1_rd0_res);
	hw_uint<16> final_merged_1_rd1_res = final_merged_1_rd1_select(final_merged_2, d0, d1, dynamic_address);
	set_at<16, 128>(result, final_merged_1_rd1_res);
	hw_uint<16> final_merged_1_rd2_res = final_merged_1_rd2_select(final_merged_2, d0, d1, dynamic_address);
	set_at<32, 128>(result, final_merged_1_rd2_res);
	hw_uint<16> final_merged_1_rd3_res = final_merged_1_rd3_select(final_merged_2, d0, d1, dynamic_address);
	set_at<48, 128>(result, final_merged_1_rd3_res);
	hw_uint<16> final_merged_1_rd4_res = final_merged_1_rd4_select(final_merged_2, d0, d1, dynamic_address);
	set_at<64, 128>(result, final_merged_1_rd4_res);
	hw_uint<16> final_merged_1_rd5_res = final_merged_1_rd5_select(final_merged_2, d0, d1, dynamic_address);
	set_at<80, 128>(result, final_merged_1_rd5_res);
	hw_uint<16> final_merged_1_rd6_res = final_merged_1_rd6_select(final_merged_2, d0, d1, dynamic_address);
	set_at<96, 128>(result, final_merged_1_rd6_res);
	hw_uint<16> final_merged_1_rd7_res = final_merged_1_rd7_select(final_merged_2, d0, d1, dynamic_address);
	set_at<112, 128>(result, final_merged_1_rd7_res);
	return result;
}

// final_merged_2_update_0_write
//	final_merged_2_final_merged_2_update_0_write0
//	final_merged_2_final_merged_2_update_0_write1
//	final_merged_2_final_merged_2_update_0_write2
//	final_merged_2_final_merged_2_update_0_write3
inline void final_merged_2_final_merged_2_update_0_write_bundle_write(hw_uint<64>& final_merged_2_update_0_write, final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> final_merged_2_final_merged_2_update_0_write0_res = final_merged_2_update_0_write.extract<0, 15>();
	final_merged_2_final_merged_2_update_0_write0_write(final_merged_2_final_merged_2_update_0_write0_res, final_merged_2, d0, d1, dynamic_address);
	hw_uint<16> final_merged_2_final_merged_2_update_0_write1_res = final_merged_2_update_0_write.extract<16, 31>();
	final_merged_2_final_merged_2_update_0_write1_write(final_merged_2_final_merged_2_update_0_write1_res, final_merged_2, d0, d1, dynamic_address);
	hw_uint<16> final_merged_2_final_merged_2_update_0_write2_res = final_merged_2_update_0_write.extract<32, 47>();
	final_merged_2_final_merged_2_update_0_write2_write(final_merged_2_final_merged_2_update_0_write2_res, final_merged_2, d0, d1, dynamic_address);
	hw_uint<16> final_merged_2_final_merged_2_update_0_write3_res = final_merged_2_update_0_write.extract<48, 63>();
	final_merged_2_final_merged_2_update_0_write3_write(final_merged_2_final_merged_2_update_0_write3_res, final_merged_2, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct fused_level_0_fused_level_0_update_0_write0_to_final_merged_0_rd0_cache {
	// RAM Box: {[0, 1904], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write1_to_final_merged_0_rd1_cache {
	// RAM Box: {[1, 1905], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write10_to_final_merged_0_rd10_cache {
	// RAM Box: {[10, 1914], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write11_to_final_merged_0_rd11_cache {
	// RAM Box: {[11, 1915], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write12_to_final_merged_0_rd12_cache {
	// RAM Box: {[12, 1916], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write13_to_final_merged_0_rd13_cache {
	// RAM Box: {[13, 1917], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write14_to_final_merged_0_rd14_cache {
	// RAM Box: {[14, 1918], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write15_to_final_merged_0_rd15_cache {
	// RAM Box: {[15, 1919], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write2_to_final_merged_0_rd2_cache {
	// RAM Box: {[2, 1906], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write3_to_final_merged_0_rd3_cache {
	// RAM Box: {[3, 1907], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442
	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write4_to_final_merged_0_rd4_cache {
	// RAM Box: {[4, 1908], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write5_to_final_merged_0_rd5_cache {
	// RAM Box: {[5, 1909], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write6_to_final_merged_0_rd6_cache {
	// RAM Box: {[6, 1910], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write7_to_final_merged_0_rd7_cache {
	// RAM Box: {[7, 1911], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442
	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write8_to_final_merged_0_rd8_cache {
	// RAM Box: {[8, 1912], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write9_to_final_merged_0_rd9_cache {
	// RAM Box: {[9, 1913], [0, 1079]}
	// Capacity: 1443
	// # of read delays: 1443

	fifo<hw_uint<16>, 1443> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1442 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_cache {
  // # of banks: 16
  fused_level_0_fused_level_0_update_0_write0_to_final_merged_0_rd0_cache fused_level_0_fused_level_0_update_0_write0_to_final_merged_0_rd0;
  fused_level_0_fused_level_0_update_0_write1_to_final_merged_0_rd1_cache fused_level_0_fused_level_0_update_0_write1_to_final_merged_0_rd1;
  fused_level_0_fused_level_0_update_0_write10_to_final_merged_0_rd10_cache fused_level_0_fused_level_0_update_0_write10_to_final_merged_0_rd10;
  fused_level_0_fused_level_0_update_0_write11_to_final_merged_0_rd11_cache fused_level_0_fused_level_0_update_0_write11_to_final_merged_0_rd11;
  fused_level_0_fused_level_0_update_0_write12_to_final_merged_0_rd12_cache fused_level_0_fused_level_0_update_0_write12_to_final_merged_0_rd12;
  fused_level_0_fused_level_0_update_0_write13_to_final_merged_0_rd13_cache fused_level_0_fused_level_0_update_0_write13_to_final_merged_0_rd13;
  fused_level_0_fused_level_0_update_0_write14_to_final_merged_0_rd14_cache fused_level_0_fused_level_0_update_0_write14_to_final_merged_0_rd14;
  fused_level_0_fused_level_0_update_0_write15_to_final_merged_0_rd15_cache fused_level_0_fused_level_0_update_0_write15_to_final_merged_0_rd15;
  fused_level_0_fused_level_0_update_0_write2_to_final_merged_0_rd2_cache fused_level_0_fused_level_0_update_0_write2_to_final_merged_0_rd2;
  fused_level_0_fused_level_0_update_0_write3_to_final_merged_0_rd3_cache fused_level_0_fused_level_0_update_0_write3_to_final_merged_0_rd3;
  fused_level_0_fused_level_0_update_0_write4_to_final_merged_0_rd4_cache fused_level_0_fused_level_0_update_0_write4_to_final_merged_0_rd4;
  fused_level_0_fused_level_0_update_0_write5_to_final_merged_0_rd5_cache fused_level_0_fused_level_0_update_0_write5_to_final_merged_0_rd5;
  fused_level_0_fused_level_0_update_0_write6_to_final_merged_0_rd6_cache fused_level_0_fused_level_0_update_0_write6_to_final_merged_0_rd6;
  fused_level_0_fused_level_0_update_0_write7_to_final_merged_0_rd7_cache fused_level_0_fused_level_0_update_0_write7_to_final_merged_0_rd7;
  fused_level_0_fused_level_0_update_0_write8_to_final_merged_0_rd8_cache fused_level_0_fused_level_0_update_0_write8_to_final_merged_0_rd8;
  fused_level_0_fused_level_0_update_0_write9_to_final_merged_0_rd9_cache fused_level_0_fused_level_0_update_0_write9_to_final_merged_0_rd9;
};



inline void fused_level_0_fused_level_0_update_0_write0_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write0, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write0_to_final_merged_0_rd0.push(fused_level_0_fused_level_0_update_0_write0);
}

inline void fused_level_0_fused_level_0_update_0_write1_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write1, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write1_to_final_merged_0_rd1.push(fused_level_0_fused_level_0_update_0_write1);
}

inline void fused_level_0_fused_level_0_update_0_write10_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write10, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write10_to_final_merged_0_rd10.push(fused_level_0_fused_level_0_update_0_write10);
}

inline void fused_level_0_fused_level_0_update_0_write11_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write11, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write11_to_final_merged_0_rd11.push(fused_level_0_fused_level_0_update_0_write11);
}

inline void fused_level_0_fused_level_0_update_0_write12_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write12, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write12_to_final_merged_0_rd12.push(fused_level_0_fused_level_0_update_0_write12);
}

inline void fused_level_0_fused_level_0_update_0_write13_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write13, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write13_to_final_merged_0_rd13.push(fused_level_0_fused_level_0_update_0_write13);
}

inline void fused_level_0_fused_level_0_update_0_write14_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write14, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write14_to_final_merged_0_rd14.push(fused_level_0_fused_level_0_update_0_write14);
}

inline void fused_level_0_fused_level_0_update_0_write15_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write15, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write15_to_final_merged_0_rd15.push(fused_level_0_fused_level_0_update_0_write15);
}

inline void fused_level_0_fused_level_0_update_0_write2_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write2, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write2_to_final_merged_0_rd2.push(fused_level_0_fused_level_0_update_0_write2);
}

inline void fused_level_0_fused_level_0_update_0_write3_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write3, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write3_to_final_merged_0_rd3.push(fused_level_0_fused_level_0_update_0_write3);
}

inline void fused_level_0_fused_level_0_update_0_write4_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write4, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write4_to_final_merged_0_rd4.push(fused_level_0_fused_level_0_update_0_write4);
}

inline void fused_level_0_fused_level_0_update_0_write5_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write5, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write5_to_final_merged_0_rd5.push(fused_level_0_fused_level_0_update_0_write5);
}

inline void fused_level_0_fused_level_0_update_0_write6_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write6, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write6_to_final_merged_0_rd6.push(fused_level_0_fused_level_0_update_0_write6);
}

inline void fused_level_0_fused_level_0_update_0_write7_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write7, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write7_to_final_merged_0_rd7.push(fused_level_0_fused_level_0_update_0_write7);
}

inline void fused_level_0_fused_level_0_update_0_write8_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write8, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write8_to_final_merged_0_rd8.push(fused_level_0_fused_level_0_update_0_write8);
}

inline void fused_level_0_fused_level_0_update_0_write9_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write9, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write9_to_final_merged_0_rd9.push(fused_level_0_fused_level_0_update_0_write9);
}

inline hw_uint<16> final_merged_0_rd0_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd0 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write0 = fused_level_0.fused_level_0_fused_level_0_update_0_write0_to_final_merged_0_rd0.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_0_rd1_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd1 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[1 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write1 = fused_level_0.fused_level_0_fused_level_0_update_0_write1_to_final_merged_0_rd1.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_0_rd10_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd10 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[10 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write10 = fused_level_0.fused_level_0_fused_level_0_update_0_write10_to_final_merged_0_rd10.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write10;
  return 0;
}

inline hw_uint<16> final_merged_0_rd11_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd11 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[11 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write11 = fused_level_0.fused_level_0_fused_level_0_update_0_write11_to_final_merged_0_rd11.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write11;
  return 0;
}

inline hw_uint<16> final_merged_0_rd12_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd12 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[12 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write12 = fused_level_0.fused_level_0_fused_level_0_update_0_write12_to_final_merged_0_rd12.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write12;
  return 0;
}

inline hw_uint<16> final_merged_0_rd13_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd13 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[13 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write13 = fused_level_0.fused_level_0_fused_level_0_update_0_write13_to_final_merged_0_rd13.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write13;
  return 0;
}

inline hw_uint<16> final_merged_0_rd14_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd14 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[14 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write14 = fused_level_0.fused_level_0_fused_level_0_update_0_write14_to_final_merged_0_rd14.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write14;
  return 0;
}

inline hw_uint<16> final_merged_0_rd15_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd15 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[15 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write15 = fused_level_0.fused_level_0_fused_level_0_update_0_write15_to_final_merged_0_rd15.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write15;
  return 0;
}

inline hw_uint<16> final_merged_0_rd2_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd2 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[2 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write2 = fused_level_0.fused_level_0_fused_level_0_update_0_write2_to_final_merged_0_rd2.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write2;
  return 0;
}

inline hw_uint<16> final_merged_0_rd3_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd3 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[3 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write3 = fused_level_0.fused_level_0_fused_level_0_update_0_write3_to_final_merged_0_rd3.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write3;
  return 0;
}

inline hw_uint<16> final_merged_0_rd4_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd4 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[4 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write4 = fused_level_0.fused_level_0_fused_level_0_update_0_write4_to_final_merged_0_rd4.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write4;
  return 0;
}

inline hw_uint<16> final_merged_0_rd5_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd5 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[5 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write5 = fused_level_0.fused_level_0_fused_level_0_update_0_write5_to_final_merged_0_rd5.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write5;
  return 0;
}

inline hw_uint<16> final_merged_0_rd6_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd6 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[6 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write6 = fused_level_0.fused_level_0_fused_level_0_update_0_write6_to_final_merged_0_rd6.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write6;
  return 0;
}

inline hw_uint<16> final_merged_0_rd7_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd7 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[7 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write7 = fused_level_0.fused_level_0_fused_level_0_update_0_write7_to_final_merged_0_rd7.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write7;
  return 0;
}

inline hw_uint<16> final_merged_0_rd8_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd8 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[8 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write8 = fused_level_0.fused_level_0_fused_level_0_update_0_write8_to_final_merged_0_rd8.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write8;
  return 0;
}

inline hw_uint<16> final_merged_0_rd9_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd9 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[9 + 16d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_write9 = fused_level_0.fused_level_0_fused_level_0_update_0_write9_to_final_merged_0_rd9.peek(/* one reader or all rams */ (-1068 + d1 == 0 && -119 + d0 == 0) ? (1320) : (-119 + d0 == 0 && 1067 - d1 >= 0) ? (1440) : (-118 + d0 == 0 && 1067 - d1 >= 0) ? (1441) : (1067 - d1 >= 0 && 117 - d0 >= 0) ? (1442) : (-1079 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-1068 + d1 == 0 && 118 - d0 >= 0) ? ((1439 - d0)) : (-119 + d0 == 0 && -1069 + d1 >= 0 && 1078 - d1 >= 0) ? ((129480 - 120 * d1)) : (1078 - d1 >= 0 && 118 - d0 >= 0 && -1069 + d1 >= 0) ? (((129599 - d0) - 120 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write9;
  return 0;
}

// # of bundles = 2
// final_merged_0_update_0_read
//	final_merged_0_rd0
//	final_merged_0_rd1
//	final_merged_0_rd2
//	final_merged_0_rd3
//	final_merged_0_rd4
//	final_merged_0_rd5
//	final_merged_0_rd6
//	final_merged_0_rd7
//	final_merged_0_rd8
//	final_merged_0_rd9
//	final_merged_0_rd10
//	final_merged_0_rd11
//	final_merged_0_rd12
//	final_merged_0_rd13
//	final_merged_0_rd14
//	final_merged_0_rd15
inline hw_uint<256> fused_level_0_final_merged_0_update_0_read_bundle_read(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // final_merged_0_rd0
    // final_merged_0_rd1
    // final_merged_0_rd2
    // final_merged_0_rd3
    // final_merged_0_rd4
    // final_merged_0_rd5
    // final_merged_0_rd6
    // final_merged_0_rd7
    // final_merged_0_rd8
    // final_merged_0_rd9
    // final_merged_0_rd10
    // final_merged_0_rd11
    // final_merged_0_rd12
    // final_merged_0_rd13
    // final_merged_0_rd14
    // final_merged_0_rd15

	hw_uint<256> result;
	hw_uint<16> final_merged_0_rd0_res = final_merged_0_rd0_select(fused_level_0, d0, d1, dynamic_address);
	set_at<0, 256>(result, final_merged_0_rd0_res);
	hw_uint<16> final_merged_0_rd1_res = final_merged_0_rd1_select(fused_level_0, d0, d1, dynamic_address);
	set_at<16, 256>(result, final_merged_0_rd1_res);
	hw_uint<16> final_merged_0_rd2_res = final_merged_0_rd2_select(fused_level_0, d0, d1, dynamic_address);
	set_at<32, 256>(result, final_merged_0_rd2_res);
	hw_uint<16> final_merged_0_rd3_res = final_merged_0_rd3_select(fused_level_0, d0, d1, dynamic_address);
	set_at<48, 256>(result, final_merged_0_rd3_res);
	hw_uint<16> final_merged_0_rd4_res = final_merged_0_rd4_select(fused_level_0, d0, d1, dynamic_address);
	set_at<64, 256>(result, final_merged_0_rd4_res);
	hw_uint<16> final_merged_0_rd5_res = final_merged_0_rd5_select(fused_level_0, d0, d1, dynamic_address);
	set_at<80, 256>(result, final_merged_0_rd5_res);
	hw_uint<16> final_merged_0_rd6_res = final_merged_0_rd6_select(fused_level_0, d0, d1, dynamic_address);
	set_at<96, 256>(result, final_merged_0_rd6_res);
	hw_uint<16> final_merged_0_rd7_res = final_merged_0_rd7_select(fused_level_0, d0, d1, dynamic_address);
	set_at<112, 256>(result, final_merged_0_rd7_res);
	hw_uint<16> final_merged_0_rd8_res = final_merged_0_rd8_select(fused_level_0, d0, d1, dynamic_address);
	set_at<128, 256>(result, final_merged_0_rd8_res);
	hw_uint<16> final_merged_0_rd9_res = final_merged_0_rd9_select(fused_level_0, d0, d1, dynamic_address);
	set_at<144, 256>(result, final_merged_0_rd9_res);
	hw_uint<16> final_merged_0_rd10_res = final_merged_0_rd10_select(fused_level_0, d0, d1, dynamic_address);
	set_at<160, 256>(result, final_merged_0_rd10_res);
	hw_uint<16> final_merged_0_rd11_res = final_merged_0_rd11_select(fused_level_0, d0, d1, dynamic_address);
	set_at<176, 256>(result, final_merged_0_rd11_res);
	hw_uint<16> final_merged_0_rd12_res = final_merged_0_rd12_select(fused_level_0, d0, d1, dynamic_address);
	set_at<192, 256>(result, final_merged_0_rd12_res);
	hw_uint<16> final_merged_0_rd13_res = final_merged_0_rd13_select(fused_level_0, d0, d1, dynamic_address);
	set_at<208, 256>(result, final_merged_0_rd13_res);
	hw_uint<16> final_merged_0_rd14_res = final_merged_0_rd14_select(fused_level_0, d0, d1, dynamic_address);
	set_at<224, 256>(result, final_merged_0_rd14_res);
	hw_uint<16> final_merged_0_rd15_res = final_merged_0_rd15_select(fused_level_0, d0, d1, dynamic_address);
	set_at<240, 256>(result, final_merged_0_rd15_res);
	return result;
}

// fused_level_0_update_0_write
//	fused_level_0_fused_level_0_update_0_write0
//	fused_level_0_fused_level_0_update_0_write1
//	fused_level_0_fused_level_0_update_0_write2
//	fused_level_0_fused_level_0_update_0_write3
//	fused_level_0_fused_level_0_update_0_write4
//	fused_level_0_fused_level_0_update_0_write5
//	fused_level_0_fused_level_0_update_0_write6
//	fused_level_0_fused_level_0_update_0_write7
//	fused_level_0_fused_level_0_update_0_write8
//	fused_level_0_fused_level_0_update_0_write9
//	fused_level_0_fused_level_0_update_0_write10
//	fused_level_0_fused_level_0_update_0_write11
//	fused_level_0_fused_level_0_update_0_write12
//	fused_level_0_fused_level_0_update_0_write13
//	fused_level_0_fused_level_0_update_0_write14
//	fused_level_0_fused_level_0_update_0_write15
inline void fused_level_0_fused_level_0_update_0_write_bundle_write(hw_uint<256>& fused_level_0_update_0_write, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> fused_level_0_fused_level_0_update_0_write0_res = fused_level_0_update_0_write.extract<0, 15>();
	fused_level_0_fused_level_0_update_0_write0_write(fused_level_0_fused_level_0_update_0_write0_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write1_res = fused_level_0_update_0_write.extract<16, 31>();
	fused_level_0_fused_level_0_update_0_write1_write(fused_level_0_fused_level_0_update_0_write1_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write2_res = fused_level_0_update_0_write.extract<32, 47>();
	fused_level_0_fused_level_0_update_0_write2_write(fused_level_0_fused_level_0_update_0_write2_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write3_res = fused_level_0_update_0_write.extract<48, 63>();
	fused_level_0_fused_level_0_update_0_write3_write(fused_level_0_fused_level_0_update_0_write3_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write4_res = fused_level_0_update_0_write.extract<64, 79>();
	fused_level_0_fused_level_0_update_0_write4_write(fused_level_0_fused_level_0_update_0_write4_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write5_res = fused_level_0_update_0_write.extract<80, 95>();
	fused_level_0_fused_level_0_update_0_write5_write(fused_level_0_fused_level_0_update_0_write5_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write6_res = fused_level_0_update_0_write.extract<96, 111>();
	fused_level_0_fused_level_0_update_0_write6_write(fused_level_0_fused_level_0_update_0_write6_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write7_res = fused_level_0_update_0_write.extract<112, 127>();
	fused_level_0_fused_level_0_update_0_write7_write(fused_level_0_fused_level_0_update_0_write7_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write8_res = fused_level_0_update_0_write.extract<128, 143>();
	fused_level_0_fused_level_0_update_0_write8_write(fused_level_0_fused_level_0_update_0_write8_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write9_res = fused_level_0_update_0_write.extract<144, 159>();
	fused_level_0_fused_level_0_update_0_write9_write(fused_level_0_fused_level_0_update_0_write9_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write10_res = fused_level_0_update_0_write.extract<160, 175>();
	fused_level_0_fused_level_0_update_0_write10_write(fused_level_0_fused_level_0_update_0_write10_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write11_res = fused_level_0_update_0_write.extract<176, 191>();
	fused_level_0_fused_level_0_update_0_write11_write(fused_level_0_fused_level_0_update_0_write11_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write12_res = fused_level_0_update_0_write.extract<192, 207>();
	fused_level_0_fused_level_0_update_0_write12_write(fused_level_0_fused_level_0_update_0_write12_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write13_res = fused_level_0_update_0_write.extract<208, 223>();
	fused_level_0_fused_level_0_update_0_write13_write(fused_level_0_fused_level_0_update_0_write13_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write14_res = fused_level_0_update_0_write.extract<224, 239>();
	fused_level_0_fused_level_0_update_0_write14_write(fused_level_0_fused_level_0_update_0_write14_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write15_res = fused_level_0_update_0_write.extract<240, 255>();
	fused_level_0_fused_level_0_update_0_write15_write(fused_level_0_fused_level_0_update_0_write15_res, fused_level_0, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct fused_level_1_fused_level_1_update_0_write0_to_final_merged_1_rd0_cache {
	// RAM Box: {[0, 952], [0, 539]}
	// Capacity: 482
	// # of read delays: 482
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
	fifo<hw_uint<16>, 482> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(481 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_fused_level_1_update_0_write1_to_final_merged_1_rd1_cache {
	// RAM Box: {[1, 953], [0, 539]}
	// Capacity: 482
	// # of read delays: 482
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
	fifo<hw_uint<16>, 482> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(481 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_fused_level_1_update_0_write2_to_final_merged_1_rd2_cache {
	// RAM Box: {[2, 954], [0, 539]}
	// Capacity: 482
	// # of read delays: 482
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
	fifo<hw_uint<16>, 482> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(481 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_fused_level_1_update_0_write3_to_final_merged_1_rd3_cache {
	// RAM Box: {[3, 955], [0, 539]}
	// Capacity: 482
	// # of read delays: 482
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
	fifo<hw_uint<16>, 482> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(481 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_fused_level_1_update_0_write4_to_final_merged_1_rd4_cache {
	// RAM Box: {[4, 956], [0, 539]}
	// Capacity: 482
	// # of read delays: 482
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
	fifo<hw_uint<16>, 482> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(481 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_fused_level_1_update_0_write5_to_final_merged_1_rd5_cache {
	// RAM Box: {[5, 957], [0, 539]}
	// Capacity: 482
	// # of read delays: 482
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
	fifo<hw_uint<16>, 482> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(481 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_fused_level_1_update_0_write6_to_final_merged_1_rd6_cache {
	// RAM Box: {[6, 958], [0, 539]}
	// Capacity: 482
	// # of read delays: 482
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
	fifo<hw_uint<16>, 482> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(481 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_fused_level_1_update_0_write7_to_final_merged_1_rd7_cache {
	// RAM Box: {[7, 959], [0, 539]}
	// Capacity: 482
	// # of read delays: 482
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
	fifo<hw_uint<16>, 482> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(481 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_cache {
  // # of banks: 8
  fused_level_1_fused_level_1_update_0_write0_to_final_merged_1_rd0_cache fused_level_1_fused_level_1_update_0_write0_to_final_merged_1_rd0;
  fused_level_1_fused_level_1_update_0_write1_to_final_merged_1_rd1_cache fused_level_1_fused_level_1_update_0_write1_to_final_merged_1_rd1;
  fused_level_1_fused_level_1_update_0_write2_to_final_merged_1_rd2_cache fused_level_1_fused_level_1_update_0_write2_to_final_merged_1_rd2;
  fused_level_1_fused_level_1_update_0_write3_to_final_merged_1_rd3_cache fused_level_1_fused_level_1_update_0_write3_to_final_merged_1_rd3;
  fused_level_1_fused_level_1_update_0_write4_to_final_merged_1_rd4_cache fused_level_1_fused_level_1_update_0_write4_to_final_merged_1_rd4;
  fused_level_1_fused_level_1_update_0_write5_to_final_merged_1_rd5_cache fused_level_1_fused_level_1_update_0_write5_to_final_merged_1_rd5;
  fused_level_1_fused_level_1_update_0_write6_to_final_merged_1_rd6_cache fused_level_1_fused_level_1_update_0_write6_to_final_merged_1_rd6;
  fused_level_1_fused_level_1_update_0_write7_to_final_merged_1_rd7_cache fused_level_1_fused_level_1_update_0_write7_to_final_merged_1_rd7;
};



inline void fused_level_1_fused_level_1_update_0_write0_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write0, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write0_to_final_merged_1_rd0.push(fused_level_1_fused_level_1_update_0_write0);
}

inline void fused_level_1_fused_level_1_update_0_write1_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write1, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write1_to_final_merged_1_rd1.push(fused_level_1_fused_level_1_update_0_write1);
}

inline void fused_level_1_fused_level_1_update_0_write2_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write2, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write2_to_final_merged_1_rd2.push(fused_level_1_fused_level_1_update_0_write2);
}

inline void fused_level_1_fused_level_1_update_0_write3_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write3, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write3_to_final_merged_1_rd3.push(fused_level_1_fused_level_1_update_0_write3);
}

inline void fused_level_1_fused_level_1_update_0_write4_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write4, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write4_to_final_merged_1_rd4.push(fused_level_1_fused_level_1_update_0_write4);
}

inline void fused_level_1_fused_level_1_update_0_write5_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write5, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write5_to_final_merged_1_rd5.push(fused_level_1_fused_level_1_update_0_write5);
}

inline void fused_level_1_fused_level_1_update_0_write6_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write6, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write6_to_final_merged_1_rd6.push(fused_level_1_fused_level_1_update_0_write6);
}

inline void fused_level_1_fused_level_1_update_0_write7_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write7, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write7_to_final_merged_1_rd7.push(fused_level_1_fused_level_1_update_0_write7);
}

inline hw_uint<16> final_merged_1_rd0_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd0 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_fused_level_1_fused_level_1_update_0_write0 = fused_level_1.fused_level_1_fused_level_1_update_0_write0_to_final_merged_1_rd0.peek(/* one reader or all rams */ (-536 + d1 == 0 && -119 + d0 == 0) ? (360) : (535 - d1 >= 0 && 118 - d0 >= 0) ? (481) : (-539 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-119 + d0 == 0 && 535 - d1 >= 0) ? (480) : (-536 + d1 == 0 && 118 - d0 >= 0) ? ((479 - d0)) : (-119 + d0 == 0 && -537 + d1 >= 0 && 538 - d1 >= 0) ? ((64680 - 120 * d1)) : (538 - d1 >= 0 && 118 - d0 >= 0 && -537 + d1 >= 0) ? (((64799 - d0) - 120 * d1)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_1_rd1_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd1 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[1 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_fused_level_1_fused_level_1_update_0_write1 = fused_level_1.fused_level_1_fused_level_1_update_0_write1_to_final_merged_1_rd1.peek(/* one reader or all rams */ (-536 + d1 == 0 && -119 + d0 == 0) ? (360) : (535 - d1 >= 0 && 118 - d0 >= 0) ? (481) : (-539 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-119 + d0 == 0 && 535 - d1 >= 0) ? (480) : (-536 + d1 == 0 && 118 - d0 >= 0) ? ((479 - d0)) : (-119 + d0 == 0 && -537 + d1 >= 0 && 538 - d1 >= 0) ? ((64680 - 120 * d1)) : (538 - d1 >= 0 && 118 - d0 >= 0 && -537 + d1 >= 0) ? (((64799 - d0) - 120 * d1)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_1_rd2_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd2 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[2 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_fused_level_1_fused_level_1_update_0_write2 = fused_level_1.fused_level_1_fused_level_1_update_0_write2_to_final_merged_1_rd2.peek(/* one reader or all rams */ (-536 + d1 == 0 && -119 + d0 == 0) ? (360) : (535 - d1 >= 0 && 118 - d0 >= 0) ? (481) : (-539 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-119 + d0 == 0 && 535 - d1 >= 0) ? (480) : (-536 + d1 == 0 && 118 - d0 >= 0) ? ((479 - d0)) : (-119 + d0 == 0 && -537 + d1 >= 0 && 538 - d1 >= 0) ? ((64680 - 120 * d1)) : (538 - d1 >= 0 && 118 - d0 >= 0 && -537 + d1 >= 0) ? (((64799 - d0) - 120 * d1)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write2;
  return 0;
}

inline hw_uint<16> final_merged_1_rd3_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd3 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[3 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_fused_level_1_fused_level_1_update_0_write3 = fused_level_1.fused_level_1_fused_level_1_update_0_write3_to_final_merged_1_rd3.peek(/* one reader or all rams */ (-536 + d1 == 0 && -119 + d0 == 0) ? (360) : (535 - d1 >= 0 && 118 - d0 >= 0) ? (481) : (-539 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-119 + d0 == 0 && 535 - d1 >= 0) ? (480) : (-536 + d1 == 0 && 118 - d0 >= 0) ? ((479 - d0)) : (-119 + d0 == 0 && -537 + d1 >= 0 && 538 - d1 >= 0) ? ((64680 - 120 * d1)) : (538 - d1 >= 0 && 118 - d0 >= 0 && -537 + d1 >= 0) ? (((64799 - d0) - 120 * d1)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write3;
  return 0;
}

inline hw_uint<16> final_merged_1_rd4_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd4 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[4 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_fused_level_1_fused_level_1_update_0_write4 = fused_level_1.fused_level_1_fused_level_1_update_0_write4_to_final_merged_1_rd4.peek(/* one reader or all rams */ (-536 + d1 == 0 && -119 + d0 == 0) ? (360) : (535 - d1 >= 0 && 118 - d0 >= 0) ? (481) : (-539 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-119 + d0 == 0 && 535 - d1 >= 0) ? (480) : (-536 + d1 == 0 && 118 - d0 >= 0) ? ((479 - d0)) : (-119 + d0 == 0 && -537 + d1 >= 0 && 538 - d1 >= 0) ? ((64680 - 120 * d1)) : (538 - d1 >= 0 && 118 - d0 >= 0 && -537 + d1 >= 0) ? (((64799 - d0) - 120 * d1)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write4;
  return 0;
}

inline hw_uint<16> final_merged_1_rd5_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd5 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[5 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_fused_level_1_fused_level_1_update_0_write5 = fused_level_1.fused_level_1_fused_level_1_update_0_write5_to_final_merged_1_rd5.peek(/* one reader or all rams */ (-536 + d1 == 0 && -119 + d0 == 0) ? (360) : (535 - d1 >= 0 && 118 - d0 >= 0) ? (481) : (-539 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-119 + d0 == 0 && 535 - d1 >= 0) ? (480) : (-536 + d1 == 0 && 118 - d0 >= 0) ? ((479 - d0)) : (-119 + d0 == 0 && -537 + d1 >= 0 && 538 - d1 >= 0) ? ((64680 - 120 * d1)) : (538 - d1 >= 0 && 118 - d0 >= 0 && -537 + d1 >= 0) ? (((64799 - d0) - 120 * d1)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write5;
  return 0;
}

inline hw_uint<16> final_merged_1_rd6_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd6 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[6 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_fused_level_1_fused_level_1_update_0_write6 = fused_level_1.fused_level_1_fused_level_1_update_0_write6_to_final_merged_1_rd6.peek(/* one reader or all rams */ (-536 + d1 == 0 && -119 + d0 == 0) ? (360) : (535 - d1 >= 0 && 118 - d0 >= 0) ? (481) : (-539 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-119 + d0 == 0 && 535 - d1 >= 0) ? (480) : (-536 + d1 == 0 && 118 - d0 >= 0) ? ((479 - d0)) : (-119 + d0 == 0 && -537 + d1 >= 0 && 538 - d1 >= 0) ? ((64680 - 120 * d1)) : (538 - d1 >= 0 && 118 - d0 >= 0 && -537 + d1 >= 0) ? (((64799 - d0) - 120 * d1)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write6;
  return 0;
}

inline hw_uint<16> final_merged_1_rd7_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd7 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[7 + 8d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
  auto value_fused_level_1_fused_level_1_update_0_write7 = fused_level_1.fused_level_1_fused_level_1_update_0_write7_to_final_merged_1_rd7.peek(/* one reader or all rams */ (-536 + d1 == 0 && -119 + d0 == 0) ? (360) : (535 - d1 >= 0 && 118 - d0 >= 0) ? (481) : (-539 + d1 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : (-119 + d0 == 0 && 535 - d1 >= 0) ? (480) : (-536 + d1 == 0 && 118 - d0 >= 0) ? ((479 - d0)) : (-119 + d0 == 0 && -537 + d1 >= 0 && 538 - d1 >= 0) ? ((64680 - 120 * d1)) : (538 - d1 >= 0 && 118 - d0 >= 0 && -537 + d1 >= 0) ? (((64799 - d0) - 120 * d1)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write7;
  return 0;
}

// # of bundles = 2
// final_merged_1_update_0_read
//	final_merged_1_rd0
//	final_merged_1_rd1
//	final_merged_1_rd2
//	final_merged_1_rd3
//	final_merged_1_rd4
//	final_merged_1_rd5
//	final_merged_1_rd6
//	final_merged_1_rd7
inline hw_uint<128> fused_level_1_final_merged_1_update_0_read_bundle_read(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // final_merged_1_rd0
    // final_merged_1_rd1
    // final_merged_1_rd2
    // final_merged_1_rd3
    // final_merged_1_rd4
    // final_merged_1_rd5
    // final_merged_1_rd6
    // final_merged_1_rd7

	hw_uint<128> result;
	hw_uint<16> final_merged_1_rd0_res = final_merged_1_rd0_select(fused_level_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, final_merged_1_rd0_res);
	hw_uint<16> final_merged_1_rd1_res = final_merged_1_rd1_select(fused_level_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, final_merged_1_rd1_res);
	hw_uint<16> final_merged_1_rd2_res = final_merged_1_rd2_select(fused_level_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, final_merged_1_rd2_res);
	hw_uint<16> final_merged_1_rd3_res = final_merged_1_rd3_select(fused_level_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, final_merged_1_rd3_res);
	hw_uint<16> final_merged_1_rd4_res = final_merged_1_rd4_select(fused_level_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, final_merged_1_rd4_res);
	hw_uint<16> final_merged_1_rd5_res = final_merged_1_rd5_select(fused_level_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, final_merged_1_rd5_res);
	hw_uint<16> final_merged_1_rd6_res = final_merged_1_rd6_select(fused_level_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, final_merged_1_rd6_res);
	hw_uint<16> final_merged_1_rd7_res = final_merged_1_rd7_select(fused_level_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, final_merged_1_rd7_res);
	return result;
}

// fused_level_1_update_0_write
//	fused_level_1_fused_level_1_update_0_write0
//	fused_level_1_fused_level_1_update_0_write1
//	fused_level_1_fused_level_1_update_0_write2
//	fused_level_1_fused_level_1_update_0_write3
//	fused_level_1_fused_level_1_update_0_write4
//	fused_level_1_fused_level_1_update_0_write5
//	fused_level_1_fused_level_1_update_0_write6
//	fused_level_1_fused_level_1_update_0_write7
inline void fused_level_1_fused_level_1_update_0_write_bundle_write(hw_uint<128>& fused_level_1_update_0_write, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> fused_level_1_fused_level_1_update_0_write0_res = fused_level_1_update_0_write.extract<0, 15>();
	fused_level_1_fused_level_1_update_0_write0_write(fused_level_1_fused_level_1_update_0_write0_res, fused_level_1, d0, d1, dynamic_address);
	hw_uint<16> fused_level_1_fused_level_1_update_0_write1_res = fused_level_1_update_0_write.extract<16, 31>();
	fused_level_1_fused_level_1_update_0_write1_write(fused_level_1_fused_level_1_update_0_write1_res, fused_level_1, d0, d1, dynamic_address);
	hw_uint<16> fused_level_1_fused_level_1_update_0_write2_res = fused_level_1_update_0_write.extract<32, 47>();
	fused_level_1_fused_level_1_update_0_write2_write(fused_level_1_fused_level_1_update_0_write2_res, fused_level_1, d0, d1, dynamic_address);
	hw_uint<16> fused_level_1_fused_level_1_update_0_write3_res = fused_level_1_update_0_write.extract<48, 63>();
	fused_level_1_fused_level_1_update_0_write3_write(fused_level_1_fused_level_1_update_0_write3_res, fused_level_1, d0, d1, dynamic_address);
	hw_uint<16> fused_level_1_fused_level_1_update_0_write4_res = fused_level_1_update_0_write.extract<64, 79>();
	fused_level_1_fused_level_1_update_0_write4_write(fused_level_1_fused_level_1_update_0_write4_res, fused_level_1, d0, d1, dynamic_address);
	hw_uint<16> fused_level_1_fused_level_1_update_0_write5_res = fused_level_1_update_0_write.extract<80, 95>();
	fused_level_1_fused_level_1_update_0_write5_write(fused_level_1_fused_level_1_update_0_write5_res, fused_level_1, d0, d1, dynamic_address);
	hw_uint<16> fused_level_1_fused_level_1_update_0_write6_res = fused_level_1_update_0_write.extract<96, 111>();
	fused_level_1_fused_level_1_update_0_write6_write(fused_level_1_fused_level_1_update_0_write6_res, fused_level_1, d0, d1, dynamic_address);
	hw_uint<16> fused_level_1_fused_level_1_update_0_write7_res = fused_level_1_update_0_write.extract<112, 127>();
	fused_level_1_fused_level_1_update_0_write7_write(fused_level_1_fused_level_1_update_0_write7_res, fused_level_1, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct fused_level_2_fused_level_2_update_0_write0_to_final_merged_2_rd0_cache {
	// RAM Box: {[0, 476], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_2_fused_level_2_update_0_write1_to_final_merged_2_rd1_cache {
	// RAM Box: {[1, 477], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_2_fused_level_2_update_0_write2_to_final_merged_2_rd2_cache {
	// RAM Box: {[2, 478], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_2_fused_level_2_update_0_write3_to_final_merged_2_rd3_cache {
	// RAM Box: {[3, 479], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_2_cache {
  // # of banks: 4
  fused_level_2_fused_level_2_update_0_write0_to_final_merged_2_rd0_cache fused_level_2_fused_level_2_update_0_write0_to_final_merged_2_rd0;
  fused_level_2_fused_level_2_update_0_write1_to_final_merged_2_rd1_cache fused_level_2_fused_level_2_update_0_write1_to_final_merged_2_rd1;
  fused_level_2_fused_level_2_update_0_write2_to_final_merged_2_rd2_cache fused_level_2_fused_level_2_update_0_write2_to_final_merged_2_rd2;
  fused_level_2_fused_level_2_update_0_write3_to_final_merged_2_rd3_cache fused_level_2_fused_level_2_update_0_write3_to_final_merged_2_rd3;
};



inline void fused_level_2_fused_level_2_update_0_write0_write(hw_uint<16>& fused_level_2_fused_level_2_update_0_write0, fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
  fused_level_2.fused_level_2_fused_level_2_update_0_write0_to_final_merged_2_rd0.push(fused_level_2_fused_level_2_update_0_write0);
}

inline void fused_level_2_fused_level_2_update_0_write1_write(hw_uint<16>& fused_level_2_fused_level_2_update_0_write1, fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
  fused_level_2.fused_level_2_fused_level_2_update_0_write1_to_final_merged_2_rd1.push(fused_level_2_fused_level_2_update_0_write1);
}

inline void fused_level_2_fused_level_2_update_0_write2_write(hw_uint<16>& fused_level_2_fused_level_2_update_0_write2, fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
  fused_level_2.fused_level_2_fused_level_2_update_0_write2_to_final_merged_2_rd2.push(fused_level_2_fused_level_2_update_0_write2);
}

inline void fused_level_2_fused_level_2_update_0_write3_write(hw_uint<16>& fused_level_2_fused_level_2_update_0_write3, fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
  fused_level_2.fused_level_2_fused_level_2_update_0_write3_to_final_merged_2_rd3.push(fused_level_2_fused_level_2_update_0_write3);
}

inline hw_uint<16> final_merged_2_rd0_select(fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd0 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_2[4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_fused_level_2_fused_level_2_update_0_write0 = fused_level_2.fused_level_2_fused_level_2_update_0_write0_to_final_merged_2_rd0.peek(/* one reader or all rams */ 0);
  return value_fused_level_2_fused_level_2_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_2_rd1_select(fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd1 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_2[1 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_fused_level_2_fused_level_2_update_0_write1 = fused_level_2.fused_level_2_fused_level_2_update_0_write1_to_final_merged_2_rd1.peek(/* one reader or all rams */ 0);
  return value_fused_level_2_fused_level_2_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_2_rd2_select(fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd2 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_2[2 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_fused_level_2_fused_level_2_update_0_write2 = fused_level_2.fused_level_2_fused_level_2_update_0_write2_to_final_merged_2_rd2.peek(/* one reader or all rams */ 0);
  return value_fused_level_2_fused_level_2_update_0_write2;
  return 0;
}

inline hw_uint<16> final_merged_2_rd3_select(fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd3 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_2[3 + 4d0, d1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  auto value_fused_level_2_fused_level_2_update_0_write3 = fused_level_2.fused_level_2_fused_level_2_update_0_write3_to_final_merged_2_rd3.peek(/* one reader or all rams */ 0);
  return value_fused_level_2_fused_level_2_update_0_write3;
  return 0;
}

// # of bundles = 2
// final_merged_2_update_0_read
//	final_merged_2_rd0
//	final_merged_2_rd1
//	final_merged_2_rd2
//	final_merged_2_rd3
inline hw_uint<64> fused_level_2_final_merged_2_update_0_read_bundle_read(fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // final_merged_2_rd0
    // final_merged_2_rd1
    // final_merged_2_rd2
    // final_merged_2_rd3

	hw_uint<64> result;
	hw_uint<16> final_merged_2_rd0_res = final_merged_2_rd0_select(fused_level_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, final_merged_2_rd0_res);
	hw_uint<16> final_merged_2_rd1_res = final_merged_2_rd1_select(fused_level_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, final_merged_2_rd1_res);
	hw_uint<16> final_merged_2_rd2_res = final_merged_2_rd2_select(fused_level_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, final_merged_2_rd2_res);
	hw_uint<16> final_merged_2_rd3_res = final_merged_2_rd3_select(fused_level_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, final_merged_2_rd3_res);
	return result;
}

// fused_level_2_update_0_write
//	fused_level_2_fused_level_2_update_0_write0
//	fused_level_2_fused_level_2_update_0_write1
//	fused_level_2_fused_level_2_update_0_write2
//	fused_level_2_fused_level_2_update_0_write3
inline void fused_level_2_fused_level_2_update_0_write_bundle_write(hw_uint<64>& fused_level_2_update_0_write, fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> fused_level_2_fused_level_2_update_0_write0_res = fused_level_2_update_0_write.extract<0, 15>();
	fused_level_2_fused_level_2_update_0_write0_write(fused_level_2_fused_level_2_update_0_write0_res, fused_level_2, d0, d1, dynamic_address);
	hw_uint<16> fused_level_2_fused_level_2_update_0_write1_res = fused_level_2_update_0_write.extract<16, 31>();
	fused_level_2_fused_level_2_update_0_write1_write(fused_level_2_fused_level_2_update_0_write1_res, fused_level_2, d0, d1, dynamic_address);
	hw_uint<16> fused_level_2_fused_level_2_update_0_write2_res = fused_level_2_update_0_write.extract<32, 47>();
	fused_level_2_fused_level_2_update_0_write2_write(fused_level_2_fused_level_2_update_0_write2_res, fused_level_2, d0, d1, dynamic_address);
	hw_uint<16> fused_level_2_fused_level_2_update_0_write3_res = fused_level_2_update_0_write.extract<48, 63>();
	fused_level_2_fused_level_2_update_0_write3_write(fused_level_2_fused_level_2_update_0_write3_res, fused_level_2, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd0_cache {
	// RAM Box: {[0, 238], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd1_cache {
	// RAM Box: {[0, 238], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_3_fused_level_3_update_0_write1_to_final_merged_2_rd2_cache {
	// RAM Box: {[1, 239], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_3_fused_level_3_update_0_write1_to_final_merged_2_rd3_cache {
	// RAM Box: {[1, 239], [0, 134]}
	// Capacity: 120
	// # of read delays: 120
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119
	fifo<hw_uint<16>, 120> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(119 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_3_cache {
  // # of banks: 4
  fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd0_cache fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd0;
  fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd1_cache fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd1;
  fused_level_3_fused_level_3_update_0_write1_to_final_merged_2_rd2_cache fused_level_3_fused_level_3_update_0_write1_to_final_merged_2_rd2;
  fused_level_3_fused_level_3_update_0_write1_to_final_merged_2_rd3_cache fused_level_3_fused_level_3_update_0_write1_to_final_merged_2_rd3;
};



inline void fused_level_3_fused_level_3_update_0_write0_write(hw_uint<16>& fused_level_3_fused_level_3_update_0_write0, fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
  fused_level_3.fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd0.push(fused_level_3_fused_level_3_update_0_write0);
  fused_level_3.fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd1.push(fused_level_3_fused_level_3_update_0_write0);
}

inline void fused_level_3_fused_level_3_update_0_write1_write(hw_uint<16>& fused_level_3_fused_level_3_update_0_write1, fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
  fused_level_3.fused_level_3_fused_level_3_update_0_write1_to_final_merged_2_rd2.push(fused_level_3_fused_level_3_update_0_write1);
  fused_level_3.fused_level_3_fused_level_3_update_0_write1_to_final_merged_2_rd3.push(fused_level_3_fused_level_3_update_0_write1);
}

inline hw_uint<16> final_merged_2_rd0_select(fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd0 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_3[2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_fused_level_3_fused_level_3_update_0_write0 = fused_level_3.fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_fused_level_3_fused_level_3_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_2_rd1_select(fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd1 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_3[2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_fused_level_3_fused_level_3_update_0_write0 = fused_level_3.fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_fused_level_3_fused_level_3_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_2_rd2_select(fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd2 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_3[1 + 2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_fused_level_3_fused_level_3_update_0_write1 = fused_level_3.fused_level_3_fused_level_3_update_0_write1_to_final_merged_2_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_fused_level_3_fused_level_3_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_2_rd3_select(fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd3 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_3[1 + 2d0, o1] : 0 <= d0 <= 119 and 0 <= d1 <= 269 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
  // Write schedule: { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
  auto value_fused_level_3_fused_level_3_update_0_write1 = fused_level_3.fused_level_3_fused_level_3_update_0_write1_to_final_merged_2_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 118 - d0 >= 0) ? ((119 - d0)) : 0);
  return value_fused_level_3_fused_level_3_update_0_write1;
  return 0;
}

// # of bundles = 2
// final_merged_2_update_0_read
//	final_merged_2_rd0
//	final_merged_2_rd1
//	final_merged_2_rd2
//	final_merged_2_rd3
inline hw_uint<64> fused_level_3_final_merged_2_update_0_read_bundle_read(fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // final_merged_2_rd0
    // final_merged_2_rd1
    // final_merged_2_rd2
    // final_merged_2_rd3

	hw_uint<64> result;
	hw_uint<16> final_merged_2_rd0_res = final_merged_2_rd0_select(fused_level_3, d0, d1, dynamic_address);
	set_at<0, 64>(result, final_merged_2_rd0_res);
	hw_uint<16> final_merged_2_rd1_res = final_merged_2_rd1_select(fused_level_3, d0, d1, dynamic_address);
	set_at<16, 64>(result, final_merged_2_rd1_res);
	hw_uint<16> final_merged_2_rd2_res = final_merged_2_rd2_select(fused_level_3, d0, d1, dynamic_address);
	set_at<32, 64>(result, final_merged_2_rd2_res);
	hw_uint<16> final_merged_2_rd3_res = final_merged_2_rd3_select(fused_level_3, d0, d1, dynamic_address);
	set_at<48, 64>(result, final_merged_2_rd3_res);
	return result;
}

// fused_level_3_update_0_write
//	fused_level_3_fused_level_3_update_0_write0
//	fused_level_3_fused_level_3_update_0_write1
inline void fused_level_3_fused_level_3_update_0_write_bundle_write(hw_uint<32>& fused_level_3_update_0_write, fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> fused_level_3_fused_level_3_update_0_write0_res = fused_level_3_update_0_write.extract<0, 15>();
	fused_level_3_fused_level_3_update_0_write0_write(fused_level_3_fused_level_3_update_0_write0_res, fused_level_3, d0, d1, dynamic_address);
	hw_uint<16> fused_level_3_fused_level_3_update_0_write1_res = fused_level_3_update_0_write.extract<16, 31>();
	fused_level_3_fused_level_3_update_0_write1_write(fused_level_3_fused_level_3_update_0_write1_res, fused_level_3, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct in_in_update_0_write0_merged_banks_2_cache {
	// RAM Box: {[0, 1952], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write1_merged_banks_2_cache {
	// RAM Box: {[1, 1953], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write10_merged_banks_2_cache {
	// RAM Box: {[10, 1962], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write11_merged_banks_2_cache {
	// RAM Box: {[11, 1963], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write12_merged_banks_2_cache {
	// RAM Box: {[12, 1964], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write13_merged_banks_2_cache {
	// RAM Box: {[13, 1965], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write14_merged_banks_2_cache {
	// RAM Box: {[14, 1966], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write15_merged_banks_2_cache {
	// RAM Box: {[15, 1967], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write2_merged_banks_2_cache {
	// RAM Box: {[2, 1954], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write3_merged_banks_2_cache {
	// RAM Box: {[3, 1955], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write4_merged_banks_2_cache {
	// RAM Box: {[4, 1956], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write5_merged_banks_2_cache {
	// RAM Box: {[5, 1957], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write6_merged_banks_2_cache {
	// RAM Box: {[6, 1958], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write7_merged_banks_2_cache {
	// RAM Box: {[7, 1959], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write8_merged_banks_2_cache {
	// RAM Box: {[8, 1960], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write9_merged_banks_2_cache {
	// RAM Box: {[9, 1961], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_cache {
  // # of banks: 16
  in_in_update_0_write0_merged_banks_2_cache in_in_update_0_write0_merged_banks_2;
  in_in_update_0_write1_merged_banks_2_cache in_in_update_0_write1_merged_banks_2;
  in_in_update_0_write10_merged_banks_2_cache in_in_update_0_write10_merged_banks_2;
  in_in_update_0_write11_merged_banks_2_cache in_in_update_0_write11_merged_banks_2;
  in_in_update_0_write12_merged_banks_2_cache in_in_update_0_write12_merged_banks_2;
  in_in_update_0_write13_merged_banks_2_cache in_in_update_0_write13_merged_banks_2;
  in_in_update_0_write14_merged_banks_2_cache in_in_update_0_write14_merged_banks_2;
  in_in_update_0_write15_merged_banks_2_cache in_in_update_0_write15_merged_banks_2;
  in_in_update_0_write2_merged_banks_2_cache in_in_update_0_write2_merged_banks_2;
  in_in_update_0_write3_merged_banks_2_cache in_in_update_0_write3_merged_banks_2;
  in_in_update_0_write4_merged_banks_2_cache in_in_update_0_write4_merged_banks_2;
  in_in_update_0_write5_merged_banks_2_cache in_in_update_0_write5_merged_banks_2;
  in_in_update_0_write6_merged_banks_2_cache in_in_update_0_write6_merged_banks_2;
  in_in_update_0_write7_merged_banks_2_cache in_in_update_0_write7_merged_banks_2;
  in_in_update_0_write8_merged_banks_2_cache in_in_update_0_write8_merged_banks_2;
  in_in_update_0_write9_merged_banks_2_cache in_in_update_0_write9_merged_banks_2;
};



inline void in_in_update_0_write0_write(hw_uint<16>& in_in_update_0_write0, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write0_merged_banks_2.push(in_in_update_0_write0);
}

inline void in_in_update_0_write1_write(hw_uint<16>& in_in_update_0_write1, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write1_merged_banks_2.push(in_in_update_0_write1);
}

inline void in_in_update_0_write10_write(hw_uint<16>& in_in_update_0_write10, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write10_merged_banks_2.push(in_in_update_0_write10);
}

inline void in_in_update_0_write11_write(hw_uint<16>& in_in_update_0_write11, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write11_merged_banks_2.push(in_in_update_0_write11);
}

inline void in_in_update_0_write12_write(hw_uint<16>& in_in_update_0_write12, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write12_merged_banks_2.push(in_in_update_0_write12);
}

inline void in_in_update_0_write13_write(hw_uint<16>& in_in_update_0_write13, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write13_merged_banks_2.push(in_in_update_0_write13);
}

inline void in_in_update_0_write14_write(hw_uint<16>& in_in_update_0_write14, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write14_merged_banks_2.push(in_in_update_0_write14);
}

inline void in_in_update_0_write15_write(hw_uint<16>& in_in_update_0_write15, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write15_merged_banks_2.push(in_in_update_0_write15);
}

inline void in_in_update_0_write2_write(hw_uint<16>& in_in_update_0_write2, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write2_merged_banks_2.push(in_in_update_0_write2);
}

inline void in_in_update_0_write3_write(hw_uint<16>& in_in_update_0_write3, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write3_merged_banks_2.push(in_in_update_0_write3);
}

inline void in_in_update_0_write4_write(hw_uint<16>& in_in_update_0_write4, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write4_merged_banks_2.push(in_in_update_0_write4);
}

inline void in_in_update_0_write5_write(hw_uint<16>& in_in_update_0_write5, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write5_merged_banks_2.push(in_in_update_0_write5);
}

inline void in_in_update_0_write6_write(hw_uint<16>& in_in_update_0_write6, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write6_merged_banks_2.push(in_in_update_0_write6);
}

inline void in_in_update_0_write7_write(hw_uint<16>& in_in_update_0_write7, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write7_merged_banks_2.push(in_in_update_0_write7);
}

inline void in_in_update_0_write8_write(hw_uint<16>& in_in_update_0_write8, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write8_merged_banks_2.push(in_in_update_0_write8);
}

inline void in_in_update_0_write9_write(hw_uint<16>& in_in_update_0_write9, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write9_merged_banks_2.push(in_in_update_0_write9);
}

inline hw_uint<16> bright_rd0_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd0 read pattern: { bright_update_0[d0, d1] -> in[16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write0 = in.in_in_update_0_write0_merged_banks_2.peek_0();
  return value_in_in_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_rd1_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd1 read pattern: { bright_update_0[d0, d1] -> in[1 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write1 = in.in_in_update_0_write1_merged_banks_2.peek_0();
  return value_in_in_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_rd10_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd10 read pattern: { bright_update_0[d0, d1] -> in[10 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write10 = in.in_in_update_0_write10_merged_banks_2.peek_0();
  return value_in_in_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_rd11_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd11 read pattern: { bright_update_0[d0, d1] -> in[11 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write11 = in.in_in_update_0_write11_merged_banks_2.peek_0();
  return value_in_in_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_rd12_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd12 read pattern: { bright_update_0[d0, d1] -> in[12 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write12 = in.in_in_update_0_write12_merged_banks_2.peek_0();
  return value_in_in_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_rd13_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd13 read pattern: { bright_update_0[d0, d1] -> in[13 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write13 = in.in_in_update_0_write13_merged_banks_2.peek_0();
  return value_in_in_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_rd14_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd14 read pattern: { bright_update_0[d0, d1] -> in[14 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write14 = in.in_in_update_0_write14_merged_banks_2.peek_0();
  return value_in_in_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_rd15_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd15 read pattern: { bright_update_0[d0, d1] -> in[15 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write15 = in.in_in_update_0_write15_merged_banks_2.peek_0();
  return value_in_in_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_rd2_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd2 read pattern: { bright_update_0[d0, d1] -> in[2 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write2 = in.in_in_update_0_write2_merged_banks_2.peek_0();
  return value_in_in_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_rd3_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd3 read pattern: { bright_update_0[d0, d1] -> in[3 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write3 = in.in_in_update_0_write3_merged_banks_2.peek_0();
  return value_in_in_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_rd4_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd4 read pattern: { bright_update_0[d0, d1] -> in[4 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write4 = in.in_in_update_0_write4_merged_banks_2.peek_0();
  return value_in_in_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_rd5_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd5 read pattern: { bright_update_0[d0, d1] -> in[5 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write5 = in.in_in_update_0_write5_merged_banks_2.peek_0();
  return value_in_in_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_rd6_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd6 read pattern: { bright_update_0[d0, d1] -> in[6 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write6 = in.in_in_update_0_write6_merged_banks_2.peek_0();
  return value_in_in_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_rd7_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd7 read pattern: { bright_update_0[d0, d1] -> in[7 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write7 = in.in_in_update_0_write7_merged_banks_2.peek_0();
  return value_in_in_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_rd8_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd8 read pattern: { bright_update_0[d0, d1] -> in[8 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write8 = in.in_in_update_0_write8_merged_banks_2.peek_0();
  return value_in_in_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_rd9_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd9 read pattern: { bright_update_0[d0, d1] -> in[9 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write9 = in.in_in_update_0_write9_merged_banks_2.peek_0();
  return value_in_in_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_rd0_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd0 read pattern: { dark_update_0[d0, d1] -> in[16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write0 = in.in_in_update_0_write0_merged_banks_2.peek_0();
  return value_in_in_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_rd1_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd1 read pattern: { dark_update_0[d0, d1] -> in[1 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write1 = in.in_in_update_0_write1_merged_banks_2.peek_0();
  return value_in_in_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_rd10_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd10 read pattern: { dark_update_0[d0, d1] -> in[10 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write10 = in.in_in_update_0_write10_merged_banks_2.peek_0();
  return value_in_in_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_rd11_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd11 read pattern: { dark_update_0[d0, d1] -> in[11 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write11 = in.in_in_update_0_write11_merged_banks_2.peek_0();
  return value_in_in_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_rd12_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd12 read pattern: { dark_update_0[d0, d1] -> in[12 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write12 = in.in_in_update_0_write12_merged_banks_2.peek_0();
  return value_in_in_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_rd13_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd13 read pattern: { dark_update_0[d0, d1] -> in[13 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write13 = in.in_in_update_0_write13_merged_banks_2.peek_0();
  return value_in_in_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_rd14_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd14 read pattern: { dark_update_0[d0, d1] -> in[14 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write14 = in.in_in_update_0_write14_merged_banks_2.peek_0();
  return value_in_in_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_rd15_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd15 read pattern: { dark_update_0[d0, d1] -> in[15 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write15 = in.in_in_update_0_write15_merged_banks_2.peek_0();
  return value_in_in_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_rd2_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd2 read pattern: { dark_update_0[d0, d1] -> in[2 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write2 = in.in_in_update_0_write2_merged_banks_2.peek_0();
  return value_in_in_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_rd3_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd3 read pattern: { dark_update_0[d0, d1] -> in[3 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write3 = in.in_in_update_0_write3_merged_banks_2.peek_0();
  return value_in_in_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_rd4_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd4 read pattern: { dark_update_0[d0, d1] -> in[4 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write4 = in.in_in_update_0_write4_merged_banks_2.peek_0();
  return value_in_in_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_rd5_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd5 read pattern: { dark_update_0[d0, d1] -> in[5 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write5 = in.in_in_update_0_write5_merged_banks_2.peek_0();
  return value_in_in_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_rd6_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd6 read pattern: { dark_update_0[d0, d1] -> in[6 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write6 = in.in_in_update_0_write6_merged_banks_2.peek_0();
  return value_in_in_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_rd7_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd7 read pattern: { dark_update_0[d0, d1] -> in[7 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write7 = in.in_in_update_0_write7_merged_banks_2.peek_0();
  return value_in_in_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_rd8_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd8 read pattern: { dark_update_0[d0, d1] -> in[8 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write8 = in.in_in_update_0_write8_merged_banks_2.peek_0();
  return value_in_in_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_rd9_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd9 read pattern: { dark_update_0[d0, d1] -> in[9 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_in_in_update_0_write9 = in.in_in_update_0_write9_merged_banks_2.peek_0();
  return value_in_in_update_0_write9;
  return 0;
}

// # of bundles = 3
// bright_update_0_read
//	bright_rd0
//	bright_rd1
//	bright_rd2
//	bright_rd3
//	bright_rd4
//	bright_rd5
//	bright_rd6
//	bright_rd7
//	bright_rd8
//	bright_rd9
//	bright_rd10
//	bright_rd11
//	bright_rd12
//	bright_rd13
//	bright_rd14
//	bright_rd15
inline hw_uint<256> in_bright_update_0_read_bundle_read(in_cache& in, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // bright_rd0
    // bright_rd1
    // bright_rd2
    // bright_rd3
    // bright_rd4
    // bright_rd5
    // bright_rd6
    // bright_rd7
    // bright_rd8
    // bright_rd9
    // bright_rd10
    // bright_rd11
    // bright_rd12
    // bright_rd13
    // bright_rd14
    // bright_rd15

	hw_uint<256> result;
	hw_uint<16> bright_rd0_res = bright_rd0_select(in, d0, d1, dynamic_address);
	set_at<0, 256>(result, bright_rd0_res);
	hw_uint<16> bright_rd1_res = bright_rd1_select(in, d0, d1, dynamic_address);
	set_at<16, 256>(result, bright_rd1_res);
	hw_uint<16> bright_rd2_res = bright_rd2_select(in, d0, d1, dynamic_address);
	set_at<32, 256>(result, bright_rd2_res);
	hw_uint<16> bright_rd3_res = bright_rd3_select(in, d0, d1, dynamic_address);
	set_at<48, 256>(result, bright_rd3_res);
	hw_uint<16> bright_rd4_res = bright_rd4_select(in, d0, d1, dynamic_address);
	set_at<64, 256>(result, bright_rd4_res);
	hw_uint<16> bright_rd5_res = bright_rd5_select(in, d0, d1, dynamic_address);
	set_at<80, 256>(result, bright_rd5_res);
	hw_uint<16> bright_rd6_res = bright_rd6_select(in, d0, d1, dynamic_address);
	set_at<96, 256>(result, bright_rd6_res);
	hw_uint<16> bright_rd7_res = bright_rd7_select(in, d0, d1, dynamic_address);
	set_at<112, 256>(result, bright_rd7_res);
	hw_uint<16> bright_rd8_res = bright_rd8_select(in, d0, d1, dynamic_address);
	set_at<128, 256>(result, bright_rd8_res);
	hw_uint<16> bright_rd9_res = bright_rd9_select(in, d0, d1, dynamic_address);
	set_at<144, 256>(result, bright_rd9_res);
	hw_uint<16> bright_rd10_res = bright_rd10_select(in, d0, d1, dynamic_address);
	set_at<160, 256>(result, bright_rd10_res);
	hw_uint<16> bright_rd11_res = bright_rd11_select(in, d0, d1, dynamic_address);
	set_at<176, 256>(result, bright_rd11_res);
	hw_uint<16> bright_rd12_res = bright_rd12_select(in, d0, d1, dynamic_address);
	set_at<192, 256>(result, bright_rd12_res);
	hw_uint<16> bright_rd13_res = bright_rd13_select(in, d0, d1, dynamic_address);
	set_at<208, 256>(result, bright_rd13_res);
	hw_uint<16> bright_rd14_res = bright_rd14_select(in, d0, d1, dynamic_address);
	set_at<224, 256>(result, bright_rd14_res);
	hw_uint<16> bright_rd15_res = bright_rd15_select(in, d0, d1, dynamic_address);
	set_at<240, 256>(result, bright_rd15_res);
	return result;
}

// dark_update_0_read
//	dark_rd0
//	dark_rd1
//	dark_rd2
//	dark_rd3
//	dark_rd4
//	dark_rd5
//	dark_rd6
//	dark_rd7
//	dark_rd8
//	dark_rd9
//	dark_rd10
//	dark_rd11
//	dark_rd12
//	dark_rd13
//	dark_rd14
//	dark_rd15
inline hw_uint<256> in_dark_update_0_read_bundle_read(in_cache& in, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // dark_rd0
    // dark_rd1
    // dark_rd2
    // dark_rd3
    // dark_rd4
    // dark_rd5
    // dark_rd6
    // dark_rd7
    // dark_rd8
    // dark_rd9
    // dark_rd10
    // dark_rd11
    // dark_rd12
    // dark_rd13
    // dark_rd14
    // dark_rd15

	hw_uint<256> result;
	hw_uint<16> dark_rd0_res = dark_rd0_select(in, d0, d1, dynamic_address);
	set_at<0, 256>(result, dark_rd0_res);
	hw_uint<16> dark_rd1_res = dark_rd1_select(in, d0, d1, dynamic_address);
	set_at<16, 256>(result, dark_rd1_res);
	hw_uint<16> dark_rd2_res = dark_rd2_select(in, d0, d1, dynamic_address);
	set_at<32, 256>(result, dark_rd2_res);
	hw_uint<16> dark_rd3_res = dark_rd3_select(in, d0, d1, dynamic_address);
	set_at<48, 256>(result, dark_rd3_res);
	hw_uint<16> dark_rd4_res = dark_rd4_select(in, d0, d1, dynamic_address);
	set_at<64, 256>(result, dark_rd4_res);
	hw_uint<16> dark_rd5_res = dark_rd5_select(in, d0, d1, dynamic_address);
	set_at<80, 256>(result, dark_rd5_res);
	hw_uint<16> dark_rd6_res = dark_rd6_select(in, d0, d1, dynamic_address);
	set_at<96, 256>(result, dark_rd6_res);
	hw_uint<16> dark_rd7_res = dark_rd7_select(in, d0, d1, dynamic_address);
	set_at<112, 256>(result, dark_rd7_res);
	hw_uint<16> dark_rd8_res = dark_rd8_select(in, d0, d1, dynamic_address);
	set_at<128, 256>(result, dark_rd8_res);
	hw_uint<16> dark_rd9_res = dark_rd9_select(in, d0, d1, dynamic_address);
	set_at<144, 256>(result, dark_rd9_res);
	hw_uint<16> dark_rd10_res = dark_rd10_select(in, d0, d1, dynamic_address);
	set_at<160, 256>(result, dark_rd10_res);
	hw_uint<16> dark_rd11_res = dark_rd11_select(in, d0, d1, dynamic_address);
	set_at<176, 256>(result, dark_rd11_res);
	hw_uint<16> dark_rd12_res = dark_rd12_select(in, d0, d1, dynamic_address);
	set_at<192, 256>(result, dark_rd12_res);
	hw_uint<16> dark_rd13_res = dark_rd13_select(in, d0, d1, dynamic_address);
	set_at<208, 256>(result, dark_rd13_res);
	hw_uint<16> dark_rd14_res = dark_rd14_select(in, d0, d1, dynamic_address);
	set_at<224, 256>(result, dark_rd14_res);
	hw_uint<16> dark_rd15_res = dark_rd15_select(in, d0, d1, dynamic_address);
	set_at<240, 256>(result, dark_rd15_res);
	return result;
}

// in_update_0_write
//	in_in_update_0_write0
//	in_in_update_0_write1
//	in_in_update_0_write2
//	in_in_update_0_write3
//	in_in_update_0_write4
//	in_in_update_0_write5
//	in_in_update_0_write6
//	in_in_update_0_write7
//	in_in_update_0_write8
//	in_in_update_0_write9
//	in_in_update_0_write10
//	in_in_update_0_write11
//	in_in_update_0_write12
//	in_in_update_0_write13
//	in_in_update_0_write14
//	in_in_update_0_write15
inline void in_in_update_0_write_bundle_write(hw_uint<256>& in_update_0_write, in_cache& in, int d0, int d1, int dynamic_address) {
	hw_uint<16> in_in_update_0_write0_res = in_update_0_write.extract<0, 15>();
	in_in_update_0_write0_write(in_in_update_0_write0_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write1_res = in_update_0_write.extract<16, 31>();
	in_in_update_0_write1_write(in_in_update_0_write1_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write2_res = in_update_0_write.extract<32, 47>();
	in_in_update_0_write2_write(in_in_update_0_write2_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write3_res = in_update_0_write.extract<48, 63>();
	in_in_update_0_write3_write(in_in_update_0_write3_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write4_res = in_update_0_write.extract<64, 79>();
	in_in_update_0_write4_write(in_in_update_0_write4_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write5_res = in_update_0_write.extract<80, 95>();
	in_in_update_0_write5_write(in_in_update_0_write5_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write6_res = in_update_0_write.extract<96, 111>();
	in_in_update_0_write6_write(in_in_update_0_write6_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write7_res = in_update_0_write.extract<112, 127>();
	in_in_update_0_write7_write(in_in_update_0_write7_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write8_res = in_update_0_write.extract<128, 143>();
	in_in_update_0_write8_write(in_in_update_0_write8_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write9_res = in_update_0_write.extract<144, 159>();
	in_in_update_0_write9_write(in_in_update_0_write9_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write10_res = in_update_0_write.extract<160, 175>();
	in_in_update_0_write10_write(in_in_update_0_write10_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write11_res = in_update_0_write.extract<176, 191>();
	in_in_update_0_write11_write(in_in_update_0_write11_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write12_res = in_update_0_write.extract<192, 207>();
	in_in_update_0_write12_write(in_in_update_0_write12_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write13_res = in_update_0_write.extract<208, 223>();
	in_in_update_0_write13_write(in_in_update_0_write13_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write14_res = in_update_0_write.extract<224, 239>();
	in_in_update_0_write14_write(in_in_update_0_write14_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write15_res = in_update_0_write.extract<240, 255>();
	in_in_update_0_write15_write(in_in_update_0_write15_res, in, d0, d1, dynamic_address);
}

#include "hw_classes.h"

struct weight_sums_weight_sums_update_0_write0_merged_banks_2_cache {
	// RAM Box: {[0, 1952], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write1_merged_banks_2_cache {
	// RAM Box: {[1, 1953], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write10_merged_banks_2_cache {
	// RAM Box: {[10, 1962], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write11_merged_banks_2_cache {
	// RAM Box: {[11, 1963], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write12_merged_banks_2_cache {
	// RAM Box: {[12, 1964], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write13_merged_banks_2_cache {
	// RAM Box: {[13, 1965], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write14_merged_banks_2_cache {
	// RAM Box: {[14, 1966], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write15_merged_banks_2_cache {
	// RAM Box: {[15, 1967], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write2_merged_banks_2_cache {
	// RAM Box: {[2, 1954], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write3_merged_banks_2_cache {
	// RAM Box: {[3, 1955], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write4_merged_banks_2_cache {
	// RAM Box: {[4, 1956], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write5_merged_banks_2_cache {
	// RAM Box: {[5, 1957], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write6_merged_banks_2_cache {
	// RAM Box: {[6, 1958], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write7_merged_banks_2_cache {
	// RAM Box: {[7, 1959], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write8_merged_banks_2_cache {
	// RAM Box: {[8, 1960], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_weight_sums_update_0_write9_merged_banks_2_cache {
	// RAM Box: {[9, 1961], [0, 1086]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct weight_sums_cache {
  // # of banks: 16
  weight_sums_weight_sums_update_0_write0_merged_banks_2_cache weight_sums_weight_sums_update_0_write0_merged_banks_2;
  weight_sums_weight_sums_update_0_write1_merged_banks_2_cache weight_sums_weight_sums_update_0_write1_merged_banks_2;
  weight_sums_weight_sums_update_0_write10_merged_banks_2_cache weight_sums_weight_sums_update_0_write10_merged_banks_2;
  weight_sums_weight_sums_update_0_write11_merged_banks_2_cache weight_sums_weight_sums_update_0_write11_merged_banks_2;
  weight_sums_weight_sums_update_0_write12_merged_banks_2_cache weight_sums_weight_sums_update_0_write12_merged_banks_2;
  weight_sums_weight_sums_update_0_write13_merged_banks_2_cache weight_sums_weight_sums_update_0_write13_merged_banks_2;
  weight_sums_weight_sums_update_0_write14_merged_banks_2_cache weight_sums_weight_sums_update_0_write14_merged_banks_2;
  weight_sums_weight_sums_update_0_write15_merged_banks_2_cache weight_sums_weight_sums_update_0_write15_merged_banks_2;
  weight_sums_weight_sums_update_0_write2_merged_banks_2_cache weight_sums_weight_sums_update_0_write2_merged_banks_2;
  weight_sums_weight_sums_update_0_write3_merged_banks_2_cache weight_sums_weight_sums_update_0_write3_merged_banks_2;
  weight_sums_weight_sums_update_0_write4_merged_banks_2_cache weight_sums_weight_sums_update_0_write4_merged_banks_2;
  weight_sums_weight_sums_update_0_write5_merged_banks_2_cache weight_sums_weight_sums_update_0_write5_merged_banks_2;
  weight_sums_weight_sums_update_0_write6_merged_banks_2_cache weight_sums_weight_sums_update_0_write6_merged_banks_2;
  weight_sums_weight_sums_update_0_write7_merged_banks_2_cache weight_sums_weight_sums_update_0_write7_merged_banks_2;
  weight_sums_weight_sums_update_0_write8_merged_banks_2_cache weight_sums_weight_sums_update_0_write8_merged_banks_2;
  weight_sums_weight_sums_update_0_write9_merged_banks_2_cache weight_sums_weight_sums_update_0_write9_merged_banks_2;
};



inline void weight_sums_weight_sums_update_0_write0_write(hw_uint<16>& weight_sums_weight_sums_update_0_write0, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write0_merged_banks_2.push(weight_sums_weight_sums_update_0_write0);
}

inline void weight_sums_weight_sums_update_0_write1_write(hw_uint<16>& weight_sums_weight_sums_update_0_write1, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write1_merged_banks_2.push(weight_sums_weight_sums_update_0_write1);
}

inline void weight_sums_weight_sums_update_0_write10_write(hw_uint<16>& weight_sums_weight_sums_update_0_write10, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write10_merged_banks_2.push(weight_sums_weight_sums_update_0_write10);
}

inline void weight_sums_weight_sums_update_0_write11_write(hw_uint<16>& weight_sums_weight_sums_update_0_write11, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write11_merged_banks_2.push(weight_sums_weight_sums_update_0_write11);
}

inline void weight_sums_weight_sums_update_0_write12_write(hw_uint<16>& weight_sums_weight_sums_update_0_write12, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write12_merged_banks_2.push(weight_sums_weight_sums_update_0_write12);
}

inline void weight_sums_weight_sums_update_0_write13_write(hw_uint<16>& weight_sums_weight_sums_update_0_write13, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write13_merged_banks_2.push(weight_sums_weight_sums_update_0_write13);
}

inline void weight_sums_weight_sums_update_0_write14_write(hw_uint<16>& weight_sums_weight_sums_update_0_write14, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write14_merged_banks_2.push(weight_sums_weight_sums_update_0_write14);
}

inline void weight_sums_weight_sums_update_0_write15_write(hw_uint<16>& weight_sums_weight_sums_update_0_write15, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write15_merged_banks_2.push(weight_sums_weight_sums_update_0_write15);
}

inline void weight_sums_weight_sums_update_0_write2_write(hw_uint<16>& weight_sums_weight_sums_update_0_write2, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write2_merged_banks_2.push(weight_sums_weight_sums_update_0_write2);
}

inline void weight_sums_weight_sums_update_0_write3_write(hw_uint<16>& weight_sums_weight_sums_update_0_write3, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write3_merged_banks_2.push(weight_sums_weight_sums_update_0_write3);
}

inline void weight_sums_weight_sums_update_0_write4_write(hw_uint<16>& weight_sums_weight_sums_update_0_write4, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write4_merged_banks_2.push(weight_sums_weight_sums_update_0_write4);
}

inline void weight_sums_weight_sums_update_0_write5_write(hw_uint<16>& weight_sums_weight_sums_update_0_write5, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write5_merged_banks_2.push(weight_sums_weight_sums_update_0_write5);
}

inline void weight_sums_weight_sums_update_0_write6_write(hw_uint<16>& weight_sums_weight_sums_update_0_write6, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write6_merged_banks_2.push(weight_sums_weight_sums_update_0_write6);
}

inline void weight_sums_weight_sums_update_0_write7_write(hw_uint<16>& weight_sums_weight_sums_update_0_write7, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write7_merged_banks_2.push(weight_sums_weight_sums_update_0_write7);
}

inline void weight_sums_weight_sums_update_0_write8_write(hw_uint<16>& weight_sums_weight_sums_update_0_write8, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write8_merged_banks_2.push(weight_sums_weight_sums_update_0_write8);
}

inline void weight_sums_weight_sums_update_0_write9_write(hw_uint<16>& weight_sums_weight_sums_update_0_write9, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  weight_sums.weight_sums_weight_sums_update_0_write9_merged_banks_2.push(weight_sums_weight_sums_update_0_write9);
}

inline hw_uint<16> bright_weights_normed_rd0_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd0 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write0 = weight_sums.weight_sums_weight_sums_update_0_write0_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd1_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd1 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[1 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write1 = weight_sums.weight_sums_weight_sums_update_0_write1_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd10_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd10 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[10 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write10 = weight_sums.weight_sums_weight_sums_update_0_write10_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write10;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd11_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd11 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[11 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write11 = weight_sums.weight_sums_weight_sums_update_0_write11_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write11;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd12_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd12 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[12 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write12 = weight_sums.weight_sums_weight_sums_update_0_write12_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write12;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd13_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd13 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[13 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write13 = weight_sums.weight_sums_weight_sums_update_0_write13_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write13;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd14_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd14 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[14 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write14 = weight_sums.weight_sums_weight_sums_update_0_write14_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write14;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd15_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd15 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[15 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write15 = weight_sums.weight_sums_weight_sums_update_0_write15_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write15;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd2_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd2 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[2 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write2 = weight_sums.weight_sums_weight_sums_update_0_write2_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd3_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd3 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[3 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write3 = weight_sums.weight_sums_weight_sums_update_0_write3_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd4_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd4 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[4 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write4 = weight_sums.weight_sums_weight_sums_update_0_write4_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd5_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd5 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[5 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write5 = weight_sums.weight_sums_weight_sums_update_0_write5_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd6_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd6 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[6 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write6 = weight_sums.weight_sums_weight_sums_update_0_write6_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd7_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd7 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[7 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write7 = weight_sums.weight_sums_weight_sums_update_0_write7_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd8_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd8 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[8 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write8 = weight_sums.weight_sums_weight_sums_update_0_write8_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write8;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd9_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd9 read pattern: { bright_weights_normed_update_0[d0, d1] -> weight_sums[9 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write9 = weight_sums.weight_sums_weight_sums_update_0_write9_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write9;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd0_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd0 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write0 = weight_sums.weight_sums_weight_sums_update_0_write0_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd1_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd1 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[1 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write1 = weight_sums.weight_sums_weight_sums_update_0_write1_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd10_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd10 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[10 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write10 = weight_sums.weight_sums_weight_sums_update_0_write10_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write10;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd11_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd11 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[11 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write11 = weight_sums.weight_sums_weight_sums_update_0_write11_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write11;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd12_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd12 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[12 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write12 = weight_sums.weight_sums_weight_sums_update_0_write12_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write12;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd13_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd13 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[13 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write13 = weight_sums.weight_sums_weight_sums_update_0_write13_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write13;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd14_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd14 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[14 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write14 = weight_sums.weight_sums_weight_sums_update_0_write14_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write14;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd15_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd15 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[15 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write15 = weight_sums.weight_sums_weight_sums_update_0_write15_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write15;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd2_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd2 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[2 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write2 = weight_sums.weight_sums_weight_sums_update_0_write2_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd3_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd3 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[3 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write3 = weight_sums.weight_sums_weight_sums_update_0_write3_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd4_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd4 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[4 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write4 = weight_sums.weight_sums_weight_sums_update_0_write4_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd5_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd5 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[5 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write5 = weight_sums.weight_sums_weight_sums_update_0_write5_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd6_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd6 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[6 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write6 = weight_sums.weight_sums_weight_sums_update_0_write6_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd7_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd7 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[7 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write7 = weight_sums.weight_sums_weight_sums_update_0_write7_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd8_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd8 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[8 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write8 = weight_sums.weight_sums_weight_sums_update_0_write8_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write8;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd9_select(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd9 read pattern: { dark_weights_normed_update_0[d0, d1] -> weight_sums[9 + 16d0, d1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  // Write schedule: { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
  auto value_weight_sums_weight_sums_update_0_write9 = weight_sums.weight_sums_weight_sums_update_0_write9_merged_banks_2.peek_0();
  return value_weight_sums_weight_sums_update_0_write9;
  return 0;
}

// # of bundles = 3
// bright_weights_normed_update_0_read
//	bright_weights_normed_rd0
//	bright_weights_normed_rd1
//	bright_weights_normed_rd2
//	bright_weights_normed_rd3
//	bright_weights_normed_rd4
//	bright_weights_normed_rd5
//	bright_weights_normed_rd6
//	bright_weights_normed_rd7
//	bright_weights_normed_rd8
//	bright_weights_normed_rd9
//	bright_weights_normed_rd10
//	bright_weights_normed_rd11
//	bright_weights_normed_rd12
//	bright_weights_normed_rd13
//	bright_weights_normed_rd14
//	bright_weights_normed_rd15
inline hw_uint<256> weight_sums_bright_weights_normed_update_0_read_bundle_read(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // bright_weights_normed_rd0
    // bright_weights_normed_rd1
    // bright_weights_normed_rd2
    // bright_weights_normed_rd3
    // bright_weights_normed_rd4
    // bright_weights_normed_rd5
    // bright_weights_normed_rd6
    // bright_weights_normed_rd7
    // bright_weights_normed_rd8
    // bright_weights_normed_rd9
    // bright_weights_normed_rd10
    // bright_weights_normed_rd11
    // bright_weights_normed_rd12
    // bright_weights_normed_rd13
    // bright_weights_normed_rd14
    // bright_weights_normed_rd15

	hw_uint<256> result;
	hw_uint<16> bright_weights_normed_rd0_res = bright_weights_normed_rd0_select(weight_sums, d0, d1, dynamic_address);
	set_at<0, 256>(result, bright_weights_normed_rd0_res);
	hw_uint<16> bright_weights_normed_rd1_res = bright_weights_normed_rd1_select(weight_sums, d0, d1, dynamic_address);
	set_at<16, 256>(result, bright_weights_normed_rd1_res);
	hw_uint<16> bright_weights_normed_rd2_res = bright_weights_normed_rd2_select(weight_sums, d0, d1, dynamic_address);
	set_at<32, 256>(result, bright_weights_normed_rd2_res);
	hw_uint<16> bright_weights_normed_rd3_res = bright_weights_normed_rd3_select(weight_sums, d0, d1, dynamic_address);
	set_at<48, 256>(result, bright_weights_normed_rd3_res);
	hw_uint<16> bright_weights_normed_rd4_res = bright_weights_normed_rd4_select(weight_sums, d0, d1, dynamic_address);
	set_at<64, 256>(result, bright_weights_normed_rd4_res);
	hw_uint<16> bright_weights_normed_rd5_res = bright_weights_normed_rd5_select(weight_sums, d0, d1, dynamic_address);
	set_at<80, 256>(result, bright_weights_normed_rd5_res);
	hw_uint<16> bright_weights_normed_rd6_res = bright_weights_normed_rd6_select(weight_sums, d0, d1, dynamic_address);
	set_at<96, 256>(result, bright_weights_normed_rd6_res);
	hw_uint<16> bright_weights_normed_rd7_res = bright_weights_normed_rd7_select(weight_sums, d0, d1, dynamic_address);
	set_at<112, 256>(result, bright_weights_normed_rd7_res);
	hw_uint<16> bright_weights_normed_rd8_res = bright_weights_normed_rd8_select(weight_sums, d0, d1, dynamic_address);
	set_at<128, 256>(result, bright_weights_normed_rd8_res);
	hw_uint<16> bright_weights_normed_rd9_res = bright_weights_normed_rd9_select(weight_sums, d0, d1, dynamic_address);
	set_at<144, 256>(result, bright_weights_normed_rd9_res);
	hw_uint<16> bright_weights_normed_rd10_res = bright_weights_normed_rd10_select(weight_sums, d0, d1, dynamic_address);
	set_at<160, 256>(result, bright_weights_normed_rd10_res);
	hw_uint<16> bright_weights_normed_rd11_res = bright_weights_normed_rd11_select(weight_sums, d0, d1, dynamic_address);
	set_at<176, 256>(result, bright_weights_normed_rd11_res);
	hw_uint<16> bright_weights_normed_rd12_res = bright_weights_normed_rd12_select(weight_sums, d0, d1, dynamic_address);
	set_at<192, 256>(result, bright_weights_normed_rd12_res);
	hw_uint<16> bright_weights_normed_rd13_res = bright_weights_normed_rd13_select(weight_sums, d0, d1, dynamic_address);
	set_at<208, 256>(result, bright_weights_normed_rd13_res);
	hw_uint<16> bright_weights_normed_rd14_res = bright_weights_normed_rd14_select(weight_sums, d0, d1, dynamic_address);
	set_at<224, 256>(result, bright_weights_normed_rd14_res);
	hw_uint<16> bright_weights_normed_rd15_res = bright_weights_normed_rd15_select(weight_sums, d0, d1, dynamic_address);
	set_at<240, 256>(result, bright_weights_normed_rd15_res);
	return result;
}

// dark_weights_normed_update_0_read
//	dark_weights_normed_rd0
//	dark_weights_normed_rd1
//	dark_weights_normed_rd2
//	dark_weights_normed_rd3
//	dark_weights_normed_rd4
//	dark_weights_normed_rd5
//	dark_weights_normed_rd6
//	dark_weights_normed_rd7
//	dark_weights_normed_rd8
//	dark_weights_normed_rd9
//	dark_weights_normed_rd10
//	dark_weights_normed_rd11
//	dark_weights_normed_rd12
//	dark_weights_normed_rd13
//	dark_weights_normed_rd14
//	dark_weights_normed_rd15
inline hw_uint<256> weight_sums_dark_weights_normed_update_0_read_bundle_read(weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 16
    // dark_weights_normed_rd0
    // dark_weights_normed_rd1
    // dark_weights_normed_rd2
    // dark_weights_normed_rd3
    // dark_weights_normed_rd4
    // dark_weights_normed_rd5
    // dark_weights_normed_rd6
    // dark_weights_normed_rd7
    // dark_weights_normed_rd8
    // dark_weights_normed_rd9
    // dark_weights_normed_rd10
    // dark_weights_normed_rd11
    // dark_weights_normed_rd12
    // dark_weights_normed_rd13
    // dark_weights_normed_rd14
    // dark_weights_normed_rd15

	hw_uint<256> result;
	hw_uint<16> dark_weights_normed_rd0_res = dark_weights_normed_rd0_select(weight_sums, d0, d1, dynamic_address);
	set_at<0, 256>(result, dark_weights_normed_rd0_res);
	hw_uint<16> dark_weights_normed_rd1_res = dark_weights_normed_rd1_select(weight_sums, d0, d1, dynamic_address);
	set_at<16, 256>(result, dark_weights_normed_rd1_res);
	hw_uint<16> dark_weights_normed_rd2_res = dark_weights_normed_rd2_select(weight_sums, d0, d1, dynamic_address);
	set_at<32, 256>(result, dark_weights_normed_rd2_res);
	hw_uint<16> dark_weights_normed_rd3_res = dark_weights_normed_rd3_select(weight_sums, d0, d1, dynamic_address);
	set_at<48, 256>(result, dark_weights_normed_rd3_res);
	hw_uint<16> dark_weights_normed_rd4_res = dark_weights_normed_rd4_select(weight_sums, d0, d1, dynamic_address);
	set_at<64, 256>(result, dark_weights_normed_rd4_res);
	hw_uint<16> dark_weights_normed_rd5_res = dark_weights_normed_rd5_select(weight_sums, d0, d1, dynamic_address);
	set_at<80, 256>(result, dark_weights_normed_rd5_res);
	hw_uint<16> dark_weights_normed_rd6_res = dark_weights_normed_rd6_select(weight_sums, d0, d1, dynamic_address);
	set_at<96, 256>(result, dark_weights_normed_rd6_res);
	hw_uint<16> dark_weights_normed_rd7_res = dark_weights_normed_rd7_select(weight_sums, d0, d1, dynamic_address);
	set_at<112, 256>(result, dark_weights_normed_rd7_res);
	hw_uint<16> dark_weights_normed_rd8_res = dark_weights_normed_rd8_select(weight_sums, d0, d1, dynamic_address);
	set_at<128, 256>(result, dark_weights_normed_rd8_res);
	hw_uint<16> dark_weights_normed_rd9_res = dark_weights_normed_rd9_select(weight_sums, d0, d1, dynamic_address);
	set_at<144, 256>(result, dark_weights_normed_rd9_res);
	hw_uint<16> dark_weights_normed_rd10_res = dark_weights_normed_rd10_select(weight_sums, d0, d1, dynamic_address);
	set_at<160, 256>(result, dark_weights_normed_rd10_res);
	hw_uint<16> dark_weights_normed_rd11_res = dark_weights_normed_rd11_select(weight_sums, d0, d1, dynamic_address);
	set_at<176, 256>(result, dark_weights_normed_rd11_res);
	hw_uint<16> dark_weights_normed_rd12_res = dark_weights_normed_rd12_select(weight_sums, d0, d1, dynamic_address);
	set_at<192, 256>(result, dark_weights_normed_rd12_res);
	hw_uint<16> dark_weights_normed_rd13_res = dark_weights_normed_rd13_select(weight_sums, d0, d1, dynamic_address);
	set_at<208, 256>(result, dark_weights_normed_rd13_res);
	hw_uint<16> dark_weights_normed_rd14_res = dark_weights_normed_rd14_select(weight_sums, d0, d1, dynamic_address);
	set_at<224, 256>(result, dark_weights_normed_rd14_res);
	hw_uint<16> dark_weights_normed_rd15_res = dark_weights_normed_rd15_select(weight_sums, d0, d1, dynamic_address);
	set_at<240, 256>(result, dark_weights_normed_rd15_res);
	return result;
}

// weight_sums_update_0_write
//	weight_sums_weight_sums_update_0_write0
//	weight_sums_weight_sums_update_0_write1
//	weight_sums_weight_sums_update_0_write2
//	weight_sums_weight_sums_update_0_write3
//	weight_sums_weight_sums_update_0_write4
//	weight_sums_weight_sums_update_0_write5
//	weight_sums_weight_sums_update_0_write6
//	weight_sums_weight_sums_update_0_write7
//	weight_sums_weight_sums_update_0_write8
//	weight_sums_weight_sums_update_0_write9
//	weight_sums_weight_sums_update_0_write10
//	weight_sums_weight_sums_update_0_write11
//	weight_sums_weight_sums_update_0_write12
//	weight_sums_weight_sums_update_0_write13
//	weight_sums_weight_sums_update_0_write14
//	weight_sums_weight_sums_update_0_write15
inline void weight_sums_weight_sums_update_0_write_bundle_write(hw_uint<256>& weight_sums_update_0_write, weight_sums_cache& weight_sums, int d0, int d1, int dynamic_address) {
	hw_uint<16> weight_sums_weight_sums_update_0_write0_res = weight_sums_update_0_write.extract<0, 15>();
	weight_sums_weight_sums_update_0_write0_write(weight_sums_weight_sums_update_0_write0_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write1_res = weight_sums_update_0_write.extract<16, 31>();
	weight_sums_weight_sums_update_0_write1_write(weight_sums_weight_sums_update_0_write1_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write2_res = weight_sums_update_0_write.extract<32, 47>();
	weight_sums_weight_sums_update_0_write2_write(weight_sums_weight_sums_update_0_write2_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write3_res = weight_sums_update_0_write.extract<48, 63>();
	weight_sums_weight_sums_update_0_write3_write(weight_sums_weight_sums_update_0_write3_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write4_res = weight_sums_update_0_write.extract<64, 79>();
	weight_sums_weight_sums_update_0_write4_write(weight_sums_weight_sums_update_0_write4_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write5_res = weight_sums_update_0_write.extract<80, 95>();
	weight_sums_weight_sums_update_0_write5_write(weight_sums_weight_sums_update_0_write5_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write6_res = weight_sums_update_0_write.extract<96, 111>();
	weight_sums_weight_sums_update_0_write6_write(weight_sums_weight_sums_update_0_write6_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write7_res = weight_sums_update_0_write.extract<112, 127>();
	weight_sums_weight_sums_update_0_write7_write(weight_sums_weight_sums_update_0_write7_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write8_res = weight_sums_update_0_write.extract<128, 143>();
	weight_sums_weight_sums_update_0_write8_write(weight_sums_weight_sums_update_0_write8_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write9_res = weight_sums_update_0_write.extract<144, 159>();
	weight_sums_weight_sums_update_0_write9_write(weight_sums_weight_sums_update_0_write9_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write10_res = weight_sums_update_0_write.extract<160, 175>();
	weight_sums_weight_sums_update_0_write10_write(weight_sums_weight_sums_update_0_write10_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write11_res = weight_sums_update_0_write.extract<176, 191>();
	weight_sums_weight_sums_update_0_write11_write(weight_sums_weight_sums_update_0_write11_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write12_res = weight_sums_update_0_write.extract<192, 207>();
	weight_sums_weight_sums_update_0_write12_write(weight_sums_weight_sums_update_0_write12_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write13_res = weight_sums_update_0_write.extract<208, 223>();
	weight_sums_weight_sums_update_0_write13_write(weight_sums_weight_sums_update_0_write13_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write14_res = weight_sums_update_0_write.extract<224, 239>();
	weight_sums_weight_sums_update_0_write14_write(weight_sums_weight_sums_update_0_write14_res, weight_sums, d0, d1, dynamic_address);
	hw_uint<16> weight_sums_weight_sums_update_0_write15_res = weight_sums_update_0_write.extract<240, 255>();
	weight_sums_weight_sums_update_0_write15_write(weight_sums_weight_sums_update_0_write15_res, weight_sums, d0, d1, dynamic_address);
}



// Operation logic
inline void dark_weights_normed_update_0(dark_weights_cache& dark_weights, weight_sums_cache& weight_sums, dark_weights_normed_cache& dark_weights_normed, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights
	auto dark_weights_0_c__0_value = dark_weights_dark_weights_normed_update_0_read_bundle_read(dark_weights/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: weight_sums
	auto weight_sums_0_c__0_value = weight_sums_dark_weights_normed_update_0_read_bundle_read(weight_sums/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = f_divide_unrolled_16(dark_weights_0_c__0_value, weight_sums_0_c__0_value);
	// Produce: dark_weights_normed
	dark_weights_normed_dark_weights_normed_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_blur_1_update_0(dark_weights_normed_cache& dark_weights_normed, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed
	auto dark_weights_normed_0_c__0_value = dark_weights_normed_dark_weights_normed_gauss_blur_1_update_0_read_bundle_read(dark_weights_normed/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_16(dark_weights_normed_0_c__0_value);
	// Produce: dark_weights_normed_gauss_blur_1
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_blur_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_ds_1_update_0(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_1
	auto dark_weights_normed_gauss_blur_1_0_c__0_value = dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_ds_1_update_0_read_bundle_read(dark_weights_normed_gauss_blur_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_8(dark_weights_normed_gauss_blur_1_0_c__0_value);
	// Produce: dark_weights_normed_gauss_ds_1
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_ds_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_blur_2_update_0(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_1
	auto dark_weights_normed_gauss_ds_1_0_c__0_value = dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_blur_2_update_0_read_bundle_read(dark_weights_normed_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_8(dark_weights_normed_gauss_ds_1_0_c__0_value);
	// Produce: dark_weights_normed_gauss_blur_2
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_blur_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_blur_3_update_0(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_2
	auto dark_weights_normed_gauss_ds_2_0_c__0_value = dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_blur_3_update_0_read_bundle_read(dark_weights_normed_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_4(dark_weights_normed_gauss_ds_2_0_c__0_value);
	// Produce: dark_weights_normed_gauss_blur_3
	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_blur_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_ds_3_update_0(dark_gauss_blur_3_cache& dark_gauss_blur_3, dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_3
	auto dark_gauss_blur_3_0_c__0_value = dark_gauss_blur_3_dark_gauss_ds_3_update_0_read_bundle_read(dark_gauss_blur_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_2(dark_gauss_blur_3_0_c__0_value);
	// Produce: dark_gauss_ds_3
	dark_gauss_ds_3_dark_gauss_ds_3_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_ds_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_ds_2_update_0(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_2
	auto bright_weights_normed_gauss_blur_2_0_c__0_value = bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_ds_2_update_0_read_bundle_read(bright_weights_normed_gauss_blur_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(bright_weights_normed_gauss_blur_2_0_c__0_value);
	// Produce: bright_weights_normed_gauss_ds_2
	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_ds_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_blur_3_update_0(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_2
	auto bright_weights_normed_gauss_ds_2_0_c__0_value = bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_blur_3_update_0_read_bundle_read(bright_weights_normed_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_4(bright_weights_normed_gauss_ds_2_0_c__0_value);
	// Produce: bright_weights_normed_gauss_blur_3
	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_blur_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_ds_3_update_0(bright_gauss_blur_3_cache& bright_gauss_blur_3, bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_3
	auto bright_gauss_blur_3_0_c__0_value = bright_gauss_blur_3_bright_gauss_ds_3_update_0_read_bundle_read(bright_gauss_blur_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_2(bright_gauss_blur_3_0_c__0_value);
	// Produce: bright_gauss_ds_3
	bright_gauss_ds_3_bright_gauss_ds_3_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_ds_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_ds_3_update_0(dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_3
	auto dark_weights_normed_gauss_blur_3_0_c__0_value = dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_ds_3_update_0_read_bundle_read(dark_weights_normed_gauss_blur_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_2(dark_weights_normed_gauss_blur_3_0_c__0_value);
	// Produce: dark_weights_normed_gauss_ds_3
	dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_ds_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_us_2_update_0(dark_gauss_ds_3_cache& dark_gauss_ds_3, dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_3
	auto dark_gauss_ds_3_0_c__0_value = dark_gauss_ds_3_dark_laplace_us_2_update_0_read_bundle_read(dark_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(dark_gauss_ds_3_0_c__0_value);
	// Produce: dark_laplace_us_2
	dark_laplace_us_2_dark_laplace_us_2_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_us_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_diff_1_update_0(bright_gauss_ds_1_cache& bright_gauss_ds_1, bright_laplace_us_1_cache& bright_laplace_us_1, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1
	auto bright_gauss_ds_1_0_c__0_value = bright_gauss_ds_1_bright_laplace_diff_1_update_0_read_bundle_read(bright_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_laplace_us_1
	auto bright_laplace_us_1_0_c__0_value = bright_laplace_us_1_bright_laplace_diff_1_update_0_read_bundle_read(bright_laplace_us_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_8(bright_gauss_ds_1_0_c__0_value, bright_laplace_us_1_0_c__0_value);
	// Produce: bright_laplace_diff_1
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_diff_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_diff_0_update_0(bright_cache& bright, bright_laplace_us_0_cache& bright_laplace_us_0, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright
	auto bright_0_c__0_value = bright_bright_laplace_diff_0_update_0_read_bundle_read(bright/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_laplace_us_0
	auto bright_laplace_us_0_0_c__0_value = bright_laplace_us_0_bright_laplace_diff_0_update_0_read_bundle_read(bright_laplace_us_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_16(bright_0_c__0_value, bright_laplace_us_0_0_c__0_value);
	// Produce: bright_laplace_diff_0
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_diff_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void fused_level_3_update_0(bright_gauss_ds_3_cache& bright_gauss_ds_3, dark_gauss_ds_3_cache& dark_gauss_ds_3, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, fused_level_3_cache& fused_level_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_3
	auto bright_gauss_ds_3_0_c__0_value = bright_gauss_ds_3_fused_level_3_update_0_read_bundle_read(bright_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_gauss_ds_3
	auto dark_gauss_ds_3_0_c__0_value = dark_gauss_ds_3_fused_level_3_update_0_read_bundle_read(dark_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed_gauss_ds_3
	auto bright_weights_normed_gauss_ds_3_0_c__0_value = bright_weights_normed_gauss_ds_3_fused_level_3_update_0_read_bundle_read(bright_weights_normed_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed_gauss_ds_3
	auto dark_weights_normed_gauss_ds_3_0_c__0_value = dark_weights_normed_gauss_ds_3_fused_level_3_update_0_read_bundle_read(dark_weights_normed_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = merge_exposures_unrolled_2(bright_gauss_ds_3_0_c__0_value, dark_gauss_ds_3_0_c__0_value, bright_weights_normed_gauss_ds_3_0_c__0_value, dark_weights_normed_gauss_ds_3_0_c__0_value);
	// Produce: fused_level_3
	fused_level_3_fused_level_3_update_0_write_bundle_write(/* arg names */compute_result, fused_level_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_update_0(bright_cache& bright, bright_weights_cache& bright_weights, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright
	auto bright_0_c__0_value = bright_bright_weights_update_0_read_bundle_read(bright/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = exposure_weight_unrolled_16(bright_0_c__0_value);
	// Produce: bright_weights
	bright_weights_bright_weights_update_0_write_bundle_write(/* arg names */compute_result, bright_weights, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_update_0(in_cache& in, dark_cache& dark, int d0, int d1) {
  // Dynamic address computation

	// Consume: in
	auto in_0_c__0_value = in_dark_update_0_read_bundle_read(in/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = scale_exposure_unrolled_16(in_0_c__0_value);
	// Produce: dark
	dark_dark_update_0_write_bundle_write(/* arg names */compute_result, dark, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_update_0(dark_cache& dark, dark_weights_cache& dark_weights, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark
	auto dark_0_c__0_value = dark_dark_weights_update_0_read_bundle_read(dark/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = exposure_weight_unrolled_16(dark_0_c__0_value);
	// Produce: dark_weights
	dark_weights_dark_weights_update_0_write_bundle_write(/* arg names */compute_result, dark_weights, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void weight_sums_update_0(dark_weights_cache& dark_weights, bright_weights_cache& bright_weights, weight_sums_cache& weight_sums, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights
	auto dark_weights_0_c__0_value = dark_weights_weight_sums_update_0_read_bundle_read(dark_weights/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights
	auto bright_weights_0_c__0_value = bright_weights_weight_sums_update_0_read_bundle_read(bright_weights/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = add_unrolled_16(dark_weights_0_c__0_value, bright_weights_0_c__0_value);
	// Produce: weight_sums
	weight_sums_weight_sums_update_0_write_bundle_write(/* arg names */compute_result, weight_sums, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_us_0_update_0(dark_gauss_ds_1_cache& dark_gauss_ds_1, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1
	auto dark_gauss_ds_1_0_c__0_value = dark_gauss_ds_1_dark_laplace_us_0_update_0_read_bundle_read(dark_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_16(dark_gauss_ds_1_0_c__0_value);
	// Produce: dark_laplace_us_0
	dark_laplace_us_0_dark_laplace_us_0_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_us_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_diff_2_update_0(dark_gauss_ds_2_cache& dark_gauss_ds_2, dark_laplace_us_2_cache& dark_laplace_us_2, dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2
	auto dark_gauss_ds_2_0_c__0_value = dark_gauss_ds_2_dark_laplace_diff_2_update_0_read_bundle_read(dark_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_us_2
	auto dark_laplace_us_2_0_c__0_value = dark_laplace_us_2_dark_laplace_diff_2_update_0_read_bundle_read(dark_laplace_us_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_4(dark_gauss_ds_2_0_c__0_value, dark_laplace_us_2_0_c__0_value);
	// Produce: dark_laplace_diff_2
	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_diff_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_diff_1_update_0(dark_gauss_ds_1_cache& dark_gauss_ds_1, dark_laplace_us_1_cache& dark_laplace_us_1, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1
	auto dark_gauss_ds_1_0_c__0_value = dark_gauss_ds_1_dark_laplace_diff_1_update_0_read_bundle_read(dark_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_us_1
	auto dark_laplace_us_1_0_c__0_value = dark_laplace_us_1_dark_laplace_diff_1_update_0_read_bundle_read(dark_laplace_us_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_8(dark_gauss_ds_1_0_c__0_value, dark_laplace_us_1_0_c__0_value);
	// Produce: dark_laplace_diff_1
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_diff_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void final_merged_1_update_0(final_merged_2_cache& final_merged_2, fused_level_1_cache& fused_level_1, final_merged_1_cache& final_merged_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: final_merged_2
	auto final_merged_2_0_c__0_value = final_merged_2_final_merged_1_update_0_read_bundle_read(final_merged_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: fused_level_1
	auto fused_level_1_0_c__0_value = fused_level_1_final_merged_1_update_0_read_bundle_read(fused_level_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = add_unrolled_8(final_merged_2_0_c__0_value, fused_level_1_0_c__0_value);
	// Produce: final_merged_1
	final_merged_1_final_merged_1_update_0_write_bundle_write(/* arg names */compute_result, final_merged_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void ef_tc_16_update_0(final_merged_0_cache& final_merged_0, HWStream<hw_uint<256> >& /* buffer_args num ports = 16 */ef_tc_16, int d0, int d1) {
  // Dynamic address computation

	// Consume: final_merged_0
	auto final_merged_0_0_c__0_value = final_merged_0_ef_tc_16_update_0_read_bundle_read(final_merged_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_16(final_merged_0_0_c__0_value);
	// Produce: ef_tc_16
	ef_tc_16.write(compute_result);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void in_update_0(HWStream<hw_uint<256> >& /* buffer_args num ports = 16 */in_off_chip, in_cache& in, int d0, int d1) {
  // Dynamic address computation

	// Consume: in_off_chip
	auto in_off_chip_0_c__0_value = in_off_chip.read();
	auto compute_result = id_unrolled_16(in_off_chip_0_c__0_value);
	// Produce: in
	in_in_update_0_write_bundle_write(/* arg names */compute_result, in, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_update_0(in_cache& in, bright_cache& bright, int d0, int d1) {
  // Dynamic address computation

	// Consume: in
	auto in_0_c__0_value = in_bright_update_0_read_bundle_read(in/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_16(in_0_c__0_value);
	// Produce: bright
	bright_bright_update_0_write_bundle_write(/* arg names */compute_result, bright, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_blur_2_update_0(bright_gauss_ds_1_cache& bright_gauss_ds_1, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1
	auto bright_gauss_ds_1_0_c__0_value = bright_gauss_ds_1_bright_gauss_blur_2_update_0_read_bundle_read(bright_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_8(bright_gauss_ds_1_0_c__0_value);
	// Produce: bright_gauss_blur_2
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_blur_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_ds_2_update_0(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_2
	auto dark_weights_normed_gauss_blur_2_0_c__0_value = dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_ds_2_update_0_read_bundle_read(dark_weights_normed_gauss_blur_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(dark_weights_normed_gauss_blur_2_0_c__0_value);
	// Produce: dark_weights_normed_gauss_ds_2
	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_ds_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_ds_3_update_0(bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_3
	auto bright_weights_normed_gauss_blur_3_0_c__0_value = bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_ds_3_update_0_read_bundle_read(bright_weights_normed_gauss_blur_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_2(bright_weights_normed_gauss_blur_3_0_c__0_value);
	// Produce: bright_weights_normed_gauss_ds_3
	bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_ds_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_diff_0_update_0(dark_cache& dark, dark_laplace_us_0_cache& dark_laplace_us_0, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark
	auto dark_0_c__0_value = dark_dark_laplace_diff_0_update_0_read_bundle_read(dark/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_us_0
	auto dark_laplace_us_0_0_c__0_value = dark_laplace_us_0_dark_laplace_diff_0_update_0_read_bundle_read(dark_laplace_us_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_16(dark_0_c__0_value, dark_laplace_us_0_0_c__0_value);
	// Produce: dark_laplace_diff_0
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_diff_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_us_2_update_0(bright_gauss_ds_3_cache& bright_gauss_ds_3, bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_3
	auto bright_gauss_ds_3_0_c__0_value = bright_gauss_ds_3_bright_laplace_us_2_update_0_read_bundle_read(bright_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(bright_gauss_ds_3_0_c__0_value);
	// Produce: bright_laplace_us_2
	bright_laplace_us_2_bright_laplace_us_2_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_us_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_us_1_update_0(bright_gauss_ds_2_cache& bright_gauss_ds_2, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2
	auto bright_gauss_ds_2_0_c__0_value = bright_gauss_ds_2_bright_laplace_us_1_update_0_read_bundle_read(bright_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_8(bright_gauss_ds_2_0_c__0_value);
	// Produce: bright_laplace_us_1
	bright_laplace_us_1_bright_laplace_us_1_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_us_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_us_0_update_0(bright_gauss_ds_1_cache& bright_gauss_ds_1, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1
	auto bright_gauss_ds_1_0_c__0_value = bright_gauss_ds_1_bright_laplace_us_0_update_0_read_bundle_read(bright_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_16(bright_gauss_ds_1_0_c__0_value);
	// Produce: bright_laplace_us_0
	bright_laplace_us_0_bright_laplace_us_0_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_us_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_diff_2_update_0(bright_gauss_ds_2_cache& bright_gauss_ds_2, bright_laplace_us_2_cache& bright_laplace_us_2, bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2
	auto bright_gauss_ds_2_0_c__0_value = bright_gauss_ds_2_bright_laplace_diff_2_update_0_read_bundle_read(bright_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_laplace_us_2
	auto bright_laplace_us_2_0_c__0_value = bright_laplace_us_2_bright_laplace_diff_2_update_0_read_bundle_read(bright_laplace_us_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_4(bright_gauss_ds_2_0_c__0_value, bright_laplace_us_2_0_c__0_value);
	// Produce: bright_laplace_diff_2
	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_diff_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void fused_level_1_update_0(bright_laplace_diff_1_cache& bright_laplace_diff_1, dark_laplace_diff_1_cache& dark_laplace_diff_1, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, fused_level_1_cache& fused_level_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_1
	auto bright_laplace_diff_1_0_c__0_value = bright_laplace_diff_1_fused_level_1_update_0_read_bundle_read(bright_laplace_diff_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_diff_1
	auto dark_laplace_diff_1_0_c__0_value = dark_laplace_diff_1_fused_level_1_update_0_read_bundle_read(dark_laplace_diff_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed_gauss_ds_1
	auto bright_weights_normed_gauss_ds_1_0_c__0_value = bright_weights_normed_gauss_ds_1_fused_level_1_update_0_read_bundle_read(bright_weights_normed_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed_gauss_ds_1
	auto dark_weights_normed_gauss_ds_1_0_c__0_value = dark_weights_normed_gauss_ds_1_fused_level_1_update_0_read_bundle_read(dark_weights_normed_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = merge_exposures_unrolled_8(bright_laplace_diff_1_0_c__0_value, dark_laplace_diff_1_0_c__0_value, bright_weights_normed_gauss_ds_1_0_c__0_value, dark_weights_normed_gauss_ds_1_0_c__0_value);
	// Produce: fused_level_1
	fused_level_1_fused_level_1_update_0_write_bundle_write(/* arg names */compute_result, fused_level_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void fused_level_0_update_0(bright_laplace_diff_0_cache& bright_laplace_diff_0, dark_laplace_diff_0_cache& dark_laplace_diff_0, bright_weights_normed_cache& bright_weights_normed, dark_weights_normed_cache& dark_weights_normed, fused_level_0_cache& fused_level_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_0
	auto bright_laplace_diff_0_0_c__0_value = bright_laplace_diff_0_fused_level_0_update_0_read_bundle_read(bright_laplace_diff_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_diff_0
	auto dark_laplace_diff_0_0_c__0_value = dark_laplace_diff_0_fused_level_0_update_0_read_bundle_read(dark_laplace_diff_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed
	auto bright_weights_normed_0_c__0_value = bright_weights_normed_fused_level_0_update_0_read_bundle_read(bright_weights_normed/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed
	auto dark_weights_normed_0_c__0_value = dark_weights_normed_fused_level_0_update_0_read_bundle_read(dark_weights_normed/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = merge_exposures_unrolled_16(bright_laplace_diff_0_0_c__0_value, dark_laplace_diff_0_0_c__0_value, bright_weights_normed_0_c__0_value, dark_weights_normed_0_c__0_value);
	// Produce: fused_level_0
	fused_level_0_fused_level_0_update_0_write_bundle_write(/* arg names */compute_result, fused_level_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_blur_1_update_0(dark_cache& dark, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark
	auto dark_0_c__0_value = dark_dark_gauss_blur_1_update_0_read_bundle_read(dark/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_16(dark_0_c__0_value);
	// Produce: dark_gauss_blur_1
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_blur_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_update_0(bright_weights_cache& bright_weights, weight_sums_cache& weight_sums, bright_weights_normed_cache& bright_weights_normed, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights
	auto bright_weights_0_c__0_value = bright_weights_bright_weights_normed_update_0_read_bundle_read(bright_weights/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: weight_sums
	auto weight_sums_0_c__0_value = weight_sums_bright_weights_normed_update_0_read_bundle_read(weight_sums/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = f_divide_unrolled_16(bright_weights_0_c__0_value, weight_sums_0_c__0_value);
	// Produce: bright_weights_normed
	bright_weights_normed_bright_weights_normed_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_blur_1_update_0(bright_cache& bright, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright
	auto bright_0_c__0_value = bright_bright_gauss_blur_1_update_0_read_bundle_read(bright/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_16(bright_0_c__0_value);
	// Produce: bright_gauss_blur_1
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_blur_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_ds_1_update_0(dark_gauss_blur_1_cache& dark_gauss_blur_1, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_1
	auto dark_gauss_blur_1_0_c__0_value = dark_gauss_blur_1_dark_gauss_ds_1_update_0_read_bundle_read(dark_gauss_blur_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_8(dark_gauss_blur_1_0_c__0_value);
	// Produce: dark_gauss_ds_1
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_ds_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_blur_2_update_0(dark_gauss_ds_1_cache& dark_gauss_ds_1, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1
	auto dark_gauss_ds_1_0_c__0_value = dark_gauss_ds_1_dark_gauss_blur_2_update_0_read_bundle_read(dark_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_8(dark_gauss_ds_1_0_c__0_value);
	// Produce: dark_gauss_blur_2
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_blur_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_blur_1_update_0(bright_weights_normed_cache& bright_weights_normed, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed
	auto bright_weights_normed_0_c__0_value = bright_weights_normed_bright_weights_normed_gauss_blur_1_update_0_read_bundle_read(bright_weights_normed/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_16(bright_weights_normed_0_c__0_value);
	// Produce: bright_weights_normed_gauss_blur_1
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_blur_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_ds_2_update_0(dark_gauss_blur_2_cache& dark_gauss_blur_2, dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_2
	auto dark_gauss_blur_2_0_c__0_value = dark_gauss_blur_2_dark_gauss_ds_2_update_0_read_bundle_read(dark_gauss_blur_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(dark_gauss_blur_2_0_c__0_value);
	// Produce: dark_gauss_ds_2
	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_ds_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_ds_1_update_0(bright_gauss_blur_1_cache& bright_gauss_blur_1, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_1
	auto bright_gauss_blur_1_0_c__0_value = bright_gauss_blur_1_bright_gauss_ds_1_update_0_read_bundle_read(bright_gauss_blur_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_8(bright_gauss_blur_1_0_c__0_value);
	// Produce: bright_gauss_ds_1
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_ds_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_blur_3_update_0(dark_gauss_ds_2_cache& dark_gauss_ds_2, dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2
	auto dark_gauss_ds_2_0_c__0_value = dark_gauss_ds_2_dark_gauss_blur_3_update_0_read_bundle_read(dark_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_4(dark_gauss_ds_2_0_c__0_value);
	// Produce: dark_gauss_blur_3
	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_blur_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_ds_1_update_0(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_1
	auto bright_weights_normed_gauss_blur_1_0_c__0_value = bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_ds_1_update_0_read_bundle_read(bright_weights_normed_gauss_blur_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_8(bright_weights_normed_gauss_blur_1_0_c__0_value);
	// Produce: bright_weights_normed_gauss_ds_1
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_ds_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_blur_2_update_0(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_1
	auto bright_weights_normed_gauss_ds_1_0_c__0_value = bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_blur_2_update_0_read_bundle_read(bright_weights_normed_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_8(bright_weights_normed_gauss_ds_1_0_c__0_value);
	// Produce: bright_weights_normed_gauss_blur_2
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_blur_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_ds_2_update_0(bright_gauss_blur_2_cache& bright_gauss_blur_2, bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_2
	auto bright_gauss_blur_2_0_c__0_value = bright_gauss_blur_2_bright_gauss_ds_2_update_0_read_bundle_read(bright_gauss_blur_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(bright_gauss_blur_2_0_c__0_value);
	// Produce: bright_gauss_ds_2
	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_ds_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_blur_3_update_0(bright_gauss_ds_2_cache& bright_gauss_ds_2, bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2
	auto bright_gauss_ds_2_0_c__0_value = bright_gauss_ds_2_bright_gauss_blur_3_update_0_read_bundle_read(bright_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_4(bright_gauss_ds_2_0_c__0_value);
	// Produce: bright_gauss_blur_3
	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_blur_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_us_1_update_0(dark_gauss_ds_2_cache& dark_gauss_ds_2, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2
	auto dark_gauss_ds_2_0_c__0_value = dark_gauss_ds_2_dark_laplace_us_1_update_0_read_bundle_read(dark_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_8(dark_gauss_ds_2_0_c__0_value);
	// Produce: dark_laplace_us_1
	dark_laplace_us_1_dark_laplace_us_1_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_us_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void final_merged_0_update_0(final_merged_1_cache& final_merged_1, fused_level_0_cache& fused_level_0, final_merged_0_cache& final_merged_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: final_merged_1
	auto final_merged_1_0_c__0_value = final_merged_1_final_merged_0_update_0_read_bundle_read(final_merged_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: fused_level_0
	auto fused_level_0_0_c__0_value = fused_level_0_final_merged_0_update_0_read_bundle_read(fused_level_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = add_unrolled_16(final_merged_1_0_c__0_value, fused_level_0_0_c__0_value);
	// Produce: final_merged_0
	final_merged_0_final_merged_0_update_0_write_bundle_write(/* arg names */compute_result, final_merged_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void fused_level_2_update_0(bright_laplace_diff_2_cache& bright_laplace_diff_2, dark_laplace_diff_2_cache& dark_laplace_diff_2, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, fused_level_2_cache& fused_level_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_2
	auto bright_laplace_diff_2_0_c__0_value = bright_laplace_diff_2_fused_level_2_update_0_read_bundle_read(bright_laplace_diff_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_diff_2
	auto dark_laplace_diff_2_0_c__0_value = dark_laplace_diff_2_fused_level_2_update_0_read_bundle_read(dark_laplace_diff_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed_gauss_ds_2
	auto bright_weights_normed_gauss_ds_2_0_c__0_value = bright_weights_normed_gauss_ds_2_fused_level_2_update_0_read_bundle_read(bright_weights_normed_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed_gauss_ds_2
	auto dark_weights_normed_gauss_ds_2_0_c__0_value = dark_weights_normed_gauss_ds_2_fused_level_2_update_0_read_bundle_read(dark_weights_normed_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = merge_exposures_unrolled_4(bright_laplace_diff_2_0_c__0_value, dark_laplace_diff_2_0_c__0_value, bright_weights_normed_gauss_ds_2_0_c__0_value, dark_weights_normed_gauss_ds_2_0_c__0_value);
	// Produce: fused_level_2
	fused_level_2_fused_level_2_update_0_write_bundle_write(/* arg names */compute_result, fused_level_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void final_merged_2_update_0(fused_level_3_cache& fused_level_3, fused_level_2_cache& fused_level_2, final_merged_2_cache& final_merged_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: fused_level_3
	auto fused_level_3_0_c__0_value = fused_level_3_final_merged_2_update_0_read_bundle_read(fused_level_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: fused_level_2
	auto fused_level_2_0_c__0_value = fused_level_2_final_merged_2_update_0_read_bundle_read(fused_level_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = add_unrolled_4(fused_level_3_0_c__0_value, fused_level_2_0_c__0_value);
	// Produce: final_merged_2
	final_merged_2_final_merged_2_update_0_write_bundle_write(/* arg names */compute_result, final_merged_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void ef_tc_16_opt(HWStream<hw_uint<256> >& /* get_args num ports = 16 */in_off_chip, HWStream<hw_uint<256> >& /* get_args num ports = 16 */ef_tc_16) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("ef_tc_16_opt_debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_cache bright;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_1_cache bright_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_2_cache bright_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_3_cache bright_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_1_cache bright_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_2_cache bright_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_3_cache bright_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_0_cache bright_laplace_diff_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_1_cache bright_laplace_diff_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_2_cache bright_laplace_diff_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_0_cache bright_laplace_us_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_1_cache bright_laplace_us_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_2_cache bright_laplace_us_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_cache bright_weights;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_cache bright_weights_normed;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_1_cache bright_weights_normed_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_2_cache bright_weights_normed_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_3_cache bright_weights_normed_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_1_cache bright_weights_normed_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_2_cache bright_weights_normed_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_3_cache bright_weights_normed_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_cache dark;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_1_cache dark_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_2_cache dark_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_3_cache dark_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_1_cache dark_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_2_cache dark_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_3_cache dark_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_0_cache dark_laplace_diff_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_1_cache dark_laplace_diff_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_2_cache dark_laplace_diff_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_0_cache dark_laplace_us_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_1_cache dark_laplace_us_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_2_cache dark_laplace_us_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_cache dark_weights;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_cache dark_weights_normed;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_1_cache dark_weights_normed_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_2_cache dark_weights_normed_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_3_cache dark_weights_normed_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_1_cache dark_weights_normed_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_2_cache dark_weights_normed_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_3_cache dark_weights_normed_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  final_merged_0_cache final_merged_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  final_merged_1_cache final_merged_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  final_merged_2_cache final_merged_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_0_cache fused_level_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_1_cache fused_level_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_2_cache fused_level_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_3_cache fused_level_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  in_cache in;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  weight_sums_cache weight_sums;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079; dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086; dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539; dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542; bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540; bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542; in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086; dark_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 27] : 0 <= d0 <= 119 and 0 <= d1 <= 134; dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079; fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079; bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268; bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268; bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079; dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540; bright_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 39] : 0 <= d0 <= 119 and 0 <= d1 <= 269; bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079; dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079; bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539; bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086; dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270; dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084; dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084; dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268; final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269; dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539; final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539; dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268; bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270; dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086; weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086; dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540; dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 31] : 0 <= d0 <= 119 and 0 <= d1 <= 134; bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542; bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540; bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084; dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086; bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084; bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086; bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269; bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 38] : 0 <= d0 <= 119 and 0 <= d1 <= 134; fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134; dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270; final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079; bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539; bright_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 30] : 0 <= d0 <= 119 and 0 <= d1 <= 134; dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542; fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269; bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086; dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269; fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539; dark_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 32] : 0 <= d0 <= 119 and 0 <= d1 <= 269; bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
//   { ef_tc_16_update_0[d0, d1] -> [14 + d1, 3 + d0, 52] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
// Condition for ef_tc_16_update_0(((-52 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1093 - i0 >= 0)))
//   { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 7] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
// Condition for dark_weights_normed_update_0(((-7 + i2 == 0) && (i1 >= 0) && (122 - i1 >= 0) && (i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 36] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
// Condition for dark_laplace_diff_1_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-36 + i2 == 0) && (-2 + i1 >= 0) && (121 - i1 >= 0) && (-6 + i0 >= 0) && (1084 - i0 >= 0)))
//   { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 17] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
// Condition for dark_weights_normed_gauss_ds_1_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-17 + i2 == 0) && (-1 + i1 >= 0) && (122 - i1 >= 0) && (-2 + i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 16] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
// Condition for bright_gauss_blur_2_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-16 + i2 == 0) && (-2 + i1 >= 0) && (122 - i1 >= 0) && (-6 + i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 21] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
// Condition for bright_weights_normed_gauss_ds_1_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-21 + i2 == 0) && (-1 + i1 >= 0) && (122 - i1 >= 0) && (-2 + i0 >= 0) && (1086 - i0 >= 0)))
//   { in_update_0[d0, d1] -> [d1, d0, 1] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
// Condition for in_update_0(((-1 + i2 == 0) && (i1 >= 0) && (122 - i1 >= 0) && (i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 27] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
// Condition for dark_gauss_ds_3_update_0(((-2 - i0 + 8*floord(2 + i0, 8) == 0) && (-27 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 34] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
// Condition for dark_laplace_us_0_update_0(((-34 + i2 == 0) && (-1 + i1 >= 0) && (120 - i1 >= 0) && (-2 + i0 >= 0) && (1081 - i0 >= 0)))
//   { fused_level_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 48] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
// Condition for fused_level_0_update_0(((-48 + i2 == 0) && (-1 + i1 >= 0) && (120 - i1 >= 0) && (-2 + i0 >= 0) && (1081 - i0 >= 0)))
//   { bright_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 24] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
// Condition for bright_gauss_blur_3_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-24 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 29] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
// Condition for bright_weights_normed_gauss_blur_3_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-29 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 44] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
// Condition for bright_laplace_diff_0_update_0(((-44 + i2 == 0) && (-1 + i1 >= 0) && (120 - i1 >= 0) && (-2 + i0 >= 0) && (1081 - i0 >= 0)))
//   { dark_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 13] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
// Condition for dark_gauss_blur_2_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-13 + i2 == 0) && (-2 + i1 >= 0) && (122 - i1 >= 0) && (-6 + i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 39] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
// Condition for bright_laplace_us_2_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-39 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1090 - i0 >= 0)))
//   { bright_laplace_us_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 41] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
// Condition for bright_laplace_us_0_update_0(((-41 + i2 == 0) && (-1 + i1 >= 0) && (120 - i1 >= 0) && (-2 + i0 >= 0) && (1081 - i0 >= 0)))
//   { dark_laplace_diff_0_update_0[d0, d1] -> [2 + d1, 1 + d0, 37] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
// Condition for dark_laplace_diff_0_update_0(((-37 + i2 == 0) && (-1 + i1 >= 0) && (120 - i1 >= 0) && (-2 + i0 >= 0) && (1081 - i0 >= 0)))
//   { bright_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 40] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
// Condition for bright_laplace_us_1_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-40 + i2 == 0) && (-2 + i1 >= 0) && (121 - i1 >= 0) && (-6 + i0 >= 0) && (1084 - i0 >= 0)))
//   { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
// Condition for bright_weights_update_0(((-5 + i2 == 0) && (i1 >= 0) && (122 - i1 >= 0) && (i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 19] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
// Condition for dark_gauss_ds_2_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-19 + i2 == 0) && (-2 + i1 >= 0) && (122 - i1 >= 0) && (-6 + i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 11] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
// Condition for dark_weights_normed_gauss_blur_1_update_0(((-11 + i2 == 0) && (-1 + i1 >= 0) && (122 - i1 >= 0) && (-2 + i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 8] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
// Condition for dark_gauss_blur_1_update_0(((-8 + i2 == 0) && (-1 + i1 >= 0) && (122 - i1 >= 0) && (-2 + i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 26] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
// Condition for dark_weights_normed_gauss_blur_3_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-26 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1086 - i0 >= 0)))
//   { final_merged_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 49] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
// Condition for final_merged_2_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-49 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1090 - i0 >= 0)))
//   { dark_laplace_us_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 33] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
// Condition for dark_laplace_us_1_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-33 + i2 == 0) && (-2 + i1 >= 0) && (121 - i1 >= 0) && (-6 + i0 >= 0) && (1084 - i0 >= 0)))
//   { final_merged_1_update_0[d0, d1] -> [14 + 2d1, 3 + d0, 50] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
// Condition for final_merged_1_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-50 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1092 - i0 >= 0)))
//   { dark_gauss_blur_3_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 20] : 0 <= d0 <= 119 and 0 <= d1 <= 268 }
// Condition for dark_gauss_blur_3_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-20 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 28] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
// Condition for bright_weights_normed_gauss_ds_2_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-28 + i2 == 0) && (-2 + i1 >= 0) && (122 - i1 >= 0) && (-6 + i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
// Condition for dark_weights_update_0(((-4 + i2 == 0) && (i1 >= 0) && (122 - i1 >= 0) && (i0 >= 0) && (1086 - i0 >= 0)))
//   { weight_sums_update_0[d0, d1] -> [d1, d0, 6] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
// Condition for weight_sums_update_0(((-6 + i2 == 0) && (i1 >= 0) && (122 - i1 >= 0) && (i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 18] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
// Condition for dark_weights_normed_gauss_blur_2_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-18 + i2 == 0) && (-2 + i1 >= 0) && (122 - i1 >= 0) && (-6 + i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 31] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
// Condition for dark_weights_normed_gauss_ds_3_update_0(((-2 - i0 + 8*floord(2 + i0, 8) == 0) && (-31 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 15] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
// Condition for bright_gauss_ds_1_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-15 + i2 == 0) && (-1 + i1 >= 0) && (122 - i1 >= 0) && (-2 + i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 22] : 0 <= d0 <= 120 and 0 <= d1 <= 540 }
// Condition for bright_weights_normed_gauss_blur_2_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-22 + i2 == 0) && (-2 + i1 >= 0) && (122 - i1 >= 0) && (-6 + i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 14] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
// Condition for bright_weights_normed_gauss_blur_1_update_0(((-14 + i2 == 0) && (-1 + i1 >= 0) && (122 - i1 >= 0) && (-2 + i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_update_0[d0, d1] -> [d1, d0, 2] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
// Condition for dark_update_0(((-2 + i2 == 0) && (i1 >= 0) && (122 - i1 >= 0) && (i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_gauss_blur_1_update_0[d0, d1] -> [2 + d1, 1 + d0, 10] : 0 <= d0 <= 121 and 0 <= d1 <= 1084 }
// Condition for bright_gauss_blur_1_update_0(((-10 + i2 == 0) && (-1 + i1 >= 0) && (122 - i1 >= 0) && (-2 + i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 9] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
// Condition for bright_weights_normed_update_0(((-9 + i2 == 0) && (i1 >= 0) && (122 - i1 >= 0) && (i0 >= 0) && (1086 - i0 >= 0)))
//   { bright_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 42] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
// Condition for bright_laplace_diff_2_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-42 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1090 - i0 >= 0)))
//   { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 38] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
// Condition for bright_weights_normed_gauss_ds_3_update_0(((-2 - i0 + 8*floord(2 + i0, 8) == 0) && (-38 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1086 - i0 >= 0)))
//   { fused_level_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 45] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
// Condition for fused_level_3_update_0(((-2 - i0 + 8*floord(2 + i0, 8) == 0) && (-45 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 25] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
// Condition for dark_weights_normed_gauss_ds_2_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-25 + i2 == 0) && (-2 + i1 >= 0) && (122 - i1 >= 0) && (-6 + i0 >= 0) && (1086 - i0 >= 0)))
//   { final_merged_0_update_0[d0, d1] -> [14 + d1, 3 + d0, 51] : 0 <= d0 <= 119 and 0 <= d1 <= 1079 }
// Condition for final_merged_0_update_0(((-51 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1093 - i0 >= 0)))
//   { bright_laplace_diff_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 43] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
// Condition for bright_laplace_diff_1_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-43 + i2 == 0) && (-2 + i1 >= 0) && (121 - i1 >= 0) && (-6 + i0 >= 0) && (1084 - i0 >= 0)))
//   { bright_gauss_ds_3_update_0[d0, d1] -> [14 + 8d1, 3 + d0, 30] : 0 <= d0 <= 119 and 0 <= d1 <= 134 }
// Condition for bright_gauss_ds_3_update_0(((-2 - i0 + 8*floord(2 + i0, 8) == 0) && (-30 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_gauss_ds_1_update_0[d0, d1] -> [2 + 2d1, 1 + d0, 12] : 0 <= d0 <= 121 and 0 <= d1 <= 542 }
// Condition for dark_gauss_ds_1_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-12 + i2 == 0) && (-1 + i1 >= 0) && (122 - i1 >= 0) && (-2 + i0 >= 0) && (1086 - i0 >= 0)))
//   { fused_level_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 46] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
// Condition for fused_level_2_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-46 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1090 - i0 >= 0)))
//   { bright_update_0[d0, d1] -> [d1, d0, 3] : 0 <= d0 <= 122 and 0 <= d1 <= 1086 }
// Condition for bright_update_0(((-3 + i2 == 0) && (i1 >= 0) && (122 - i1 >= 0) && (i0 >= 0) && (1086 - i0 >= 0)))
//   { dark_laplace_diff_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 35] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
// Condition for dark_laplace_diff_2_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-35 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1090 - i0 >= 0)))
//   { fused_level_1_update_0[d0, d1] -> [6 + 2d1, 2 + d0, 47] : 0 <= d0 <= 119 and 0 <= d1 <= 539 }
// Condition for fused_level_1_update_0(((-i0 + 2*floord(i0, 2) == 0) && (-47 + i2 == 0) && (-2 + i1 >= 0) && (121 - i1 >= 0) && (-6 + i0 >= 0) && (1084 - i0 >= 0)))
//   { dark_laplace_us_2_update_0[d0, d1] -> [14 + 4d1, 3 + d0, 32] : 0 <= d0 <= 119 and 0 <= d1 <= 269 }
// Condition for dark_laplace_us_2_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-32 + i2 == 0) && (-3 + i1 >= 0) && (122 - i1 >= 0) && (-14 + i0 >= 0) && (1090 - i0 >= 0)))
//   { bright_gauss_ds_2_update_0[d0, d1] -> [6 + 4d1, 2 + d0, 23] : 0 <= d0 <= 120 and 0 <= d1 <= 270 }
// Condition for bright_gauss_ds_2_update_0(((-2 - i0 + 4*floord(2 + i0, 4) == 0) && (-23 + i2 == 0) && (-2 + i1 >= 0) && (122 - i1 >= 0) && (-6 + i0 >= 0) && (1086 - i0 >= 0)))

  /*
for (int c0 = 0; c0 <= 1093; c0 += 1)
  for (int c1 = 0; c1 <= 122; c1 += 1) {
    if (c0 <= 1086) {
      in_update_0(c1, c0);
      dark_update_0(c1, c0);
      bright_update_0(c1, c0);
      dark_weights_update_0(c1, c0);
      bright_weights_update_0(c1, c0);
      weight_sums_update_0(c1, c0);
      dark_weights_normed_update_0(c1, c0);
      if (c0 >= 2 && c1 >= 1)
        dark_gauss_blur_1_update_0(c1 - 1, c0 - 2);
      bright_weights_normed_update_0(c1, c0);
      if (c0 >= 2 && c1 >= 1) {
        bright_gauss_blur_1_update_0(c1 - 1, c0 - 2);
        dark_weights_normed_gauss_blur_1_update_0(c1 - 1, c0 - 2);
        if (c0 % 2 == 0) {
          dark_gauss_ds_1_update_0(c1 - 1, (c0 / 2) - 1);
          if (c0 >= 6 && c1 >= 2)
            dark_gauss_blur_2_update_0(c1 - 2, (c0 / 2) - 3);
        }
        bright_weights_normed_gauss_blur_1_update_0(c1 - 1, c0 - 2);
        if (c0 % 2 == 0) {
          bright_gauss_ds_1_update_0(c1 - 1, (c0 / 2) - 1);
          if (c0 >= 6 && c1 >= 2)
            bright_gauss_blur_2_update_0(c1 - 2, (c0 / 2) - 3);
          dark_weights_normed_gauss_ds_1_update_0(c1 - 1, (c0 / 2) - 1);
          if (c0 >= 6 && c1 >= 2) {
            dark_weights_normed_gauss_blur_2_update_0(c1 - 2, (c0 / 2) - 3);
            if ((c0 + 2) % 4 == 0) {
              dark_gauss_ds_2_update_0(c1 - 2, (c0 - 6) / 4);
              if (c0 >= 14 && c1 >= 3)
                dark_gauss_blur_3_update_0(c1 - 3, (c0 - 14) / 4);
            }
          }
          bright_weights_normed_gauss_ds_1_update_0(c1 - 1, (c0 / 2) - 1);
          if (c0 >= 6 && c1 >= 2) {
            bright_weights_normed_gauss_blur_2_update_0(c1 - 2, (c0 / 2) - 3);
            if ((c0 + 2) % 4 == 0) {
              bright_gauss_ds_2_update_0(c1 - 2, (c0 - 6) / 4);
              if (c0 >= 14 && c1 >= 3)
                bright_gauss_blur_3_update_0(c1 - 3, (c0 - 14) / 4);
              dark_weights_normed_gauss_ds_2_update_0(c1 - 2, (c0 - 6) / 4);
              if (c0 >= 14 && c1 >= 3) {
                dark_weights_normed_gauss_blur_3_update_0(c1 - 3, (c0 - 14) / 4);
                if ((c0 + 2) % 8 == 0)
                  dark_gauss_ds_3_update_0(c1 - 3, (c0 - 14) / 8);
              }
              bright_weights_normed_gauss_ds_2_update_0(c1 - 2, (c0 - 6) / 4);
              if (c0 >= 14 && c1 >= 3) {
                bright_weights_normed_gauss_blur_3_update_0(c1 - 3, (c0 - 14) / 4);
                if ((c0 + 2) % 8 == 0) {
                  bright_gauss_ds_3_update_0(c1 - 3, (c0 - 14) / 8);
                  dark_weights_normed_gauss_ds_3_update_0(c1 - 3, (c0 - 14) / 8);
                }
              }
            }
          }
        }
      }
    }
    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
      dark_laplace_us_2_update_0(c1 - 3, (c0 - 14) / 4);
    if (c0 >= 6 && c0 <= 1084 && c1 >= 2 && c1 <= 121 && c0 % 2 == 0)
      dark_laplace_us_1_update_0(c1 - 2, (c0 / 2) - 3);
    if (c0 >= 2 && c0 <= 1081 && c1 >= 1 && c1 <= 120)
      dark_laplace_us_0_update_0(c1 - 1, c0 - 2);
    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
      dark_laplace_diff_2_update_0(c1 - 3, (c0 - 14) / 4);
    if (c0 >= 6 && c0 <= 1084 && c1 >= 2 && c1 <= 121 && c0 % 2 == 0)
      dark_laplace_diff_1_update_0(c1 - 2, (c0 / 2) - 3);
    if (c0 >= 2 && c0 <= 1081 && c1 >= 1 && c1 <= 120)
      dark_laplace_diff_0_update_0(c1 - 1, c0 - 2);
    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 8 == 0)
      bright_weights_normed_gauss_ds_3_update_0(c1 - 3, (c0 - 14) / 8);
    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
      bright_laplace_us_2_update_0(c1 - 3, (c0 - 14) / 4);
    if (c0 >= 6 && c0 <= 1084 && c1 >= 2 && c1 <= 121 && c0 % 2 == 0)
      bright_laplace_us_1_update_0(c1 - 2, (c0 / 2) - 3);
    if (c0 >= 2 && c0 <= 1081 && c1 >= 1 && c1 <= 120)
      bright_laplace_us_0_update_0(c1 - 1, c0 - 2);
    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
      bright_laplace_diff_2_update_0(c1 - 3, (c0 - 14) / 4);
    if (c0 >= 6 && c0 <= 1084 && c1 >= 2 && c1 <= 121 && c0 % 2 == 0)
      bright_laplace_diff_1_update_0(c1 - 2, (c0 / 2) - 3);
    if (c0 >= 2 && c0 <= 1081 && c1 >= 1 && c1 <= 120)
      bright_laplace_diff_0_update_0(c1 - 1, c0 - 2);
    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 8 == 0)
      fused_level_3_update_0(c1 - 3, (c0 - 14) / 8);
    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
      fused_level_2_update_0(c1 - 3, (c0 - 14) / 4);
    if (c0 >= 6 && c0 <= 1084 && c1 >= 2 && c1 <= 121 && c0 % 2 == 0)
      fused_level_1_update_0(c1 - 2, (c0 / 2) - 3);
    if (c0 >= 2 && c0 <= 1081 && c1 >= 1 && c1 <= 120)
      fused_level_0_update_0(c1 - 1, c0 - 2);
    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
      final_merged_2_update_0(c1 - 3, (c0 - 14) / 4);
    if (c0 >= 14 && c1 >= 3 && c0 % 2 == 0)
      final_merged_1_update_0(c1 - 3, (c0 / 2) - 7);
    if (c0 >= 14 && c1 >= 3) {
      final_merged_0_update_0(c1 - 3, c0 - 14);
      ef_tc_16_update_0(c1 - 3, c0 - 14);
    }
  }

  */
	for (int c0 = 0; c0 <= 1093; c0 += 1)
	  for (int c1 = 0; c1 <= 122; c1 += 1) {
	    if (c0 <= 1086) {
	      in_update_0(in_off_chip /* buf name */, in, c1, c0);
	      dark_update_0(in /* buf name */, dark, c1, c0);
	      bright_update_0(in /* buf name */, bright, c1, c0);
	      dark_weights_update_0(dark /* buf name */, dark_weights, c1, c0);
	      bright_weights_update_0(bright /* buf name */, bright_weights, c1, c0);
	      weight_sums_update_0(dark_weights /* buf name */, bright_weights /* buf name */, weight_sums, c1, c0);
	      dark_weights_normed_update_0(dark_weights /* buf name */, weight_sums /* buf name */, dark_weights_normed, c1, c0);
	      if (c0 >= 2 && c1 >= 1)
	        dark_gauss_blur_1_update_0(dark /* buf name */, dark_gauss_blur_1, c1 - 1, c0 - 2);
	      bright_weights_normed_update_0(bright_weights /* buf name */, weight_sums /* buf name */, bright_weights_normed, c1, c0);
	      if (c0 >= 2 && c1 >= 1) {
	        bright_gauss_blur_1_update_0(bright /* buf name */, bright_gauss_blur_1, c1 - 1, c0 - 2);
	        dark_weights_normed_gauss_blur_1_update_0(dark_weights_normed /* buf name */, dark_weights_normed_gauss_blur_1, c1 - 1, c0 - 2);
	        if (c0 % 2 == 0) {
	          dark_gauss_ds_1_update_0(dark_gauss_blur_1 /* buf name */, dark_gauss_ds_1, c1 - 1, (c0 / 2) - 1);
	          if (c0 >= 6 && c1 >= 2)
	            dark_gauss_blur_2_update_0(dark_gauss_ds_1 /* buf name */, dark_gauss_blur_2, c1 - 2, (c0 / 2) - 3);
	        }
	        bright_weights_normed_gauss_blur_1_update_0(bright_weights_normed /* buf name */, bright_weights_normed_gauss_blur_1, c1 - 1, c0 - 2);
	        if (c0 % 2 == 0) {
	          bright_gauss_ds_1_update_0(bright_gauss_blur_1 /* buf name */, bright_gauss_ds_1, c1 - 1, (c0 / 2) - 1);
	          if (c0 >= 6 && c1 >= 2)
	            bright_gauss_blur_2_update_0(bright_gauss_ds_1 /* buf name */, bright_gauss_blur_2, c1 - 2, (c0 / 2) - 3);
	          dark_weights_normed_gauss_ds_1_update_0(dark_weights_normed_gauss_blur_1 /* buf name */, dark_weights_normed_gauss_ds_1, c1 - 1, (c0 / 2) - 1);
	          if (c0 >= 6 && c1 >= 2) {
	            dark_weights_normed_gauss_blur_2_update_0(dark_weights_normed_gauss_ds_1 /* buf name */, dark_weights_normed_gauss_blur_2, c1 - 2, (c0 / 2) - 3);
	            if ((c0 + 2) % 4 == 0) {
	              dark_gauss_ds_2_update_0(dark_gauss_blur_2 /* buf name */, dark_gauss_ds_2, c1 - 2, (c0 - 6) / 4);
	              if (c0 >= 14 && c1 >= 3)
	                dark_gauss_blur_3_update_0(dark_gauss_ds_2 /* buf name */, dark_gauss_blur_3, c1 - 3, (c0 - 14) / 4);
	            }
	          }
	          bright_weights_normed_gauss_ds_1_update_0(bright_weights_normed_gauss_blur_1 /* buf name */, bright_weights_normed_gauss_ds_1, c1 - 1, (c0 / 2) - 1);
	          if (c0 >= 6 && c1 >= 2) {
	            bright_weights_normed_gauss_blur_2_update_0(bright_weights_normed_gauss_ds_1 /* buf name */, bright_weights_normed_gauss_blur_2, c1 - 2, (c0 / 2) - 3);
	            if ((c0 + 2) % 4 == 0) {
	              bright_gauss_ds_2_update_0(bright_gauss_blur_2 /* buf name */, bright_gauss_ds_2, c1 - 2, (c0 - 6) / 4);
	              if (c0 >= 14 && c1 >= 3)
	                bright_gauss_blur_3_update_0(bright_gauss_ds_2 /* buf name */, bright_gauss_blur_3, c1 - 3, (c0 - 14) / 4);
	              dark_weights_normed_gauss_ds_2_update_0(dark_weights_normed_gauss_blur_2 /* buf name */, dark_weights_normed_gauss_ds_2, c1 - 2, (c0 - 6) / 4);
	              if (c0 >= 14 && c1 >= 3) {
	                dark_weights_normed_gauss_blur_3_update_0(dark_weights_normed_gauss_ds_2 /* buf name */, dark_weights_normed_gauss_blur_3, c1 - 3, (c0 - 14) / 4);
	                if ((c0 + 2) % 8 == 0)
	                  dark_gauss_ds_3_update_0(dark_gauss_blur_3 /* buf name */, dark_gauss_ds_3, c1 - 3, (c0 - 14) / 8);
	              }
	              bright_weights_normed_gauss_ds_2_update_0(bright_weights_normed_gauss_blur_2 /* buf name */, bright_weights_normed_gauss_ds_2, c1 - 2, (c0 - 6) / 4);
	              if (c0 >= 14 && c1 >= 3) {
	                bright_weights_normed_gauss_blur_3_update_0(bright_weights_normed_gauss_ds_2 /* buf name */, bright_weights_normed_gauss_blur_3, c1 - 3, (c0 - 14) / 4);
	                if ((c0 + 2) % 8 == 0) {
	                  bright_gauss_ds_3_update_0(bright_gauss_blur_3 /* buf name */, bright_gauss_ds_3, c1 - 3, (c0 - 14) / 8);
	                  dark_weights_normed_gauss_ds_3_update_0(dark_weights_normed_gauss_blur_3 /* buf name */, dark_weights_normed_gauss_ds_3, c1 - 3, (c0 - 14) / 8);
	                }
	              }
	            }
	          }
	        }
	      }
	    }
	    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
	      dark_laplace_us_2_update_0(dark_gauss_ds_3 /* buf name */, dark_laplace_us_2, c1 - 3, (c0 - 14) / 4);
	    if (c0 >= 6 && c0 <= 1084 && c1 >= 2 && c1 <= 121 && c0 % 2 == 0)
	      dark_laplace_us_1_update_0(dark_gauss_ds_2 /* buf name */, dark_laplace_us_1, c1 - 2, (c0 / 2) - 3);
	    if (c0 >= 2 && c0 <= 1081 && c1 >= 1 && c1 <= 120)
	      dark_laplace_us_0_update_0(dark_gauss_ds_1 /* buf name */, dark_laplace_us_0, c1 - 1, c0 - 2);
	    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
	      dark_laplace_diff_2_update_0(dark_gauss_ds_2 /* buf name */, dark_laplace_us_2 /* buf name */, dark_laplace_diff_2, c1 - 3, (c0 - 14) / 4);
	    if (c0 >= 6 && c0 <= 1084 && c1 >= 2 && c1 <= 121 && c0 % 2 == 0)
	      dark_laplace_diff_1_update_0(dark_gauss_ds_1 /* buf name */, dark_laplace_us_1 /* buf name */, dark_laplace_diff_1, c1 - 2, (c0 / 2) - 3);
	    if (c0 >= 2 && c0 <= 1081 && c1 >= 1 && c1 <= 120)
	      dark_laplace_diff_0_update_0(dark /* buf name */, dark_laplace_us_0 /* buf name */, dark_laplace_diff_0, c1 - 1, c0 - 2);
	    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 8 == 0)
	      bright_weights_normed_gauss_ds_3_update_0(bright_weights_normed_gauss_blur_3 /* buf name */, bright_weights_normed_gauss_ds_3, c1 - 3, (c0 - 14) / 8);
	    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
	      bright_laplace_us_2_update_0(bright_gauss_ds_3 /* buf name */, bright_laplace_us_2, c1 - 3, (c0 - 14) / 4);
	    if (c0 >= 6 && c0 <= 1084 && c1 >= 2 && c1 <= 121 && c0 % 2 == 0)
	      bright_laplace_us_1_update_0(bright_gauss_ds_2 /* buf name */, bright_laplace_us_1, c1 - 2, (c0 / 2) - 3);
	    if (c0 >= 2 && c0 <= 1081 && c1 >= 1 && c1 <= 120)
	      bright_laplace_us_0_update_0(bright_gauss_ds_1 /* buf name */, bright_laplace_us_0, c1 - 1, c0 - 2);
	    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
	      bright_laplace_diff_2_update_0(bright_gauss_ds_2 /* buf name */, bright_laplace_us_2 /* buf name */, bright_laplace_diff_2, c1 - 3, (c0 - 14) / 4);
	    if (c0 >= 6 && c0 <= 1084 && c1 >= 2 && c1 <= 121 && c0 % 2 == 0)
	      bright_laplace_diff_1_update_0(bright_gauss_ds_1 /* buf name */, bright_laplace_us_1 /* buf name */, bright_laplace_diff_1, c1 - 2, (c0 / 2) - 3);
	    if (c0 >= 2 && c0 <= 1081 && c1 >= 1 && c1 <= 120)
	      bright_laplace_diff_0_update_0(bright /* buf name */, bright_laplace_us_0 /* buf name */, bright_laplace_diff_0, c1 - 1, c0 - 2);
	    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 8 == 0)
	      fused_level_3_update_0(bright_gauss_ds_3 /* buf name */, dark_gauss_ds_3 /* buf name */, bright_weights_normed_gauss_ds_3 /* buf name */, dark_weights_normed_gauss_ds_3 /* buf name */, fused_level_3, c1 - 3, (c0 - 14) / 8);
	    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
	      fused_level_2_update_0(bright_laplace_diff_2 /* buf name */, dark_laplace_diff_2 /* buf name */, bright_weights_normed_gauss_ds_2 /* buf name */, dark_weights_normed_gauss_ds_2 /* buf name */, fused_level_2, c1 - 3, (c0 - 14) / 4);
	    if (c0 >= 6 && c0 <= 1084 && c1 >= 2 && c1 <= 121 && c0 % 2 == 0)
	      fused_level_1_update_0(bright_laplace_diff_1 /* buf name */, dark_laplace_diff_1 /* buf name */, bright_weights_normed_gauss_ds_1 /* buf name */, dark_weights_normed_gauss_ds_1 /* buf name */, fused_level_1, c1 - 2, (c0 / 2) - 3);
	    if (c0 >= 2 && c0 <= 1081 && c1 >= 1 && c1 <= 120)
	      fused_level_0_update_0(bright_laplace_diff_0 /* buf name */, dark_laplace_diff_0 /* buf name */, bright_weights_normed /* buf name */, dark_weights_normed /* buf name */, fused_level_0, c1 - 1, c0 - 2);
	    if (c0 >= 14 && c1 >= 3 && (c0 + 2) % 4 == 0)
	      final_merged_2_update_0(fused_level_3 /* buf name */, fused_level_2 /* buf name */, final_merged_2, c1 - 3, (c0 - 14) / 4);
	    if (c0 >= 14 && c1 >= 3 && c0 % 2 == 0)
	      final_merged_1_update_0(final_merged_2 /* buf name */, fused_level_1 /* buf name */, final_merged_1, c1 - 3, (c0 / 2) - 7);
	    if (c0 >= 14 && c1 >= 3) {
	      final_merged_0_update_0(final_merged_1 /* buf name */, fused_level_0 /* buf name */, final_merged_0, c1 - 3, c0 - 14);
	      ef_tc_16_update_0(final_merged_0 /* buf name */, ef_tc_16, c1 - 3, c0 - 14);
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

void ef_tc_16_opt_wrapper(HWStream<hw_uint<256> >& /* get_args num ports = 16 */in_off_chip, HWStream<hw_uint<256> >& /* get_args num ports = 16 */ef_tc_16, const int num_epochs) {

  for (int epoch = 0; epoch < num_epochs; epoch++) {
    ef_tc_16_opt(in_off_chip, ef_tc_16);
  }
}
#ifdef __VIVADO_SYNTH__
  // { ef_tc_16_update_0[root = 0, ef_tc_16_0, ef_tc_16_1] -> ef_tc_16[0, 0] : 0 <= ef_tc_16_0 <= 119 and 0 <= ef_tc_16_1 <= 1079 }
const int ef_tc_16_update_0_write_pipe0_num_transfers = 129600;
  // { in_update_0[root = 0, in_0, in_1] -> in_off_chip[0, 0] : 0 <= in_0 <= 122 and 0 <= in_1 <= 1086 }
const int in_update_0_read_pipe0_num_transfers = 133701;


extern "C" {

void ef_tc_16_opt_accel(hw_uint<256>* in_update_0_read_pipe0, hw_uint<256>* ef_tc_16_update_0_write_pipe0, const int size) { 
#pragma HLS dataflow
#pragma HLS INTERFACE m_axi port = in_update_0_read_pipe0 offset = slave depth = 65536 bundle = gmem0
#pragma HLS INTERFACE m_axi port = ef_tc_16_update_0_write_pipe0 offset = slave depth = 65536 bundle = gmem1

#pragma HLS INTERFACE s_axilite port = in_update_0_read_pipe0 bundle = control
#pragma HLS INTERFACE s_axilite port = ef_tc_16_update_0_write_pipe0 bundle = control
#pragma HLS INTERFACE s_axilite port = size bundle = control
#pragma HLS INTERFACE s_axilite port = return bundle = control


  // Pipeline # 0
  static HWStream<hw_uint<256> > in_update_0_read_pipe0_channel;
  static HWStream<hw_uint<256> > ef_tc_16_update_0_write_pipe0_channel;

  burst_read<256>(in_update_0_read_pipe0, in_update_0_read_pipe0_channel, in_update_0_read_pipe0_num_transfers*size);

  ef_tc_16_opt_wrapper(in_update_0_read_pipe0_channel, ef_tc_16_update_0_write_pipe0_channel, size);

  burst_write<256>(ef_tc_16_update_0_write_pipe0, ef_tc_16_update_0_write_pipe0_channel, ef_tc_16_update_0_write_pipe0_num_transfers*size);
}

}
#endif //__VIVADO_SYNTH__

