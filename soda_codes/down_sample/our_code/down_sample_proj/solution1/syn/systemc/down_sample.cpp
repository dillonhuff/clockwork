// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "down_sample.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic down_sample::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic down_sample::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> down_sample::ap_ST_fsm_state1 = "1";
const sc_lv<3> down_sample::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> down_sample::ap_ST_fsm_state6 = "100";
const sc_lv<32> down_sample::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool down_sample::ap_const_boolean_1 = true;
const sc_lv<32> down_sample::ap_const_lv32_1 = "1";
const bool down_sample::ap_const_boolean_0 = false;
const sc_lv<1> down_sample::ap_const_lv1_0 = "0";
const sc_lv<1> down_sample::ap_const_lv1_1 = "1";
const sc_lv<15> down_sample::ap_const_lv15_0 = "000000000000000";
const sc_lv<14> down_sample::ap_const_lv14_0 = "00000000000000";
const sc_lv<7> down_sample::ap_const_lv7_0 = "0000000";
const sc_lv<15> down_sample::ap_const_lv15_4000 = "100000000000000";
const sc_lv<15> down_sample::ap_const_lv15_1 = "1";
const sc_lv<14> down_sample::ap_const_lv14_1000 = "1000000000000";
const sc_lv<7> down_sample::ap_const_lv7_40 = "1000000";
const sc_lv<7> down_sample::ap_const_lv7_1 = "1";
const sc_lv<32> down_sample::ap_const_lv32_3E = "111110";
const sc_lv<32> down_sample::ap_const_lv32_3D = "111101";
const sc_lv<14> down_sample::ap_const_lv14_1 = "1";
const sc_lv<32> down_sample::ap_const_lv32_2 = "10";
const sc_lv<32> down_sample::ap_const_lv32_F = "1111";

down_sample::down_sample(sc_module_name name) : sc_module(name), mVcdFile(0) {
    hw_input_stencil_hw_s_U = new down_sample_hw_inbkb("hw_input_stencil_hw_s_U");
    hw_input_stencil_hw_s_U->clk(ap_clk);
    hw_input_stencil_hw_s_U->reset(ap_rst);
    hw_input_stencil_hw_s_U->address0(hw_input_stencil_hw_s_address0);
    hw_input_stencil_hw_s_U->ce0(hw_input_stencil_hw_s_ce0);
    hw_input_stencil_hw_s_U->q0(hw_input_stencil_hw_s_q0);
    hw_input_stencil_hw_s_U->address1(hw_input_stencil_hw_s_address1);
    hw_input_stencil_hw_s_U->ce1(hw_input_stencil_hw_s_ce1);
    hw_input_stencil_hw_s_U->we1(hw_input_stencil_hw_s_we1);
    hw_input_stencil_hw_s_U->d1(hw_input_stencil_1_2_1_reg_446);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln121_fu_313_p2);
    sensitive << ( ap_phi_mux_addr_2_phi_fu_161_p4 );

    SC_METHOD(thread_add_ln31_1_fu_402_p2);
    sensitive << ( p_Val2_1_load_1_reg_490 );
    sensitive << ( p_Val2_s_fu_72 );

    SC_METHOD(thread_add_ln31_fu_397_p2);
    sensitive << ( tmp_val_V_reg_495 );
    sensitive << ( hw_input_stencil_hw_s_q0 );

    SC_METHOD(thread_add_ln407_fu_202_p2);
    sensitive << ( indvar_flatten23_reg_124 );

    SC_METHOD(thread_add_ln408_1_fu_345_p2);
    sensitive << ( indvar_flatten_reg_135 );

    SC_METHOD(thread_addr_fu_301_p2);
    sensitive << ( ap_phi_mux_addr_2_phi_fu_161_p4 );

    SC_METHOD(thread_and_ln408_fu_245_p2);
    sensitive << ( icmp_ln409_fu_239_p2 );
    sensitive << ( xor_ln408_fu_233_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( input_copy_stencil_values_V_val_V_empty_n );
    sensitive << ( hw_output_stencil_values_V_val_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln407_reg_451 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( or_ln412_reg_476_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( input_copy_stencil_values_V_val_V_empty_n );
    sensitive << ( hw_output_stencil_values_V_val_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln407_reg_451 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( or_ln412_reg_476_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( input_copy_stencil_values_V_val_V_empty_n );
    sensitive << ( hw_output_stencil_values_V_val_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln407_reg_451 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( or_ln412_reg_476_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( input_copy_stencil_values_V_val_V_empty_n );
    sensitive << ( icmp_ln407_reg_451 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);
    sensitive << ( hw_output_stencil_values_V_val_V_full_n );
    sensitive << ( or_ln412_reg_476_pp0_iter2_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln407_fu_196_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_addr_2_phi_fu_161_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln407_reg_451 );
    sensitive << ( addr_2_reg_157 );
    sensitive << ( hw_input_stencil_hw_3_reg_471 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_sig_allocacmp_p_Val2_1_load);
    sensitive << ( input_copy_stencil_values_V_val_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln407_reg_451 );
    sensitive << ( p_Val2_1_fu_80 );

    SC_METHOD(thread_c2_fu_251_p2);
    sensitive << ( select_ln408_fu_219_p3 );

    SC_METHOD(thread_c3_fu_339_p2);
    sensitive << ( select_ln408_1_fu_263_p3 );

    SC_METHOD(thread_hw_input_stencil_hw_3_fu_319_p3);
    sensitive << ( icmp_ln121_fu_307_p2 );
    sensitive << ( add_ln121_fu_313_p2 );

    SC_METHOD(thread_hw_input_stencil_hw_s_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln112_fu_374_p1 );

    SC_METHOD(thread_hw_input_stencil_hw_s_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln120_fu_379_p1 );

    SC_METHOD(thread_hw_input_stencil_hw_s_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_hw_input_stencil_hw_s_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_hw_input_stencil_hw_s_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln407_reg_451 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_hw_output_stencil_values_V_val_V_blk_n);
    sensitive << ( hw_output_stencil_values_V_val_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( or_ln412_reg_476_pp0_iter2_reg );

    SC_METHOD(thread_hw_output_stencil_values_V_val_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( or_ln412_reg_476_pp0_iter2_reg );
    sensitive << ( p_s_reg_505 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_hw_output_stencil_values_V_val_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( or_ln412_reg_476_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln106_fu_362_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln407_reg_451 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( addr_reg_465 );

    SC_METHOD(thread_icmp_ln121_fu_307_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln407_fu_196_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_addr_2_phi_fu_161_p4 );

    SC_METHOD(thread_icmp_ln407_fu_196_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten23_reg_124 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln408_fu_213_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_135 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln407_fu_196_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln409_fu_239_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( c3_0_reg_169 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln407_fu_196_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_input_copy_stencil_values_V_val_V_blk_n);
    sensitive << ( input_copy_stencil_values_V_val_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln407_reg_451 );

    SC_METHOD(thread_input_copy_stencil_values_V_val_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln407_reg_451 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_or_ln408_1_fu_257_p2);
    sensitive << ( icmp_ln408_fu_213_p2 );
    sensitive << ( and_ln408_fu_245_p2 );

    SC_METHOD(thread_or_ln408_fu_227_p2);
    sensitive << ( icmp_ln408_fu_213_p2 );
    sensitive << ( xor_ln412_fu_190_p2 );

    SC_METHOD(thread_or_ln412_fu_333_p2);
    sensitive << ( select_ln408_2_fu_281_p3 );
    sensitive << ( xor_ln412_1_fu_327_p2 );

    SC_METHOD(thread_p_393_fu_407_p2);
    sensitive << ( add_ln31_1_fu_402_p2 );
    sensitive << ( add_ln31_fu_397_p2 );

    SC_METHOD(thread_select_ln106_fu_367_p3);
    sensitive << ( addr_2_reg_157 );
    sensitive << ( addr_reg_465 );
    sensitive << ( icmp_ln106_fu_362_p2 );

    SC_METHOD(thread_select_ln408_1_fu_263_p3);
    sensitive << ( c3_0_reg_169 );
    sensitive << ( or_ln408_1_fu_257_p2 );

    SC_METHOD(thread_select_ln408_2_fu_281_p3);
    sensitive << ( and_ln408_fu_245_p2 );
    sensitive << ( xor_ln412_2_fu_275_p2 );
    sensitive << ( or_ln408_fu_227_p2 );

    SC_METHOD(thread_select_ln408_3_fu_289_p3);
    sensitive << ( select_ln408_fu_219_p3 );
    sensitive << ( and_ln408_fu_245_p2 );
    sensitive << ( c2_fu_251_p2 );

    SC_METHOD(thread_select_ln408_4_fu_351_p3);
    sensitive << ( icmp_ln408_fu_213_p2 );
    sensitive << ( add_ln408_1_fu_345_p2 );

    SC_METHOD(thread_select_ln408_fu_219_p3);
    sensitive << ( c2_0_reg_146 );
    sensitive << ( icmp_ln408_fu_213_p2 );

    SC_METHOD(thread_sext_ln112_fu_374_p1);
    sensitive << ( select_ln106_fu_367_p3 );

    SC_METHOD(thread_sext_ln120_fu_379_p1);
    sensitive << ( addr_2_reg_157 );

    SC_METHOD(thread_trunc_ln408_1_fu_271_p1);
    sensitive << ( c2_fu_251_p2 );

    SC_METHOD(thread_trunc_ln408_fu_186_p1);
    sensitive << ( c2_0_reg_146 );

    SC_METHOD(thread_trunc_ln409_fu_297_p1);
    sensitive << ( select_ln408_1_fu_263_p3 );

    SC_METHOD(thread_xor_ln408_fu_233_p2);
    sensitive << ( icmp_ln408_fu_213_p2 );

    SC_METHOD(thread_xor_ln412_1_fu_327_p2);
    sensitive << ( trunc_ln409_fu_297_p1 );

    SC_METHOD(thread_xor_ln412_2_fu_275_p2);
    sensitive << ( trunc_ln408_1_fu_271_p1 );

    SC_METHOD(thread_xor_ln412_fu_190_p2);
    sensitive << ( trunc_ln408_fu_186_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln407_fu_196_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "down_sample_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_copy_stencil_values_V_val_V_dout, "(port)input_copy_stencil_values_V_val_V_dout");
    sc_trace(mVcdFile, input_copy_stencil_values_V_val_V_empty_n, "(port)input_copy_stencil_values_V_val_V_empty_n");
    sc_trace(mVcdFile, input_copy_stencil_values_V_val_V_read, "(port)input_copy_stencil_values_V_val_V_read");
    sc_trace(mVcdFile, hw_output_stencil_values_V_val_V_din, "(port)hw_output_stencil_values_V_val_V_din");
    sc_trace(mVcdFile, hw_output_stencil_values_V_val_V_full_n, "(port)hw_output_stencil_values_V_val_V_full_n");
    sc_trace(mVcdFile, hw_output_stencil_values_V_val_V_write, "(port)hw_output_stencil_values_V_val_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, input_copy_stencil_values_V_val_V_blk_n, "input_copy_stencil_values_V_val_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln407_reg_451, "icmp_ln407_reg_451");
    sc_trace(mVcdFile, hw_output_stencil_values_V_val_V_blk_n, "hw_output_stencil_values_V_val_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, or_ln412_reg_476, "or_ln412_reg_476");
    sc_trace(mVcdFile, or_ln412_reg_476_pp0_iter2_reg, "or_ln412_reg_476_pp0_iter2_reg");
    sc_trace(mVcdFile, indvar_flatten23_reg_124, "indvar_flatten23_reg_124");
    sc_trace(mVcdFile, indvar_flatten_reg_135, "indvar_flatten_reg_135");
    sc_trace(mVcdFile, c2_0_reg_146, "c2_0_reg_146");
    sc_trace(mVcdFile, addr_2_reg_157, "addr_2_reg_157");
    sc_trace(mVcdFile, c3_0_reg_169, "c3_0_reg_169");
    sc_trace(mVcdFile, hw_input_stencil_1_2_1_reg_446, "hw_input_stencil_1_2_1_reg_446");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln407_fu_196_p2, "icmp_ln407_fu_196_p2");
    sc_trace(mVcdFile, icmp_ln407_reg_451_pp0_iter1_reg, "icmp_ln407_reg_451_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln407_fu_202_p2, "add_ln407_fu_202_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln408_3_fu_289_p3, "select_ln408_3_fu_289_p3");
    sc_trace(mVcdFile, addr_fu_301_p2, "addr_fu_301_p2");
    sc_trace(mVcdFile, addr_reg_465, "addr_reg_465");
    sc_trace(mVcdFile, hw_input_stencil_hw_3_fu_319_p3, "hw_input_stencil_hw_3_fu_319_p3");
    sc_trace(mVcdFile, hw_input_stencil_hw_3_reg_471, "hw_input_stencil_hw_3_reg_471");
    sc_trace(mVcdFile, or_ln412_fu_333_p2, "or_ln412_fu_333_p2");
    sc_trace(mVcdFile, or_ln412_reg_476_pp0_iter1_reg, "or_ln412_reg_476_pp0_iter1_reg");
    sc_trace(mVcdFile, c3_fu_339_p2, "c3_fu_339_p2");
    sc_trace(mVcdFile, select_ln408_4_fu_351_p3, "select_ln408_4_fu_351_p3");
    sc_trace(mVcdFile, p_Val2_1_load_1_reg_490, "p_Val2_1_load_1_reg_490");
    sc_trace(mVcdFile, tmp_val_V_reg_495, "tmp_val_V_reg_495");
    sc_trace(mVcdFile, p_s_reg_505, "p_s_reg_505");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, hw_input_stencil_hw_s_address0, "hw_input_stencil_hw_s_address0");
    sc_trace(mVcdFile, hw_input_stencil_hw_s_ce0, "hw_input_stencil_hw_s_ce0");
    sc_trace(mVcdFile, hw_input_stencil_hw_s_q0, "hw_input_stencil_hw_s_q0");
    sc_trace(mVcdFile, hw_input_stencil_hw_s_address1, "hw_input_stencil_hw_s_address1");
    sc_trace(mVcdFile, hw_input_stencil_hw_s_ce1, "hw_input_stencil_hw_s_ce1");
    sc_trace(mVcdFile, hw_input_stencil_hw_s_we1, "hw_input_stencil_hw_s_we1");
    sc_trace(mVcdFile, ap_phi_mux_addr_2_phi_fu_161_p4, "ap_phi_mux_addr_2_phi_fu_161_p4");
    sc_trace(mVcdFile, sext_ln112_fu_374_p1, "sext_ln112_fu_374_p1");
    sc_trace(mVcdFile, sext_ln120_fu_379_p1, "sext_ln120_fu_379_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_72, "p_Val2_s_fu_72");
    sc_trace(mVcdFile, hw_input_stencil_1_2_fu_76, "hw_input_stencil_1_2_fu_76");
    sc_trace(mVcdFile, p_Val2_1_fu_80, "p_Val2_1_fu_80");
    sc_trace(mVcdFile, ap_sig_allocacmp_p_Val2_1_load, "ap_sig_allocacmp_p_Val2_1_load");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, trunc_ln408_fu_186_p1, "trunc_ln408_fu_186_p1");
    sc_trace(mVcdFile, icmp_ln408_fu_213_p2, "icmp_ln408_fu_213_p2");
    sc_trace(mVcdFile, xor_ln412_fu_190_p2, "xor_ln412_fu_190_p2");
    sc_trace(mVcdFile, icmp_ln409_fu_239_p2, "icmp_ln409_fu_239_p2");
    sc_trace(mVcdFile, xor_ln408_fu_233_p2, "xor_ln408_fu_233_p2");
    sc_trace(mVcdFile, select_ln408_fu_219_p3, "select_ln408_fu_219_p3");
    sc_trace(mVcdFile, and_ln408_fu_245_p2, "and_ln408_fu_245_p2");
    sc_trace(mVcdFile, or_ln408_1_fu_257_p2, "or_ln408_1_fu_257_p2");
    sc_trace(mVcdFile, c2_fu_251_p2, "c2_fu_251_p2");
    sc_trace(mVcdFile, trunc_ln408_1_fu_271_p1, "trunc_ln408_1_fu_271_p1");
    sc_trace(mVcdFile, xor_ln412_2_fu_275_p2, "xor_ln412_2_fu_275_p2");
    sc_trace(mVcdFile, or_ln408_fu_227_p2, "or_ln408_fu_227_p2");
    sc_trace(mVcdFile, select_ln408_1_fu_263_p3, "select_ln408_1_fu_263_p3");
    sc_trace(mVcdFile, icmp_ln121_fu_307_p2, "icmp_ln121_fu_307_p2");
    sc_trace(mVcdFile, add_ln121_fu_313_p2, "add_ln121_fu_313_p2");
    sc_trace(mVcdFile, trunc_ln409_fu_297_p1, "trunc_ln409_fu_297_p1");
    sc_trace(mVcdFile, select_ln408_2_fu_281_p3, "select_ln408_2_fu_281_p3");
    sc_trace(mVcdFile, xor_ln412_1_fu_327_p2, "xor_ln412_1_fu_327_p2");
    sc_trace(mVcdFile, add_ln408_1_fu_345_p2, "add_ln408_1_fu_345_p2");
    sc_trace(mVcdFile, icmp_ln106_fu_362_p2, "icmp_ln106_fu_362_p2");
    sc_trace(mVcdFile, select_ln106_fu_367_p3, "select_ln106_fu_367_p3");
    sc_trace(mVcdFile, add_ln31_1_fu_402_p2, "add_ln31_1_fu_402_p2");
    sc_trace(mVcdFile, add_ln31_fu_397_p2, "add_ln31_fu_397_p2");
    sc_trace(mVcdFile, p_393_fu_407_p2, "p_393_fu_407_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("down_sample.hdltvin.dat");
    mHdltvoutHandle.open("down_sample.hdltvout.dat");
}

down_sample::~down_sample() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete hw_input_stencil_hw_s_U;
}

void down_sample::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        addr_2_reg_157 = hw_input_stencil_hw_3_reg_471.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        addr_2_reg_157 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln407_fu_196_p2.read()))) {
        c2_0_reg_146 = select_ln408_3_fu_289_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c2_0_reg_146 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln407_fu_196_p2.read()))) {
        c3_0_reg_169 = c3_fu_339_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c3_0_reg_169 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln407_fu_196_p2.read()))) {
        indvar_flatten23_reg_124 = add_ln407_fu_202_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten23_reg_124 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln407_fu_196_p2.read()))) {
        indvar_flatten_reg_135 = select_ln408_4_fu_351_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_135 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln407_fu_196_p2.read()))) {
        addr_reg_465 = addr_fu_301_p2.read();
        or_ln412_reg_476 = or_ln412_fu_333_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        hw_input_stencil_1_2_1_reg_446 = hw_input_stencil_1_2_fu_76.read();
        icmp_ln407_reg_451 = icmp_ln407_fu_196_p2.read();
        icmp_ln407_reg_451_pp0_iter1_reg = icmp_ln407_reg_451.read();
        or_ln412_reg_476_pp0_iter1_reg = or_ln412_reg_476.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        hw_input_stencil_1_2_fu_76 = ap_sig_allocacmp_p_Val2_1_load.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln407_fu_196_p2.read()))) {
        hw_input_stencil_hw_3_reg_471 = hw_input_stencil_hw_3_fu_319_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        or_ln412_reg_476_pp0_iter2_reg = or_ln412_reg_476_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_Val2_1_fu_80 = input_copy_stencil_values_V_val_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_Val2_1_load_1_reg_490 = p_Val2_1_fu_80.read();
        tmp_val_V_reg_495 = input_copy_stencil_values_V_val_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln407_reg_451_pp0_iter1_reg.read()))) {
        p_Val2_s_fu_72 = hw_input_stencil_hw_s_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln412_reg_476_pp0_iter1_reg.read()))) {
        p_s_reg_505 = p_393_fu_407_p2.read().range(15, 2);
    }
}

void down_sample::thread_add_ln121_fu_313_p2() {
    add_ln121_fu_313_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_addr_2_phi_fu_161_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_bigint<32>(ap_phi_mux_addr_2_phi_fu_161_p4.read()));
}

void down_sample::thread_add_ln31_1_fu_402_p2() {
    add_ln31_1_fu_402_p2 = (!p_Val2_s_fu_72.read().is_01() || !p_Val2_1_load_1_reg_490.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_Val2_s_fu_72.read()) + sc_biguint<16>(p_Val2_1_load_1_reg_490.read()));
}

void down_sample::thread_add_ln31_fu_397_p2() {
    add_ln31_fu_397_p2 = (!hw_input_stencil_hw_s_q0.read().is_01() || !tmp_val_V_reg_495.read().is_01())? sc_lv<16>(): (sc_biguint<16>(hw_input_stencil_hw_s_q0.read()) + sc_biguint<16>(tmp_val_V_reg_495.read()));
}

void down_sample::thread_add_ln407_fu_202_p2() {
    add_ln407_fu_202_p2 = (!ap_const_lv15_1.is_01() || !indvar_flatten23_reg_124.read().is_01())? sc_lv<15>(): (sc_biguint<15>(ap_const_lv15_1) + sc_biguint<15>(indvar_flatten23_reg_124.read()));
}

void down_sample::thread_add_ln408_1_fu_345_p2() {
    add_ln408_1_fu_345_p2 = (!indvar_flatten_reg_135.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(indvar_flatten_reg_135.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void down_sample::thread_addr_fu_301_p2() {
    addr_fu_301_p2 = (!ap_const_lv32_3E.is_01() || !ap_phi_mux_addr_2_phi_fu_161_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_3E) + sc_bigint<32>(ap_phi_mux_addr_2_phi_fu_161_p4.read()));
}

void down_sample::thread_and_ln408_fu_245_p2() {
    and_ln408_fu_245_p2 = (icmp_ln409_fu_239_p2.read() & xor_ln408_fu_233_p2.read());
}

void down_sample::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void down_sample::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void down_sample::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[2];
}

void down_sample::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void down_sample::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_copy_stencil_values_V_val_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, or_ln412_reg_476_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, hw_output_stencil_values_V_val_V_full_n.read())));
}

void down_sample::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_copy_stencil_values_V_val_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, or_ln412_reg_476_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, hw_output_stencil_values_V_val_V_full_n.read())));
}

void down_sample::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_copy_stencil_values_V_val_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, or_ln412_reg_476_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, hw_output_stencil_values_V_val_V_full_n.read())));
}

void down_sample::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void down_sample::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_copy_stencil_values_V_val_V_empty_n.read()));
}

void down_sample::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void down_sample::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln412_reg_476_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, hw_output_stencil_values_V_val_V_full_n.read()));
}

void down_sample::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln407_fu_196_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void down_sample::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void down_sample::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void down_sample::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void down_sample::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void down_sample::thread_ap_phi_mux_addr_2_phi_fu_161_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0))) {
        ap_phi_mux_addr_2_phi_fu_161_p4 = hw_input_stencil_hw_3_reg_471.read();
    } else {
        ap_phi_mux_addr_2_phi_fu_161_p4 = addr_2_reg_157.read();
    }
}

void down_sample::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void down_sample::thread_ap_sig_allocacmp_p_Val2_1_load() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0))) {
        ap_sig_allocacmp_p_Val2_1_load = input_copy_stencil_values_V_val_V_dout.read();
    } else {
        ap_sig_allocacmp_p_Val2_1_load = p_Val2_1_fu_80.read();
    }
}

void down_sample::thread_c2_fu_251_p2() {
    c2_fu_251_p2 = (!ap_const_lv7_1.is_01() || !select_ln408_fu_219_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(select_ln408_fu_219_p3.read()));
}

void down_sample::thread_c3_fu_339_p2() {
    c3_fu_339_p2 = (!select_ln408_1_fu_263_p3.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(select_ln408_1_fu_263_p3.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void down_sample::thread_hw_input_stencil_hw_3_fu_319_p3() {
    hw_input_stencil_hw_3_fu_319_p3 = (!icmp_ln121_fu_307_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln121_fu_307_p2.read()[0].to_bool())? ap_const_lv32_0: add_ln121_fu_313_p2.read());
}

void down_sample::thread_hw_input_stencil_hw_s_address0() {
    hw_input_stencil_hw_s_address0 =  (sc_lv<6>) (sext_ln112_fu_374_p1.read());
}

void down_sample::thread_hw_input_stencil_hw_s_address1() {
    hw_input_stencil_hw_s_address1 =  (sc_lv<6>) (sext_ln120_fu_379_p1.read());
}

void down_sample::thread_hw_input_stencil_hw_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        hw_input_stencil_hw_s_ce0 = ap_const_logic_1;
    } else {
        hw_input_stencil_hw_s_ce0 = ap_const_logic_0;
    }
}

void down_sample::thread_hw_input_stencil_hw_s_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        hw_input_stencil_hw_s_ce1 = ap_const_logic_1;
    } else {
        hw_input_stencil_hw_s_ce1 = ap_const_logic_0;
    }
}

void down_sample::thread_hw_input_stencil_hw_s_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        hw_input_stencil_hw_s_we1 = ap_const_logic_1;
    } else {
        hw_input_stencil_hw_s_we1 = ap_const_logic_0;
    }
}

void down_sample::thread_hw_output_stencil_values_V_val_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln412_reg_476_pp0_iter2_reg.read()))) {
        hw_output_stencil_values_V_val_V_blk_n = hw_output_stencil_values_V_val_V_full_n.read();
    } else {
        hw_output_stencil_values_V_val_V_blk_n = ap_const_logic_1;
    }
}

void down_sample::thread_hw_output_stencil_values_V_val_V_din() {
    hw_output_stencil_values_V_val_V_din = esl_zext<16,14>(p_s_reg_505.read());
}

void down_sample::thread_hw_output_stencil_values_V_val_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln412_reg_476_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        hw_output_stencil_values_V_val_V_write = ap_const_logic_1;
    } else {
        hw_output_stencil_values_V_val_V_write = ap_const_logic_0;
    }
}

void down_sample::thread_icmp_ln106_fu_362_p2() {
    icmp_ln106_fu_362_p2 = (!addr_reg_465.read().is_01() || !ap_const_lv32_3D.is_01())? sc_lv<1>(): (sc_bigint<32>(addr_reg_465.read()) > sc_bigint<32>(ap_const_lv32_3D));
}

void down_sample::thread_icmp_ln121_fu_307_p2() {
    icmp_ln121_fu_307_p2 = (!ap_phi_mux_addr_2_phi_fu_161_p4.read().is_01() || !ap_const_lv32_3D.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_addr_2_phi_fu_161_p4.read() == ap_const_lv32_3D);
}

void down_sample::thread_icmp_ln407_fu_196_p2() {
    icmp_ln407_fu_196_p2 = (!indvar_flatten23_reg_124.read().is_01() || !ap_const_lv15_4000.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten23_reg_124.read() == ap_const_lv15_4000);
}

void down_sample::thread_icmp_ln408_fu_213_p2() {
    icmp_ln408_fu_213_p2 = (!indvar_flatten_reg_135.read().is_01() || !ap_const_lv14_1000.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_135.read() == ap_const_lv14_1000);
}

void down_sample::thread_icmp_ln409_fu_239_p2() {
    icmp_ln409_fu_239_p2 = (!c3_0_reg_169.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(c3_0_reg_169.read() == ap_const_lv7_40);
}

void down_sample::thread_input_copy_stencil_values_V_val_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0))) {
        input_copy_stencil_values_V_val_V_blk_n = input_copy_stencil_values_V_val_V_empty_n.read();
    } else {
        input_copy_stencil_values_V_val_V_blk_n = ap_const_logic_1;
    }
}

void down_sample::thread_input_copy_stencil_values_V_val_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln407_reg_451.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        input_copy_stencil_values_V_val_V_read = ap_const_logic_1;
    } else {
        input_copy_stencil_values_V_val_V_read = ap_const_logic_0;
    }
}

void down_sample::thread_or_ln408_1_fu_257_p2() {
    or_ln408_1_fu_257_p2 = (and_ln408_fu_245_p2.read() | icmp_ln408_fu_213_p2.read());
}

void down_sample::thread_or_ln408_fu_227_p2() {
    or_ln408_fu_227_p2 = (icmp_ln408_fu_213_p2.read() | xor_ln412_fu_190_p2.read());
}

void down_sample::thread_or_ln412_fu_333_p2() {
    or_ln412_fu_333_p2 = (select_ln408_2_fu_281_p3.read() | xor_ln412_1_fu_327_p2.read());
}

void down_sample::thread_p_393_fu_407_p2() {
    p_393_fu_407_p2 = (!add_ln31_1_fu_402_p2.read().is_01() || !add_ln31_fu_397_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln31_1_fu_402_p2.read()) + sc_biguint<16>(add_ln31_fu_397_p2.read()));
}

void down_sample::thread_select_ln106_fu_367_p3() {
    select_ln106_fu_367_p3 = (!icmp_ln106_fu_362_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln106_fu_362_p2.read()[0].to_bool())? addr_2_reg_157.read(): addr_reg_465.read());
}

void down_sample::thread_select_ln408_1_fu_263_p3() {
    select_ln408_1_fu_263_p3 = (!or_ln408_1_fu_257_p2.read()[0].is_01())? sc_lv<7>(): ((or_ln408_1_fu_257_p2.read()[0].to_bool())? ap_const_lv7_0: c3_0_reg_169.read());
}

void down_sample::thread_select_ln408_2_fu_281_p3() {
    select_ln408_2_fu_281_p3 = (!and_ln408_fu_245_p2.read()[0].is_01())? sc_lv<1>(): ((and_ln408_fu_245_p2.read()[0].to_bool())? xor_ln412_2_fu_275_p2.read(): or_ln408_fu_227_p2.read());
}

void down_sample::thread_select_ln408_3_fu_289_p3() {
    select_ln408_3_fu_289_p3 = (!and_ln408_fu_245_p2.read()[0].is_01())? sc_lv<7>(): ((and_ln408_fu_245_p2.read()[0].to_bool())? c2_fu_251_p2.read(): select_ln408_fu_219_p3.read());
}

void down_sample::thread_select_ln408_4_fu_351_p3() {
    select_ln408_4_fu_351_p3 = (!icmp_ln408_fu_213_p2.read()[0].is_01())? sc_lv<14>(): ((icmp_ln408_fu_213_p2.read()[0].to_bool())? ap_const_lv14_1: add_ln408_1_fu_345_p2.read());
}

void down_sample::thread_select_ln408_fu_219_p3() {
    select_ln408_fu_219_p3 = (!icmp_ln408_fu_213_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln408_fu_213_p2.read()[0].to_bool())? ap_const_lv7_0: c2_0_reg_146.read());
}

void down_sample::thread_sext_ln112_fu_374_p1() {
    sext_ln112_fu_374_p1 = esl_sext<64,32>(select_ln106_fu_367_p3.read());
}

void down_sample::thread_sext_ln120_fu_379_p1() {
    sext_ln120_fu_379_p1 = esl_sext<64,32>(addr_2_reg_157.read());
}

void down_sample::thread_trunc_ln408_1_fu_271_p1() {
    trunc_ln408_1_fu_271_p1 = c2_fu_251_p2.read().range(1-1, 0);
}

void down_sample::thread_trunc_ln408_fu_186_p1() {
    trunc_ln408_fu_186_p1 = c2_0_reg_146.read().range(1-1, 0);
}

void down_sample::thread_trunc_ln409_fu_297_p1() {
    trunc_ln409_fu_297_p1 = select_ln408_1_fu_263_p3.read().range(1-1, 0);
}

void down_sample::thread_xor_ln408_fu_233_p2() {
    xor_ln408_fu_233_p2 = (icmp_ln408_fu_213_p2.read() ^ ap_const_lv1_1);
}

void down_sample::thread_xor_ln412_1_fu_327_p2() {
    xor_ln412_1_fu_327_p2 = (trunc_ln409_fu_297_p1.read() ^ ap_const_lv1_1);
}

void down_sample::thread_xor_ln412_2_fu_275_p2() {
    xor_ln412_2_fu_275_p2 = (trunc_ln408_1_fu_271_p1.read() ^ ap_const_lv1_1);
}

void down_sample::thread_xor_ln412_fu_190_p2() {
    xor_ln412_fu_190_p2 = (trunc_ln408_fu_186_p1.read() ^ ap_const_lv1_1);
}

void down_sample::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln407_fu_196_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln407_fu_196_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void down_sample::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_copy_stencil_values_V_val_V_dout\" :  \"" << input_copy_stencil_values_V_val_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_copy_stencil_values_V_val_V_empty_n\" :  \"" << input_copy_stencil_values_V_val_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_copy_stencil_values_V_val_V_read\" :  \"" << input_copy_stencil_values_V_val_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"hw_output_stencil_values_V_val_V_din\" :  \"" << hw_output_stencil_values_V_val_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"hw_output_stencil_values_V_val_V_full_n\" :  \"" << hw_output_stencil_values_V_val_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"hw_output_stencil_values_V_val_V_write\" :  \"" << hw_output_stencil_values_V_val_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

