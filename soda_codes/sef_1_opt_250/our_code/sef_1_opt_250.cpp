#ifndef __VIVADO_SYNTH__
#include <fstream>
using namespace std;

  // Debug utility
  ofstream* global_debug_handle;

#endif //__VIVADO_SYNTH__
// compute file: sef_1_opt_compute_units.h_merged_compute_units.h_merged_compute_units.h_merged_compute_units.h_merged_compute_units.h
#include "sef_1_opt_compute_units.h_merged_compute_units.h_merged_compute_units.h_merged_compute_units.h_merged_compute_units.h"

struct bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_103_sm586_0797_211_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_1347_sm587_0799_209_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_7811_sm758_01129_207_cache {
	// RAM Box: {[7, 1086], [7, 1086]}
	// Capacity: 1088
	// # of read delays: 1088

	fifo<hw_uint<16>, 1088> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1087 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_cache {
  // Reader addrs...
    // { load_to_bright_to_gp_103_sm586_0797[root = 0, bright_ld2, bright_ld1] -> bright[bright_ld1, bright_ld2] : 0 <= bright_ld2 <= 1086 and 0 <= bright_ld1 <= 1086 }
    // { load_to_bright_to_gp_1347_sm587_0799[root = 0, bright_ld6, bright_ld5] -> bright[bright_ld5, bright_ld6] : 0 <= bright_ld6 <= 1086 and 0 <= bright_ld5 <= 1086 }
    // { load_to_bright_to_gp_7811_sm758_01129[root = 0, bright_ld10, bright_ld9] -> bright[7 + bright_ld9, 7 + bright_ld10] : 0 <= bright_ld10 <= 1079 and 0 <= bright_ld9 <= 1079 }
  // # of banks: 3
  bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_103_sm586_0797_211_cache bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_103_sm586_0797_211;
  bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_1347_sm587_0799_209_cache bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_1347_sm587_0799_209;
  bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_7811_sm758_01129_207_cache bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_7811_sm758_01129_207;
};



inline void bright_bright_update_0_sm709_01043_450_write(hw_uint<16>& bright_bright_update_0_sm709_01043_450, bright_cache& bright, int root, int bright_0, int bright_1, int dynamic_address) {
  bright.bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_103_sm586_0797_211.push(bright_bright_update_0_sm709_01043_450);
  bright.bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_1347_sm587_0799_209.push(bright_bright_update_0_sm709_01043_450);
  bright.bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_7811_sm758_01129_207.push(bright_bright_update_0_sm709_01043_450);
}

inline hw_uint<16> bright_load_to_bright_to_gp_103_sm586_0797_211_select(bright_cache& bright, int root, int bright_ld2, int bright_ld1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_load_to_bright_to_gp_103_sm586_0797_211 read pattern: { load_to_bright_to_gp_103_sm586_0797[root = 0, bright_ld2, bright_ld1] -> bright[bright_ld1, bright_ld2] : 0 <= bright_ld2 <= 1086 and 0 <= bright_ld1 <= 1086 }
  // Read schedule : { load_to_bright_to_gp_103_sm586_0797[d0 = 0, d1, d2] -> [0, d1, d2, 5] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { bright_update_0_sm709_01043[d0 = 0, d1, d2] -> [0, d1, d2, 4] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_bright_update_0_sm709_01043_450 = bright.bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_103_sm586_0797_211.peek(/* one reader or all rams */ 0);
  return value_bright_bright_update_0_sm709_01043_450;
  return 0;
}

inline hw_uint<16> bright_load_to_bright_to_gp_1347_sm587_0799_209_select(bright_cache& bright, int root, int bright_ld6, int bright_ld5, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_load_to_bright_to_gp_1347_sm587_0799_209 read pattern: { load_to_bright_to_gp_1347_sm587_0799[root = 0, bright_ld6, bright_ld5] -> bright[bright_ld5, bright_ld6] : 0 <= bright_ld6 <= 1086 and 0 <= bright_ld5 <= 1086 }
  // Read schedule : { load_to_bright_to_gp_1347_sm587_0799[d0 = 0, d1, d2] -> [0, d1, d2, 8] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { bright_update_0_sm709_01043[d0 = 0, d1, d2] -> [0, d1, d2, 4] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_bright_update_0_sm709_01043_450 = bright.bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_1347_sm587_0799_209.peek(/* one reader or all rams */ 0);
  return value_bright_bright_update_0_sm709_01043_450;
  return 0;
}

inline hw_uint<16> bright_load_to_bright_to_gp_7811_sm758_01129_207_select(bright_cache& bright, int root, int bright_ld10, int bright_ld9, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_load_to_bright_to_gp_7811_sm758_01129_207 read pattern: { load_to_bright_to_gp_7811_sm758_01129[root = 0, bright_ld10, bright_ld9] -> bright[7 + bright_ld9, 7 + bright_ld10] : 0 <= bright_ld10 <= 1079 and 0 <= bright_ld9 <= 1079 }
  // Read schedule : { load_to_bright_to_gp_7811_sm758_01129[d0 = 0, d1, d2] -> [0, 8 + d1, 7 + d2, 10] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { bright_update_0_sm709_01043[d0 = 0, d1, d2] -> [0, d1, d2, 4] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_bright_update_0_sm709_01043_450 = bright.bright_bright_update_0_sm709_01043_450_to_bright_load_to_bright_to_gp_7811_sm758_01129_207.peek(/* one reader or all rams */ (1078 - bright_ld9 >= 0 && 1078 - bright_ld10 >= 0) ? (1087) : (-1079 + bright_ld9 == 0 && 1078 - bright_ld10 >= 0) ? (1087) : (-1079 + bright_ld10 == 0 && 1078 - bright_ld9 >= 0) ? ((1079 - bright_ld9)) : 0);
  return value_bright_bright_update_0_sm709_01043_450;
  return 0;
}

// # of bundles = 4
// bright_update_0_sm709_01043_write
//	bright_bright_update_0_sm709_01043_450
inline void bright_bright_update_0_sm709_01043_write_bundle_write(hw_uint<16>& bright_update_0_sm709_01043_write, bright_cache& bright, int root, int bright_0, int bright_1, int dynamic_address) {
	hw_uint<16> bright_bright_update_0_sm709_01043_450_res = bright_update_0_sm709_01043_write.extract<0, 15>();
	bright_bright_update_0_sm709_01043_450_write(bright_bright_update_0_sm709_01043_450_res, bright, root, bright_0, bright_1, dynamic_address);
}

// load_to_bright_to_gp_103_sm586_0797_read
//	bright_load_to_bright_to_gp_103_sm586_0797_211
inline hw_uint<16> bright_load_to_bright_to_gp_103_sm586_0797_read_bundle_read(bright_cache& bright, int root, int bright_ld2, int bright_ld1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_load_to_bright_to_gp_103_sm586_0797_211

	hw_uint<16> result;
	hw_uint<16> bright_load_to_bright_to_gp_103_sm586_0797_211_res = bright_load_to_bright_to_gp_103_sm586_0797_211_select(bright, root, bright_ld2, bright_ld1, dynamic_address);
	set_at<0, 16>(result, bright_load_to_bright_to_gp_103_sm586_0797_211_res);
	return result;
}

// load_to_bright_to_gp_1347_sm587_0799_read
//	bright_load_to_bright_to_gp_1347_sm587_0799_209
inline hw_uint<16> bright_load_to_bright_to_gp_1347_sm587_0799_read_bundle_read(bright_cache& bright, int root, int bright_ld6, int bright_ld5, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_load_to_bright_to_gp_1347_sm587_0799_209

	hw_uint<16> result;
	hw_uint<16> bright_load_to_bright_to_gp_1347_sm587_0799_209_res = bright_load_to_bright_to_gp_1347_sm587_0799_209_select(bright, root, bright_ld6, bright_ld5, dynamic_address);
	set_at<0, 16>(result, bright_load_to_bright_to_gp_1347_sm587_0799_209_res);
	return result;
}

// load_to_bright_to_gp_7811_sm758_01129_read
//	bright_load_to_bright_to_gp_7811_sm758_01129_207
inline hw_uint<16> bright_load_to_bright_to_gp_7811_sm758_01129_read_bundle_read(bright_cache& bright, int root, int bright_ld10, int bright_ld9, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_load_to_bright_to_gp_7811_sm758_01129_207

	hw_uint<16> result;
	hw_uint<16> bright_load_to_bright_to_gp_7811_sm758_01129_207_res = bright_load_to_bright_to_gp_7811_sm758_01129_207_select(bright, root, bright_ld10, bright_ld9, dynamic_address);
	set_at<0, 16>(result, bright_load_to_bright_to_gp_7811_sm758_01129_207_res);
	return result;
}

struct bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 2177
	// # of read delays: 9
  // 0, 1, 2, 1087, 1088, 1089, 2174, 2175, 2176
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 1084> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 1084> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_1086() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_1087() {
		return f6;
	}

	inline hw_uint<16> peek_1088() {
		return f8;
	}

	inline hw_uint<16> peek_1089() {
		return f10;
	}

	inline hw_uint<16> peek_2173() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_2174() {
		return f12;
	}

	inline hw_uint<16> peek_2175() {
		return f14;
	}

	inline hw_uint<16> peek_2176() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1084
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1084 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1084
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1084 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_FIFO_buf284_cache {
  // Reader addrs...
    // { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[bright_gauss_blur_1_1, bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
    // { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[1 + bright_gauss_blur_1_1, bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
    // { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[2 + bright_gauss_blur_1_1, bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
    // { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[bright_gauss_blur_1_1, 1 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
    // { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[1 + bright_gauss_blur_1_1, 1 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
    // { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[2 + bright_gauss_blur_1_1, 1 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
    // { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[bright_gauss_blur_1_1, 2 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
    // { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[1 + bright_gauss_blur_1_1, 2 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
    // { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[2 + bright_gauss_blur_1_1, 2 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
  // # of banks: 1
  bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9_cache bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9;
};



inline void bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_write(hw_uint<16>& bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284, bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_to_gp_10_ld286, int bright_to_gp_10_ld285, int dynamic_address) {
  bright_FIFO_buf284.bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9.push(bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284);
}

inline hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_494_select(bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_494 read pattern: { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[bright_gauss_blur_1_1, bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_FIFO_buf284287_sm603_0831[d0 = 0, d1, d2] -> [0, d1, d2, 7] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284 = bright_FIFO_buf284.bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9.peek_2176();
  return value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284;
  return 0;
}

inline hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_495_select(bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_495 read pattern: { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[1 + bright_gauss_blur_1_1, bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_FIFO_buf284287_sm603_0831[d0 = 0, d1, d2] -> [0, d1, d2, 7] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284 = bright_FIFO_buf284.bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9.peek_2175();
  return value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284;
  return 0;
}

inline hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_496_select(bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_496 read pattern: { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[2 + bright_gauss_blur_1_1, bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_FIFO_buf284287_sm603_0831[d0 = 0, d1, d2] -> [0, d1, d2, 7] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284 = bright_FIFO_buf284.bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9.peek_2174();
  return value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284;
  return 0;
}

inline hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_497_select(bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_497 read pattern: { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[bright_gauss_blur_1_1, 1 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_FIFO_buf284287_sm603_0831[d0 = 0, d1, d2] -> [0, d1, d2, 7] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284 = bright_FIFO_buf284.bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9.peek_1089();
  return value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284;
  return 0;
}

inline hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_498_select(bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_498 read pattern: { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[1 + bright_gauss_blur_1_1, 1 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_FIFO_buf284287_sm603_0831[d0 = 0, d1, d2] -> [0, d1, d2, 7] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284 = bright_FIFO_buf284.bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9.peek_1088();
  return value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284;
  return 0;
}

inline hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_499_select(bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_499 read pattern: { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[2 + bright_gauss_blur_1_1, 1 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_FIFO_buf284287_sm603_0831[d0 = 0, d1, d2] -> [0, d1, d2, 7] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284 = bright_FIFO_buf284.bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9.peek_1087();
  return value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284;
  return 0;
}

inline hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_500_select(bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_500 read pattern: { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[bright_gauss_blur_1_1, 2 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_FIFO_buf284287_sm603_0831[d0 = 0, d1, d2] -> [0, d1, d2, 7] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284 = bright_FIFO_buf284.bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9.peek_2();
  return value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284;
  return 0;
}

inline hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_501_select(bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_501 read pattern: { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[1 + bright_gauss_blur_1_1, 2 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_FIFO_buf284287_sm603_0831[d0 = 0, d1, d2] -> [0, d1, d2, 7] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284 = bright_FIFO_buf284.bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9.peek_1();
  return value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284;
  return 0;
}

inline hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_502_select(bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_502 read pattern: { bright_gauss_blur_1_update_0_sm715_01055[root = 0, bright_gauss_blur_1_0, bright_gauss_blur_1_1] -> bright_FIFO_buf284[2 + bright_gauss_blur_1_1, 2 + bright_gauss_blur_1_0] : 0 <= bright_gauss_blur_1_0 <= 1084 and 0 <= bright_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_FIFO_buf284287_sm603_0831[d0 = 0, d1, d2] -> [0, d1, d2, 7] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284 = bright_FIFO_buf284.bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_merged_banks_9.peek_0();
  return value_bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_1_update_0_sm715_01055_read
//	bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_494
//	bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_495
//	bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_496
//	bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_497
//	bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_498
//	bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_499
//	bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_500
//	bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_501
//	bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_502
inline hw_uint<144> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_read_bundle_read(bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
  // # of ports in bundle: 9
    // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_494
    // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_495
    // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_496
    // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_497
    // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_498
    // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_499
    // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_500
    // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_501
    // bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_502

	hw_uint<144> result;
	hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_494_res = bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_494_select(bright_FIFO_buf284, root, bright_gauss_blur_1_0, bright_gauss_blur_1_1, dynamic_address);
	set_at<0, 144>(result, bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_494_res);
	hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_495_res = bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_495_select(bright_FIFO_buf284, root, bright_gauss_blur_1_0, bright_gauss_blur_1_1, dynamic_address);
	set_at<16, 144>(result, bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_495_res);
	hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_496_res = bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_496_select(bright_FIFO_buf284, root, bright_gauss_blur_1_0, bright_gauss_blur_1_1, dynamic_address);
	set_at<32, 144>(result, bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_496_res);
	hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_497_res = bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_497_select(bright_FIFO_buf284, root, bright_gauss_blur_1_0, bright_gauss_blur_1_1, dynamic_address);
	set_at<48, 144>(result, bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_497_res);
	hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_498_res = bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_498_select(bright_FIFO_buf284, root, bright_gauss_blur_1_0, bright_gauss_blur_1_1, dynamic_address);
	set_at<64, 144>(result, bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_498_res);
	hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_499_res = bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_499_select(bright_FIFO_buf284, root, bright_gauss_blur_1_0, bright_gauss_blur_1_1, dynamic_address);
	set_at<80, 144>(result, bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_499_res);
	hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_500_res = bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_500_select(bright_FIFO_buf284, root, bright_gauss_blur_1_0, bright_gauss_blur_1_1, dynamic_address);
	set_at<96, 144>(result, bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_500_res);
	hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_501_res = bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_501_select(bright_FIFO_buf284, root, bright_gauss_blur_1_0, bright_gauss_blur_1_1, dynamic_address);
	set_at<112, 144>(result, bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_501_res);
	hw_uint<16> bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_502_res = bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_502_select(bright_FIFO_buf284, root, bright_gauss_blur_1_0, bright_gauss_blur_1_1, dynamic_address);
	set_at<128, 144>(result, bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_502_res);
	return result;
}

// load_to_bright_FIFO_buf284287_sm603_0831_write
//	bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284
inline void bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_write_bundle_write(hw_uint<16>& load_to_bright_FIFO_buf284287_sm603_0831_write, bright_FIFO_buf284_cache& bright_FIFO_buf284, int root, int bright_to_gp_10_ld286, int bright_to_gp_10_ld285, int dynamic_address) {
	hw_uint<16> bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_res = load_to_bright_FIFO_buf284287_sm603_0831_write.extract<0, 15>();
	bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_write(bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_284_res, bright_FIFO_buf284, root, bright_to_gp_10_ld286, bright_to_gp_10_ld285, dynamic_address);
}

struct bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282_to_bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_FIFO_buf288_cache {
  // Reader addrs...
    // { bright_weights_update_0_sm707_01039[root = 0, bright_weights_0, bright_weights_1] -> bright_FIFO_buf288[bright_weights_1, bright_weights_0] : 0 <= bright_weights_0 <= 1086 and 0 <= bright_weights_1 <= 1086 }
  // # of banks: 1
  bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282_to_bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411_cache bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282_to_bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411;
};



inline void bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282_write(hw_uint<16>& bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282, bright_FIFO_buf288_cache& bright_FIFO_buf288, int root, int bright_to_gp_134_ld290, int bright_to_gp_134_ld289, int dynamic_address) {
  bright_FIFO_buf288.bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282_to_bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411.push(bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282);
}

inline hw_uint<16> bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411_select(bright_FIFO_buf288_cache& bright_FIFO_buf288, int root, int bright_weights_0, int bright_weights_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411 read pattern: { bright_weights_update_0_sm707_01039[root = 0, bright_weights_0, bright_weights_1] -> bright_FIFO_buf288[bright_weights_1, bright_weights_0] : 0 <= bright_weights_0 <= 1086 and 0 <= bright_weights_1 <= 1086 }
  // Read schedule : { bright_weights_update_0_sm707_01039[d0 = 0, d1, d2] -> [0, d1, d2, 15] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { load_to_bright_FIFO_buf288291_sm641_0907[d0 = 0, d1, d2] -> [0, d1, d2, 9] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282 = bright_FIFO_buf288.bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282_to_bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411.peek(/* one reader or all rams */ 0);
  return value_bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282;
  return 0;
}

// # of bundles = 2
// bright_weights_update_0_sm707_01039_read
//	bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411
inline hw_uint<16> bright_FIFO_buf288_bright_weights_update_0_sm707_01039_read_bundle_read(bright_FIFO_buf288_cache& bright_FIFO_buf288, int root, int bright_weights_0, int bright_weights_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411

	hw_uint<16> result;
	hw_uint<16> bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411_res = bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411_select(bright_FIFO_buf288, root, bright_weights_0, bright_weights_1, dynamic_address);
	set_at<0, 16>(result, bright_FIFO_buf288_bright_weights_update_0_sm707_01039_411_res);
	return result;
}

// load_to_bright_FIFO_buf288291_sm641_0907_write
//	bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282
inline void bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_write_bundle_write(hw_uint<16>& load_to_bright_FIFO_buf288291_sm641_0907_write, bright_FIFO_buf288_cache& bright_FIFO_buf288, int root, int bright_to_gp_134_ld290, int bright_to_gp_134_ld289, int dynamic_address) {
	hw_uint<16> bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282_res = load_to_bright_FIFO_buf288291_sm641_0907_write.extract<0, 15>();
	bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282_write(bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_282_res, bright_FIFO_buf288, root, bright_to_gp_134_ld290, bright_to_gp_134_ld289, dynamic_address);
}

struct bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280_to_bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465_cache {
	// RAM Box: {[7, 1086], [7, 1086]}
	// Capacity: 2
	// # of read delays: 2
  // 0, 1
	fifo<hw_uint<16>, 2> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_FIFO_buf292_cache {
  // Reader addrs...
    // { bright_laplace_diff_0_update_0_sm749_01117[root = 0, bright_laplace_diff_0_0, bright_laplace_diff_0_1] -> bright_FIFO_buf292[7 + bright_laplace_diff_0_1, 7 + bright_laplace_diff_0_0] : 0 <= bright_laplace_diff_0_0 <= 1079 and 0 <= bright_laplace_diff_0_1 <= 1079 }
  // # of banks: 1
  bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280_to_bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465_cache bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280_to_bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465;
};



inline void bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280_write(hw_uint<16>& bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280, bright_FIFO_buf292_cache& bright_FIFO_buf292, int root, int bright_to_gp_78_ld294, int bright_to_gp_78_ld293, int dynamic_address) {
  bright_FIFO_buf292.bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280_to_bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465.push(bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280);
}

inline hw_uint<16> bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465_select(bright_FIFO_buf292_cache& bright_FIFO_buf292, int root, int bright_laplace_diff_0_0, int bright_laplace_diff_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465 read pattern: { bright_laplace_diff_0_update_0_sm749_01117[root = 0, bright_laplace_diff_0_0, bright_laplace_diff_0_1] -> bright_FIFO_buf292[7 + bright_laplace_diff_0_1, 7 + bright_laplace_diff_0_0] : 0 <= bright_laplace_diff_0_0 <= 1079 and 0 <= bright_laplace_diff_0_1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0_sm749_01117[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 59] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_bright_FIFO_buf292295_sm651_0927[d0 = 0, d1, d2] -> [0, 8 + d1, 7 + d2, 11] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280 = bright_FIFO_buf292.bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280_to_bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465.peek(/* one reader or all rams */ (1078 - bright_laplace_diff_0_1 >= 0) ? (1) : 0);
  return value_bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_0_update_0_sm749_01117_read
//	bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465
inline hw_uint<16> bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_read_bundle_read(bright_FIFO_buf292_cache& bright_FIFO_buf292, int root, int bright_laplace_diff_0_0, int bright_laplace_diff_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465

	hw_uint<16> result;
	hw_uint<16> bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465_res = bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465_select(bright_FIFO_buf292, root, bright_laplace_diff_0_0, bright_laplace_diff_0_1, dynamic_address);
	set_at<0, 16>(result, bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_465_res);
	return result;
}

// load_to_bright_FIFO_buf292295_sm651_0927_write
//	bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280
inline void bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_write_bundle_write(hw_uint<16>& load_to_bright_FIFO_buf292295_sm651_0927_write, bright_FIFO_buf292_cache& bright_FIFO_buf292, int root, int bright_to_gp_78_ld294, int bright_to_gp_78_ld293, int dynamic_address) {
	hw_uint<16> bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280_res = load_to_bright_FIFO_buf292295_sm651_0927_write.extract<0, 15>();
	bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280_write(bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_280_res, bright_FIFO_buf292, root, bright_to_gp_78_ld294, bright_to_gp_78_ld293, dynamic_address);
}

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493_to_bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277_cache {
	// RAM Box: {[0, 1084], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_cache {
  // Reader addrs...
    // { load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775[root = 0, bright_gauss_blur_1_ld14, bright_gauss_blur_1_ld13] -> bright_gauss_blur_1[bright_gauss_blur_1_ld13, bright_gauss_blur_1_ld14] : 0 <= bright_gauss_blur_1_ld14 <= 1084 and 0 <= bright_gauss_blur_1_ld13 <= 1084 }
  // # of banks: 1
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493_to_bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493_to_bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277;
};



inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493, bright_gauss_blur_1_cache& bright_gauss_blur_1, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493_to_bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493);
}

inline hw_uint<16> bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int root, int bright_gauss_blur_1_ld14, int bright_gauss_blur_1_ld13, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277 read pattern: { load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775[root = 0, bright_gauss_blur_1_ld14, bright_gauss_blur_1_ld13] -> bright_gauss_blur_1[bright_gauss_blur_1_ld13, bright_gauss_blur_1_ld14] : 0 <= bright_gauss_blur_1_ld14 <= 1084 and 0 <= bright_gauss_blur_1_ld13 <= 1084 }
  // Read schedule : { load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 18] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493_to_bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_1_update_0_sm715_01055_write
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493
inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_write_bundle_write(hw_uint<16>& bright_gauss_blur_1_update_0_sm715_01055_write, bright_gauss_blur_1_cache& bright_gauss_blur_1, int root, int bright_gauss_blur_1_0, int bright_gauss_blur_1_1, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493_res = bright_gauss_blur_1_update_0_sm715_01055_write.extract<0, 15>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_493_res, bright_gauss_blur_1, root, bright_gauss_blur_1_0, bright_gauss_blur_1_1, dynamic_address);
}

// load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_read
//	bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277
inline hw_uint<16> bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_read_bundle_read(bright_gauss_blur_1_cache& bright_gauss_blur_1, int root, int bright_gauss_blur_1_ld14, int bright_gauss_blur_1_ld13, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277

	hw_uint<16> result;
	hw_uint<16> bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277_res = bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277_select(bright_gauss_blur_1, root, bright_gauss_blur_1_ld14, bright_gauss_blur_1_ld13, dynamic_address);
	set_at<0, 16>(result, bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_277_res);
	return result;
}

struct bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278_to_bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472_cache {
	// RAM Box: {[0, 1084], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_FIFO_buf296_cache {
  // Reader addrs...
    // { bright_gauss_ds_1_update_0_sm720_01065[root = 0, bright_gauss_ds_1_0, bright_gauss_ds_1_1] -> bright_gauss_blur_1_FIFO_buf296[2bright_gauss_ds_1_1, 2bright_gauss_ds_1_0] : 0 <= bright_gauss_ds_1_0 <= 542 and 0 <= bright_gauss_ds_1_1 <= 542 }
  // # of banks: 1
  bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278_to_bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472_cache bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278_to_bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472;
};



inline void bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278_write(hw_uint<16>& bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278, bright_gauss_blur_1_FIFO_buf296_cache& bright_gauss_blur_1_FIFO_buf296, int root, int bright_gauss_blur_1_to_gp_412_ld298, int bright_gauss_blur_1_to_gp_412_ld297, int dynamic_address) {
  bright_gauss_blur_1_FIFO_buf296.bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278_to_bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472.push(bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278);
}

inline hw_uint<16> bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472_select(bright_gauss_blur_1_FIFO_buf296_cache& bright_gauss_blur_1_FIFO_buf296, int root, int bright_gauss_ds_1_0, int bright_gauss_ds_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472 read pattern: { bright_gauss_ds_1_update_0_sm720_01065[root = 0, bright_gauss_ds_1_0, bright_gauss_ds_1_1] -> bright_gauss_blur_1_FIFO_buf296[2bright_gauss_ds_1_1, 2bright_gauss_ds_1_0] : 0 <= bright_gauss_ds_1_0 <= 542 and 0 <= bright_gauss_ds_1_1 <= 542 }
  // Read schedule : { bright_gauss_ds_1_update_0_sm720_01065[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 30] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  // Write schedule: { load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 28] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  auto value_bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278 = bright_gauss_blur_1_FIFO_buf296.bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278_to_bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278;
  return 0;
}

// # of bundles = 2
// bright_gauss_ds_1_update_0_sm720_01065_read
//	bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472
inline hw_uint<16> bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_read_bundle_read(bright_gauss_blur_1_FIFO_buf296_cache& bright_gauss_blur_1_FIFO_buf296, int root, int bright_gauss_ds_1_0, int bright_gauss_ds_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472

	hw_uint<16> result;
	hw_uint<16> bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472_res = bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472_select(bright_gauss_blur_1_FIFO_buf296, root, bright_gauss_ds_1_0, bright_gauss_ds_1_1, dynamic_address);
	set_at<0, 16>(result, bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_472_res);
	return result;
}

// load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_write
//	bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278
inline void bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_write_bundle_write(hw_uint<16>& load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_write, bright_gauss_blur_1_FIFO_buf296_cache& bright_gauss_blur_1_FIFO_buf296, int root, int bright_gauss_blur_1_to_gp_412_ld298, int bright_gauss_blur_1_to_gp_412_ld297, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278_res = load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_write.extract<0, 15>();
	bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278_write(bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_278_res, bright_gauss_blur_1_FIFO_buf296, root, bright_gauss_blur_1_to_gp_412_ld298, bright_gauss_blur_1_to_gp_412_ld297, dynamic_address);
}

struct bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483_to_bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273_cache {
	// RAM Box: {[0, 540], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_2_cache {
  // Reader addrs...
    // { load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801[root = 0, bright_gauss_blur_2_ld18, bright_gauss_blur_2_ld17] -> bright_gauss_blur_2[bright_gauss_blur_2_ld17, bright_gauss_blur_2_ld18] : 0 <= bright_gauss_blur_2_ld18 <= 540 and 0 <= bright_gauss_blur_2_ld17 <= 540 }
  // # of banks: 1
  bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483_to_bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273_cache bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483_to_bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273;
};



inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483, bright_gauss_blur_2_cache& bright_gauss_blur_2, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
  bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483_to_bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273.push(bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483);
}

inline hw_uint<16> bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273_select(bright_gauss_blur_2_cache& bright_gauss_blur_2, int root, int bright_gauss_blur_2_ld18, int bright_gauss_blur_2_ld17, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273 read pattern: { load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801[root = 0, bright_gauss_blur_2_ld18, bright_gauss_blur_2_ld17] -> bright_gauss_blur_2[bright_gauss_blur_2_ld17, bright_gauss_blur_2_ld18] : 0 <= bright_gauss_blur_2_ld18 <= 540 and 0 <= bright_gauss_blur_2_ld17 <= 540 }
  // Read schedule : { load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 68] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  auto value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483 = bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483_to_bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_2_update_0_sm721_01067_write
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483
inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_write_bundle_write(hw_uint<16>& bright_gauss_blur_2_update_0_sm721_01067_write, bright_gauss_blur_2_cache& bright_gauss_blur_2, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483_res = bright_gauss_blur_2_update_0_sm721_01067_write.extract<0, 15>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_483_res, bright_gauss_blur_2, root, bright_gauss_blur_2_0, bright_gauss_blur_2_1, dynamic_address);
}

// load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_read
//	bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273
inline hw_uint<16> bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_read_bundle_read(bright_gauss_blur_2_cache& bright_gauss_blur_2, int root, int bright_gauss_blur_2_ld18, int bright_gauss_blur_2_ld17, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273

	hw_uint<16> result;
	hw_uint<16> bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273_res = bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273_select(bright_gauss_blur_2, root, bright_gauss_blur_2_ld18, bright_gauss_blur_2_ld17, dynamic_address);
	set_at<0, 16>(result, bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_273_res);
	return result;
}

struct bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274_to_bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470_cache {
	// RAM Box: {[0, 540], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_2_FIFO_buf300_cache {
  // Reader addrs...
    // { bright_gauss_ds_2_update_0_sm729_01083[root = 0, bright_gauss_ds_2_0, bright_gauss_ds_2_1] -> bright_gauss_blur_2_FIFO_buf300[2bright_gauss_ds_2_1, 2bright_gauss_ds_2_0] : 0 <= bright_gauss_ds_2_0 <= 270 and 0 <= bright_gauss_ds_2_1 <= 270 }
  // # of banks: 1
  bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274_to_bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470_cache bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274_to_bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470;
};



inline void bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274_write(hw_uint<16>& bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274, bright_gauss_blur_2_FIFO_buf300_cache& bright_gauss_blur_2_FIFO_buf300, int root, int bright_gauss_blur_2_to_gp_516_ld302, int bright_gauss_blur_2_to_gp_516_ld301, int dynamic_address) {
  bright_gauss_blur_2_FIFO_buf300.bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274_to_bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470.push(bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274);
}

inline hw_uint<16> bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470_select(bright_gauss_blur_2_FIFO_buf300_cache& bright_gauss_blur_2_FIFO_buf300, int root, int bright_gauss_ds_2_0, int bright_gauss_ds_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470 read pattern: { bright_gauss_ds_2_update_0_sm729_01083[root = 0, bright_gauss_ds_2_0, bright_gauss_ds_2_1] -> bright_gauss_blur_2_FIFO_buf300[2bright_gauss_ds_2_1, 2bright_gauss_ds_2_0] : 0 <= bright_gauss_ds_2_0 <= 270 and 0 <= bright_gauss_ds_2_1 <= 270 }
  // Read schedule : { bright_gauss_ds_2_update_0_sm729_01083[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 81] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  // Write schedule: { load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 73] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  auto value_bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274 = bright_gauss_blur_2_FIFO_buf300.bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274_to_bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274;
  return 0;
}

// # of bundles = 2
// bright_gauss_ds_2_update_0_sm729_01083_read
//	bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470
inline hw_uint<16> bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_read_bundle_read(bright_gauss_blur_2_FIFO_buf300_cache& bright_gauss_blur_2_FIFO_buf300, int root, int bright_gauss_ds_2_0, int bright_gauss_ds_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470

	hw_uint<16> result;
	hw_uint<16> bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470_res = bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470_select(bright_gauss_blur_2_FIFO_buf300, root, bright_gauss_ds_2_0, bright_gauss_ds_2_1, dynamic_address);
	set_at<0, 16>(result, bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_470_res);
	return result;
}

// load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_write
//	bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274
inline void bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_write_bundle_write(hw_uint<16>& load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_write, bright_gauss_blur_2_FIFO_buf300_cache& bright_gauss_blur_2_FIFO_buf300, int root, int bright_gauss_blur_2_to_gp_516_ld302, int bright_gauss_blur_2_to_gp_516_ld301, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274_res = load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_write.extract<0, 15>();
	bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274_write(bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_274_res, bright_gauss_blur_2_FIFO_buf300, root, bright_gauss_blur_2_to_gp_516_ld302, bright_gauss_blur_2_to_gp_516_ld301, dynamic_address);
}

struct bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473_to_bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269_cache {
	// RAM Box: {[0, 268], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_3_cache {
  // Reader addrs...
    // { load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777[root = 0, bright_gauss_blur_3_ld22, bright_gauss_blur_3_ld21] -> bright_gauss_blur_3[bright_gauss_blur_3_ld21, bright_gauss_blur_3_ld22] : 0 <= bright_gauss_blur_3_ld22 <= 268 and 0 <= bright_gauss_blur_3_ld21 <= 268 }
  // # of banks: 1
  bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473_to_bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269_cache bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473_to_bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269;
};



inline void bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473_write(hw_uint<16>& bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473, bright_gauss_blur_3_cache& bright_gauss_blur_3, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
  bright_gauss_blur_3.bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473_to_bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269.push(bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473);
}

inline hw_uint<16> bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269_select(bright_gauss_blur_3_cache& bright_gauss_blur_3, int root, int bright_gauss_blur_3_ld22, int bright_gauss_blur_3_ld21, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269 read pattern: { load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777[root = 0, bright_gauss_blur_3_ld22, bright_gauss_blur_3_ld21] -> bright_gauss_blur_3[bright_gauss_blur_3_ld21, bright_gauss_blur_3_ld22] : 0 <= bright_gauss_blur_3_ld22 <= 268 and 0 <= bright_gauss_blur_3_ld21 <= 268 }
  // Read schedule : { load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 113] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  auto value_bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473 = bright_gauss_blur_3.bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473_to_bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_3_update_0_sm730_01085_write
//	bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473
inline void bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_write_bundle_write(hw_uint<16>& bright_gauss_blur_3_update_0_sm730_01085_write, bright_gauss_blur_3_cache& bright_gauss_blur_3, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473_res = bright_gauss_blur_3_update_0_sm730_01085_write.extract<0, 15>();
	bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473_write(bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_473_res, bright_gauss_blur_3, root, bright_gauss_blur_3_0, bright_gauss_blur_3_1, dynamic_address);
}

// load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_read
//	bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269
inline hw_uint<16> bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_read_bundle_read(bright_gauss_blur_3_cache& bright_gauss_blur_3, int root, int bright_gauss_blur_3_ld22, int bright_gauss_blur_3_ld21, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269

	hw_uint<16> result;
	hw_uint<16> bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269_res = bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269_select(bright_gauss_blur_3, root, bright_gauss_blur_3_ld22, bright_gauss_blur_3_ld21, dynamic_address);
	set_at<0, 16>(result, bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_269_res);
	return result;
}

struct bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270_to_bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468_cache {
	// RAM Box: {[0, 268], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_3_FIFO_buf304_cache {
  // Reader addrs...
    // { bright_gauss_ds_3_update_0_sm736_01097[root = 0, bright_gauss_ds_3_0, bright_gauss_ds_3_1] -> bright_gauss_blur_3_FIFO_buf304[2bright_gauss_ds_3_1, 2bright_gauss_ds_3_0] : 0 <= bright_gauss_ds_3_0 <= 134 and 0 <= bright_gauss_ds_3_1 <= 134 }
  // # of banks: 1
  bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270_to_bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468_cache bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270_to_bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468;
};



inline void bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270_write(hw_uint<16>& bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270, bright_gauss_blur_3_FIFO_buf304_cache& bright_gauss_blur_3_FIFO_buf304, int root, int bright_gauss_blur_3_to_gp_620_ld306, int bright_gauss_blur_3_to_gp_620_ld305, int dynamic_address) {
  bright_gauss_blur_3_FIFO_buf304.bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270_to_bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468.push(bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270);
}

inline hw_uint<16> bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468_select(bright_gauss_blur_3_FIFO_buf304_cache& bright_gauss_blur_3_FIFO_buf304, int root, int bright_gauss_ds_3_0, int bright_gauss_ds_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468 read pattern: { bright_gauss_ds_3_update_0_sm736_01097[root = 0, bright_gauss_ds_3_0, bright_gauss_ds_3_1] -> bright_gauss_blur_3_FIFO_buf304[2bright_gauss_ds_3_1, 2bright_gauss_ds_3_0] : 0 <= bright_gauss_ds_3_0 <= 134 and 0 <= bright_gauss_ds_3_1 <= 134 }
  // Read schedule : { bright_gauss_ds_3_update_0_sm736_01097[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 131] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 125] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  auto value_bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270 = bright_gauss_blur_3_FIFO_buf304.bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270_to_bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270;
  return 0;
}

// # of bundles = 2
// bright_gauss_ds_3_update_0_sm736_01097_read
//	bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468
inline hw_uint<16> bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_read_bundle_read(bright_gauss_blur_3_FIFO_buf304_cache& bright_gauss_blur_3_FIFO_buf304, int root, int bright_gauss_ds_3_0, int bright_gauss_ds_3_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468

	hw_uint<16> result;
	hw_uint<16> bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468_res = bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468_select(bright_gauss_blur_3_FIFO_buf304, root, bright_gauss_ds_3_0, bright_gauss_ds_3_1, dynamic_address);
	set_at<0, 16>(result, bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_468_res);
	return result;
}

// load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_write
//	bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270
inline void bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_write_bundle_write(hw_uint<16>& load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_write, bright_gauss_blur_3_FIFO_buf304_cache& bright_gauss_blur_3_FIFO_buf304, int root, int bright_gauss_blur_3_to_gp_620_ld306, int bright_gauss_blur_3_to_gp_620_ld305, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270_res = load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_write.extract<0, 15>();
	bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270_write(bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_270_res, bright_gauss_blur_3_FIFO_buf304, root, bright_gauss_blur_3_to_gp_620_ld306, bright_gauss_blur_3_to_gp_620_ld305, dynamic_address);
}

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259_cache {
	// RAM Box: {[0, 542], [0, 542]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 544
	// # of read delays: 544
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543
	fifo<hw_uint<16>, 544> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(543 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_cache {
  // Reader addrs...
    // { load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779[root = 0, bright_gauss_ds_1_ld26, bright_gauss_ds_1_ld25] -> bright_gauss_ds_1[3 + bright_gauss_ds_1_ld25, 3 + bright_gauss_ds_1_ld26] : 0 <= bright_gauss_ds_1_ld26 <= 539 and 0 <= bright_gauss_ds_1_ld25 <= 539 }
    // { load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781[root = 0, bright_gauss_ds_1_ld30, bright_gauss_ds_1_ld29] -> bright_gauss_ds_1[bright_gauss_ds_1_ld29, bright_gauss_ds_1_ld30] : 0 <= bright_gauss_ds_1_ld30 <= 542 and 0 <= bright_gauss_ds_1_ld29 <= 542 }
    // { load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783[root = 0, bright_gauss_ds_1_ld34, bright_gauss_ds_1_ld33] -> bright_gauss_ds_1[3 + bright_gauss_ds_1_ld33, 3 + bright_gauss_ds_1_ld34] : 0 <= bright_gauss_ds_1_ld34 <= 539 and 0 <= bright_gauss_ds_1_ld33 <= 539 }
  // # of banks: 3
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257;
};



inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471, bright_gauss_ds_1_cache& bright_gauss_ds_1, int root, int bright_gauss_ds_1_0, int bright_gauss_ds_1_1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471);
}

inline hw_uint<16> bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int root, int bright_gauss_ds_1_ld26, int bright_gauss_ds_1_ld25, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261 read pattern: { load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779[root = 0, bright_gauss_ds_1_ld26, bright_gauss_ds_1_ld25] -> bright_gauss_ds_1[3 + bright_gauss_ds_1_ld25, 3 + bright_gauss_ds_1_ld26] : 0 <= bright_gauss_ds_1_ld26 <= 539 and 0 <= bright_gauss_ds_1_ld25 <= 539 }
  // Read schedule : { load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 39] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { bright_gauss_ds_1_update_0_sm720_01065[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 30] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int root, int bright_gauss_ds_1_ld30, int bright_gauss_ds_1_ld29, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259 read pattern: { load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781[root = 0, bright_gauss_ds_1_ld30, bright_gauss_ds_1_ld29] -> bright_gauss_ds_1[bright_gauss_ds_1_ld29, bright_gauss_ds_1_ld30] : 0 <= bright_gauss_ds_1_ld30 <= 542 and 0 <= bright_gauss_ds_1_ld29 <= 542 }
  // Read schedule : { load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 34] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  // Write schedule: { bright_gauss_ds_1_update_0_sm720_01065[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 30] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int root, int bright_gauss_ds_1_ld34, int bright_gauss_ds_1_ld33, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257 read pattern: { load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783[root = 0, bright_gauss_ds_1_ld34, bright_gauss_ds_1_ld33] -> bright_gauss_ds_1[3 + bright_gauss_ds_1_ld33, 3 + bright_gauss_ds_1_ld34] : 0 <= bright_gauss_ds_1_ld34 <= 539 and 0 <= bright_gauss_ds_1_ld33 <= 539 }
  // Read schedule : { load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783[d0 = 0, d1, d2] -> [0, 10 + 2d1, 8 + 2d2, 37] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { bright_gauss_ds_1_update_0_sm720_01065[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 30] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_to_bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257.peek(/* one reader or all rams */ (538 - bright_gauss_ds_1_ld33 >= 0 && 538 - bright_gauss_ds_1_ld34 >= 0) ? (543) : (-539 + bright_gauss_ds_1_ld33 == 0 && 538 - bright_gauss_ds_1_ld34 >= 0) ? (543) : (-539 + bright_gauss_ds_1_ld34 == 0 && 538 - bright_gauss_ds_1_ld33 >= 0) ? ((539 - bright_gauss_ds_1_ld33)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471;
  return 0;
}

// # of bundles = 4
// bright_gauss_ds_1_update_0_sm720_01065_write
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471
inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_write_bundle_write(hw_uint<16>& bright_gauss_ds_1_update_0_sm720_01065_write, bright_gauss_ds_1_cache& bright_gauss_ds_1, int root, int bright_gauss_ds_1_0, int bright_gauss_ds_1_1, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_res = bright_gauss_ds_1_update_0_sm720_01065_write.extract<0, 15>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_471_res, bright_gauss_ds_1, root, bright_gauss_ds_1_0, bright_gauss_ds_1_1, dynamic_address);
}

// load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_read
//	bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261
inline hw_uint<16> bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_read_bundle_read(bright_gauss_ds_1_cache& bright_gauss_ds_1, int root, int bright_gauss_ds_1_ld26, int bright_gauss_ds_1_ld25, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261_res = bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261_select(bright_gauss_ds_1, root, bright_gauss_ds_1_ld26, bright_gauss_ds_1_ld25, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_261_res);
	return result;
}

// load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_read
//	bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259
inline hw_uint<16> bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_read_bundle_read(bright_gauss_ds_1_cache& bright_gauss_ds_1, int root, int bright_gauss_ds_1_ld30, int bright_gauss_ds_1_ld29, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259_res = bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259_select(bright_gauss_ds_1, root, bright_gauss_ds_1_ld30, bright_gauss_ds_1_ld29, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_259_res);
	return result;
}

// load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_read
//	bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257
inline hw_uint<16> bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_read_bundle_read(bright_gauss_ds_1_cache& bright_gauss_ds_1, int root, int bright_gauss_ds_1_ld34, int bright_gauss_ds_1_ld33, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257_res = bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257_select(bright_gauss_ds_1, root, bright_gauss_ds_1_ld34, bright_gauss_ds_1_ld33, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_257_res);
	return result;
}

struct bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266_to_bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 540
	// # of read delays: 541
  // 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539
	fifo<hw_uint<16>, 540> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(539 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_FIFO_buf308_cache {
  // Reader addrs...
    // { bright_laplace_us_0_update_0_sm746_01111[root = 0, bright_laplace_us_0_0, bright_laplace_us_0_1] -> bright_gauss_ds_1_FIFO_buf308[o0, o1] : 0 <= bright_laplace_us_0_0 <= 1079 and 0 <= bright_laplace_us_0_1 <= 1079 and 5 + bright_laplace_us_0_1 <= 2o0 <= 6 + bright_laplace_us_0_1 and 5 + bright_laplace_us_0_0 <= 2o1 <= 6 + bright_laplace_us_0_0 }
  // # of banks: 1
  bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266_to_bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457_cache bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266_to_bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457;
};



inline void bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266_write(hw_uint<16>& bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266, bright_gauss_ds_1_FIFO_buf308_cache& bright_gauss_ds_1_FIFO_buf308, int root, int bright_gauss_ds_1_to_gp_1024_ld310, int bright_gauss_ds_1_to_gp_1024_ld309, int dynamic_address) {
  bright_gauss_ds_1_FIFO_buf308.bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266_to_bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457.push(bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266);
}

inline hw_uint<16> bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457_select(bright_gauss_ds_1_FIFO_buf308_cache& bright_gauss_ds_1_FIFO_buf308, int root, int bright_laplace_us_0_0, int bright_laplace_us_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457 read pattern: { bright_laplace_us_0_update_0_sm746_01111[root = 0, bright_laplace_us_0_0, bright_laplace_us_0_1] -> bright_gauss_ds_1_FIFO_buf308[o0, o1] : 0 <= bright_laplace_us_0_0 <= 1079 and 0 <= bright_laplace_us_0_1 <= 1079 and 5 + bright_laplace_us_0_1 <= 2o0 <= 6 + bright_laplace_us_0_1 and 5 + bright_laplace_us_0_0 <= 2o1 <= 6 + bright_laplace_us_0_0 }
  // Read schedule : { bright_laplace_us_0_update_0_sm746_01111[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 45] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 44] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266 = bright_gauss_ds_1_FIFO_buf308.bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266_to_bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457.peek(/* one reader or all rams */ ((-1 - bright_laplace_us_0_0) % 2 == 0 && 1077 - bright_laplace_us_0_1 >= 0) ? ((539 - floord(2*bright_laplace_us_0_1, 4))) : 0);
  return value_bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266;
  return 0;
}

// # of bundles = 2
// bright_laplace_us_0_update_0_sm746_01111_read
//	bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457
inline hw_uint<16> bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_read_bundle_read(bright_gauss_ds_1_FIFO_buf308_cache& bright_gauss_ds_1_FIFO_buf308, int root, int bright_laplace_us_0_0, int bright_laplace_us_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457_res = bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457_select(bright_gauss_ds_1_FIFO_buf308, root, bright_laplace_us_0_0, bright_laplace_us_0_1, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_457_res);
	return result;
}

// load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_write
//	bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266
inline void bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_write_bundle_write(hw_uint<16>& load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_write, bright_gauss_ds_1_FIFO_buf308_cache& bright_gauss_ds_1_FIFO_buf308, int root, int bright_gauss_ds_1_to_gp_1024_ld310, int bright_gauss_ds_1_to_gp_1024_ld309, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266_res = load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_write.extract<0, 15>();
	bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266_write(bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_266_res, bright_gauss_ds_1_FIFO_buf308, root, bright_gauss_ds_1_to_gp_1024_ld310, bright_gauss_ds_1_to_gp_1024_ld309, dynamic_address);
}

struct bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9_cache {
	// RAM Box: {[0, 542], [0, 542]}
	// Capacity: 1089
	// # of read delays: 9
  // 0, 1, 2, 543, 544, 545, 1086, 1087, 1088
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 540> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 540> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_542() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_543() {
		return f6;
	}

	inline hw_uint<16> peek_544() {
		return f8;
	}

	inline hw_uint<16> peek_545() {
		return f10;
	}

	inline hw_uint<16> peek_1085() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_1086() {
		return f12;
	}

	inline hw_uint<16> peek_1087() {
		return f14;
	}

	inline hw_uint<16> peek_1088() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 540
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 540 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 540
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 540 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_FIFO_buf312_cache {
  // Reader addrs...
    // { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[bright_gauss_blur_2_1, bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
    // { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[1 + bright_gauss_blur_2_1, bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
    // { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[2 + bright_gauss_blur_2_1, bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
    // { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[bright_gauss_blur_2_1, 1 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
    // { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[1 + bright_gauss_blur_2_1, 1 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
    // { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[2 + bright_gauss_blur_2_1, 1 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
    // { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[bright_gauss_blur_2_1, 2 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
    // { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[1 + bright_gauss_blur_2_1, 2 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
    // { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[2 + bright_gauss_blur_2_1, 2 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
  // # of banks: 1
  bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9_cache bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9;
};



inline void bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_write(hw_uint<16>& bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264, bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_ds_1_to_gp_228_ld314, int bright_gauss_ds_1_to_gp_228_ld313, int dynamic_address) {
  bright_gauss_ds_1_FIFO_buf312.bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9.push(bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264);
}

inline hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_484_select(bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_484 read pattern: { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[bright_gauss_blur_2_1, bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 42] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264 = bright_gauss_ds_1_FIFO_buf312.bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9.peek_1088();
  return value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_485_select(bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_485 read pattern: { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[1 + bright_gauss_blur_2_1, bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 42] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264 = bright_gauss_ds_1_FIFO_buf312.bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9.peek_1087();
  return value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_486_select(bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_486 read pattern: { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[2 + bright_gauss_blur_2_1, bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 42] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264 = bright_gauss_ds_1_FIFO_buf312.bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9.peek_1086();
  return value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_487_select(bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_487 read pattern: { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[bright_gauss_blur_2_1, 1 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 42] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264 = bright_gauss_ds_1_FIFO_buf312.bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9.peek_545();
  return value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_488_select(bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_488 read pattern: { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[1 + bright_gauss_blur_2_1, 1 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 42] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264 = bright_gauss_ds_1_FIFO_buf312.bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9.peek_544();
  return value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_489_select(bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_489 read pattern: { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[2 + bright_gauss_blur_2_1, 1 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 42] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264 = bright_gauss_ds_1_FIFO_buf312.bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9.peek_543();
  return value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_490_select(bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_490 read pattern: { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[bright_gauss_blur_2_1, 2 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 42] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264 = bright_gauss_ds_1_FIFO_buf312.bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9.peek_2();
  return value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_491_select(bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_491 read pattern: { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[1 + bright_gauss_blur_2_1, 2 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 42] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264 = bright_gauss_ds_1_FIFO_buf312.bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9.peek_1();
  return value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_492_select(bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_492 read pattern: { bright_gauss_blur_2_update_0_sm721_01067[root = 0, bright_gauss_blur_2_0, bright_gauss_blur_2_1] -> bright_gauss_ds_1_FIFO_buf312[2 + bright_gauss_blur_2_1, 2 + bright_gauss_blur_2_0] : 0 <= bright_gauss_blur_2_0 <= 540 and 0 <= bright_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 42] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264 = bright_gauss_ds_1_FIFO_buf312.bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_merged_banks_9.peek_0();
  return value_bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_2_update_0_sm721_01067_read
//	bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_484
//	bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_485
//	bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_486
//	bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_487
//	bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_488
//	bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_489
//	bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_490
//	bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_491
//	bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_492
inline hw_uint<144> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_read_bundle_read(bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_blur_2_0, int bright_gauss_blur_2_1, int dynamic_address) {
  // # of ports in bundle: 9
    // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_484
    // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_485
    // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_486
    // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_487
    // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_488
    // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_489
    // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_490
    // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_491
    // bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_492

	hw_uint<144> result;
	hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_484_res = bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_484_select(bright_gauss_ds_1_FIFO_buf312, root, bright_gauss_blur_2_0, bright_gauss_blur_2_1, dynamic_address);
	set_at<0, 144>(result, bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_484_res);
	hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_485_res = bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_485_select(bright_gauss_ds_1_FIFO_buf312, root, bright_gauss_blur_2_0, bright_gauss_blur_2_1, dynamic_address);
	set_at<16, 144>(result, bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_485_res);
	hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_486_res = bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_486_select(bright_gauss_ds_1_FIFO_buf312, root, bright_gauss_blur_2_0, bright_gauss_blur_2_1, dynamic_address);
	set_at<32, 144>(result, bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_486_res);
	hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_487_res = bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_487_select(bright_gauss_ds_1_FIFO_buf312, root, bright_gauss_blur_2_0, bright_gauss_blur_2_1, dynamic_address);
	set_at<48, 144>(result, bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_487_res);
	hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_488_res = bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_488_select(bright_gauss_ds_1_FIFO_buf312, root, bright_gauss_blur_2_0, bright_gauss_blur_2_1, dynamic_address);
	set_at<64, 144>(result, bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_488_res);
	hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_489_res = bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_489_select(bright_gauss_ds_1_FIFO_buf312, root, bright_gauss_blur_2_0, bright_gauss_blur_2_1, dynamic_address);
	set_at<80, 144>(result, bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_489_res);
	hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_490_res = bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_490_select(bright_gauss_ds_1_FIFO_buf312, root, bright_gauss_blur_2_0, bright_gauss_blur_2_1, dynamic_address);
	set_at<96, 144>(result, bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_490_res);
	hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_491_res = bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_491_select(bright_gauss_ds_1_FIFO_buf312, root, bright_gauss_blur_2_0, bright_gauss_blur_2_1, dynamic_address);
	set_at<112, 144>(result, bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_491_res);
	hw_uint<16> bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_492_res = bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_492_select(bright_gauss_ds_1_FIFO_buf312, root, bright_gauss_blur_2_0, bright_gauss_blur_2_1, dynamic_address);
	set_at<128, 144>(result, bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_492_res);
	return result;
}

// load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_write
//	bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264
inline void bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_write_bundle_write(hw_uint<16>& load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_write, bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int root, int bright_gauss_ds_1_to_gp_228_ld314, int bright_gauss_ds_1_to_gp_228_ld313, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_res = load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_write.extract<0, 15>();
	bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_write(bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_264_res, bright_gauss_ds_1_FIFO_buf312, root, bright_gauss_ds_1_to_gp_228_ld314, bright_gauss_ds_1_to_gp_228_ld313, dynamic_address);
}

struct bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262_to_bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_FIFO_buf316_cache {
  // Reader addrs...
    // { bright_laplace_diff_1_update_0_sm748_01115[root = 0, bright_laplace_diff_1_0, bright_laplace_diff_1_1] -> bright_gauss_ds_1_FIFO_buf316[3 + bright_laplace_diff_1_1, 3 + bright_laplace_diff_1_0] : 0 <= bright_laplace_diff_1_0 <= 539 and 0 <= bright_laplace_diff_1_1 <= 539 }
  // # of banks: 1
  bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262_to_bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462_cache bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262_to_bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462;
};



inline void bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262_write(hw_uint<16>& bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262, bright_gauss_ds_1_FIFO_buf316_cache& bright_gauss_ds_1_FIFO_buf316, int root, int bright_gauss_ds_1_to_gp_832_ld318, int bright_gauss_ds_1_to_gp_832_ld317, int dynamic_address) {
  bright_gauss_ds_1_FIFO_buf316.bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262_to_bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462.push(bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262);
}

inline hw_uint<16> bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462_select(bright_gauss_ds_1_FIFO_buf316_cache& bright_gauss_ds_1_FIFO_buf316, int root, int bright_laplace_diff_1_0, int bright_laplace_diff_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462 read pattern: { bright_laplace_diff_1_update_0_sm748_01115[root = 0, bright_laplace_diff_1_0, bright_laplace_diff_1_1] -> bright_gauss_ds_1_FIFO_buf316[3 + bright_laplace_diff_1_1, 3 + bright_laplace_diff_1_0] : 0 <= bright_laplace_diff_1_0 <= 539 and 0 <= bright_laplace_diff_1_1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0_sm748_01115[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 143] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 46] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262 = bright_gauss_ds_1_FIFO_buf316.bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262_to_bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_1_update_0_sm748_01115_read
//	bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462
inline hw_uint<16> bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_read_bundle_read(bright_gauss_ds_1_FIFO_buf316_cache& bright_gauss_ds_1_FIFO_buf316, int root, int bright_laplace_diff_1_0, int bright_laplace_diff_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462_res = bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462_select(bright_gauss_ds_1_FIFO_buf316, root, bright_laplace_diff_1_0, bright_laplace_diff_1_1, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_462_res);
	return result;
}

// load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_write
//	bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262
inline void bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_write_bundle_write(hw_uint<16>& load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_write, bright_gauss_ds_1_FIFO_buf316_cache& bright_gauss_ds_1_FIFO_buf316, int root, int bright_gauss_ds_1_to_gp_832_ld318, int bright_gauss_ds_1_to_gp_832_ld317, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262_res = load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_write.extract<0, 15>();
	bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262_write(bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_262_res, bright_gauss_ds_1_FIFO_buf316, root, bright_gauss_ds_1_to_gp_832_ld318, bright_gauss_ds_1_to_gp_832_ld317, dynamic_address);
}

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247_cache {
	// RAM Box: {[0, 270], [0, 270]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 2
	// # of read delays: 2
  // 0, 1
	fifo<hw_uint<16>, 2> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_cache {
  // Reader addrs...
    // { load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789[root = 0, bright_gauss_ds_2_ld38, bright_gauss_ds_2_ld37] -> bright_gauss_ds_2[1 + bright_gauss_ds_2_ld37, 1 + bright_gauss_ds_2_ld38] : 0 <= bright_gauss_ds_2_ld38 <= 269 and 0 <= bright_gauss_ds_2_ld37 <= 269 }
    // { load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803[root = 0, bright_gauss_ds_2_ld42, bright_gauss_ds_2_ld41] -> bright_gauss_ds_2[bright_gauss_ds_2_ld41, bright_gauss_ds_2_ld42] : 0 <= bright_gauss_ds_2_ld42 <= 270 and 0 <= bright_gauss_ds_2_ld41 <= 270 }
    // { load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785[root = 0, bright_gauss_ds_2_ld46, bright_gauss_ds_2_ld45] -> bright_gauss_ds_2[1 + bright_gauss_ds_2_ld45, 1 + bright_gauss_ds_2_ld46] : 0 <= bright_gauss_ds_2_ld46 <= 269 and 0 <= bright_gauss_ds_2_ld45 <= 269 }
  // # of banks: 3
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245;
};



inline void bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_write(hw_uint<16>& bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469, bright_gauss_ds_2_cache& bright_gauss_ds_2, int root, int bright_gauss_ds_2_0, int bright_gauss_ds_2_1, int dynamic_address) {
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469);
}

inline hw_uint<16> bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int root, int bright_gauss_ds_2_ld38, int bright_gauss_ds_2_ld37, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249 read pattern: { load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789[root = 0, bright_gauss_ds_2_ld38, bright_gauss_ds_2_ld37] -> bright_gauss_ds_2[1 + bright_gauss_ds_2_ld37, 1 + bright_gauss_ds_2_ld38] : 0 <= bright_gauss_ds_2_ld38 <= 269 and 0 <= bright_gauss_ds_2_ld37 <= 269 }
  // Read schedule : { load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 84] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { bright_gauss_ds_2_update_0_sm729_01083[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 81] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int root, int bright_gauss_ds_2_ld42, int bright_gauss_ds_2_ld41, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247 read pattern: { load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803[root = 0, bright_gauss_ds_2_ld42, bright_gauss_ds_2_ld41] -> bright_gauss_ds_2[bright_gauss_ds_2_ld41, bright_gauss_ds_2_ld42] : 0 <= bright_gauss_ds_2_ld42 <= 270 and 0 <= bright_gauss_ds_2_ld41 <= 270 }
  // Read schedule : { load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 82] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  // Write schedule: { bright_gauss_ds_2_update_0_sm729_01083[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 81] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int root, int bright_gauss_ds_2_ld46, int bright_gauss_ds_2_ld45, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245 read pattern: { load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785[root = 0, bright_gauss_ds_2_ld46, bright_gauss_ds_2_ld45] -> bright_gauss_ds_2[1 + bright_gauss_ds_2_ld45, 1 + bright_gauss_ds_2_ld46] : 0 <= bright_gauss_ds_2_ld46 <= 269 and 0 <= bright_gauss_ds_2_ld45 <= 269 }
  // Read schedule : { load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 89] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { bright_gauss_ds_2_update_0_sm729_01083[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 81] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_to_bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245.peek(/* one reader or all rams */ (268 - bright_gauss_ds_2_ld45 >= 0) ? (1) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469;
  return 0;
}

// # of bundles = 4
// bright_gauss_ds_2_update_0_sm729_01083_write
//	bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469
inline void bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_write_bundle_write(hw_uint<16>& bright_gauss_ds_2_update_0_sm729_01083_write, bright_gauss_ds_2_cache& bright_gauss_ds_2, int root, int bright_gauss_ds_2_0, int bright_gauss_ds_2_1, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_res = bright_gauss_ds_2_update_0_sm729_01083_write.extract<0, 15>();
	bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_write(bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_469_res, bright_gauss_ds_2, root, bright_gauss_ds_2_0, bright_gauss_ds_2_1, dynamic_address);
}

// load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_read
//	bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249
inline hw_uint<16> bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_read_bundle_read(bright_gauss_ds_2_cache& bright_gauss_ds_2, int root, int bright_gauss_ds_2_ld38, int bright_gauss_ds_2_ld37, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249_res = bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249_select(bright_gauss_ds_2, root, bright_gauss_ds_2_ld38, bright_gauss_ds_2_ld37, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_249_res);
	return result;
}

// load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_read
//	bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247
inline hw_uint<16> bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_read_bundle_read(bright_gauss_ds_2_cache& bright_gauss_ds_2, int root, int bright_gauss_ds_2_ld42, int bright_gauss_ds_2_ld41, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247_res = bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247_select(bright_gauss_ds_2, root, bright_gauss_ds_2_ld42, bright_gauss_ds_2_ld41, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_247_res);
	return result;
}

// load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_read
//	bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245
inline hw_uint<16> bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_read_bundle_read(bright_gauss_ds_2_cache& bright_gauss_ds_2, int root, int bright_gauss_ds_2_ld46, int bright_gauss_ds_2_ld45, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245_res = bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245_select(bright_gauss_ds_2, root, bright_gauss_ds_2_ld46, bright_gauss_ds_2_ld45, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_245_res);
	return result;
}

struct bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254_to_bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 270
	// # of read delays: 271
  // 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
	fifo<hw_uint<16>, 270> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(269 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_FIFO_buf320_cache {
  // Reader addrs...
    // { bright_laplace_us_1_update_0_sm745_01145[root = 0, bright_laplace_us_1_0, bright_laplace_us_1_1] -> bright_gauss_ds_2_FIFO_buf320[o0, o1] : 0 <= bright_laplace_us_1_0 <= 539 and 0 <= bright_laplace_us_1_1 <= 539 and bright_laplace_us_1_1 < 2o0 <= 2 + bright_laplace_us_1_1 and bright_laplace_us_1_0 < 2o1 <= 2 + bright_laplace_us_1_0 }
  // # of banks: 1
  bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254_to_bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455_cache bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254_to_bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455;
};



inline void bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254_write(hw_uint<16>& bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254, bright_gauss_ds_2_FIFO_buf320_cache& bright_gauss_ds_2_FIFO_buf320, int root, int bright_gauss_ds_2_to_gp_1136_ld322, int bright_gauss_ds_2_to_gp_1136_ld321, int dynamic_address) {
  bright_gauss_ds_2_FIFO_buf320.bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254_to_bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455.push(bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254);
}

inline hw_uint<16> bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455_select(bright_gauss_ds_2_FIFO_buf320_cache& bright_gauss_ds_2_FIFO_buf320, int root, int bright_laplace_us_1_0, int bright_laplace_us_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455 read pattern: { bright_laplace_us_1_update_0_sm745_01145[root = 0, bright_laplace_us_1_0, bright_laplace_us_1_1] -> bright_gauss_ds_2_FIFO_buf320[o0, o1] : 0 <= bright_laplace_us_1_0 <= 539 and 0 <= bright_laplace_us_1_1 <= 539 and bright_laplace_us_1_1 < 2o0 <= 2 + bright_laplace_us_1_1 and bright_laplace_us_1_0 < 2o1 <= 2 + bright_laplace_us_1_0 }
  // Read schedule : { bright_laplace_us_1_update_0_sm745_01145[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 109] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 96] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254 = bright_gauss_ds_2_FIFO_buf320.bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254_to_bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455.peek(/* one reader or all rams */ ((-1 - bright_laplace_us_1_0) % 2 == 0 && 537 - bright_laplace_us_1_1 >= 0) ? ((269 - floord(2*bright_laplace_us_1_1, 4))) : 0);
  return value_bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254;
  return 0;
}

// # of bundles = 2
// bright_laplace_us_1_update_0_sm745_01145_read
//	bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455
inline hw_uint<16> bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_read_bundle_read(bright_gauss_ds_2_FIFO_buf320_cache& bright_gauss_ds_2_FIFO_buf320, int root, int bright_laplace_us_1_0, int bright_laplace_us_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455_res = bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455_select(bright_gauss_ds_2_FIFO_buf320, root, bright_laplace_us_1_0, bright_laplace_us_1_1, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_455_res);
	return result;
}

// load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_write
//	bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254
inline void bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_write_bundle_write(hw_uint<16>& load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_write, bright_gauss_ds_2_FIFO_buf320_cache& bright_gauss_ds_2_FIFO_buf320, int root, int bright_gauss_ds_2_to_gp_1136_ld322, int bright_gauss_ds_2_to_gp_1136_ld321, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254_res = load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_write.extract<0, 15>();
	bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254_write(bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_254_res, bright_gauss_ds_2_FIFO_buf320, root, bright_gauss_ds_2_to_gp_1136_ld322, bright_gauss_ds_2_to_gp_1136_ld321, dynamic_address);
}

struct bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9_cache {
	// RAM Box: {[0, 270], [0, 270]}
	// Capacity: 545
	// # of read delays: 9
  // 0, 1, 2, 271, 272, 273, 542, 543, 544
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 268> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 268> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_270() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_271() {
		return f6;
	}

	inline hw_uint<16> peek_272() {
		return f8;
	}

	inline hw_uint<16> peek_273() {
		return f10;
	}

	inline hw_uint<16> peek_541() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_542() {
		return f12;
	}

	inline hw_uint<16> peek_543() {
		return f14;
	}

	inline hw_uint<16> peek_544() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 268
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 268 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 268
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 268 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_2_FIFO_buf324_cache {
  // Reader addrs...
    // { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[bright_gauss_blur_3_1, bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
    // { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[1 + bright_gauss_blur_3_1, bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
    // { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[2 + bright_gauss_blur_3_1, bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
    // { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[bright_gauss_blur_3_1, 1 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
    // { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[1 + bright_gauss_blur_3_1, 1 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
    // { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[2 + bright_gauss_blur_3_1, 1 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
    // { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[bright_gauss_blur_3_1, 2 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
    // { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[1 + bright_gauss_blur_3_1, 2 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
    // { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[2 + bright_gauss_blur_3_1, 2 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
  // # of banks: 1
  bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9_cache bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9;
};



inline void bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_write(hw_uint<16>& bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252, bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_ds_2_to_gp_340_ld326, int bright_gauss_ds_2_to_gp_340_ld325, int dynamic_address) {
  bright_gauss_ds_2_FIFO_buf324.bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9.push(bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252);
}

inline hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_474_select(bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_474 read pattern: { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[bright_gauss_blur_3_1, bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 88] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252 = bright_gauss_ds_2_FIFO_buf324.bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9.peek_544();
  return value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_475_select(bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_475 read pattern: { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[1 + bright_gauss_blur_3_1, bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 88] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252 = bright_gauss_ds_2_FIFO_buf324.bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9.peek_543();
  return value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_476_select(bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_476 read pattern: { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[2 + bright_gauss_blur_3_1, bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 88] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252 = bright_gauss_ds_2_FIFO_buf324.bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9.peek_542();
  return value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_477_select(bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_477 read pattern: { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[bright_gauss_blur_3_1, 1 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 88] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252 = bright_gauss_ds_2_FIFO_buf324.bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9.peek_273();
  return value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_478_select(bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_478 read pattern: { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[1 + bright_gauss_blur_3_1, 1 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 88] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252 = bright_gauss_ds_2_FIFO_buf324.bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9.peek_272();
  return value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_479_select(bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_479 read pattern: { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[2 + bright_gauss_blur_3_1, 1 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 88] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252 = bright_gauss_ds_2_FIFO_buf324.bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9.peek_271();
  return value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_480_select(bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_480 read pattern: { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[bright_gauss_blur_3_1, 2 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 88] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252 = bright_gauss_ds_2_FIFO_buf324.bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9.peek_2();
  return value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_481_select(bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_481 read pattern: { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[1 + bright_gauss_blur_3_1, 2 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 88] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252 = bright_gauss_ds_2_FIFO_buf324.bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_482_select(bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_482 read pattern: { bright_gauss_blur_3_update_0_sm730_01085[root = 0, bright_gauss_blur_3_0, bright_gauss_blur_3_1] -> bright_gauss_ds_2_FIFO_buf324[2 + bright_gauss_blur_3_1, 2 + bright_gauss_blur_3_0] : 0 <= bright_gauss_blur_3_0 <= 268 and 0 <= bright_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 88] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252 = bright_gauss_ds_2_FIFO_buf324.bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_merged_banks_9.peek_0();
  return value_bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_3_update_0_sm730_01085_read
//	bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_474
//	bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_475
//	bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_476
//	bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_477
//	bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_478
//	bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_479
//	bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_480
//	bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_481
//	bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_482
inline hw_uint<144> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_read_bundle_read(bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_blur_3_0, int bright_gauss_blur_3_1, int dynamic_address) {
  // # of ports in bundle: 9
    // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_474
    // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_475
    // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_476
    // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_477
    // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_478
    // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_479
    // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_480
    // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_481
    // bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_482

	hw_uint<144> result;
	hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_474_res = bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_474_select(bright_gauss_ds_2_FIFO_buf324, root, bright_gauss_blur_3_0, bright_gauss_blur_3_1, dynamic_address);
	set_at<0, 144>(result, bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_474_res);
	hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_475_res = bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_475_select(bright_gauss_ds_2_FIFO_buf324, root, bright_gauss_blur_3_0, bright_gauss_blur_3_1, dynamic_address);
	set_at<16, 144>(result, bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_475_res);
	hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_476_res = bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_476_select(bright_gauss_ds_2_FIFO_buf324, root, bright_gauss_blur_3_0, bright_gauss_blur_3_1, dynamic_address);
	set_at<32, 144>(result, bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_476_res);
	hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_477_res = bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_477_select(bright_gauss_ds_2_FIFO_buf324, root, bright_gauss_blur_3_0, bright_gauss_blur_3_1, dynamic_address);
	set_at<48, 144>(result, bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_477_res);
	hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_478_res = bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_478_select(bright_gauss_ds_2_FIFO_buf324, root, bright_gauss_blur_3_0, bright_gauss_blur_3_1, dynamic_address);
	set_at<64, 144>(result, bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_478_res);
	hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_479_res = bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_479_select(bright_gauss_ds_2_FIFO_buf324, root, bright_gauss_blur_3_0, bright_gauss_blur_3_1, dynamic_address);
	set_at<80, 144>(result, bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_479_res);
	hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_480_res = bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_480_select(bright_gauss_ds_2_FIFO_buf324, root, bright_gauss_blur_3_0, bright_gauss_blur_3_1, dynamic_address);
	set_at<96, 144>(result, bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_480_res);
	hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_481_res = bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_481_select(bright_gauss_ds_2_FIFO_buf324, root, bright_gauss_blur_3_0, bright_gauss_blur_3_1, dynamic_address);
	set_at<112, 144>(result, bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_481_res);
	hw_uint<16> bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_482_res = bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_482_select(bright_gauss_ds_2_FIFO_buf324, root, bright_gauss_blur_3_0, bright_gauss_blur_3_1, dynamic_address);
	set_at<128, 144>(result, bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_482_res);
	return result;
}

// load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_write
//	bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252
inline void bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_write_bundle_write(hw_uint<16>& load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_write, bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int root, int bright_gauss_ds_2_to_gp_340_ld326, int bright_gauss_ds_2_to_gp_340_ld325, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_res = load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_write.extract<0, 15>();
	bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_write(bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_252_res, bright_gauss_ds_2_FIFO_buf324, root, bright_gauss_ds_2_to_gp_340_ld326, bright_gauss_ds_2_to_gp_340_ld325, dynamic_address);
}

struct bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250_to_bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_FIFO_buf328_cache {
  // Reader addrs...
    // { bright_laplace_diff_2_update_0_sm747_01113[root = 0, bright_laplace_diff_2_0, bright_laplace_diff_2_1] -> bright_gauss_ds_2_FIFO_buf328[1 + bright_laplace_diff_2_1, 1 + bright_laplace_diff_2_0] : 0 <= bright_laplace_diff_2_0 <= 269 and 0 <= bright_laplace_diff_2_1 <= 269 }
  // # of banks: 1
  bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250_to_bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459_cache bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250_to_bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459;
};



inline void bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250_write(hw_uint<16>& bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250, bright_gauss_ds_2_FIFO_buf328_cache& bright_gauss_ds_2_FIFO_buf328, int root, int bright_gauss_ds_2_to_gp_944_ld330, int bright_gauss_ds_2_to_gp_944_ld329, int dynamic_address) {
  bright_gauss_ds_2_FIFO_buf328.bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250_to_bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459.push(bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250);
}

inline hw_uint<16> bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459_select(bright_gauss_ds_2_FIFO_buf328_cache& bright_gauss_ds_2_FIFO_buf328, int root, int bright_laplace_diff_2_0, int bright_laplace_diff_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459 read pattern: { bright_laplace_diff_2_update_0_sm747_01113[root = 0, bright_laplace_diff_2_0, bright_laplace_diff_2_1] -> bright_gauss_ds_2_FIFO_buf328[1 + bright_laplace_diff_2_1, 1 + bright_laplace_diff_2_0] : 0 <= bright_laplace_diff_2_0 <= 269 and 0 <= bright_laplace_diff_2_1 <= 269 }
  // Read schedule : { bright_laplace_diff_2_update_0_sm747_01113[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 168] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 101] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250 = bright_gauss_ds_2_FIFO_buf328.bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250_to_bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_2_update_0_sm747_01113_read
//	bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459
inline hw_uint<16> bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_read_bundle_read(bright_gauss_ds_2_FIFO_buf328_cache& bright_gauss_ds_2_FIFO_buf328, int root, int bright_laplace_diff_2_0, int bright_laplace_diff_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459_res = bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459_select(bright_gauss_ds_2_FIFO_buf328, root, bright_laplace_diff_2_0, bright_laplace_diff_2_1, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_459_res);
	return result;
}

// load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_write
//	bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250
inline void bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_write_bundle_write(hw_uint<16>& load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_write, bright_gauss_ds_2_FIFO_buf328_cache& bright_gauss_ds_2_FIFO_buf328, int root, int bright_gauss_ds_2_to_gp_944_ld330, int bright_gauss_ds_2_to_gp_944_ld329, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250_res = load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_write.extract<0, 15>();
	bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250_write(bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_250_res, bright_gauss_ds_2_FIFO_buf328, root, bright_gauss_ds_2_to_gp_944_ld330, bright_gauss_ds_2_to_gp_944_ld329, dynamic_address);
}

struct bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_to_bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_to_bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_cache {
  // Reader addrs...
    // { load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109[root = 0, bright_gauss_ds_3_ld50, bright_gauss_ds_3_ld49] -> bright_gauss_ds_3[bright_gauss_ds_3_ld49, bright_gauss_ds_3_ld50] : 0 <= bright_gauss_ds_3_ld50 <= 134 and 0 <= bright_gauss_ds_3_ld49 <= 134 }
    // { load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131[root = 0, bright_gauss_ds_3_ld54, bright_gauss_ds_3_ld53] -> bright_gauss_ds_3[bright_gauss_ds_3_ld53, bright_gauss_ds_3_ld54] : 0 <= bright_gauss_ds_3_ld54 <= 134 and 0 <= bright_gauss_ds_3_ld53 <= 134 }
  // # of banks: 2
  bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_to_bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239_cache bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_to_bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239;
  bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_to_bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237_cache bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_to_bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237;
};



inline void bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_write(hw_uint<16>& bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467, bright_gauss_ds_3_cache& bright_gauss_ds_3, int root, int bright_gauss_ds_3_0, int bright_gauss_ds_3_1, int dynamic_address) {
  bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_to_bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239.push(bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467);
  bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_to_bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237.push(bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467);
}

inline hw_uint<16> bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239_select(bright_gauss_ds_3_cache& bright_gauss_ds_3, int root, int bright_gauss_ds_3_ld50, int bright_gauss_ds_3_ld49, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239 read pattern: { load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109[root = 0, bright_gauss_ds_3_ld50, bright_gauss_ds_3_ld49] -> bright_gauss_ds_3[bright_gauss_ds_3_ld49, bright_gauss_ds_3_ld50] : 0 <= bright_gauss_ds_3_ld50 <= 134 and 0 <= bright_gauss_ds_3_ld49 <= 134 }
  // Read schedule : { load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 140] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { bright_gauss_ds_3_update_0_sm736_01097[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 131] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467 = bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_to_bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237_select(bright_gauss_ds_3_cache& bright_gauss_ds_3, int root, int bright_gauss_ds_3_ld54, int bright_gauss_ds_3_ld53, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237 read pattern: { load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131[root = 0, bright_gauss_ds_3_ld54, bright_gauss_ds_3_ld53] -> bright_gauss_ds_3[bright_gauss_ds_3_ld53, bright_gauss_ds_3_ld54] : 0 <= bright_gauss_ds_3_ld54 <= 134 and 0 <= bright_gauss_ds_3_ld53 <= 134 }
  // Read schedule : { load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 132] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { bright_gauss_ds_3_update_0_sm736_01097[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 131] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467 = bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_to_bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467;
  return 0;
}

// # of bundles = 3
// bright_gauss_ds_3_update_0_sm736_01097_write
//	bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467
inline void bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_write_bundle_write(hw_uint<16>& bright_gauss_ds_3_update_0_sm736_01097_write, bright_gauss_ds_3_cache& bright_gauss_ds_3, int root, int bright_gauss_ds_3_0, int bright_gauss_ds_3_1, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_res = bright_gauss_ds_3_update_0_sm736_01097_write.extract<0, 15>();
	bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_write(bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_467_res, bright_gauss_ds_3, root, bright_gauss_ds_3_0, bright_gauss_ds_3_1, dynamic_address);
}

// load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_read
//	bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239
inline hw_uint<16> bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_read_bundle_read(bright_gauss_ds_3_cache& bright_gauss_ds_3, int root, int bright_gauss_ds_3_ld50, int bright_gauss_ds_3_ld49, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239_res = bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239_select(bright_gauss_ds_3, root, bright_gauss_ds_3_ld50, bright_gauss_ds_3_ld49, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_239_res);
	return result;
}

// load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_read
//	bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237
inline hw_uint<16> bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_read_bundle_read(bright_gauss_ds_3_cache& bright_gauss_ds_3, int root, int bright_gauss_ds_3_ld54, int bright_gauss_ds_3_ld53, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237_res = bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237_select(bright_gauss_ds_3, root, bright_gauss_ds_3_ld54, bright_gauss_ds_3_ld53, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_237_res);
	return result;
}

struct bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242_to_bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 135
	// # of read delays: 136
  // 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_FIFO_buf332_cache {
  // Reader addrs...
    // { bright_laplace_us_2_update_0_sm744_01143[root = 0, bright_laplace_us_2_0, bright_laplace_us_2_1] -> bright_gauss_ds_3_FIFO_buf332[o0, o1] : 0 <= bright_laplace_us_2_0 <= 269 and 0 <= bright_laplace_us_2_1 <= 269 and -1 + bright_laplace_us_2_1 <= 2o0 <= bright_laplace_us_2_1 and -1 + bright_laplace_us_2_0 <= 2o1 <= bright_laplace_us_2_0 }
  // # of banks: 1
  bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242_to_bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453_cache bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242_to_bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453;
};



inline void bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242_write(hw_uint<16>& bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242, bright_gauss_ds_3_FIFO_buf332_cache& bright_gauss_ds_3_FIFO_buf332, int root, int bright_gauss_ds_3_to_gp_1248_ld334, int bright_gauss_ds_3_to_gp_1248_ld333, int dynamic_address) {
  bright_gauss_ds_3_FIFO_buf332.bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242_to_bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453.push(bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242);
}

inline hw_uint<16> bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453_select(bright_gauss_ds_3_FIFO_buf332_cache& bright_gauss_ds_3_FIFO_buf332, int root, int bright_laplace_us_2_0, int bright_laplace_us_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453 read pattern: { bright_laplace_us_2_update_0_sm744_01143[root = 0, bright_laplace_us_2_0, bright_laplace_us_2_1] -> bright_gauss_ds_3_FIFO_buf332[o0, o1] : 0 <= bright_laplace_us_2_0 <= 269 and 0 <= bright_laplace_us_2_1 <= 269 and -1 + bright_laplace_us_2_1 <= 2o0 <= bright_laplace_us_2_1 and -1 + bright_laplace_us_2_0 <= 2o1 <= bright_laplace_us_2_0 }
  // Read schedule : { bright_laplace_us_2_update_0_sm744_01143[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 150] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 146] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242 = bright_gauss_ds_3_FIFO_buf332.bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242_to_bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453.peek(/* one reader or all rams */ ((-1 - bright_laplace_us_2_0) % 2 == 0 && 267 - bright_laplace_us_2_1 >= 0) ? ((134 - floord(2*bright_laplace_us_2_1, 4))) : 0);
  return value_bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242;
  return 0;
}

// # of bundles = 2
// bright_laplace_us_2_update_0_sm744_01143_read
//	bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453
inline hw_uint<16> bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_read_bundle_read(bright_gauss_ds_3_FIFO_buf332_cache& bright_gauss_ds_3_FIFO_buf332, int root, int bright_laplace_us_2_0, int bright_laplace_us_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453_res = bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453_select(bright_gauss_ds_3_FIFO_buf332, root, bright_laplace_us_2_0, bright_laplace_us_2_1, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_453_res);
	return result;
}

// load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_write
//	bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242
inline void bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_write_bundle_write(hw_uint<16>& load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_write, bright_gauss_ds_3_FIFO_buf332_cache& bright_gauss_ds_3_FIFO_buf332, int root, int bright_gauss_ds_3_to_gp_1248_ld334, int bright_gauss_ds_3_to_gp_1248_ld333, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242_res = load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_write.extract<0, 15>();
	bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242_write(bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_242_res, bright_gauss_ds_3_FIFO_buf332, root, bright_gauss_ds_3_to_gp_1248_ld334, bright_gauss_ds_3_to_gp_1248_ld333, dynamic_address);
}

struct bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240_to_bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_FIFO_buf336_cache {
  // Reader addrs...
    // { fused_level_3_update_0_sm750_01119[root = 0, fused_level_3_0, fused_level_3_1] -> bright_gauss_ds_3_FIFO_buf336[fused_level_3_1, fused_level_3_0] : 0 <= fused_level_3_0 <= 134 and 0 <= fused_level_3_1 <= 134 }
  // # of banks: 1
  bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240_to_bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289_cache bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240_to_bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289;
};



inline void bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240_write(hw_uint<16>& bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240, bright_gauss_ds_3_FIFO_buf336_cache& bright_gauss_ds_3_FIFO_buf336, int root, int bright_gauss_ds_3_to_gp_4852_ld338, int bright_gauss_ds_3_to_gp_4852_ld337, int dynamic_address) {
  bright_gauss_ds_3_FIFO_buf336.bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240_to_bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289.push(bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240);
}

inline hw_uint<16> bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289_select(bright_gauss_ds_3_FIFO_buf336_cache& bright_gauss_ds_3_FIFO_buf336, int root, int fused_level_3_0, int fused_level_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289 read pattern: { fused_level_3_update_0_sm750_01119[root = 0, fused_level_3_0, fused_level_3_1] -> bright_gauss_ds_3_FIFO_buf336[fused_level_3_1, fused_level_3_0] : 0 <= fused_level_3_0 <= 134 and 0 <= fused_level_3_1 <= 134 }
  // Read schedule : { fused_level_3_update_0_sm750_01119[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 175] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 151] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240 = bright_gauss_ds_3_FIFO_buf336.bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240_to_bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240;
  return 0;
}

// # of bundles = 2
// fused_level_3_update_0_sm750_01119_read
//	bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289
inline hw_uint<16> bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_read_bundle_read(bright_gauss_ds_3_FIFO_buf336_cache& bright_gauss_ds_3_FIFO_buf336, int root, int fused_level_3_0, int fused_level_3_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289_res = bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289_select(bright_gauss_ds_3_FIFO_buf336, root, fused_level_3_0, fused_level_3_1, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_289_res);
	return result;
}

// load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_write
//	bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240
inline void bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_write_bundle_write(hw_uint<16>& load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_write, bright_gauss_ds_3_FIFO_buf336_cache& bright_gauss_ds_3_FIFO_buf336, int root, int bright_gauss_ds_3_to_gp_4852_ld338, int bright_gauss_ds_3_to_gp_4852_ld337, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240_res = load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_write.extract<0, 15>();
	bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240_write(bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_240_res, bright_gauss_ds_3_FIFO_buf336, root, bright_gauss_ds_3_to_gp_4852_ld338, bright_gauss_ds_3_to_gp_4852_ld337, dynamic_address);
}

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464_to_bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_cache {
  // Reader addrs...
    // { load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763[root = 0, bright_laplace_diff_0_ld58, bright_laplace_diff_0_ld57] -> bright_laplace_diff_0[bright_laplace_diff_0_ld57, bright_laplace_diff_0_ld58] : 0 <= bright_laplace_diff_0_ld58 <= 1079 and 0 <= bright_laplace_diff_0_ld57 <= 1079 }
  // # of banks: 1
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464_to_bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464_to_bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233;
};



inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464, bright_laplace_diff_0_cache& bright_laplace_diff_0, int root, int bright_laplace_diff_0_0, int bright_laplace_diff_0_1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464_to_bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464);
}

inline hw_uint<16> bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int root, int bright_laplace_diff_0_ld58, int bright_laplace_diff_0_ld57, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233 read pattern: { load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763[root = 0, bright_laplace_diff_0_ld58, bright_laplace_diff_0_ld57] -> bright_laplace_diff_0[bright_laplace_diff_0_ld57, bright_laplace_diff_0_ld58] : 0 <= bright_laplace_diff_0_ld58 <= 1079 and 0 <= bright_laplace_diff_0_ld57 <= 1079 }
  // Read schedule : { load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 62] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { bright_laplace_diff_0_update_0_sm749_01117[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 59] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464_to_bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_0_update_0_sm749_01117_write
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464
inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_write_bundle_write(hw_uint<16>& bright_laplace_diff_0_update_0_sm749_01117_write, bright_laplace_diff_0_cache& bright_laplace_diff_0, int root, int bright_laplace_diff_0_0, int bright_laplace_diff_0_1, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464_res = bright_laplace_diff_0_update_0_sm749_01117_write.extract<0, 15>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_464_res, bright_laplace_diff_0, root, bright_laplace_diff_0_0, bright_laplace_diff_0_1, dynamic_address);
}

// load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_read
//	bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233
inline hw_uint<16> bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_read_bundle_read(bright_laplace_diff_0_cache& bright_laplace_diff_0, int root, int bright_laplace_diff_0_ld58, int bright_laplace_diff_0_ld57, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233

	hw_uint<16> result;
	hw_uint<16> bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233_res = bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233_select(bright_laplace_diff_0, root, bright_laplace_diff_0_ld58, bright_laplace_diff_0_ld57, dynamic_address);
	set_at<0, 16>(result, bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_233_res);
	return result;
}

struct bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234_to_bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_FIFO_buf340_cache {
  // Reader addrs...
    // { fused_level_0_update_0_sm753_01125[root = 0, fused_level_0_0, fused_level_0_1] -> bright_laplace_diff_0_FIFO_buf340[fused_level_0_1, fused_level_0_0] : 0 <= fused_level_0_0 <= 1079 and 0 <= fused_level_0_1 <= 1079 }
  // # of banks: 1
  bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234_to_bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304_cache bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234_to_bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304;
};



inline void bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234_write(hw_uint<16>& bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234, bright_laplace_diff_0_FIFO_buf340_cache& bright_laplace_diff_0_FIFO_buf340, int root, int bright_laplace_diff_0_to_gp_4556_ld342, int bright_laplace_diff_0_to_gp_4556_ld341, int dynamic_address) {
  bright_laplace_diff_0_FIFO_buf340.bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234_to_bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304.push(bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234);
}

inline hw_uint<16> bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304_select(bright_laplace_diff_0_FIFO_buf340_cache& bright_laplace_diff_0_FIFO_buf340, int root, int fused_level_0_0, int fused_level_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304 read pattern: { fused_level_0_update_0_sm753_01125[root = 0, fused_level_0_0, fused_level_0_1] -> bright_laplace_diff_0_FIFO_buf340[fused_level_0_1, fused_level_0_0] : 0 <= fused_level_0_0 <= 1079 and 0 <= fused_level_0_1 <= 1079 }
  // Read schedule : { fused_level_0_update_0_sm753_01125[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 156] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 77] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234 = bright_laplace_diff_0_FIFO_buf340.bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234_to_bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234;
  return 0;
}

// # of bundles = 2
// fused_level_0_update_0_sm753_01125_read
//	bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304
inline hw_uint<16> bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_read_bundle_read(bright_laplace_diff_0_FIFO_buf340_cache& bright_laplace_diff_0_FIFO_buf340, int root, int fused_level_0_0, int fused_level_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304

	hw_uint<16> result;
	hw_uint<16> bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304_res = bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304_select(bright_laplace_diff_0_FIFO_buf340, root, fused_level_0_0, fused_level_0_1, dynamic_address);
	set_at<0, 16>(result, bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_304_res);
	return result;
}

// load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_write
//	bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234
inline void bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_write_bundle_write(hw_uint<16>& load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_write, bright_laplace_diff_0_FIFO_buf340_cache& bright_laplace_diff_0_FIFO_buf340, int root, int bright_laplace_diff_0_to_gp_4556_ld342, int bright_laplace_diff_0_to_gp_4556_ld341, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234_res = load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_write.extract<0, 15>();
	bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234_write(bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_234_res, bright_laplace_diff_0_FIFO_buf340, root, bright_laplace_diff_0_to_gp_4556_ld342, bright_laplace_diff_0_to_gp_4556_ld341, dynamic_address);
}

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461_to_bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_cache {
  // Reader addrs...
    // { load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787[root = 0, bright_laplace_diff_1_ld62, bright_laplace_diff_1_ld61] -> bright_laplace_diff_1[bright_laplace_diff_1_ld61, bright_laplace_diff_1_ld62] : 0 <= bright_laplace_diff_1_ld62 <= 539 and 0 <= bright_laplace_diff_1_ld61 <= 539 }
  // # of banks: 1
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461_to_bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461_to_bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229;
};



inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461, bright_laplace_diff_1_cache& bright_laplace_diff_1, int root, int bright_laplace_diff_1_0, int bright_laplace_diff_1_1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461_to_bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461);
}

inline hw_uint<16> bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int root, int bright_laplace_diff_1_ld62, int bright_laplace_diff_1_ld61, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229 read pattern: { load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787[root = 0, bright_laplace_diff_1_ld62, bright_laplace_diff_1_ld61] -> bright_laplace_diff_1[bright_laplace_diff_1_ld61, bright_laplace_diff_1_ld62] : 0 <= bright_laplace_diff_1_ld62 <= 539 and 0 <= bright_laplace_diff_1_ld61 <= 539 }
  // Read schedule : { load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 152] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { bright_laplace_diff_1_update_0_sm748_01115[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 143] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461_to_bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_1_update_0_sm748_01115_write
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461
inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_write_bundle_write(hw_uint<16>& bright_laplace_diff_1_update_0_sm748_01115_write, bright_laplace_diff_1_cache& bright_laplace_diff_1, int root, int bright_laplace_diff_1_0, int bright_laplace_diff_1_1, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461_res = bright_laplace_diff_1_update_0_sm748_01115_write.extract<0, 15>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_461_res, bright_laplace_diff_1, root, bright_laplace_diff_1_0, bright_laplace_diff_1_1, dynamic_address);
}

// load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_read
//	bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229
inline hw_uint<16> bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_read_bundle_read(bright_laplace_diff_1_cache& bright_laplace_diff_1, int root, int bright_laplace_diff_1_ld62, int bright_laplace_diff_1_ld61, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229

	hw_uint<16> result;
	hw_uint<16> bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229_res = bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229_select(bright_laplace_diff_1, root, bright_laplace_diff_1_ld62, bright_laplace_diff_1_ld61, dynamic_address);
	set_at<0, 16>(result, bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_229_res);
	return result;
}

struct bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230_to_bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_FIFO_buf344_cache {
  // Reader addrs...
    // { fused_level_1_update_0_sm752_01123[root = 0, fused_level_1_0, fused_level_1_1] -> bright_laplace_diff_1_FIFO_buf344[fused_level_1_1, fused_level_1_0] : 0 <= fused_level_1_0 <= 539 and 0 <= fused_level_1_1 <= 539 }
  // # of banks: 1
  bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230_to_bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299_cache bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230_to_bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299;
};



inline void bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230_write(hw_uint<16>& bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230, bright_laplace_diff_1_FIFO_buf344_cache& bright_laplace_diff_1_FIFO_buf344, int root, int bright_laplace_diff_1_to_gp_4660_ld346, int bright_laplace_diff_1_to_gp_4660_ld345, int dynamic_address) {
  bright_laplace_diff_1_FIFO_buf344.bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230_to_bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299.push(bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230);
}

inline hw_uint<16> bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299_select(bright_laplace_diff_1_FIFO_buf344_cache& bright_laplace_diff_1_FIFO_buf344, int root, int fused_level_1_0, int fused_level_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299 read pattern: { fused_level_1_update_0_sm752_01123[root = 0, fused_level_1_0, fused_level_1_1] -> bright_laplace_diff_1_FIFO_buf344[fused_level_1_1, fused_level_1_0] : 0 <= fused_level_1_0 <= 539 and 0 <= fused_level_1_1 <= 539 }
  // Read schedule : { fused_level_1_update_0_sm752_01123[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 164] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 160] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230 = bright_laplace_diff_1_FIFO_buf344.bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230_to_bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230;
  return 0;
}

// # of bundles = 2
// fused_level_1_update_0_sm752_01123_read
//	bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299
inline hw_uint<16> bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_read_bundle_read(bright_laplace_diff_1_FIFO_buf344_cache& bright_laplace_diff_1_FIFO_buf344, int root, int fused_level_1_0, int fused_level_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299

	hw_uint<16> result;
	hw_uint<16> bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299_res = bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299_select(bright_laplace_diff_1_FIFO_buf344, root, fused_level_1_0, fused_level_1_1, dynamic_address);
	set_at<0, 16>(result, bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_299_res);
	return result;
}

// load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_write
//	bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230
inline void bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_write_bundle_write(hw_uint<16>& load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_write, bright_laplace_diff_1_FIFO_buf344_cache& bright_laplace_diff_1_FIFO_buf344, int root, int bright_laplace_diff_1_to_gp_4660_ld346, int bright_laplace_diff_1_to_gp_4660_ld345, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230_res = load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_write.extract<0, 15>();
	bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230_write(bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_230_res, bright_laplace_diff_1_FIFO_buf344, root, bright_laplace_diff_1_to_gp_4660_ld346, bright_laplace_diff_1_to_gp_4660_ld345, dynamic_address);
}

struct bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458_to_bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_2_cache {
  // Reader addrs...
    // { load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791[root = 0, bright_laplace_diff_2_ld66, bright_laplace_diff_2_ld65] -> bright_laplace_diff_2[bright_laplace_diff_2_ld65, bright_laplace_diff_2_ld66] : 0 <= bright_laplace_diff_2_ld66 <= 269 and 0 <= bright_laplace_diff_2_ld65 <= 269 }
  // # of banks: 1
  bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458_to_bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225_cache bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458_to_bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225;
};



inline void bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458_write(hw_uint<16>& bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458, bright_laplace_diff_2_cache& bright_laplace_diff_2, int root, int bright_laplace_diff_2_0, int bright_laplace_diff_2_1, int dynamic_address) {
  bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458_to_bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225.push(bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458);
}

inline hw_uint<16> bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225_select(bright_laplace_diff_2_cache& bright_laplace_diff_2, int root, int bright_laplace_diff_2_ld66, int bright_laplace_diff_2_ld65, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225 read pattern: { load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791[root = 0, bright_laplace_diff_2_ld66, bright_laplace_diff_2_ld65] -> bright_laplace_diff_2[bright_laplace_diff_2_ld65, bright_laplace_diff_2_ld66] : 0 <= bright_laplace_diff_2_ld66 <= 269 and 0 <= bright_laplace_diff_2_ld65 <= 269 }
  // Read schedule : { load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 173] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { bright_laplace_diff_2_update_0_sm747_01113[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 168] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458 = bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458_to_bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_2_update_0_sm747_01113_write
//	bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458
inline void bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_write_bundle_write(hw_uint<16>& bright_laplace_diff_2_update_0_sm747_01113_write, bright_laplace_diff_2_cache& bright_laplace_diff_2, int root, int bright_laplace_diff_2_0, int bright_laplace_diff_2_1, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458_res = bright_laplace_diff_2_update_0_sm747_01113_write.extract<0, 15>();
	bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458_write(bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_458_res, bright_laplace_diff_2, root, bright_laplace_diff_2_0, bright_laplace_diff_2_1, dynamic_address);
}

// load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_read
//	bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225
inline hw_uint<16> bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_read_bundle_read(bright_laplace_diff_2_cache& bright_laplace_diff_2, int root, int bright_laplace_diff_2_ld66, int bright_laplace_diff_2_ld65, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225

	hw_uint<16> result;
	hw_uint<16> bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225_res = bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225_select(bright_laplace_diff_2, root, bright_laplace_diff_2_ld66, bright_laplace_diff_2_ld65, dynamic_address);
	set_at<0, 16>(result, bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_225_res);
	return result;
}

struct bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226_to_bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_2_FIFO_buf348_cache {
  // Reader addrs...
    // { fused_level_2_update_0_sm751_01121[root = 0, fused_level_2_0, fused_level_2_1] -> bright_laplace_diff_2_FIFO_buf348[fused_level_2_1, fused_level_2_0] : 0 <= fused_level_2_0 <= 269 and 0 <= fused_level_2_1 <= 269 }
  // # of banks: 1
  bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226_to_bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294_cache bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226_to_bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294;
};



inline void bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226_write(hw_uint<16>& bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226, bright_laplace_diff_2_FIFO_buf348_cache& bright_laplace_diff_2_FIFO_buf348, int root, int bright_laplace_diff_2_to_gp_4764_ld350, int bright_laplace_diff_2_to_gp_4764_ld349, int dynamic_address) {
  bright_laplace_diff_2_FIFO_buf348.bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226_to_bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294.push(bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226);
}

inline hw_uint<16> bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294_select(bright_laplace_diff_2_FIFO_buf348_cache& bright_laplace_diff_2_FIFO_buf348, int root, int fused_level_2_0, int fused_level_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294 read pattern: { fused_level_2_update_0_sm751_01121[root = 0, fused_level_2_0, fused_level_2_1] -> bright_laplace_diff_2_FIFO_buf348[fused_level_2_1, fused_level_2_0] : 0 <= fused_level_2_0 <= 269 and 0 <= fused_level_2_1 <= 269 }
  // Read schedule : { fused_level_2_update_0_sm751_01121[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 180] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 176] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226 = bright_laplace_diff_2_FIFO_buf348.bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226_to_bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226;
  return 0;
}

// # of bundles = 2
// fused_level_2_update_0_sm751_01121_read
//	bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294
inline hw_uint<16> bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_read_bundle_read(bright_laplace_diff_2_FIFO_buf348_cache& bright_laplace_diff_2_FIFO_buf348, int root, int fused_level_2_0, int fused_level_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294

	hw_uint<16> result;
	hw_uint<16> bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294_res = bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294_select(bright_laplace_diff_2_FIFO_buf348, root, fused_level_2_0, fused_level_2_1, dynamic_address);
	set_at<0, 16>(result, bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_294_res);
	return result;
}

// load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_write
//	bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226
inline void bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_write_bundle_write(hw_uint<16>& load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_write, bright_laplace_diff_2_FIFO_buf348_cache& bright_laplace_diff_2_FIFO_buf348, int root, int bright_laplace_diff_2_to_gp_4764_ld350, int bright_laplace_diff_2_to_gp_4764_ld349, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226_res = load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_write.extract<0, 15>();
	bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226_write(bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_226_res, bright_laplace_diff_2_FIFO_buf348, root, bright_laplace_diff_2_to_gp_4764_ld350, bright_laplace_diff_2_to_gp_4764_ld349, dynamic_address);
}

struct bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456_to_bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_cache {
  // Reader addrs...
    // { load_to_bright_laplace_us_0_to_gp_76871_sm595_0815[root = 0, bright_laplace_us_0_ld70, bright_laplace_us_0_ld69] -> bright_laplace_us_0[bright_laplace_us_0_ld69, bright_laplace_us_0_ld70] : 0 <= bright_laplace_us_0_ld70 <= 1079 and 0 <= bright_laplace_us_0_ld69 <= 1079 }
  // # of banks: 1
  bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456_to_bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221_cache bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456_to_bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221;
};



inline void bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456, bright_laplace_us_0_cache& bright_laplace_us_0, int root, int bright_laplace_us_0_0, int bright_laplace_us_0_1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456_to_bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221.push(bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456);
}

inline hw_uint<16> bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221_select(bright_laplace_us_0_cache& bright_laplace_us_0, int root, int bright_laplace_us_0_ld70, int bright_laplace_us_0_ld69, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221 read pattern: { load_to_bright_laplace_us_0_to_gp_76871_sm595_0815[root = 0, bright_laplace_us_0_ld70, bright_laplace_us_0_ld69] -> bright_laplace_us_0[bright_laplace_us_0_ld69, bright_laplace_us_0_ld70] : 0 <= bright_laplace_us_0_ld70 <= 1079 and 0 <= bright_laplace_us_0_ld69 <= 1079 }
  // Read schedule : { load_to_bright_laplace_us_0_to_gp_76871_sm595_0815[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 51] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { bright_laplace_us_0_update_0_sm746_01111[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 45] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456_to_bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456;
  return 0;
}

// # of bundles = 2
// bright_laplace_us_0_update_0_sm746_01111_write
//	bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456
inline void bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_write_bundle_write(hw_uint<16>& bright_laplace_us_0_update_0_sm746_01111_write, bright_laplace_us_0_cache& bright_laplace_us_0, int root, int bright_laplace_us_0_0, int bright_laplace_us_0_1, int dynamic_address) {
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456_res = bright_laplace_us_0_update_0_sm746_01111_write.extract<0, 15>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456_write(bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_456_res, bright_laplace_us_0, root, bright_laplace_us_0_0, bright_laplace_us_0_1, dynamic_address);
}

// load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_read
//	bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221
inline hw_uint<16> bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_read_bundle_read(bright_laplace_us_0_cache& bright_laplace_us_0, int root, int bright_laplace_us_0_ld70, int bright_laplace_us_0_ld69, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221

	hw_uint<16> result;
	hw_uint<16> bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221_res = bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221_select(bright_laplace_us_0, root, bright_laplace_us_0_ld70, bright_laplace_us_0_ld69, dynamic_address);
	set_at<0, 16>(result, bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_221_res);
	return result;
}

struct bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222_to_bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_FIFO_buf352_cache {
  // Reader addrs...
    // { bright_laplace_diff_0_update_0_sm749_01117[root = 0, bright_laplace_diff_0_0, bright_laplace_diff_0_1] -> bright_laplace_us_0_FIFO_buf352[bright_laplace_diff_0_1, bright_laplace_diff_0_0] : 0 <= bright_laplace_diff_0_0 <= 1079 and 0 <= bright_laplace_diff_0_1 <= 1079 }
  // # of banks: 1
  bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222_to_bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466_cache bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222_to_bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466;
};



inline void bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222_write(hw_uint<16>& bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222, bright_laplace_us_0_FIFO_buf352_cache& bright_laplace_us_0_FIFO_buf352, int root, int bright_laplace_us_0_to_gp_768_ld354, int bright_laplace_us_0_to_gp_768_ld353, int dynamic_address) {
  bright_laplace_us_0_FIFO_buf352.bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222_to_bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466.push(bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222);
}

inline hw_uint<16> bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466_select(bright_laplace_us_0_FIFO_buf352_cache& bright_laplace_us_0_FIFO_buf352, int root, int bright_laplace_diff_0_0, int bright_laplace_diff_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466 read pattern: { bright_laplace_diff_0_update_0_sm749_01117[root = 0, bright_laplace_diff_0_0, bright_laplace_diff_0_1] -> bright_laplace_us_0_FIFO_buf352[bright_laplace_diff_0_1, bright_laplace_diff_0_0] : 0 <= bright_laplace_diff_0_0 <= 1079 and 0 <= bright_laplace_diff_0_1 <= 1079 }
  // Read schedule : { bright_laplace_diff_0_update_0_sm749_01117[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 59] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 57] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222 = bright_laplace_us_0_FIFO_buf352.bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222_to_bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_0_update_0_sm749_01117_read
//	bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466
inline hw_uint<16> bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_read_bundle_read(bright_laplace_us_0_FIFO_buf352_cache& bright_laplace_us_0_FIFO_buf352, int root, int bright_laplace_diff_0_0, int bright_laplace_diff_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466

	hw_uint<16> result;
	hw_uint<16> bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466_res = bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466_select(bright_laplace_us_0_FIFO_buf352, root, bright_laplace_diff_0_0, bright_laplace_diff_0_1, dynamic_address);
	set_at<0, 16>(result, bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_466_res);
	return result;
}

// load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_write
//	bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222
inline void bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_write_bundle_write(hw_uint<16>& load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_write, bright_laplace_us_0_FIFO_buf352_cache& bright_laplace_us_0_FIFO_buf352, int root, int bright_laplace_us_0_to_gp_768_ld354, int bright_laplace_us_0_to_gp_768_ld353, int dynamic_address) {
	hw_uint<16> bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222_res = load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_write.extract<0, 15>();
	bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222_write(bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_222_res, bright_laplace_us_0_FIFO_buf352, root, bright_laplace_us_0_to_gp_768_ld354, bright_laplace_us_0_to_gp_768_ld353, dynamic_address);
}

struct bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454_to_bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_cache {
  // Reader addrs...
    // { load_to_bright_laplace_us_1_to_gp_87275_sm570_0765[root = 0, bright_laplace_us_1_ld74, bright_laplace_us_1_ld73] -> bright_laplace_us_1[bright_laplace_us_1_ld73, bright_laplace_us_1_ld74] : 0 <= bright_laplace_us_1_ld74 <= 539 and 0 <= bright_laplace_us_1_ld73 <= 539 }
  // # of banks: 1
  bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454_to_bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217_cache bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454_to_bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217;
};



inline void bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454, bright_laplace_us_1_cache& bright_laplace_us_1, int root, int bright_laplace_us_1_0, int bright_laplace_us_1_1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454_to_bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217.push(bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454);
}

inline hw_uint<16> bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217_select(bright_laplace_us_1_cache& bright_laplace_us_1, int root, int bright_laplace_us_1_ld74, int bright_laplace_us_1_ld73, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217 read pattern: { load_to_bright_laplace_us_1_to_gp_87275_sm570_0765[root = 0, bright_laplace_us_1_ld74, bright_laplace_us_1_ld73] -> bright_laplace_us_1[bright_laplace_us_1_ld73, bright_laplace_us_1_ld74] : 0 <= bright_laplace_us_1_ld74 <= 539 and 0 <= bright_laplace_us_1_ld73 <= 539 }
  // Read schedule : { load_to_bright_laplace_us_1_to_gp_87275_sm570_0765[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 111] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { bright_laplace_us_1_update_0_sm745_01145[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 109] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454_to_bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454;
  return 0;
}

// # of bundles = 2
// bright_laplace_us_1_update_0_sm745_01145_write
//	bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454
inline void bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_write_bundle_write(hw_uint<16>& bright_laplace_us_1_update_0_sm745_01145_write, bright_laplace_us_1_cache& bright_laplace_us_1, int root, int bright_laplace_us_1_0, int bright_laplace_us_1_1, int dynamic_address) {
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454_res = bright_laplace_us_1_update_0_sm745_01145_write.extract<0, 15>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454_write(bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_454_res, bright_laplace_us_1, root, bright_laplace_us_1_0, bright_laplace_us_1_1, dynamic_address);
}

// load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_read
//	bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217
inline hw_uint<16> bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_read_bundle_read(bright_laplace_us_1_cache& bright_laplace_us_1, int root, int bright_laplace_us_1_ld74, int bright_laplace_us_1_ld73, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217

	hw_uint<16> result;
	hw_uint<16> bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217_res = bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217_select(bright_laplace_us_1, root, bright_laplace_us_1_ld74, bright_laplace_us_1_ld73, dynamic_address);
	set_at<0, 16>(result, bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_217_res);
	return result;
}

struct bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218_to_bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_FIFO_buf356_cache {
  // Reader addrs...
    // { bright_laplace_diff_1_update_0_sm748_01115[root = 0, bright_laplace_diff_1_0, bright_laplace_diff_1_1] -> bright_laplace_us_1_FIFO_buf356[bright_laplace_diff_1_1, bright_laplace_diff_1_0] : 0 <= bright_laplace_diff_1_0 <= 539 and 0 <= bright_laplace_diff_1_1 <= 539 }
  // # of banks: 1
  bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218_to_bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463_cache bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218_to_bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463;
};



inline void bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218_write(hw_uint<16>& bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218, bright_laplace_us_1_FIFO_buf356_cache& bright_laplace_us_1_FIFO_buf356, int root, int bright_laplace_us_1_to_gp_872_ld358, int bright_laplace_us_1_to_gp_872_ld357, int dynamic_address) {
  bright_laplace_us_1_FIFO_buf356.bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218_to_bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463.push(bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218);
}

inline hw_uint<16> bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463_select(bright_laplace_us_1_FIFO_buf356_cache& bright_laplace_us_1_FIFO_buf356, int root, int bright_laplace_diff_1_0, int bright_laplace_diff_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463 read pattern: { bright_laplace_diff_1_update_0_sm748_01115[root = 0, bright_laplace_diff_1_0, bright_laplace_diff_1_1] -> bright_laplace_us_1_FIFO_buf356[bright_laplace_diff_1_1, bright_laplace_diff_1_0] : 0 <= bright_laplace_diff_1_0 <= 539 and 0 <= bright_laplace_diff_1_1 <= 539 }
  // Read schedule : { bright_laplace_diff_1_update_0_sm748_01115[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 143] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 126] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218 = bright_laplace_us_1_FIFO_buf356.bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218_to_bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_1_update_0_sm748_01115_read
//	bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463
inline hw_uint<16> bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_read_bundle_read(bright_laplace_us_1_FIFO_buf356_cache& bright_laplace_us_1_FIFO_buf356, int root, int bright_laplace_diff_1_0, int bright_laplace_diff_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463

	hw_uint<16> result;
	hw_uint<16> bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463_res = bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463_select(bright_laplace_us_1_FIFO_buf356, root, bright_laplace_diff_1_0, bright_laplace_diff_1_1, dynamic_address);
	set_at<0, 16>(result, bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_463_res);
	return result;
}

// load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_write
//	bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218
inline void bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_write_bundle_write(hw_uint<16>& load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_write, bright_laplace_us_1_FIFO_buf356_cache& bright_laplace_us_1_FIFO_buf356, int root, int bright_laplace_us_1_to_gp_872_ld358, int bright_laplace_us_1_to_gp_872_ld357, int dynamic_address) {
	hw_uint<16> bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218_res = load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_write.extract<0, 15>();
	bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218_write(bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_218_res, bright_laplace_us_1_FIFO_buf356, root, bright_laplace_us_1_to_gp_872_ld358, bright_laplace_us_1_to_gp_872_ld357, dynamic_address);
}

struct bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452_to_bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_2_cache {
  // Reader addrs...
    // { load_to_bright_laplace_us_2_to_gp_97679_sm606_0837[root = 0, bright_laplace_us_2_ld78, bright_laplace_us_2_ld77] -> bright_laplace_us_2[bright_laplace_us_2_ld77, bright_laplace_us_2_ld78] : 0 <= bright_laplace_us_2_ld78 <= 269 and 0 <= bright_laplace_us_2_ld77 <= 269 }
  // # of banks: 1
  bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452_to_bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213_cache bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452_to_bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213;
};



inline void bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452_write(hw_uint<16>& bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452, bright_laplace_us_2_cache& bright_laplace_us_2, int root, int bright_laplace_us_2_0, int bright_laplace_us_2_1, int dynamic_address) {
  bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452_to_bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213.push(bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452);
}

inline hw_uint<16> bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213_select(bright_laplace_us_2_cache& bright_laplace_us_2, int root, int bright_laplace_us_2_ld78, int bright_laplace_us_2_ld77, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213 read pattern: { load_to_bright_laplace_us_2_to_gp_97679_sm606_0837[root = 0, bright_laplace_us_2_ld78, bright_laplace_us_2_ld77] -> bright_laplace_us_2[bright_laplace_us_2_ld77, bright_laplace_us_2_ld78] : 0 <= bright_laplace_us_2_ld78 <= 269 and 0 <= bright_laplace_us_2_ld77 <= 269 }
  // Read schedule : { load_to_bright_laplace_us_2_to_gp_97679_sm606_0837[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 154] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { bright_laplace_us_2_update_0_sm744_01143[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 150] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452 = bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452_to_bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452;
  return 0;
}

// # of bundles = 2
// bright_laplace_us_2_update_0_sm744_01143_write
//	bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452
inline void bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_write_bundle_write(hw_uint<16>& bright_laplace_us_2_update_0_sm744_01143_write, bright_laplace_us_2_cache& bright_laplace_us_2, int root, int bright_laplace_us_2_0, int bright_laplace_us_2_1, int dynamic_address) {
	hw_uint<16> bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452_res = bright_laplace_us_2_update_0_sm744_01143_write.extract<0, 15>();
	bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452_write(bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_452_res, bright_laplace_us_2, root, bright_laplace_us_2_0, bright_laplace_us_2_1, dynamic_address);
}

// load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_read
//	bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213
inline hw_uint<16> bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_read_bundle_read(bright_laplace_us_2_cache& bright_laplace_us_2, int root, int bright_laplace_us_2_ld78, int bright_laplace_us_2_ld77, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213

	hw_uint<16> result;
	hw_uint<16> bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213_res = bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213_select(bright_laplace_us_2, root, bright_laplace_us_2_ld78, bright_laplace_us_2_ld77, dynamic_address);
	set_at<0, 16>(result, bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_213_res);
	return result;
}

struct bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214_to_bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_2_FIFO_buf360_cache {
  // Reader addrs...
    // { bright_laplace_diff_2_update_0_sm747_01113[root = 0, bright_laplace_diff_2_0, bright_laplace_diff_2_1] -> bright_laplace_us_2_FIFO_buf360[bright_laplace_diff_2_1, bright_laplace_diff_2_0] : 0 <= bright_laplace_diff_2_0 <= 269 and 0 <= bright_laplace_diff_2_1 <= 269 }
  // # of banks: 1
  bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214_to_bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460_cache bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214_to_bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460;
};



inline void bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214_write(hw_uint<16>& bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214, bright_laplace_us_2_FIFO_buf360_cache& bright_laplace_us_2_FIFO_buf360, int root, int bright_laplace_us_2_to_gp_976_ld362, int bright_laplace_us_2_to_gp_976_ld361, int dynamic_address) {
  bright_laplace_us_2_FIFO_buf360.bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214_to_bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460.push(bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214);
}

inline hw_uint<16> bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460_select(bright_laplace_us_2_FIFO_buf360_cache& bright_laplace_us_2_FIFO_buf360, int root, int bright_laplace_diff_2_0, int bright_laplace_diff_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460 read pattern: { bright_laplace_diff_2_update_0_sm747_01113[root = 0, bright_laplace_diff_2_0, bright_laplace_diff_2_1] -> bright_laplace_us_2_FIFO_buf360[bright_laplace_diff_2_1, bright_laplace_diff_2_0] : 0 <= bright_laplace_diff_2_0 <= 269 and 0 <= bright_laplace_diff_2_1 <= 269 }
  // Read schedule : { bright_laplace_diff_2_update_0_sm747_01113[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 168] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 166] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214 = bright_laplace_us_2_FIFO_buf360.bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214_to_bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_2_update_0_sm747_01113_read
//	bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460
inline hw_uint<16> bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_read_bundle_read(bright_laplace_us_2_FIFO_buf360_cache& bright_laplace_us_2_FIFO_buf360, int root, int bright_laplace_diff_2_0, int bright_laplace_diff_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460

	hw_uint<16> result;
	hw_uint<16> bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460_res = bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460_select(bright_laplace_us_2_FIFO_buf360, root, bright_laplace_diff_2_0, bright_laplace_diff_2_1, dynamic_address);
	set_at<0, 16>(result, bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_460_res);
	return result;
}

// load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_write
//	bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214
inline void bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_write_bundle_write(hw_uint<16>& load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_write, bright_laplace_us_2_FIFO_buf360_cache& bright_laplace_us_2_FIFO_buf360, int root, int bright_laplace_us_2_to_gp_976_ld362, int bright_laplace_us_2_to_gp_976_ld361, int dynamic_address) {
	hw_uint<16> bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214_res = load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_write.extract<0, 15>();
	bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214_write(bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_214_res, bright_laplace_us_2_FIFO_buf360, root, bright_laplace_us_2_to_gp_976_ld362, bright_laplace_us_2_to_gp_976_ld361, dynamic_address);
}

struct bright_weights_bright_weights_update_0_sm707_01039_410_to_bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_cache {
  // Reader addrs...
    // { load_to_bright_weights_to_gp_148083_sm607_0839[root = 0, bright_weights_ld82, bright_weights_ld81] -> bright_weights[bright_weights_ld81, bright_weights_ld82] : 0 <= bright_weights_ld82 <= 1086 and 0 <= bright_weights_ld81 <= 1086 }
  // # of banks: 1
  bright_weights_bright_weights_update_0_sm707_01039_410_to_bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163_cache bright_weights_bright_weights_update_0_sm707_01039_410_to_bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163;
};



inline void bright_weights_bright_weights_update_0_sm707_01039_410_write(hw_uint<16>& bright_weights_bright_weights_update_0_sm707_01039_410, bright_weights_cache& bright_weights, int root, int bright_weights_0, int bright_weights_1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_sm707_01039_410_to_bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163.push(bright_weights_bright_weights_update_0_sm707_01039_410);
}

inline hw_uint<16> bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163_select(bright_weights_cache& bright_weights, int root, int bright_weights_ld82, int bright_weights_ld81, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163 read pattern: { load_to_bright_weights_to_gp_148083_sm607_0839[root = 0, bright_weights_ld82, bright_weights_ld81] -> bright_weights[bright_weights_ld81, bright_weights_ld82] : 0 <= bright_weights_ld82 <= 1086 and 0 <= bright_weights_ld81 <= 1086 }
  // Read schedule : { load_to_bright_weights_to_gp_148083_sm607_0839[d0 = 0, d1, d2] -> [0, d1, d2, 20] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { bright_weights_update_0_sm707_01039[d0 = 0, d1, d2] -> [0, d1, d2, 15] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_bright_weights_update_0_sm707_01039_410 = bright_weights.bright_weights_bright_weights_update_0_sm707_01039_410_to_bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163.peek(/* one reader or all rams */ 0);
  return value_bright_weights_bright_weights_update_0_sm707_01039_410;
  return 0;
}

// # of bundles = 2
// bright_weights_update_0_sm707_01039_write
//	bright_weights_bright_weights_update_0_sm707_01039_410
inline void bright_weights_bright_weights_update_0_sm707_01039_write_bundle_write(hw_uint<16>& bright_weights_update_0_sm707_01039_write, bright_weights_cache& bright_weights, int root, int bright_weights_0, int bright_weights_1, int dynamic_address) {
	hw_uint<16> bright_weights_bright_weights_update_0_sm707_01039_410_res = bright_weights_update_0_sm707_01039_write.extract<0, 15>();
	bright_weights_bright_weights_update_0_sm707_01039_410_write(bright_weights_bright_weights_update_0_sm707_01039_410_res, bright_weights, root, bright_weights_0, bright_weights_1, dynamic_address);
}

// load_to_bright_weights_to_gp_148083_sm607_0839_read
//	bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163
inline hw_uint<16> bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_read_bundle_read(bright_weights_cache& bright_weights, int root, int bright_weights_ld82, int bright_weights_ld81, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163

	hw_uint<16> result;
	hw_uint<16> bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163_res = bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163_select(bright_weights, root, bright_weights_ld82, bright_weights_ld81, dynamic_address);
	set_at<0, 16>(result, bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_163_res);
	return result;
}

struct bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204_to_bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_FIFO_buf364_cache {
  // Reader addrs...
    // { bright_weights_normed_update_0_sm714_01053[root = 0, bright_weights_normed_0, bright_weights_normed_1] -> bright_weights_FIFO_buf364[bright_weights_normed_1, bright_weights_normed_0] : 0 <= bright_weights_normed_0 <= 1086 and 0 <= bright_weights_normed_1 <= 1086 }
  // # of banks: 1
  bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204_to_bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413_cache bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204_to_bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413;
};



inline void bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204_write(hw_uint<16>& bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204, bright_weights_FIFO_buf364_cache& bright_weights_FIFO_buf364, int root, int bright_weights_to_gp_1480_ld366, int bright_weights_to_gp_1480_ld365, int dynamic_address) {
  bright_weights_FIFO_buf364.bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204_to_bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413.push(bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204);
}

inline hw_uint<16> bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413_select(bright_weights_FIFO_buf364_cache& bright_weights_FIFO_buf364, int root, int bright_weights_normed_0, int bright_weights_normed_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413 read pattern: { bright_weights_normed_update_0_sm714_01053[root = 0, bright_weights_normed_0, bright_weights_normed_1] -> bright_weights_FIFO_buf364[bright_weights_normed_1, bright_weights_normed_0] : 0 <= bright_weights_normed_0 <= 1086 and 0 <= bright_weights_normed_1 <= 1086 }
  // Read schedule : { bright_weights_normed_update_0_sm714_01053[d0 = 0, d1, d2] -> [0, d1, d2, 23] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { load_to_bright_weights_FIFO_buf364367_sm671_0967[d0 = 0, d1, d2] -> [0, d1, d2, 21] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204 = bright_weights_FIFO_buf364.bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204_to_bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413.peek(/* one reader or all rams */ 0);
  return value_bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_update_0_sm714_01053_read
//	bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413
inline hw_uint<16> bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_read_bundle_read(bright_weights_FIFO_buf364_cache& bright_weights_FIFO_buf364, int root, int bright_weights_normed_0, int bright_weights_normed_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413

	hw_uint<16> result;
	hw_uint<16> bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413_res = bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413_select(bright_weights_FIFO_buf364, root, bright_weights_normed_0, bright_weights_normed_1, dynamic_address);
	set_at<0, 16>(result, bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_413_res);
	return result;
}

// load_to_bright_weights_FIFO_buf364367_sm671_0967_write
//	bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204
inline void bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_write_bundle_write(hw_uint<16>& load_to_bright_weights_FIFO_buf364367_sm671_0967_write, bright_weights_FIFO_buf364_cache& bright_weights_FIFO_buf364, int root, int bright_weights_to_gp_1480_ld366, int bright_weights_to_gp_1480_ld365, int dynamic_address) {
	hw_uint<16> bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204_res = load_to_bright_weights_FIFO_buf364367_sm671_0967_write.extract<0, 15>();
	bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204_write(bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_204_res, bright_weights_FIFO_buf364, root, bright_weights_to_gp_1480_ld366, bright_weights_to_gp_1480_ld365, dynamic_address);
}

struct bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_to_bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_to_bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165_cache {
	// RAM Box: {[7, 1086], [7, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_cache {
  // Reader addrs...
    // { load_to_bright_weights_normed_to_gp_158487_sm596_0817[root = 0, bright_weights_normed_ld86, bright_weights_normed_ld85] -> bright_weights_normed[bright_weights_normed_ld85, bright_weights_normed_ld86] : 0 <= bright_weights_normed_ld86 <= 1086 and 0 <= bright_weights_normed_ld85 <= 1086 }
    // { load_to_bright_weights_normed_to_gp_458891_sm573_0771[root = 0, bright_weights_normed_ld90, bright_weights_normed_ld89] -> bright_weights_normed[7 + bright_weights_normed_ld89, 7 + bright_weights_normed_ld90] : 0 <= bright_weights_normed_ld90 <= 1079 and 0 <= bright_weights_normed_ld89 <= 1079 }
  // # of banks: 2
  bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_to_bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167_cache bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_to_bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167;
  bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_to_bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165_cache bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_to_bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165;
};



inline void bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412, bright_weights_normed_cache& bright_weights_normed, int root, int bright_weights_normed_0, int bright_weights_normed_1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_to_bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167.push(bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412);
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_to_bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165.push(bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412);
}

inline hw_uint<16> bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167_select(bright_weights_normed_cache& bright_weights_normed, int root, int bright_weights_normed_ld86, int bright_weights_normed_ld85, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167 read pattern: { load_to_bright_weights_normed_to_gp_158487_sm596_0817[root = 0, bright_weights_normed_ld86, bright_weights_normed_ld85] -> bright_weights_normed[bright_weights_normed_ld85, bright_weights_normed_ld86] : 0 <= bright_weights_normed_ld86 <= 1086 and 0 <= bright_weights_normed_ld85 <= 1086 }
  // Read schedule : { load_to_bright_weights_normed_to_gp_158487_sm596_0817[d0 = 0, d1, d2] -> [0, d1, d2, 24] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { bright_weights_normed_update_0_sm714_01053[d0 = 0, d1, d2] -> [0, d1, d2, 23] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_to_bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412;
  return 0;
}

inline hw_uint<16> bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165_select(bright_weights_normed_cache& bright_weights_normed, int root, int bright_weights_normed_ld90, int bright_weights_normed_ld89, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165 read pattern: { load_to_bright_weights_normed_to_gp_458891_sm573_0771[root = 0, bright_weights_normed_ld90, bright_weights_normed_ld89] -> bright_weights_normed[7 + bright_weights_normed_ld89, 7 + bright_weights_normed_ld90] : 0 <= bright_weights_normed_ld90 <= 1079 and 0 <= bright_weights_normed_ld89 <= 1079 }
  // Read schedule : { load_to_bright_weights_normed_to_gp_458891_sm573_0771[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 32] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { bright_weights_normed_update_0_sm714_01053[d0 = 0, d1, d2] -> [0, d1, d2, 23] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_to_bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412;
  return 0;
}

// # of bundles = 3
// bright_weights_normed_update_0_sm714_01053_write
//	bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412
inline void bright_weights_normed_bright_weights_normed_update_0_sm714_01053_write_bundle_write(hw_uint<16>& bright_weights_normed_update_0_sm714_01053_write, bright_weights_normed_cache& bright_weights_normed, int root, int bright_weights_normed_0, int bright_weights_normed_1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_res = bright_weights_normed_update_0_sm714_01053_write.extract<0, 15>();
	bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_write(bright_weights_normed_bright_weights_normed_update_0_sm714_01053_412_res, bright_weights_normed, root, bright_weights_normed_0, bright_weights_normed_1, dynamic_address);
}

// load_to_bright_weights_normed_to_gp_158487_sm596_0817_read
//	bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167
inline hw_uint<16> bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_read_bundle_read(bright_weights_normed_cache& bright_weights_normed, int root, int bright_weights_normed_ld86, int bright_weights_normed_ld85, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167_res = bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167_select(bright_weights_normed, root, bright_weights_normed_ld86, bright_weights_normed_ld85, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_167_res);
	return result;
}

// load_to_bright_weights_normed_to_gp_458891_sm573_0771_read
//	bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165
inline hw_uint<16> bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_read_bundle_read(bright_weights_normed_cache& bright_weights_normed, int root, int bright_weights_normed_ld90, int bright_weights_normed_ld89, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165_res = bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165_select(bright_weights_normed, root, bright_weights_normed_ld90, bright_weights_normed_ld89, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_165_res);
	return result;
}

struct bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 2177
	// # of read delays: 9
  // 0, 1, 2, 1087, 1088, 1089, 2174, 2175, 2176
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 1084> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 1084> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_1086() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_1087() {
		return f6;
	}

	inline hw_uint<16> peek_1088() {
		return f8;
	}

	inline hw_uint<16> peek_1089() {
		return f10;
	}

	inline hw_uint<16> peek_2173() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_2174() {
		return f12;
	}

	inline hw_uint<16> peek_2175() {
		return f14;
	}

	inline hw_uint<16> peek_2176() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1084
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1084 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1084
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1084 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_FIFO_buf368_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[bright_weights_normed_gauss_blur_1_1, bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
    // { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[1 + bright_weights_normed_gauss_blur_1_1, bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
    // { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[2 + bright_weights_normed_gauss_blur_1_1, bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
    // { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[bright_weights_normed_gauss_blur_1_1, 1 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
    // { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[1 + bright_weights_normed_gauss_blur_1_1, 1 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
    // { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[2 + bright_weights_normed_gauss_blur_1_1, 1 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
    // { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[bright_weights_normed_gauss_blur_1_1, 2 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
    // { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[1 + bright_weights_normed_gauss_blur_1_1, 2 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
    // { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[2 + bright_weights_normed_gauss_blur_1_1, 2 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
  // # of banks: 1
  bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9_cache bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9;
};



inline void bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_write(hw_uint<16>& bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202, bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_to_gp_1584_ld370, int bright_weights_normed_to_gp_1584_ld369, int dynamic_address) {
  bright_weights_normed_FIFO_buf368.bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9.push(bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202);
}

inline hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_441_select(bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_441 read pattern: { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[bright_weights_normed_gauss_blur_1_1, bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_weights_normed_FIFO_buf368371_sm670_0965[d0 = 0, d1, d2] -> [0, d1, d2, 26] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202 = bright_weights_normed_FIFO_buf368.bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9.peek_2176();
  return value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202;
  return 0;
}

inline hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_442_select(bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_442 read pattern: { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[1 + bright_weights_normed_gauss_blur_1_1, bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_weights_normed_FIFO_buf368371_sm670_0965[d0 = 0, d1, d2] -> [0, d1, d2, 26] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202 = bright_weights_normed_FIFO_buf368.bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9.peek_2175();
  return value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202;
  return 0;
}

inline hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_443_select(bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_443 read pattern: { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[2 + bright_weights_normed_gauss_blur_1_1, bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_weights_normed_FIFO_buf368371_sm670_0965[d0 = 0, d1, d2] -> [0, d1, d2, 26] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202 = bright_weights_normed_FIFO_buf368.bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9.peek_2174();
  return value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202;
  return 0;
}

inline hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_444_select(bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_444 read pattern: { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[bright_weights_normed_gauss_blur_1_1, 1 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_weights_normed_FIFO_buf368371_sm670_0965[d0 = 0, d1, d2] -> [0, d1, d2, 26] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202 = bright_weights_normed_FIFO_buf368.bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9.peek_1089();
  return value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202;
  return 0;
}

inline hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_445_select(bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_445 read pattern: { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[1 + bright_weights_normed_gauss_blur_1_1, 1 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_weights_normed_FIFO_buf368371_sm670_0965[d0 = 0, d1, d2] -> [0, d1, d2, 26] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202 = bright_weights_normed_FIFO_buf368.bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9.peek_1088();
  return value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202;
  return 0;
}

inline hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_446_select(bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_446 read pattern: { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[2 + bright_weights_normed_gauss_blur_1_1, 1 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_weights_normed_FIFO_buf368371_sm670_0965[d0 = 0, d1, d2] -> [0, d1, d2, 26] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202 = bright_weights_normed_FIFO_buf368.bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9.peek_1087();
  return value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202;
  return 0;
}

inline hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_447_select(bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_447 read pattern: { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[bright_weights_normed_gauss_blur_1_1, 2 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_weights_normed_FIFO_buf368371_sm670_0965[d0 = 0, d1, d2] -> [0, d1, d2, 26] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202 = bright_weights_normed_FIFO_buf368.bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9.peek_2();
  return value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202;
  return 0;
}

inline hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_448_select(bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_448 read pattern: { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[1 + bright_weights_normed_gauss_blur_1_1, 2 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_weights_normed_FIFO_buf368371_sm670_0965[d0 = 0, d1, d2] -> [0, d1, d2, 26] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202 = bright_weights_normed_FIFO_buf368.bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9.peek_1();
  return value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202;
  return 0;
}

inline hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_449_select(bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_449 read pattern: { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[root = 0, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1] -> bright_weights_normed_FIFO_buf368[2 + bright_weights_normed_gauss_blur_1_1, 2 + bright_weights_normed_gauss_blur_1_0] : 0 <= bright_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_bright_weights_normed_FIFO_buf368371_sm670_0965[d0 = 0, d1, d2] -> [0, d1, d2, 26] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202 = bright_weights_normed_FIFO_buf368.bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_merged_banks_9.peek_0();
  return value_bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_1_update_0_sm719_01063_read
//	bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_441
//	bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_442
//	bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_443
//	bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_444
//	bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_445
//	bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_446
//	bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_447
//	bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_448
//	bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_449
inline hw_uint<144> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_read_bundle_read(bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
  // # of ports in bundle: 9
    // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_441
    // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_442
    // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_443
    // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_444
    // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_445
    // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_446
    // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_447
    // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_448
    // bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_449

	hw_uint<144> result;
	hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_441_res = bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_441_select(bright_weights_normed_FIFO_buf368, root, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<0, 144>(result, bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_441_res);
	hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_442_res = bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_442_select(bright_weights_normed_FIFO_buf368, root, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<16, 144>(result, bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_442_res);
	hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_443_res = bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_443_select(bright_weights_normed_FIFO_buf368, root, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<32, 144>(result, bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_443_res);
	hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_444_res = bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_444_select(bright_weights_normed_FIFO_buf368, root, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<48, 144>(result, bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_444_res);
	hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_445_res = bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_445_select(bright_weights_normed_FIFO_buf368, root, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<64, 144>(result, bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_445_res);
	hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_446_res = bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_446_select(bright_weights_normed_FIFO_buf368, root, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<80, 144>(result, bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_446_res);
	hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_447_res = bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_447_select(bright_weights_normed_FIFO_buf368, root, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<96, 144>(result, bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_447_res);
	hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_448_res = bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_448_select(bright_weights_normed_FIFO_buf368, root, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<112, 144>(result, bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_448_res);
	hw_uint<16> bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_449_res = bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_449_select(bright_weights_normed_FIFO_buf368, root, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<128, 144>(result, bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_449_res);
	return result;
}

// load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_write
//	bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202
inline void bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_write_bundle_write(hw_uint<16>& load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_write, bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int root, int bright_weights_normed_to_gp_1584_ld370, int bright_weights_normed_to_gp_1584_ld369, int dynamic_address) {
	hw_uint<16> bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_res = load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_write.extract<0, 15>();
	bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_write(bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_202_res, bright_weights_normed_FIFO_buf368, root, bright_weights_normed_to_gp_1584_ld370, bright_weights_normed_to_gp_1584_ld369, dynamic_address);
}

struct bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200_to_bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306_cache {
	// RAM Box: {[7, 1086], [7, 1086]}
	// Capacity: 1082
	// # of read delays: 1082

	fifo<hw_uint<16>, 1082> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1081 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_FIFO_buf372_cache {
  // Reader addrs...
    // { fused_level_0_update_0_sm753_01125[root = 0, fused_level_0_0, fused_level_0_1] -> bright_weights_normed_FIFO_buf372[7 + fused_level_0_1, 7 + fused_level_0_0] : 0 <= fused_level_0_0 <= 1079 and 0 <= fused_level_0_1 <= 1079 }
  // # of banks: 1
  bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200_to_bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306_cache bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200_to_bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306;
};



inline void bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200_write(hw_uint<16>& bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200, bright_weights_normed_FIFO_buf372_cache& bright_weights_normed_FIFO_buf372, int root, int bright_weights_normed_to_gp_4588_ld374, int bright_weights_normed_to_gp_4588_ld373, int dynamic_address) {
  bright_weights_normed_FIFO_buf372.bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200_to_bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306.push(bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200);
}

inline hw_uint<16> bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306_select(bright_weights_normed_FIFO_buf372_cache& bright_weights_normed_FIFO_buf372, int root, int fused_level_0_0, int fused_level_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306 read pattern: { fused_level_0_update_0_sm753_01125[root = 0, fused_level_0_0, fused_level_0_1] -> bright_weights_normed_FIFO_buf372[7 + fused_level_0_1, 7 + fused_level_0_0] : 0 <= fused_level_0_0 <= 1079 and 0 <= fused_level_0_1 <= 1079 }
  // Read schedule : { fused_level_0_update_0_sm753_01125[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 156] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_bright_weights_normed_FIFO_buf372375_sm664_0953[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 48] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200 = bright_weights_normed_FIFO_buf372.bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200_to_bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306.peek(/* one reader or all rams */ (1078 - fused_level_0_1 >= 0 && 1078 - fused_level_0_0 >= 0) ? (1081) : (-1079 + fused_level_0_1 == 0 && 1078 - fused_level_0_0 >= 0) ? (1080) : (-1079 + fused_level_0_0 == 0 && 1078 - fused_level_0_1 >= 0) ? ((1079 - fused_level_0_1)) : 0);
  return value_bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200;
  return 0;
}

// # of bundles = 2
// fused_level_0_update_0_sm753_01125_read
//	bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306
inline hw_uint<16> bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_read_bundle_read(bright_weights_normed_FIFO_buf372_cache& bright_weights_normed_FIFO_buf372, int root, int fused_level_0_0, int fused_level_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306_res = bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306_select(bright_weights_normed_FIFO_buf372, root, fused_level_0_0, fused_level_0_1, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_306_res);
	return result;
}

// load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_write
//	bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200
inline void bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_write_bundle_write(hw_uint<16>& load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_write, bright_weights_normed_FIFO_buf372_cache& bright_weights_normed_FIFO_buf372, int root, int bright_weights_normed_to_gp_4588_ld374, int bright_weights_normed_to_gp_4588_ld373, int dynamic_address) {
	hw_uint<16> bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200_res = load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_write.extract<0, 15>();
	bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200_write(bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_200_res, bright_weights_normed_FIFO_buf372, root, bright_weights_normed_to_gp_4588_ld374, bright_weights_normed_to_gp_4588_ld373, dynamic_address);
}

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440_to_bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197_cache {
	// RAM Box: {[0, 1084], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_cache {
  // Reader addrs...
    // { load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835[root = 0, bright_weights_normed_gauss_blur_1_ld94, bright_weights_normed_gauss_blur_1_ld93] -> bright_weights_normed_gauss_blur_1[bright_weights_normed_gauss_blur_1_ld93, bright_weights_normed_gauss_blur_1_ld94] : 0 <= bright_weights_normed_gauss_blur_1_ld94 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_ld93 <= 1084 }
  // # of banks: 1
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440_to_bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440_to_bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197;
};



inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440_to_bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int root, int bright_weights_normed_gauss_blur_1_ld94, int bright_weights_normed_gauss_blur_1_ld93, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197 read pattern: { load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835[root = 0, bright_weights_normed_gauss_blur_1_ld94, bright_weights_normed_gauss_blur_1_ld93] -> bright_weights_normed_gauss_blur_1[bright_weights_normed_gauss_blur_1_ld93, bright_weights_normed_gauss_blur_1_ld94] : 0 <= bright_weights_normed_gauss_blur_1_ld94 <= 1084 and 0 <= bright_weights_normed_gauss_blur_1_ld93 <= 1084 }
  // Read schedule : { load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 33] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440_to_bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_1_update_0_sm719_01063_write
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440
inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_write_bundle_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_update_0_sm719_01063_write, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int root, int bright_weights_normed_gauss_blur_1_0, int bright_weights_normed_gauss_blur_1_1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440_res = bright_weights_normed_gauss_blur_1_update_0_sm719_01063_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_440_res, bright_weights_normed_gauss_blur_1, root, bright_weights_normed_gauss_blur_1_0, bright_weights_normed_gauss_blur_1_1, dynamic_address);
}

// load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_read
//	bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197
inline hw_uint<16> bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_read_bundle_read(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int root, int bright_weights_normed_gauss_blur_1_ld94, int bright_weights_normed_gauss_blur_1_ld93, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197_res = bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197_select(bright_weights_normed_gauss_blur_1, root, bright_weights_normed_gauss_blur_1_ld94, bright_weights_normed_gauss_blur_1_ld93, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_197_res);
	return result;
}

struct bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198_to_bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419_cache {
	// RAM Box: {[0, 1084], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_FIFO_buf376_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_ds_1_update_0_sm727_01079[root = 0, bright_weights_normed_gauss_ds_1_0, bright_weights_normed_gauss_ds_1_1] -> bright_weights_normed_gauss_blur_1_FIFO_buf376[2bright_weights_normed_gauss_ds_1_1, 2bright_weights_normed_gauss_ds_1_0] : 0 <= bright_weights_normed_gauss_ds_1_0 <= 542 and 0 <= bright_weights_normed_gauss_ds_1_1 <= 542 }
  // # of banks: 1
  bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198_to_bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419_cache bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198_to_bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419;
};



inline void bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198, bright_weights_normed_gauss_blur_1_FIFO_buf376_cache& bright_weights_normed_gauss_blur_1_FIFO_buf376, int root, int bright_weights_normed_gauss_blur_1_to_gp_1892_ld378, int bright_weights_normed_gauss_blur_1_to_gp_1892_ld377, int dynamic_address) {
  bright_weights_normed_gauss_blur_1_FIFO_buf376.bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198_to_bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419.push(bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419_select(bright_weights_normed_gauss_blur_1_FIFO_buf376_cache& bright_weights_normed_gauss_blur_1_FIFO_buf376, int root, int bright_weights_normed_gauss_ds_1_0, int bright_weights_normed_gauss_ds_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419 read pattern: { bright_weights_normed_gauss_ds_1_update_0_sm727_01079[root = 0, bright_weights_normed_gauss_ds_1_0, bright_weights_normed_gauss_ds_1_1] -> bright_weights_normed_gauss_blur_1_FIFO_buf376[2bright_weights_normed_gauss_ds_1_1, 2bright_weights_normed_gauss_ds_1_0] : 0 <= bright_weights_normed_gauss_ds_1_0 <= 542 and 0 <= bright_weights_normed_gauss_ds_1_1 <= 542 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0_sm727_01079[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 41] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  // Write schedule: { load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 36] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  auto value_bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198 = bright_weights_normed_gauss_blur_1_FIFO_buf376.bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198_to_bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_ds_1_update_0_sm727_01079_read
//	bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419
inline hw_uint<16> bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_read_bundle_read(bright_weights_normed_gauss_blur_1_FIFO_buf376_cache& bright_weights_normed_gauss_blur_1_FIFO_buf376, int root, int bright_weights_normed_gauss_ds_1_0, int bright_weights_normed_gauss_ds_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419_res = bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419_select(bright_weights_normed_gauss_blur_1_FIFO_buf376, root, bright_weights_normed_gauss_ds_1_0, bright_weights_normed_gauss_ds_1_1, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_419_res);
	return result;
}

// load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_write
//	bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198
inline void bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_write_bundle_write(hw_uint<16>& load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_write, bright_weights_normed_gauss_blur_1_FIFO_buf376_cache& bright_weights_normed_gauss_blur_1_FIFO_buf376, int root, int bright_weights_normed_gauss_blur_1_to_gp_1892_ld378, int bright_weights_normed_gauss_blur_1_to_gp_1892_ld377, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198_res = load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198_write(bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_198_res, bright_weights_normed_gauss_blur_1_FIFO_buf376, root, bright_weights_normed_gauss_blur_1_to_gp_1892_ld378, bright_weights_normed_gauss_blur_1_to_gp_1892_ld377, dynamic_address);
}

struct bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430_to_bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193_cache {
	// RAM Box: {[0, 540], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_2_cache {
  // Reader addrs...
    // { load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795[root = 0, bright_weights_normed_gauss_blur_2_ld98, bright_weights_normed_gauss_blur_2_ld97] -> bright_weights_normed_gauss_blur_2[bright_weights_normed_gauss_blur_2_ld97, bright_weights_normed_gauss_blur_2_ld98] : 0 <= bright_weights_normed_gauss_blur_2_ld98 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_ld97 <= 540 }
  // # of banks: 1
  bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430_to_bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193_cache bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430_to_bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193;
};



inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
  bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430_to_bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193.push(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193_select(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int root, int bright_weights_normed_gauss_blur_2_ld98, int bright_weights_normed_gauss_blur_2_ld97, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193 read pattern: { load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795[root = 0, bright_weights_normed_gauss_blur_2_ld98, bright_weights_normed_gauss_blur_2_ld97] -> bright_weights_normed_gauss_blur_2[bright_weights_normed_gauss_blur_2_ld97, bright_weights_normed_gauss_blur_2_ld98] : 0 <= bright_weights_normed_gauss_blur_2_ld98 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_ld97 <= 540 }
  // Read schedule : { load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 76] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  auto value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430 = bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430_to_bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_2_update_0_sm728_01081_write
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430
inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_write_bundle_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_update_0_sm728_01081_write, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430_res = bright_weights_normed_gauss_blur_2_update_0_sm728_01081_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_430_res, bright_weights_normed_gauss_blur_2, root, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1, dynamic_address);
}

// load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_read
//	bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193
inline hw_uint<16> bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_read_bundle_read(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int root, int bright_weights_normed_gauss_blur_2_ld98, int bright_weights_normed_gauss_blur_2_ld97, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193_res = bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193_select(bright_weights_normed_gauss_blur_2, root, bright_weights_normed_gauss_blur_2_ld98, bright_weights_normed_gauss_blur_2_ld97, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_193_res);
	return result;
}

struct bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194_to_bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417_cache {
	// RAM Box: {[0, 540], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_2_FIFO_buf380_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_ds_2_update_0_sm734_01093[root = 0, bright_weights_normed_gauss_ds_2_0, bright_weights_normed_gauss_ds_2_1] -> bright_weights_normed_gauss_blur_2_FIFO_buf380[2bright_weights_normed_gauss_ds_2_1, 2bright_weights_normed_gauss_ds_2_0] : 0 <= bright_weights_normed_gauss_ds_2_0 <= 270 and 0 <= bright_weights_normed_gauss_ds_2_1 <= 270 }
  // # of banks: 1
  bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194_to_bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417_cache bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194_to_bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417;
};



inline void bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194, bright_weights_normed_gauss_blur_2_FIFO_buf380_cache& bright_weights_normed_gauss_blur_2_FIFO_buf380, int root, int bright_weights_normed_gauss_blur_2_to_gp_1996_ld382, int bright_weights_normed_gauss_blur_2_to_gp_1996_ld381, int dynamic_address) {
  bright_weights_normed_gauss_blur_2_FIFO_buf380.bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194_to_bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417.push(bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417_select(bright_weights_normed_gauss_blur_2_FIFO_buf380_cache& bright_weights_normed_gauss_blur_2_FIFO_buf380, int root, int bright_weights_normed_gauss_ds_2_0, int bright_weights_normed_gauss_ds_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417 read pattern: { bright_weights_normed_gauss_ds_2_update_0_sm734_01093[root = 0, bright_weights_normed_gauss_ds_2_0, bright_weights_normed_gauss_ds_2_1] -> bright_weights_normed_gauss_blur_2_FIFO_buf380[2bright_weights_normed_gauss_ds_2_1, 2bright_weights_normed_gauss_ds_2_0] : 0 <= bright_weights_normed_gauss_ds_2_0 <= 270 and 0 <= bright_weights_normed_gauss_ds_2_1 <= 270 }
  // Read schedule : { bright_weights_normed_gauss_ds_2_update_0_sm734_01093[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 100] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  // Write schedule: { load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 91] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  auto value_bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194 = bright_weights_normed_gauss_blur_2_FIFO_buf380.bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194_to_bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_ds_2_update_0_sm734_01093_read
//	bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417
inline hw_uint<16> bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_read_bundle_read(bright_weights_normed_gauss_blur_2_FIFO_buf380_cache& bright_weights_normed_gauss_blur_2_FIFO_buf380, int root, int bright_weights_normed_gauss_ds_2_0, int bright_weights_normed_gauss_ds_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417_res = bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417_select(bright_weights_normed_gauss_blur_2_FIFO_buf380, root, bright_weights_normed_gauss_ds_2_0, bright_weights_normed_gauss_ds_2_1, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_417_res);
	return result;
}

// load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_write
//	bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194
inline void bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_write_bundle_write(hw_uint<16>& load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_write, bright_weights_normed_gauss_blur_2_FIFO_buf380_cache& bright_weights_normed_gauss_blur_2_FIFO_buf380, int root, int bright_weights_normed_gauss_blur_2_to_gp_1996_ld382, int bright_weights_normed_gauss_blur_2_to_gp_1996_ld381, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194_res = load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194_write(bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_194_res, bright_weights_normed_gauss_blur_2_FIFO_buf380, root, bright_weights_normed_gauss_blur_2_to_gp_1996_ld382, bright_weights_normed_gauss_blur_2_to_gp_1996_ld381, dynamic_address);
}

struct bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420_to_bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189_cache {
	// RAM Box: {[0, 268], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_3_cache {
  // Reader addrs...
    // { load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793[root = 0, bright_weights_normed_gauss_blur_3_ld102, bright_weights_normed_gauss_blur_3_ld101] -> bright_weights_normed_gauss_blur_3[bright_weights_normed_gauss_blur_3_ld101, bright_weights_normed_gauss_blur_3_ld102] : 0 <= bright_weights_normed_gauss_blur_3_ld102 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_ld101 <= 268 }
  // # of banks: 1
  bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420_to_bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189_cache bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420_to_bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189;
};



inline void bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420_write(hw_uint<16>& bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
  bright_weights_normed_gauss_blur_3.bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420_to_bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189.push(bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189_select(bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int root, int bright_weights_normed_gauss_blur_3_ld102, int bright_weights_normed_gauss_blur_3_ld101, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189 read pattern: { load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793[root = 0, bright_weights_normed_gauss_blur_3_ld102, bright_weights_normed_gauss_blur_3_ld101] -> bright_weights_normed_gauss_blur_3[bright_weights_normed_gauss_blur_3_ld101, bright_weights_normed_gauss_blur_3_ld102] : 0 <= bright_weights_normed_gauss_blur_3_ld102 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_ld101 <= 268 }
  // Read schedule : { load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 122] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  auto value_bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420 = bright_weights_normed_gauss_blur_3.bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420_to_bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_3_update_0_sm735_01095_write
//	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420
inline void bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_write_bundle_write(hw_uint<16>& bright_weights_normed_gauss_blur_3_update_0_sm735_01095_write, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420_res = bright_weights_normed_gauss_blur_3_update_0_sm735_01095_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420_write(bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_420_res, bright_weights_normed_gauss_blur_3, root, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1, dynamic_address);
}

// load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_read
//	bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189
inline hw_uint<16> bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_read_bundle_read(bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int root, int bright_weights_normed_gauss_blur_3_ld102, int bright_weights_normed_gauss_blur_3_ld101, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189_res = bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189_select(bright_weights_normed_gauss_blur_3, root, bright_weights_normed_gauss_blur_3_ld102, bright_weights_normed_gauss_blur_3_ld101, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_189_res);
	return result;
}

struct bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190_to_bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415_cache {
	// RAM Box: {[0, 268], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_3_FIFO_buf384_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_ds_3_update_0_sm743_01133[root = 0, bright_weights_normed_gauss_ds_3_0, bright_weights_normed_gauss_ds_3_1] -> bright_weights_normed_gauss_blur_3_FIFO_buf384[2bright_weights_normed_gauss_ds_3_1, 2bright_weights_normed_gauss_ds_3_0] : 0 <= bright_weights_normed_gauss_ds_3_0 <= 134 and 0 <= bright_weights_normed_gauss_ds_3_1 <= 134 }
  // # of banks: 1
  bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190_to_bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415_cache bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190_to_bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415;
};



inline void bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190_write(hw_uint<16>& bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190, bright_weights_normed_gauss_blur_3_FIFO_buf384_cache& bright_weights_normed_gauss_blur_3_FIFO_buf384, int root, int bright_weights_normed_gauss_blur_3_to_gp_20100_ld386, int bright_weights_normed_gauss_blur_3_to_gp_20100_ld385, int dynamic_address) {
  bright_weights_normed_gauss_blur_3_FIFO_buf384.bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190_to_bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415.push(bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415_select(bright_weights_normed_gauss_blur_3_FIFO_buf384_cache& bright_weights_normed_gauss_blur_3_FIFO_buf384, int root, int bright_weights_normed_gauss_ds_3_0, int bright_weights_normed_gauss_ds_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415 read pattern: { bright_weights_normed_gauss_ds_3_update_0_sm743_01133[root = 0, bright_weights_normed_gauss_ds_3_0, bright_weights_normed_gauss_ds_3_1] -> bright_weights_normed_gauss_blur_3_FIFO_buf384[2bright_weights_normed_gauss_ds_3_1, 2bright_weights_normed_gauss_ds_3_0] : 0 <= bright_weights_normed_gauss_ds_3_0 <= 134 and 0 <= bright_weights_normed_gauss_ds_3_1 <= 134 }
  // Read schedule : { bright_weights_normed_gauss_ds_3_update_0_sm743_01133[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 149] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 138] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  auto value_bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190 = bright_weights_normed_gauss_blur_3_FIFO_buf384.bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190_to_bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_ds_3_update_0_sm743_01133_read
//	bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415
inline hw_uint<16> bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_read_bundle_read(bright_weights_normed_gauss_blur_3_FIFO_buf384_cache& bright_weights_normed_gauss_blur_3_FIFO_buf384, int root, int bright_weights_normed_gauss_ds_3_0, int bright_weights_normed_gauss_ds_3_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415_res = bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415_select(bright_weights_normed_gauss_blur_3_FIFO_buf384, root, bright_weights_normed_gauss_ds_3_0, bright_weights_normed_gauss_ds_3_1, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_415_res);
	return result;
}

// load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_write
//	bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190
inline void bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_write_bundle_write(hw_uint<16>& load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_write, bright_weights_normed_gauss_blur_3_FIFO_buf384_cache& bright_weights_normed_gauss_blur_3_FIFO_buf384, int root, int bright_weights_normed_gauss_blur_3_to_gp_20100_ld386, int bright_weights_normed_gauss_blur_3_to_gp_20100_ld385, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190_res = load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190_write(bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_190_res, bright_weights_normed_gauss_blur_3_FIFO_buf384, root, bright_weights_normed_gauss_blur_3_to_gp_20100_ld386, bright_weights_normed_gauss_blur_3_to_gp_20100_ld385, dynamic_address);
}

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_to_bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183_cache {
	// RAM Box: {[0, 542], [0, 542]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_to_bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 545
	// # of read delays: 545
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544
	fifo<hw_uint<16>, 545> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(544 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_1_cache {
  // Reader addrs...
    // { load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805[root = 0, bright_weights_normed_gauss_ds_1_ld106, bright_weights_normed_gauss_ds_1_ld105] -> bright_weights_normed_gauss_ds_1[bright_weights_normed_gauss_ds_1_ld105, bright_weights_normed_gauss_ds_1_ld106] : 0 <= bright_weights_normed_gauss_ds_1_ld106 <= 542 and 0 <= bright_weights_normed_gauss_ds_1_ld105 <= 542 }
    // { load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841[root = 0, bright_weights_normed_gauss_ds_1_ld110, bright_weights_normed_gauss_ds_1_ld109] -> bright_weights_normed_gauss_ds_1[3 + bright_weights_normed_gauss_ds_1_ld109, 3 + bright_weights_normed_gauss_ds_1_ld110] : 0 <= bright_weights_normed_gauss_ds_1_ld110 <= 539 and 0 <= bright_weights_normed_gauss_ds_1_ld109 <= 539 }
  // # of banks: 2
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_to_bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_to_bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_to_bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_to_bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181;
};



inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int root, int bright_weights_normed_gauss_ds_1_0, int bright_weights_normed_gauss_ds_1_1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_to_bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418);
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_to_bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418);
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int root, int bright_weights_normed_gauss_ds_1_ld106, int bright_weights_normed_gauss_ds_1_ld105, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183 read pattern: { load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805[root = 0, bright_weights_normed_gauss_ds_1_ld106, bright_weights_normed_gauss_ds_1_ld105] -> bright_weights_normed_gauss_ds_1[bright_weights_normed_gauss_ds_1_ld105, bright_weights_normed_gauss_ds_1_ld106] : 0 <= bright_weights_normed_gauss_ds_1_ld106 <= 542 and 0 <= bright_weights_normed_gauss_ds_1_ld105 <= 542 }
  // Read schedule : { load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 43] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0_sm727_01079[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 41] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_to_bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int root, int bright_weights_normed_gauss_ds_1_ld110, int bright_weights_normed_gauss_ds_1_ld109, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181 read pattern: { load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841[root = 0, bright_weights_normed_gauss_ds_1_ld110, bright_weights_normed_gauss_ds_1_ld109] -> bright_weights_normed_gauss_ds_1[3 + bright_weights_normed_gauss_ds_1_ld109, 3 + bright_weights_normed_gauss_ds_1_ld110] : 0 <= bright_weights_normed_gauss_ds_1_ld110 <= 539 and 0 <= bright_weights_normed_gauss_ds_1_ld109 <= 539 }
  // Read schedule : { load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 50] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0_sm727_01079[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 41] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_to_bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181.peek(/* one reader or all rams */ (538 - bright_weights_normed_gauss_ds_1_ld109 >= 0 && 538 - bright_weights_normed_gauss_ds_1_ld110 >= 0) ? (544) : (-539 + bright_weights_normed_gauss_ds_1_ld109 == 0 && 538 - bright_weights_normed_gauss_ds_1_ld110 >= 0) ? (543) : (-539 + bright_weights_normed_gauss_ds_1_ld110 == 0 && 538 - bright_weights_normed_gauss_ds_1_ld109 >= 0) ? ((539 - bright_weights_normed_gauss_ds_1_ld109)) : 0);
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418;
  return 0;
}

// # of bundles = 3
// bright_weights_normed_gauss_ds_1_update_0_sm727_01079_write
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418
inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_write_bundle_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_update_0_sm727_01079_write, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int root, int bright_weights_normed_gauss_ds_1_0, int bright_weights_normed_gauss_ds_1_1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_res = bright_weights_normed_gauss_ds_1_update_0_sm727_01079_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_418_res, bright_weights_normed_gauss_ds_1, root, bright_weights_normed_gauss_ds_1_0, bright_weights_normed_gauss_ds_1_1, dynamic_address);
}

// load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_read
//	bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183
inline hw_uint<16> bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_read_bundle_read(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int root, int bright_weights_normed_gauss_ds_1_ld106, int bright_weights_normed_gauss_ds_1_ld105, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183_res = bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183_select(bright_weights_normed_gauss_ds_1, root, bright_weights_normed_gauss_ds_1_ld106, bright_weights_normed_gauss_ds_1_ld105, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_183_res);
	return result;
}

// load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_read
//	bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181
inline hw_uint<16> bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_read_bundle_read(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int root, int bright_weights_normed_gauss_ds_1_ld110, int bright_weights_normed_gauss_ds_1_ld109, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181_res = bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181_select(bright_weights_normed_gauss_ds_1, root, bright_weights_normed_gauss_ds_1_ld110, bright_weights_normed_gauss_ds_1_ld109, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_181_res);
	return result;
}

struct bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9_cache {
	// RAM Box: {[0, 542], [0, 542]}
	// Capacity: 1089
	// # of read delays: 9
  // 0, 1, 2, 543, 544, 545, 1086, 1087, 1088
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 540> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 540> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_542() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_543() {
		return f6;
	}

	inline hw_uint<16> peek_544() {
		return f8;
	}

	inline hw_uint<16> peek_545() {
		return f10;
	}

	inline hw_uint<16> peek_1085() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_1086() {
		return f12;
	}

	inline hw_uint<16> peek_1087() {
		return f14;
	}

	inline hw_uint<16> peek_1088() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 540
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 540 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 540
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 540 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_FIFO_buf388_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[bright_weights_normed_gauss_blur_2_1, bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
    // { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[1 + bright_weights_normed_gauss_blur_2_1, bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
    // { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[2 + bright_weights_normed_gauss_blur_2_1, bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
    // { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[bright_weights_normed_gauss_blur_2_1, 1 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
    // { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[1 + bright_weights_normed_gauss_blur_2_1, 1 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
    // { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[2 + bright_weights_normed_gauss_blur_2_1, 1 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
    // { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[bright_weights_normed_gauss_blur_2_1, 2 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
    // { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[1 + bright_weights_normed_gauss_blur_2_1, 2 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
    // { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[2 + bright_weights_normed_gauss_blur_2_1, 2 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
  // # of banks: 1
  bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9_cache bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9;
};



inline void bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186, bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_ds_1_to_gp_16104_ld390, int bright_weights_normed_gauss_ds_1_to_gp_16104_ld389, int dynamic_address) {
  bright_weights_normed_gauss_ds_1_FIFO_buf388.bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9.push(bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186);
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_431_select(bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_431 read pattern: { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[bright_weights_normed_gauss_blur_2_1, bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 55] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186 = bright_weights_normed_gauss_ds_1_FIFO_buf388.bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9.peek_1088();
  return value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_432_select(bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_432 read pattern: { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[1 + bright_weights_normed_gauss_blur_2_1, bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 55] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186 = bright_weights_normed_gauss_ds_1_FIFO_buf388.bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9.peek_1087();
  return value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_433_select(bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_433 read pattern: { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[2 + bright_weights_normed_gauss_blur_2_1, bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 55] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186 = bright_weights_normed_gauss_ds_1_FIFO_buf388.bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9.peek_1086();
  return value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_434_select(bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_434 read pattern: { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[bright_weights_normed_gauss_blur_2_1, 1 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 55] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186 = bright_weights_normed_gauss_ds_1_FIFO_buf388.bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9.peek_545();
  return value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_435_select(bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_435 read pattern: { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[1 + bright_weights_normed_gauss_blur_2_1, 1 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 55] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186 = bright_weights_normed_gauss_ds_1_FIFO_buf388.bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9.peek_544();
  return value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_436_select(bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_436 read pattern: { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[2 + bright_weights_normed_gauss_blur_2_1, 1 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 55] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186 = bright_weights_normed_gauss_ds_1_FIFO_buf388.bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9.peek_543();
  return value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_437_select(bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_437 read pattern: { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[bright_weights_normed_gauss_blur_2_1, 2 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 55] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186 = bright_weights_normed_gauss_ds_1_FIFO_buf388.bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9.peek_2();
  return value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_438_select(bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_438 read pattern: { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[1 + bright_weights_normed_gauss_blur_2_1, 2 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 55] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186 = bright_weights_normed_gauss_ds_1_FIFO_buf388.bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_439_select(bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_439 read pattern: { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[root = 0, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf388[2 + bright_weights_normed_gauss_blur_2_1, 2 + bright_weights_normed_gauss_blur_2_0] : 0 <= bright_weights_normed_gauss_blur_2_0 <= 540 and 0 <= bright_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 55] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186 = bright_weights_normed_gauss_ds_1_FIFO_buf388.bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_merged_banks_9.peek_0();
  return value_bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_2_update_0_sm728_01081_read
//	bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_431
//	bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_432
//	bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_433
//	bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_434
//	bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_435
//	bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_436
//	bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_437
//	bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_438
//	bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_439
inline hw_uint<144> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_read_bundle_read(bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_blur_2_0, int bright_weights_normed_gauss_blur_2_1, int dynamic_address) {
  // # of ports in bundle: 9
    // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_431
    // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_432
    // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_433
    // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_434
    // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_435
    // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_436
    // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_437
    // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_438
    // bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_439

	hw_uint<144> result;
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_431_res = bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_431_select(bright_weights_normed_gauss_ds_1_FIFO_buf388, root, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<0, 144>(result, bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_431_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_432_res = bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_432_select(bright_weights_normed_gauss_ds_1_FIFO_buf388, root, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<16, 144>(result, bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_432_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_433_res = bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_433_select(bright_weights_normed_gauss_ds_1_FIFO_buf388, root, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<32, 144>(result, bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_433_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_434_res = bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_434_select(bright_weights_normed_gauss_ds_1_FIFO_buf388, root, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<48, 144>(result, bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_434_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_435_res = bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_435_select(bright_weights_normed_gauss_ds_1_FIFO_buf388, root, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<64, 144>(result, bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_435_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_436_res = bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_436_select(bright_weights_normed_gauss_ds_1_FIFO_buf388, root, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<80, 144>(result, bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_436_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_437_res = bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_437_select(bright_weights_normed_gauss_ds_1_FIFO_buf388, root, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<96, 144>(result, bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_437_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_438_res = bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_438_select(bright_weights_normed_gauss_ds_1_FIFO_buf388, root, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<112, 144>(result, bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_438_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_439_res = bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_439_select(bright_weights_normed_gauss_ds_1_FIFO_buf388, root, bright_weights_normed_gauss_blur_2_0, bright_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<128, 144>(result, bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_439_res);
	return result;
}

// load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_write
//	bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186
inline void bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_write_bundle_write(hw_uint<16>& load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_write, bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int root, int bright_weights_normed_gauss_ds_1_to_gp_16104_ld390, int bright_weights_normed_gauss_ds_1_to_gp_16104_ld389, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_res = load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_write(bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_186_res, bright_weights_normed_gauss_ds_1_FIFO_buf388, root, bright_weights_normed_gauss_ds_1_to_gp_16104_ld390, bright_weights_normed_gauss_ds_1_to_gp_16104_ld389, dynamic_address);
}

struct bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184_to_bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_1_FIFO_buf392_cache {
  // Reader addrs...
    // { fused_level_1_update_0_sm752_01123[root = 0, fused_level_1_0, fused_level_1_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf392[3 + fused_level_1_1, 3 + fused_level_1_0] : 0 <= fused_level_1_0 <= 539 and 0 <= fused_level_1_1 <= 539 }
  // # of banks: 1
  bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184_to_bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301_cache bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184_to_bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301;
};



inline void bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184, bright_weights_normed_gauss_ds_1_FIFO_buf392_cache& bright_weights_normed_gauss_ds_1_FIFO_buf392, int root, int bright_weights_normed_gauss_ds_1_to_gp_46108_ld394, int bright_weights_normed_gauss_ds_1_to_gp_46108_ld393, int dynamic_address) {
  bright_weights_normed_gauss_ds_1_FIFO_buf392.bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184_to_bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301.push(bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184);
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301_select(bright_weights_normed_gauss_ds_1_FIFO_buf392_cache& bright_weights_normed_gauss_ds_1_FIFO_buf392, int root, int fused_level_1_0, int fused_level_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301 read pattern: { fused_level_1_update_0_sm752_01123[root = 0, fused_level_1_0, fused_level_1_1] -> bright_weights_normed_gauss_ds_1_FIFO_buf392[3 + fused_level_1_1, 3 + fused_level_1_0] : 0 <= fused_level_1_0 <= 539 and 0 <= fused_level_1_1 <= 539 }
  // Read schedule : { fused_level_1_update_0_sm752_01123[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 164] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 65] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184 = bright_weights_normed_gauss_ds_1_FIFO_buf392.bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184_to_bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184;
  return 0;
}

// # of bundles = 2
// fused_level_1_update_0_sm752_01123_read
//	bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301
inline hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_read_bundle_read(bright_weights_normed_gauss_ds_1_FIFO_buf392_cache& bright_weights_normed_gauss_ds_1_FIFO_buf392, int root, int fused_level_1_0, int fused_level_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301_res = bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301_select(bright_weights_normed_gauss_ds_1_FIFO_buf392, root, fused_level_1_0, fused_level_1_1, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_301_res);
	return result;
}

// load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_write
//	bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184
inline void bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_write_bundle_write(hw_uint<16>& load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_write, bright_weights_normed_gauss_ds_1_FIFO_buf392_cache& bright_weights_normed_gauss_ds_1_FIFO_buf392, int root, int bright_weights_normed_gauss_ds_1_to_gp_46108_ld394, int bright_weights_normed_gauss_ds_1_to_gp_46108_ld393, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184_res = load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184_write(bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_184_res, bright_weights_normed_gauss_ds_1_FIFO_buf392, root, bright_weights_normed_gauss_ds_1_to_gp_46108_ld394, bright_weights_normed_gauss_ds_1_to_gp_46108_ld393, dynamic_address);
}

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_to_bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175_cache {
	// RAM Box: {[0, 270], [0, 270]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_to_bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_2_cache {
  // Reader addrs...
    // { load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871[root = 0, bright_weights_normed_gauss_ds_2_ld114, bright_weights_normed_gauss_ds_2_ld113] -> bright_weights_normed_gauss_ds_2[bright_weights_normed_gauss_ds_2_ld113, bright_weights_normed_gauss_ds_2_ld114] : 0 <= bright_weights_normed_gauss_ds_2_ld114 <= 270 and 0 <= bright_weights_normed_gauss_ds_2_ld113 <= 270 }
    // { load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843[root = 0, bright_weights_normed_gauss_ds_2_ld118, bright_weights_normed_gauss_ds_2_ld117] -> bright_weights_normed_gauss_ds_2[1 + bright_weights_normed_gauss_ds_2_ld117, 1 + bright_weights_normed_gauss_ds_2_ld118] : 0 <= bright_weights_normed_gauss_ds_2_ld118 <= 269 and 0 <= bright_weights_normed_gauss_ds_2_ld117 <= 269 }
  // # of banks: 2
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_to_bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_to_bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175;
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_to_bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_to_bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173;
};



inline void bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_write(hw_uint<16>& bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int root, int bright_weights_normed_gauss_ds_2_0, int bright_weights_normed_gauss_ds_2_1, int dynamic_address) {
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_to_bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416);
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_to_bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416);
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int root, int bright_weights_normed_gauss_ds_2_ld114, int bright_weights_normed_gauss_ds_2_ld113, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175 read pattern: { load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871[root = 0, bright_weights_normed_gauss_ds_2_ld114, bright_weights_normed_gauss_ds_2_ld113] -> bright_weights_normed_gauss_ds_2[bright_weights_normed_gauss_ds_2_ld113, bright_weights_normed_gauss_ds_2_ld114] : 0 <= bright_weights_normed_gauss_ds_2_ld114 <= 270 and 0 <= bright_weights_normed_gauss_ds_2_ld113 <= 270 }
  // Read schedule : { load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 110] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0_sm734_01093[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 100] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_to_bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int root, int bright_weights_normed_gauss_ds_2_ld118, int bright_weights_normed_gauss_ds_2_ld117, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173 read pattern: { load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843[root = 0, bright_weights_normed_gauss_ds_2_ld118, bright_weights_normed_gauss_ds_2_ld117] -> bright_weights_normed_gauss_ds_2[1 + bright_weights_normed_gauss_ds_2_ld117, 1 + bright_weights_normed_gauss_ds_2_ld118] : 0 <= bright_weights_normed_gauss_ds_2_ld118 <= 269 and 0 <= bright_weights_normed_gauss_ds_2_ld117 <= 269 }
  // Read schedule : { load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 108] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0_sm734_01093[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 100] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_to_bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416;
  return 0;
}

// # of bundles = 3
// bright_weights_normed_gauss_ds_2_update_0_sm734_01093_write
//	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416
inline void bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_write_bundle_write(hw_uint<16>& bright_weights_normed_gauss_ds_2_update_0_sm734_01093_write, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int root, int bright_weights_normed_gauss_ds_2_0, int bright_weights_normed_gauss_ds_2_1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_res = bright_weights_normed_gauss_ds_2_update_0_sm734_01093_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_write(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_416_res, bright_weights_normed_gauss_ds_2, root, bright_weights_normed_gauss_ds_2_0, bright_weights_normed_gauss_ds_2_1, dynamic_address);
}

// load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_read
//	bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175
inline hw_uint<16> bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_read_bundle_read(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int root, int bright_weights_normed_gauss_ds_2_ld114, int bright_weights_normed_gauss_ds_2_ld113, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175_res = bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175_select(bright_weights_normed_gauss_ds_2, root, bright_weights_normed_gauss_ds_2_ld114, bright_weights_normed_gauss_ds_2_ld113, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_175_res);
	return result;
}

// load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_read
//	bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173
inline hw_uint<16> bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_read_bundle_read(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int root, int bright_weights_normed_gauss_ds_2_ld118, int bright_weights_normed_gauss_ds_2_ld117, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173_res = bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173_select(bright_weights_normed_gauss_ds_2, root, bright_weights_normed_gauss_ds_2_ld118, bright_weights_normed_gauss_ds_2_ld117, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_173_res);
	return result;
}

struct bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9_cache {
	// RAM Box: {[0, 270], [0, 270]}
	// Capacity: 545
	// # of read delays: 9
  // 0, 1, 2, 271, 272, 273, 542, 543, 544
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 268> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 268> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_270() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_271() {
		return f6;
	}

	inline hw_uint<16> peek_272() {
		return f8;
	}

	inline hw_uint<16> peek_273() {
		return f10;
	}

	inline hw_uint<16> peek_541() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_542() {
		return f12;
	}

	inline hw_uint<16> peek_543() {
		return f14;
	}

	inline hw_uint<16> peek_544() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 268
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 268 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 268
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 268 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_2_FIFO_buf396_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[bright_weights_normed_gauss_blur_3_1, bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
    // { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[1 + bright_weights_normed_gauss_blur_3_1, bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
    // { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[2 + bright_weights_normed_gauss_blur_3_1, bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
    // { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[bright_weights_normed_gauss_blur_3_1, 1 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
    // { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[1 + bright_weights_normed_gauss_blur_3_1, 1 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
    // { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[2 + bright_weights_normed_gauss_blur_3_1, 1 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
    // { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[bright_weights_normed_gauss_blur_3_1, 2 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
    // { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[1 + bright_weights_normed_gauss_blur_3_1, 2 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
    // { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[2 + bright_weights_normed_gauss_blur_3_1, 2 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
  // # of banks: 1
  bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9_cache bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9;
};



inline void bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_write(hw_uint<16>& bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178, bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_ds_2_to_gp_17112_ld398, int bright_weights_normed_gauss_ds_2_to_gp_17112_ld397, int dynamic_address) {
  bright_weights_normed_gauss_ds_2_FIFO_buf396.bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9.push(bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178);
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_421_select(bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_421 read pattern: { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[bright_weights_normed_gauss_blur_3_1, bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 114] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178 = bright_weights_normed_gauss_ds_2_FIFO_buf396.bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9.peek_544();
  return value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_422_select(bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_422 read pattern: { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[1 + bright_weights_normed_gauss_blur_3_1, bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 114] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178 = bright_weights_normed_gauss_ds_2_FIFO_buf396.bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9.peek_543();
  return value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_423_select(bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_423 read pattern: { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[2 + bright_weights_normed_gauss_blur_3_1, bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 114] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178 = bright_weights_normed_gauss_ds_2_FIFO_buf396.bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9.peek_542();
  return value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_424_select(bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_424 read pattern: { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[bright_weights_normed_gauss_blur_3_1, 1 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 114] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178 = bright_weights_normed_gauss_ds_2_FIFO_buf396.bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9.peek_273();
  return value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_425_select(bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_425 read pattern: { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[1 + bright_weights_normed_gauss_blur_3_1, 1 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 114] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178 = bright_weights_normed_gauss_ds_2_FIFO_buf396.bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9.peek_272();
  return value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_426_select(bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_426 read pattern: { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[2 + bright_weights_normed_gauss_blur_3_1, 1 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 114] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178 = bright_weights_normed_gauss_ds_2_FIFO_buf396.bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9.peek_271();
  return value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_427_select(bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_427 read pattern: { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[bright_weights_normed_gauss_blur_3_1, 2 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 114] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178 = bright_weights_normed_gauss_ds_2_FIFO_buf396.bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9.peek_2();
  return value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_428_select(bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_428 read pattern: { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[1 + bright_weights_normed_gauss_blur_3_1, 2 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 114] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178 = bright_weights_normed_gauss_ds_2_FIFO_buf396.bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_429_select(bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_429 read pattern: { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[root = 0, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf396[2 + bright_weights_normed_gauss_blur_3_1, 2 + bright_weights_normed_gauss_blur_3_0] : 0 <= bright_weights_normed_gauss_blur_3_0 <= 268 and 0 <= bright_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 114] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178 = bright_weights_normed_gauss_ds_2_FIFO_buf396.bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_merged_banks_9.peek_0();
  return value_bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_3_update_0_sm735_01095_read
//	bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_421
//	bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_422
//	bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_423
//	bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_424
//	bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_425
//	bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_426
//	bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_427
//	bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_428
//	bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_429
inline hw_uint<144> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_read_bundle_read(bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_blur_3_0, int bright_weights_normed_gauss_blur_3_1, int dynamic_address) {
  // # of ports in bundle: 9
    // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_421
    // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_422
    // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_423
    // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_424
    // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_425
    // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_426
    // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_427
    // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_428
    // bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_429

	hw_uint<144> result;
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_421_res = bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_421_select(bright_weights_normed_gauss_ds_2_FIFO_buf396, root, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<0, 144>(result, bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_421_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_422_res = bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_422_select(bright_weights_normed_gauss_ds_2_FIFO_buf396, root, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<16, 144>(result, bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_422_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_423_res = bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_423_select(bright_weights_normed_gauss_ds_2_FIFO_buf396, root, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<32, 144>(result, bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_423_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_424_res = bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_424_select(bright_weights_normed_gauss_ds_2_FIFO_buf396, root, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<48, 144>(result, bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_424_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_425_res = bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_425_select(bright_weights_normed_gauss_ds_2_FIFO_buf396, root, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<64, 144>(result, bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_425_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_426_res = bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_426_select(bright_weights_normed_gauss_ds_2_FIFO_buf396, root, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<80, 144>(result, bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_426_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_427_res = bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_427_select(bright_weights_normed_gauss_ds_2_FIFO_buf396, root, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<96, 144>(result, bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_427_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_428_res = bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_428_select(bright_weights_normed_gauss_ds_2_FIFO_buf396, root, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<112, 144>(result, bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_428_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_429_res = bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_429_select(bright_weights_normed_gauss_ds_2_FIFO_buf396, root, bright_weights_normed_gauss_blur_3_0, bright_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<128, 144>(result, bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_429_res);
	return result;
}

// load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_write
//	bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178
inline void bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_write_bundle_write(hw_uint<16>& load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_write, bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int root, int bright_weights_normed_gauss_ds_2_to_gp_17112_ld398, int bright_weights_normed_gauss_ds_2_to_gp_17112_ld397, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_res = load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_write(bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_178_res, bright_weights_normed_gauss_ds_2_FIFO_buf396, root, bright_weights_normed_gauss_ds_2_to_gp_17112_ld398, bright_weights_normed_gauss_ds_2_to_gp_17112_ld397, dynamic_address);
}

struct bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176_to_bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 271
	// # of read delays: 271
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
	fifo<hw_uint<16>, 271> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(270 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_2_FIFO_buf400_cache {
  // Reader addrs...
    // { fused_level_2_update_0_sm751_01121[root = 0, fused_level_2_0, fused_level_2_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf400[1 + fused_level_2_1, 1 + fused_level_2_0] : 0 <= fused_level_2_0 <= 269 and 0 <= fused_level_2_1 <= 269 }
  // # of banks: 1
  bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176_to_bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296_cache bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176_to_bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296;
};



inline void bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176_write(hw_uint<16>& bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176, bright_weights_normed_gauss_ds_2_FIFO_buf400_cache& bright_weights_normed_gauss_ds_2_FIFO_buf400, int root, int bright_weights_normed_gauss_ds_2_to_gp_47116_ld402, int bright_weights_normed_gauss_ds_2_to_gp_47116_ld401, int dynamic_address) {
  bright_weights_normed_gauss_ds_2_FIFO_buf400.bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176_to_bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296.push(bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176);
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296_select(bright_weights_normed_gauss_ds_2_FIFO_buf400_cache& bright_weights_normed_gauss_ds_2_FIFO_buf400, int root, int fused_level_2_0, int fused_level_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296 read pattern: { fused_level_2_update_0_sm751_01121[root = 0, fused_level_2_0, fused_level_2_1] -> bright_weights_normed_gauss_ds_2_FIFO_buf400[1 + fused_level_2_1, 1 + fused_level_2_0] : 0 <= fused_level_2_0 <= 269 and 0 <= fused_level_2_1 <= 269 }
  // Read schedule : { fused_level_2_update_0_sm751_01121[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 180] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 121] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176 = bright_weights_normed_gauss_ds_2_FIFO_buf400.bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176_to_bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296.peek(/* one reader or all rams */ (268 - fused_level_2_1 >= 0 && 268 - fused_level_2_0 >= 0) ? (270) : (-269 + fused_level_2_1 == 0 && 268 - fused_level_2_0 >= 0) ? (270) : (-269 + fused_level_2_0 == 0 && 268 - fused_level_2_1 >= 0) ? ((269 - fused_level_2_1)) : 0);
  return value_bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176;
  return 0;
}

// # of bundles = 2
// fused_level_2_update_0_sm751_01121_read
//	bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296
inline hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_read_bundle_read(bright_weights_normed_gauss_ds_2_FIFO_buf400_cache& bright_weights_normed_gauss_ds_2_FIFO_buf400, int root, int fused_level_2_0, int fused_level_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296_res = bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296_select(bright_weights_normed_gauss_ds_2_FIFO_buf400, root, fused_level_2_0, fused_level_2_1, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_296_res);
	return result;
}

// load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_write
//	bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176
inline void bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_write_bundle_write(hw_uint<16>& load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_write, bright_weights_normed_gauss_ds_2_FIFO_buf400_cache& bright_weights_normed_gauss_ds_2_FIFO_buf400, int root, int bright_weights_normed_gauss_ds_2_to_gp_47116_ld402, int bright_weights_normed_gauss_ds_2_to_gp_47116_ld401, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176_res = load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176_write(bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_176_res, bright_weights_normed_gauss_ds_2_FIFO_buf400, root, bright_weights_normed_gauss_ds_2_to_gp_47116_ld402, bright_weights_normed_gauss_ds_2_to_gp_47116_ld401, dynamic_address);
}

struct bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414_to_bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_3_cache {
  // Reader addrs...
    // { load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873[root = 0, bright_weights_normed_gauss_ds_3_ld122, bright_weights_normed_gauss_ds_3_ld121] -> bright_weights_normed_gauss_ds_3[bright_weights_normed_gauss_ds_3_ld121, bright_weights_normed_gauss_ds_3_ld122] : 0 <= bright_weights_normed_gauss_ds_3_ld122 <= 134 and 0 <= bright_weights_normed_gauss_ds_3_ld121 <= 134 }
  // # of banks: 1
  bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414_to_bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169_cache bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414_to_bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169;
};



inline void bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414_write(hw_uint<16>& bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int root, int bright_weights_normed_gauss_ds_3_0, int bright_weights_normed_gauss_ds_3_1, int dynamic_address) {
  bright_weights_normed_gauss_ds_3.bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414_to_bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169.push(bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414);
}

inline hw_uint<16> bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169_select(bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int root, int bright_weights_normed_gauss_ds_3_ld122, int bright_weights_normed_gauss_ds_3_ld121, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169 read pattern: { load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873[root = 0, bright_weights_normed_gauss_ds_3_ld122, bright_weights_normed_gauss_ds_3_ld121] -> bright_weights_normed_gauss_ds_3[bright_weights_normed_gauss_ds_3_ld121, bright_weights_normed_gauss_ds_3_ld122] : 0 <= bright_weights_normed_gauss_ds_3_ld122 <= 134 and 0 <= bright_weights_normed_gauss_ds_3_ld121 <= 134 }
  // Read schedule : { load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 157] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { bright_weights_normed_gauss_ds_3_update_0_sm743_01133[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 149] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414 = bright_weights_normed_gauss_ds_3.bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414_to_bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_ds_3_update_0_sm743_01133_write
//	bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414
inline void bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_write_bundle_write(hw_uint<16>& bright_weights_normed_gauss_ds_3_update_0_sm743_01133_write, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int root, int bright_weights_normed_gauss_ds_3_0, int bright_weights_normed_gauss_ds_3_1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414_res = bright_weights_normed_gauss_ds_3_update_0_sm743_01133_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414_write(bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_414_res, bright_weights_normed_gauss_ds_3, root, bright_weights_normed_gauss_ds_3_0, bright_weights_normed_gauss_ds_3_1, dynamic_address);
}

// load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_read
//	bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169
inline hw_uint<16> bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_read_bundle_read(bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int root, int bright_weights_normed_gauss_ds_3_ld122, int bright_weights_normed_gauss_ds_3_ld121, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169_res = bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169_select(bright_weights_normed_gauss_ds_3, root, bright_weights_normed_gauss_ds_3_ld122, bright_weights_normed_gauss_ds_3_ld121, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_169_res);
	return result;
}

struct bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170_to_bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_3_FIFO_buf404_cache {
  // Reader addrs...
    // { fused_level_3_update_0_sm750_01119[root = 0, fused_level_3_0, fused_level_3_1] -> bright_weights_normed_gauss_ds_3_FIFO_buf404[fused_level_3_1, fused_level_3_0] : 0 <= fused_level_3_0 <= 134 and 0 <= fused_level_3_1 <= 134 }
  // # of banks: 1
  bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170_to_bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291_cache bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170_to_bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291;
};



inline void bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170_write(hw_uint<16>& bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170, bright_weights_normed_gauss_ds_3_FIFO_buf404_cache& bright_weights_normed_gauss_ds_3_FIFO_buf404, int root, int bright_weights_normed_gauss_ds_3_to_gp_48120_ld406, int bright_weights_normed_gauss_ds_3_to_gp_48120_ld405, int dynamic_address) {
  bright_weights_normed_gauss_ds_3_FIFO_buf404.bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170_to_bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291.push(bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170);
}

inline hw_uint<16> bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291_select(bright_weights_normed_gauss_ds_3_FIFO_buf404_cache& bright_weights_normed_gauss_ds_3_FIFO_buf404, int root, int fused_level_3_0, int fused_level_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291 read pattern: { fused_level_3_update_0_sm750_01119[root = 0, fused_level_3_0, fused_level_3_1] -> bright_weights_normed_gauss_ds_3_FIFO_buf404[fused_level_3_1, fused_level_3_0] : 0 <= fused_level_3_0 <= 134 and 0 <= fused_level_3_1 <= 134 }
  // Read schedule : { fused_level_3_update_0_sm750_01119[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 175] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 163] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170 = bright_weights_normed_gauss_ds_3_FIFO_buf404.bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170_to_bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170;
  return 0;
}

// # of bundles = 2
// fused_level_3_update_0_sm750_01119_read
//	bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291
inline hw_uint<16> bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_read_bundle_read(bright_weights_normed_gauss_ds_3_FIFO_buf404_cache& bright_weights_normed_gauss_ds_3_FIFO_buf404, int root, int fused_level_3_0, int fused_level_3_1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291_res = bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291_select(bright_weights_normed_gauss_ds_3_FIFO_buf404, root, fused_level_3_0, fused_level_3_1, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_291_res);
	return result;
}

// load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_write
//	bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170
inline void bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_write_bundle_write(hw_uint<16>& load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_write, bright_weights_normed_gauss_ds_3_FIFO_buf404_cache& bright_weights_normed_gauss_ds_3_FIFO_buf404, int root, int bright_weights_normed_gauss_ds_3_to_gp_48120_ld406, int bright_weights_normed_gauss_ds_3_to_gp_48120_ld405, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170_res = load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170_write(bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_170_res, bright_weights_normed_gauss_ds_3_FIFO_buf404, root, bright_weights_normed_gauss_ds_3_to_gp_48120_ld406, bright_weights_normed_gauss_ds_3_to_gp_48120_ld405, dynamic_address);
}

struct dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_22124127_sm597_0819_87_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_28128131_sm610_0845_85_cache {
	// RAM Box: {[7, 1086], [7, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_34132135_sm611_0847_83_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_cache {
  // Reader addrs...
    // { load_to_dark_to_gp_22124127_sm597_0819[root = 0, dark_ld126, dark_ld125] -> dark[dark_ld125, dark_ld126] : 0 <= dark_ld126 <= 1086 and 0 <= dark_ld125 <= 1086 }
    // { load_to_dark_to_gp_28128131_sm610_0845[root = 0, dark_ld130, dark_ld129] -> dark[7 + dark_ld129, 7 + dark_ld130] : 0 <= dark_ld130 <= 1079 and 0 <= dark_ld129 <= 1079 }
    // { load_to_dark_to_gp_34132135_sm611_0847[root = 0, dark_ld134, dark_ld133] -> dark[dark_ld133, dark_ld134] : 0 <= dark_ld134 <= 1086 and 0 <= dark_ld133 <= 1086 }
  // # of banks: 3
  dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_22124127_sm597_0819_87_cache dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_22124127_sm597_0819_87;
  dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_28128131_sm610_0845_85_cache dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_28128131_sm610_0845_85;
  dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_34132135_sm611_0847_83_cache dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_34132135_sm611_0847_83;
};



inline void dark_dark_update_0_sm712_01049_357_write(hw_uint<16>& dark_dark_update_0_sm712_01049_357, dark_cache& dark, int root, int dark_0, int dark_1, int dynamic_address) {
  dark.dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_22124127_sm597_0819_87.push(dark_dark_update_0_sm712_01049_357);
  dark.dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_28128131_sm610_0845_85.push(dark_dark_update_0_sm712_01049_357);
  dark.dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_34132135_sm611_0847_83.push(dark_dark_update_0_sm712_01049_357);
}

inline hw_uint<16> dark_load_to_dark_to_gp_22124127_sm597_0819_87_select(dark_cache& dark, int root, int dark_ld126, int dark_ld125, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_load_to_dark_to_gp_22124127_sm597_0819_87 read pattern: { load_to_dark_to_gp_22124127_sm597_0819[root = 0, dark_ld126, dark_ld125] -> dark[dark_ld125, dark_ld126] : 0 <= dark_ld126 <= 1086 and 0 <= dark_ld125 <= 1086 }
  // Read schedule : { load_to_dark_to_gp_22124127_sm597_0819[d0 = 0, d1, d2] -> [0, d1, d2, 17] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { dark_update_0_sm712_01049[d0 = 0, d1, d2] -> [0, d1, d2, 12] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_dark_update_0_sm712_01049_357 = dark.dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_22124127_sm597_0819_87.peek(/* one reader or all rams */ 0);
  return value_dark_dark_update_0_sm712_01049_357;
  return 0;
}

inline hw_uint<16> dark_load_to_dark_to_gp_28128131_sm610_0845_85_select(dark_cache& dark, int root, int dark_ld130, int dark_ld129, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_load_to_dark_to_gp_28128131_sm610_0845_85 read pattern: { load_to_dark_to_gp_28128131_sm610_0845[root = 0, dark_ld130, dark_ld129] -> dark[7 + dark_ld129, 7 + dark_ld130] : 0 <= dark_ld130 <= 1079 and 0 <= dark_ld129 <= 1079 }
  // Read schedule : { load_to_dark_to_gp_28128131_sm610_0845[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 14] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { dark_update_0_sm712_01049[d0 = 0, d1, d2] -> [0, d1, d2, 12] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_dark_update_0_sm712_01049_357 = dark.dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_28128131_sm610_0845_85.peek(/* one reader or all rams */ 0);
  return value_dark_dark_update_0_sm712_01049_357;
  return 0;
}

inline hw_uint<16> dark_load_to_dark_to_gp_34132135_sm611_0847_83_select(dark_cache& dark, int root, int dark_ld134, int dark_ld133, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_load_to_dark_to_gp_34132135_sm611_0847_83 read pattern: { load_to_dark_to_gp_34132135_sm611_0847[root = 0, dark_ld134, dark_ld133] -> dark[dark_ld133, dark_ld134] : 0 <= dark_ld134 <= 1086 and 0 <= dark_ld133 <= 1086 }
  // Read schedule : { load_to_dark_to_gp_34132135_sm611_0847[d0 = 0, d1, d2] -> [0, d1, d2, 19] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { dark_update_0_sm712_01049[d0 = 0, d1, d2] -> [0, d1, d2, 12] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_dark_update_0_sm712_01049_357 = dark.dark_dark_update_0_sm712_01049_357_to_dark_load_to_dark_to_gp_34132135_sm611_0847_83.peek(/* one reader or all rams */ 0);
  return value_dark_dark_update_0_sm712_01049_357;
  return 0;
}

// # of bundles = 4
// dark_update_0_sm712_01049_write
//	dark_dark_update_0_sm712_01049_357
inline void dark_dark_update_0_sm712_01049_write_bundle_write(hw_uint<16>& dark_update_0_sm712_01049_write, dark_cache& dark, int root, int dark_0, int dark_1, int dynamic_address) {
	hw_uint<16> dark_dark_update_0_sm712_01049_357_res = dark_update_0_sm712_01049_write.extract<0, 15>();
	dark_dark_update_0_sm712_01049_357_write(dark_dark_update_0_sm712_01049_357_res, dark, root, dark_0, dark_1, dynamic_address);
}

// load_to_dark_to_gp_22124127_sm597_0819_read
//	dark_load_to_dark_to_gp_22124127_sm597_0819_87
inline hw_uint<16> dark_load_to_dark_to_gp_22124127_sm597_0819_read_bundle_read(dark_cache& dark, int root, int dark_ld126, int dark_ld125, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_load_to_dark_to_gp_22124127_sm597_0819_87

	hw_uint<16> result;
	hw_uint<16> dark_load_to_dark_to_gp_22124127_sm597_0819_87_res = dark_load_to_dark_to_gp_22124127_sm597_0819_87_select(dark, root, dark_ld126, dark_ld125, dynamic_address);
	set_at<0, 16>(result, dark_load_to_dark_to_gp_22124127_sm597_0819_87_res);
	return result;
}

// load_to_dark_to_gp_28128131_sm610_0845_read
//	dark_load_to_dark_to_gp_28128131_sm610_0845_85
inline hw_uint<16> dark_load_to_dark_to_gp_28128131_sm610_0845_read_bundle_read(dark_cache& dark, int root, int dark_ld130, int dark_ld129, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_load_to_dark_to_gp_28128131_sm610_0845_85

	hw_uint<16> result;
	hw_uint<16> dark_load_to_dark_to_gp_28128131_sm610_0845_85_res = dark_load_to_dark_to_gp_28128131_sm610_0845_85_select(dark, root, dark_ld130, dark_ld129, dynamic_address);
	set_at<0, 16>(result, dark_load_to_dark_to_gp_28128131_sm610_0845_85_res);
	return result;
}

// load_to_dark_to_gp_34132135_sm611_0847_read
//	dark_load_to_dark_to_gp_34132135_sm611_0847_83
inline hw_uint<16> dark_load_to_dark_to_gp_34132135_sm611_0847_read_bundle_read(dark_cache& dark, int root, int dark_ld134, int dark_ld133, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_load_to_dark_to_gp_34132135_sm611_0847_83

	hw_uint<16> result;
	hw_uint<16> dark_load_to_dark_to_gp_34132135_sm611_0847_83_res = dark_load_to_dark_to_gp_34132135_sm611_0847_83_select(dark, root, dark_ld134, dark_ld133, dynamic_address);
	set_at<0, 16>(result, dark_load_to_dark_to_gp_34132135_sm611_0847_83_res);
	return result;
}

struct dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 2177
	// # of read delays: 9
  // 0, 1, 2, 1087, 1088, 1089, 2174, 2175, 2176
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 1084> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 1084> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_1086() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_1087() {
		return f6;
	}

	inline hw_uint<16> peek_1088() {
		return f8;
	}

	inline hw_uint<16> peek_1089() {
		return f10;
	}

	inline hw_uint<16> peek_2173() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_2174() {
		return f12;
	}

	inline hw_uint<16> peek_2175() {
		return f14;
	}

	inline hw_uint<16> peek_2176() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1084
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1084 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1084
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1084 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_FIFO_buf408_cache {
  // Reader addrs...
    // { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[dark_gauss_blur_1_1, dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
    // { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[1 + dark_gauss_blur_1_1, dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
    // { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[2 + dark_gauss_blur_1_1, dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
    // { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[dark_gauss_blur_1_1, 1 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
    // { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[1 + dark_gauss_blur_1_1, 1 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
    // { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[2 + dark_gauss_blur_1_1, 1 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
    // { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[dark_gauss_blur_1_1, 2 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
    // { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[1 + dark_gauss_blur_1_1, 2 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
    // { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[2 + dark_gauss_blur_1_1, 2 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
  // # of banks: 1
  dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9_cache dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9;
};



inline void dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_write(hw_uint<16>& dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160, dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_to_gp_22124_ld410, int dark_to_gp_22124_ld409, int dynamic_address) {
  dark_FIFO_buf408.dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9.push(dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160);
}

inline hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_401_select(dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_401 read pattern: { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[dark_gauss_blur_1_1, dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_FIFO_buf408411_sm661_0947[d0 = 0, d1, d2] -> [0, d1, d2, 22] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160 = dark_FIFO_buf408.dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9.peek_2176();
  return value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160;
  return 0;
}

inline hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_402_select(dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_402 read pattern: { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[1 + dark_gauss_blur_1_1, dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_FIFO_buf408411_sm661_0947[d0 = 0, d1, d2] -> [0, d1, d2, 22] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160 = dark_FIFO_buf408.dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9.peek_2175();
  return value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160;
  return 0;
}

inline hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_403_select(dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_403 read pattern: { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[2 + dark_gauss_blur_1_1, dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_FIFO_buf408411_sm661_0947[d0 = 0, d1, d2] -> [0, d1, d2, 22] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160 = dark_FIFO_buf408.dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9.peek_2174();
  return value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160;
  return 0;
}

inline hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_404_select(dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_404 read pattern: { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[dark_gauss_blur_1_1, 1 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_FIFO_buf408411_sm661_0947[d0 = 0, d1, d2] -> [0, d1, d2, 22] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160 = dark_FIFO_buf408.dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9.peek_1089();
  return value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160;
  return 0;
}

inline hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_405_select(dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_405 read pattern: { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[1 + dark_gauss_blur_1_1, 1 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_FIFO_buf408411_sm661_0947[d0 = 0, d1, d2] -> [0, d1, d2, 22] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160 = dark_FIFO_buf408.dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9.peek_1088();
  return value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160;
  return 0;
}

inline hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_406_select(dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_406 read pattern: { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[2 + dark_gauss_blur_1_1, 1 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_FIFO_buf408411_sm661_0947[d0 = 0, d1, d2] -> [0, d1, d2, 22] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160 = dark_FIFO_buf408.dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9.peek_1087();
  return value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160;
  return 0;
}

inline hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_407_select(dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_407 read pattern: { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[dark_gauss_blur_1_1, 2 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_FIFO_buf408411_sm661_0947[d0 = 0, d1, d2] -> [0, d1, d2, 22] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160 = dark_FIFO_buf408.dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9.peek_2();
  return value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160;
  return 0;
}

inline hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_408_select(dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_408 read pattern: { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[1 + dark_gauss_blur_1_1, 2 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_FIFO_buf408411_sm661_0947[d0 = 0, d1, d2] -> [0, d1, d2, 22] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160 = dark_FIFO_buf408.dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9.peek_1();
  return value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160;
  return 0;
}

inline hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_409_select(dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_409 read pattern: { dark_gauss_blur_1_update_0_sm708_01041[root = 0, dark_gauss_blur_1_0, dark_gauss_blur_1_1] -> dark_FIFO_buf408[2 + dark_gauss_blur_1_1, 2 + dark_gauss_blur_1_0] : 0 <= dark_gauss_blur_1_0 <= 1084 and 0 <= dark_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_FIFO_buf408411_sm661_0947[d0 = 0, d1, d2] -> [0, d1, d2, 22] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160 = dark_FIFO_buf408.dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_merged_banks_9.peek_0();
  return value_dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_1_update_0_sm708_01041_read
//	dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_401
//	dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_402
//	dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_403
//	dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_404
//	dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_405
//	dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_406
//	dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_407
//	dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_408
//	dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_409
inline hw_uint<144> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_read_bundle_read(dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
  // # of ports in bundle: 9
    // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_401
    // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_402
    // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_403
    // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_404
    // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_405
    // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_406
    // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_407
    // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_408
    // dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_409

	hw_uint<144> result;
	hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_401_res = dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_401_select(dark_FIFO_buf408, root, dark_gauss_blur_1_0, dark_gauss_blur_1_1, dynamic_address);
	set_at<0, 144>(result, dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_401_res);
	hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_402_res = dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_402_select(dark_FIFO_buf408, root, dark_gauss_blur_1_0, dark_gauss_blur_1_1, dynamic_address);
	set_at<16, 144>(result, dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_402_res);
	hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_403_res = dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_403_select(dark_FIFO_buf408, root, dark_gauss_blur_1_0, dark_gauss_blur_1_1, dynamic_address);
	set_at<32, 144>(result, dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_403_res);
	hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_404_res = dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_404_select(dark_FIFO_buf408, root, dark_gauss_blur_1_0, dark_gauss_blur_1_1, dynamic_address);
	set_at<48, 144>(result, dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_404_res);
	hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_405_res = dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_405_select(dark_FIFO_buf408, root, dark_gauss_blur_1_0, dark_gauss_blur_1_1, dynamic_address);
	set_at<64, 144>(result, dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_405_res);
	hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_406_res = dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_406_select(dark_FIFO_buf408, root, dark_gauss_blur_1_0, dark_gauss_blur_1_1, dynamic_address);
	set_at<80, 144>(result, dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_406_res);
	hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_407_res = dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_407_select(dark_FIFO_buf408, root, dark_gauss_blur_1_0, dark_gauss_blur_1_1, dynamic_address);
	set_at<96, 144>(result, dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_407_res);
	hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_408_res = dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_408_select(dark_FIFO_buf408, root, dark_gauss_blur_1_0, dark_gauss_blur_1_1, dynamic_address);
	set_at<112, 144>(result, dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_408_res);
	hw_uint<16> dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_409_res = dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_409_select(dark_FIFO_buf408, root, dark_gauss_blur_1_0, dark_gauss_blur_1_1, dynamic_address);
	set_at<128, 144>(result, dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_409_res);
	return result;
}

// load_to_dark_FIFO_buf408411_sm661_0947_write
//	dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160
inline void dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_write_bundle_write(hw_uint<16>& load_to_dark_FIFO_buf408411_sm661_0947_write, dark_FIFO_buf408_cache& dark_FIFO_buf408, int root, int dark_to_gp_22124_ld410, int dark_to_gp_22124_ld409, int dynamic_address) {
	hw_uint<16> dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_res = load_to_dark_FIFO_buf408411_sm661_0947_write.extract<0, 15>();
	dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_write(dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_160_res, dark_FIFO_buf408, root, dark_to_gp_22124_ld410, dark_to_gp_22124_ld409, dynamic_address);
}

struct dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158_to_dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372_cache {
	// RAM Box: {[7, 1086], [7, 1086]}
	// Capacity: 1082
	// # of read delays: 1082

	fifo<hw_uint<16>, 1082> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1081 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_FIFO_buf412_cache {
  // Reader addrs...
    // { dark_laplace_diff_0_update_0_sm742_01135[root = 0, dark_laplace_diff_0_0, dark_laplace_diff_0_1] -> dark_FIFO_buf412[7 + dark_laplace_diff_0_1, 7 + dark_laplace_diff_0_0] : 0 <= dark_laplace_diff_0_0 <= 1079 and 0 <= dark_laplace_diff_0_1 <= 1079 }
  // # of banks: 1
  dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158_to_dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372_cache dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158_to_dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372;
};



inline void dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158_write(hw_uint<16>& dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158, dark_FIFO_buf412_cache& dark_FIFO_buf412, int root, int dark_to_gp_28128_ld414, int dark_to_gp_28128_ld413, int dynamic_address) {
  dark_FIFO_buf412.dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158_to_dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372.push(dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158);
}

inline hw_uint<16> dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372_select(dark_FIFO_buf412_cache& dark_FIFO_buf412, int root, int dark_laplace_diff_0_0, int dark_laplace_diff_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372 read pattern: { dark_laplace_diff_0_update_0_sm742_01135[root = 0, dark_laplace_diff_0_0, dark_laplace_diff_0_1] -> dark_FIFO_buf412[7 + dark_laplace_diff_0_1, 7 + dark_laplace_diff_0_0] : 0 <= dark_laplace_diff_0_0 <= 1079 and 0 <= dark_laplace_diff_0_1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0_sm742_01135[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 128] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_dark_FIFO_buf412415_sm662_0949[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 16] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158 = dark_FIFO_buf412.dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158_to_dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372.peek(/* one reader or all rams */ (1078 - dark_laplace_diff_0_1 >= 0 && 1078 - dark_laplace_diff_0_0 >= 0) ? (1081) : (-1079 + dark_laplace_diff_0_1 == 0 && 1078 - dark_laplace_diff_0_0 >= 0) ? (1080) : (-1079 + dark_laplace_diff_0_0 == 0 && 1078 - dark_laplace_diff_0_1 >= 0) ? ((1079 - dark_laplace_diff_0_1)) : 0);
  return value_dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_0_update_0_sm742_01135_read
//	dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372
inline hw_uint<16> dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_read_bundle_read(dark_FIFO_buf412_cache& dark_FIFO_buf412, int root, int dark_laplace_diff_0_0, int dark_laplace_diff_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372

	hw_uint<16> result;
	hw_uint<16> dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372_res = dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372_select(dark_FIFO_buf412, root, dark_laplace_diff_0_0, dark_laplace_diff_0_1, dynamic_address);
	set_at<0, 16>(result, dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_372_res);
	return result;
}

// load_to_dark_FIFO_buf412415_sm662_0949_write
//	dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158
inline void dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_write_bundle_write(hw_uint<16>& load_to_dark_FIFO_buf412415_sm662_0949_write, dark_FIFO_buf412_cache& dark_FIFO_buf412, int root, int dark_to_gp_28128_ld414, int dark_to_gp_28128_ld413, int dynamic_address) {
	hw_uint<16> dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158_res = load_to_dark_FIFO_buf412415_sm662_0949_write.extract<0, 15>();
	dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158_write(dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_158_res, dark_FIFO_buf412, root, dark_to_gp_28128_ld414, dark_to_gp_28128_ld413, dynamic_address);
}

struct dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156_to_dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_FIFO_buf416_cache {
  // Reader addrs...
    // { dark_weights_update_0_sm710_01045[root = 0, dark_weights_0, dark_weights_1] -> dark_FIFO_buf416[dark_weights_1, dark_weights_0] : 0 <= dark_weights_0 <= 1086 and 0 <= dark_weights_1 <= 1086 }
  // # of banks: 1
  dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156_to_dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318_cache dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156_to_dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318;
};



inline void dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156_write(hw_uint<16>& dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156, dark_FIFO_buf416_cache& dark_FIFO_buf416, int root, int dark_to_gp_34132_ld418, int dark_to_gp_34132_ld417, int dynamic_address) {
  dark_FIFO_buf416.dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156_to_dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318.push(dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156);
}

inline hw_uint<16> dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318_select(dark_FIFO_buf416_cache& dark_FIFO_buf416, int root, int dark_weights_0, int dark_weights_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318 read pattern: { dark_weights_update_0_sm710_01045[root = 0, dark_weights_0, dark_weights_1] -> dark_FIFO_buf416[dark_weights_1, dark_weights_0] : 0 <= dark_weights_0 <= 1086 and 0 <= dark_weights_1 <= 1086 }
  // Read schedule : { dark_weights_update_0_sm710_01045[d0 = 0, d1, d2] -> [0, d1, d2, 35] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { load_to_dark_FIFO_buf416419_sm675_0975[d0 = 0, d1, d2] -> [0, d1, d2, 27] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156 = dark_FIFO_buf416.dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156_to_dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318.peek(/* one reader or all rams */ 0);
  return value_dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156;
  return 0;
}

// # of bundles = 2
// dark_weights_update_0_sm710_01045_read
//	dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318
inline hw_uint<16> dark_FIFO_buf416_dark_weights_update_0_sm710_01045_read_bundle_read(dark_FIFO_buf416_cache& dark_FIFO_buf416, int root, int dark_weights_0, int dark_weights_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318

	hw_uint<16> result;
	hw_uint<16> dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318_res = dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318_select(dark_FIFO_buf416, root, dark_weights_0, dark_weights_1, dynamic_address);
	set_at<0, 16>(result, dark_FIFO_buf416_dark_weights_update_0_sm710_01045_318_res);
	return result;
}

// load_to_dark_FIFO_buf416419_sm675_0975_write
//	dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156
inline void dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_write_bundle_write(hw_uint<16>& load_to_dark_FIFO_buf416419_sm675_0975_write, dark_FIFO_buf416_cache& dark_FIFO_buf416, int root, int dark_to_gp_34132_ld418, int dark_to_gp_34132_ld417, int dynamic_address) {
	hw_uint<16> dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156_res = load_to_dark_FIFO_buf416419_sm675_0975_write.extract<0, 15>();
	dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156_write(dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_156_res, dark_FIFO_buf416, root, dark_to_gp_34132_ld418, dark_to_gp_34132_ld417, dynamic_address);
}

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400_to_dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153_cache {
	// RAM Box: {[0, 1084], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_cache {
  // Reader addrs...
    // { load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807[root = 0, dark_gauss_blur_1_ld138, dark_gauss_blur_1_ld137] -> dark_gauss_blur_1[dark_gauss_blur_1_ld137, dark_gauss_blur_1_ld138] : 0 <= dark_gauss_blur_1_ld138 <= 1084 and 0 <= dark_gauss_blur_1_ld137 <= 1084 }
  // # of banks: 1
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400_to_dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400_to_dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153;
};



inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400, dark_gauss_blur_1_cache& dark_gauss_blur_1, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400_to_dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400);
}

inline hw_uint<16> dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int root, int dark_gauss_blur_1_ld138, int dark_gauss_blur_1_ld137, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153 read pattern: { load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807[root = 0, dark_gauss_blur_1_ld138, dark_gauss_blur_1_ld137] -> dark_gauss_blur_1[dark_gauss_blur_1_ld137, dark_gauss_blur_1_ld138] : 0 <= dark_gauss_blur_1_ld138 <= 1084 and 0 <= dark_gauss_blur_1_ld137 <= 1084 }
  // Read schedule : { load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 31] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400_to_dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_1_update_0_sm708_01041_write
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400
inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_write_bundle_write(hw_uint<16>& dark_gauss_blur_1_update_0_sm708_01041_write, dark_gauss_blur_1_cache& dark_gauss_blur_1, int root, int dark_gauss_blur_1_0, int dark_gauss_blur_1_1, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400_res = dark_gauss_blur_1_update_0_sm708_01041_write.extract<0, 15>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_400_res, dark_gauss_blur_1, root, dark_gauss_blur_1_0, dark_gauss_blur_1_1, dynamic_address);
}

// load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_read
//	dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153
inline hw_uint<16> dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_read_bundle_read(dark_gauss_blur_1_cache& dark_gauss_blur_1, int root, int dark_gauss_blur_1_ld138, int dark_gauss_blur_1_ld137, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153

	hw_uint<16> result;
	hw_uint<16> dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153_res = dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153_select(dark_gauss_blur_1, root, dark_gauss_blur_1_ld138, dark_gauss_blur_1_ld137, dynamic_address);
	set_at<0, 16>(result, dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_153_res);
	return result;
}

struct dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154_to_dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379_cache {
	// RAM Box: {[0, 1084], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_FIFO_buf420_cache {
  // Reader addrs...
    // { dark_gauss_ds_1_update_0_sm717_01059[root = 0, dark_gauss_ds_1_0, dark_gauss_ds_1_1] -> dark_gauss_blur_1_FIFO_buf420[2dark_gauss_ds_1_1, 2dark_gauss_ds_1_0] : 0 <= dark_gauss_ds_1_0 <= 542 and 0 <= dark_gauss_ds_1_1 <= 542 }
  // # of banks: 1
  dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154_to_dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379_cache dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154_to_dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379;
};



inline void dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154_write(hw_uint<16>& dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154, dark_gauss_blur_1_FIFO_buf420_cache& dark_gauss_blur_1_FIFO_buf420, int root, int dark_gauss_blur_1_to_gp_25136_ld422, int dark_gauss_blur_1_to_gp_25136_ld421, int dynamic_address) {
  dark_gauss_blur_1_FIFO_buf420.dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154_to_dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379.push(dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154);
}

inline hw_uint<16> dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379_select(dark_gauss_blur_1_FIFO_buf420_cache& dark_gauss_blur_1_FIFO_buf420, int root, int dark_gauss_ds_1_0, int dark_gauss_ds_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379 read pattern: { dark_gauss_ds_1_update_0_sm717_01059[root = 0, dark_gauss_ds_1_0, dark_gauss_ds_1_1] -> dark_gauss_blur_1_FIFO_buf420[2dark_gauss_ds_1_1, 2dark_gauss_ds_1_0] : 0 <= dark_gauss_ds_1_0 <= 542 and 0 <= dark_gauss_ds_1_1 <= 542 }
  // Read schedule : { dark_gauss_ds_1_update_0_sm717_01059[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 49] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  // Write schedule: { load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 40] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  auto value_dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154 = dark_gauss_blur_1_FIFO_buf420.dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154_to_dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154;
  return 0;
}

// # of bundles = 2
// dark_gauss_ds_1_update_0_sm717_01059_read
//	dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379
inline hw_uint<16> dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_read_bundle_read(dark_gauss_blur_1_FIFO_buf420_cache& dark_gauss_blur_1_FIFO_buf420, int root, int dark_gauss_ds_1_0, int dark_gauss_ds_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379

	hw_uint<16> result;
	hw_uint<16> dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379_res = dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379_select(dark_gauss_blur_1_FIFO_buf420, root, dark_gauss_ds_1_0, dark_gauss_ds_1_1, dynamic_address);
	set_at<0, 16>(result, dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_379_res);
	return result;
}

// load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_write
//	dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154
inline void dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_write_bundle_write(hw_uint<16>& load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_write, dark_gauss_blur_1_FIFO_buf420_cache& dark_gauss_blur_1_FIFO_buf420, int root, int dark_gauss_blur_1_to_gp_25136_ld422, int dark_gauss_blur_1_to_gp_25136_ld421, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154_res = load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_write.extract<0, 15>();
	dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154_write(dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_154_res, dark_gauss_blur_1_FIFO_buf420, root, dark_gauss_blur_1_to_gp_25136_ld422, dark_gauss_blur_1_to_gp_25136_ld421, dynamic_address);
}

struct dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390_to_dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149_cache {
	// RAM Box: {[0, 540], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_2_cache {
  // Reader addrs...
    // { load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809[root = 0, dark_gauss_blur_2_ld142, dark_gauss_blur_2_ld141] -> dark_gauss_blur_2[dark_gauss_blur_2_ld141, dark_gauss_blur_2_ld142] : 0 <= dark_gauss_blur_2_ld142 <= 540 and 0 <= dark_gauss_blur_2_ld141 <= 540 }
  // # of banks: 1
  dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390_to_dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149_cache dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390_to_dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149;
};



inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390, dark_gauss_blur_2_cache& dark_gauss_blur_2, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
  dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390_to_dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149.push(dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390);
}

inline hw_uint<16> dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149_select(dark_gauss_blur_2_cache& dark_gauss_blur_2, int root, int dark_gauss_blur_2_ld142, int dark_gauss_blur_2_ld141, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149 read pattern: { load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809[root = 0, dark_gauss_blur_2_ld142, dark_gauss_blur_2_ld141] -> dark_gauss_blur_2[dark_gauss_blur_2_ld141, dark_gauss_blur_2_ld142] : 0 <= dark_gauss_blur_2_ld142 <= 540 and 0 <= dark_gauss_blur_2_ld141 <= 540 }
  // Read schedule : { load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 71] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  auto value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390 = dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390_to_dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_2_update_0_sm718_01061_write
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390
inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_write_bundle_write(hw_uint<16>& dark_gauss_blur_2_update_0_sm718_01061_write, dark_gauss_blur_2_cache& dark_gauss_blur_2, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390_res = dark_gauss_blur_2_update_0_sm718_01061_write.extract<0, 15>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_390_res, dark_gauss_blur_2, root, dark_gauss_blur_2_0, dark_gauss_blur_2_1, dynamic_address);
}

// load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_read
//	dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149
inline hw_uint<16> dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_read_bundle_read(dark_gauss_blur_2_cache& dark_gauss_blur_2, int root, int dark_gauss_blur_2_ld142, int dark_gauss_blur_2_ld141, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149

	hw_uint<16> result;
	hw_uint<16> dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149_res = dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149_select(dark_gauss_blur_2, root, dark_gauss_blur_2_ld142, dark_gauss_blur_2_ld141, dynamic_address);
	set_at<0, 16>(result, dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_149_res);
	return result;
}

struct dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150_to_dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377_cache {
	// RAM Box: {[0, 540], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_2_FIFO_buf424_cache {
  // Reader addrs...
    // { dark_gauss_ds_2_update_0_sm725_01075[root = 0, dark_gauss_ds_2_0, dark_gauss_ds_2_1] -> dark_gauss_blur_2_FIFO_buf424[2dark_gauss_ds_2_1, 2dark_gauss_ds_2_0] : 0 <= dark_gauss_ds_2_0 <= 270 and 0 <= dark_gauss_ds_2_1 <= 270 }
  // # of banks: 1
  dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150_to_dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377_cache dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150_to_dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377;
};



inline void dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150_write(hw_uint<16>& dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150, dark_gauss_blur_2_FIFO_buf424_cache& dark_gauss_blur_2_FIFO_buf424, int root, int dark_gauss_blur_2_to_gp_26140_ld426, int dark_gauss_blur_2_to_gp_26140_ld425, int dynamic_address) {
  dark_gauss_blur_2_FIFO_buf424.dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150_to_dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377.push(dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150);
}

inline hw_uint<16> dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377_select(dark_gauss_blur_2_FIFO_buf424_cache& dark_gauss_blur_2_FIFO_buf424, int root, int dark_gauss_ds_2_0, int dark_gauss_ds_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377 read pattern: { dark_gauss_ds_2_update_0_sm725_01075[root = 0, dark_gauss_ds_2_0, dark_gauss_ds_2_1] -> dark_gauss_blur_2_FIFO_buf424[2dark_gauss_ds_2_1, 2dark_gauss_ds_2_0] : 0 <= dark_gauss_ds_2_0 <= 270 and 0 <= dark_gauss_ds_2_1 <= 270 }
  // Read schedule : { dark_gauss_ds_2_update_0_sm725_01075[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 74] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  // Write schedule: { load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 72] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  auto value_dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150 = dark_gauss_blur_2_FIFO_buf424.dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150_to_dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150;
  return 0;
}

// # of bundles = 2
// dark_gauss_ds_2_update_0_sm725_01075_read
//	dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377
inline hw_uint<16> dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_read_bundle_read(dark_gauss_blur_2_FIFO_buf424_cache& dark_gauss_blur_2_FIFO_buf424, int root, int dark_gauss_ds_2_0, int dark_gauss_ds_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377

	hw_uint<16> result;
	hw_uint<16> dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377_res = dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377_select(dark_gauss_blur_2_FIFO_buf424, root, dark_gauss_ds_2_0, dark_gauss_ds_2_1, dynamic_address);
	set_at<0, 16>(result, dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_377_res);
	return result;
}

// load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_write
//	dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150
inline void dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_write_bundle_write(hw_uint<16>& load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_write, dark_gauss_blur_2_FIFO_buf424_cache& dark_gauss_blur_2_FIFO_buf424, int root, int dark_gauss_blur_2_to_gp_26140_ld426, int dark_gauss_blur_2_to_gp_26140_ld425, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150_res = load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_write.extract<0, 15>();
	dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150_write(dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_150_res, dark_gauss_blur_2_FIFO_buf424, root, dark_gauss_blur_2_to_gp_26140_ld426, dark_gauss_blur_2_to_gp_26140_ld425, dynamic_address);
}

struct dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380_to_dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145_cache {
	// RAM Box: {[0, 268], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_3_cache {
  // Reader addrs...
    // { load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811[root = 0, dark_gauss_blur_3_ld146, dark_gauss_blur_3_ld145] -> dark_gauss_blur_3[dark_gauss_blur_3_ld145, dark_gauss_blur_3_ld146] : 0 <= dark_gauss_blur_3_ld146 <= 268 and 0 <= dark_gauss_blur_3_ld145 <= 268 }
  // # of banks: 1
  dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380_to_dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145_cache dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380_to_dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145;
};



inline void dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380_write(hw_uint<16>& dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380, dark_gauss_blur_3_cache& dark_gauss_blur_3, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
  dark_gauss_blur_3.dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380_to_dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145.push(dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380);
}

inline hw_uint<16> dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145_select(dark_gauss_blur_3_cache& dark_gauss_blur_3, int root, int dark_gauss_blur_3_ld146, int dark_gauss_blur_3_ld145, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145 read pattern: { load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811[root = 0, dark_gauss_blur_3_ld146, dark_gauss_blur_3_ld145] -> dark_gauss_blur_3[dark_gauss_blur_3_ld145, dark_gauss_blur_3_ld146] : 0 <= dark_gauss_blur_3_ld146 <= 268 and 0 <= dark_gauss_blur_3_ld145 <= 268 }
  // Read schedule : { load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 104] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  auto value_dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380 = dark_gauss_blur_3.dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380_to_dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_3_update_0_sm726_01077_write
//	dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380
inline void dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_write_bundle_write(hw_uint<16>& dark_gauss_blur_3_update_0_sm726_01077_write, dark_gauss_blur_3_cache& dark_gauss_blur_3, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380_res = dark_gauss_blur_3_update_0_sm726_01077_write.extract<0, 15>();
	dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380_write(dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_380_res, dark_gauss_blur_3, root, dark_gauss_blur_3_0, dark_gauss_blur_3_1, dynamic_address);
}

// load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_read
//	dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145
inline hw_uint<16> dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_read_bundle_read(dark_gauss_blur_3_cache& dark_gauss_blur_3, int root, int dark_gauss_blur_3_ld146, int dark_gauss_blur_3_ld145, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145

	hw_uint<16> result;
	hw_uint<16> dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145_res = dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145_select(dark_gauss_blur_3, root, dark_gauss_blur_3_ld146, dark_gauss_blur_3_ld145, dynamic_address);
	set_at<0, 16>(result, dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_145_res);
	return result;
}

struct dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146_to_dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375_cache {
	// RAM Box: {[0, 268], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_3_FIFO_buf428_cache {
  // Reader addrs...
    // { dark_gauss_ds_3_update_0_sm733_01091[root = 0, dark_gauss_ds_3_0, dark_gauss_ds_3_1] -> dark_gauss_blur_3_FIFO_buf428[2dark_gauss_ds_3_1, 2dark_gauss_ds_3_0] : 0 <= dark_gauss_ds_3_0 <= 134 and 0 <= dark_gauss_ds_3_1 <= 134 }
  // # of banks: 1
  dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146_to_dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375_cache dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146_to_dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375;
};



inline void dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146_write(hw_uint<16>& dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146, dark_gauss_blur_3_FIFO_buf428_cache& dark_gauss_blur_3_FIFO_buf428, int root, int dark_gauss_blur_3_to_gp_27144_ld430, int dark_gauss_blur_3_to_gp_27144_ld429, int dynamic_address) {
  dark_gauss_blur_3_FIFO_buf428.dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146_to_dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375.push(dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146);
}

inline hw_uint<16> dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375_select(dark_gauss_blur_3_FIFO_buf428_cache& dark_gauss_blur_3_FIFO_buf428, int root, int dark_gauss_ds_3_0, int dark_gauss_ds_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375 read pattern: { dark_gauss_ds_3_update_0_sm733_01091[root = 0, dark_gauss_ds_3_0, dark_gauss_ds_3_1] -> dark_gauss_blur_3_FIFO_buf428[2dark_gauss_ds_3_1, 2dark_gauss_ds_3_0] : 0 <= dark_gauss_ds_3_0 <= 134 and 0 <= dark_gauss_ds_3_1 <= 134 }
  // Read schedule : { dark_gauss_ds_3_update_0_sm733_01091[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 119] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 107] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  auto value_dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146 = dark_gauss_blur_3_FIFO_buf428.dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146_to_dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146;
  return 0;
}

// # of bundles = 2
// dark_gauss_ds_3_update_0_sm733_01091_read
//	dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375
inline hw_uint<16> dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_read_bundle_read(dark_gauss_blur_3_FIFO_buf428_cache& dark_gauss_blur_3_FIFO_buf428, int root, int dark_gauss_ds_3_0, int dark_gauss_ds_3_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375

	hw_uint<16> result;
	hw_uint<16> dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375_res = dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375_select(dark_gauss_blur_3_FIFO_buf428, root, dark_gauss_ds_3_0, dark_gauss_ds_3_1, dynamic_address);
	set_at<0, 16>(result, dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_375_res);
	return result;
}

// load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_write
//	dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146
inline void dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_write_bundle_write(hw_uint<16>& load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_write, dark_gauss_blur_3_FIFO_buf428_cache& dark_gauss_blur_3_FIFO_buf428, int root, int dark_gauss_blur_3_to_gp_27144_ld430, int dark_gauss_blur_3_to_gp_27144_ld429, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146_res = load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_write.extract<0, 15>();
	dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146_write(dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_146_res, dark_gauss_blur_3_FIFO_buf428, root, dark_gauss_blur_3_to_gp_27144_ld430, dark_gauss_blur_3_to_gp_27144_ld429, dynamic_address);
}

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137_cache {
	// RAM Box: {[0, 542], [0, 542]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 2
	// # of read delays: 2
  // 0, 1
	fifo<hw_uint<16>, 2> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_cache {
  // Reader addrs...
    // { load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875[root = 0, dark_gauss_ds_1_ld150, dark_gauss_ds_1_ld149] -> dark_gauss_ds_1[dark_gauss_ds_1_ld149, dark_gauss_ds_1_ld150] : 0 <= dark_gauss_ds_1_ld150 <= 542 and 0 <= dark_gauss_ds_1_ld149 <= 542 }
    // { load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877[root = 0, dark_gauss_ds_1_ld154, dark_gauss_ds_1_ld153] -> dark_gauss_ds_1[3 + dark_gauss_ds_1_ld153, 3 + dark_gauss_ds_1_ld154] : 0 <= dark_gauss_ds_1_ld154 <= 539 and 0 <= dark_gauss_ds_1_ld153 <= 539 }
    // { load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851[root = 0, dark_gauss_ds_1_ld158, dark_gauss_ds_1_ld157] -> dark_gauss_ds_1[3 + dark_gauss_ds_1_ld157, 3 + dark_gauss_ds_1_ld158] : 0 <= dark_gauss_ds_1_ld158 <= 539 and 0 <= dark_gauss_ds_1_ld157 <= 539 }
  // # of banks: 3
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133;
};



inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378, dark_gauss_ds_1_cache& dark_gauss_ds_1, int root, int dark_gauss_ds_1_0, int dark_gauss_ds_1_1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378);
}

inline hw_uint<16> dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int root, int dark_gauss_ds_1_ld150, int dark_gauss_ds_1_ld149, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137 read pattern: { load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875[root = 0, dark_gauss_ds_1_ld150, dark_gauss_ds_1_ld149] -> dark_gauss_ds_1[dark_gauss_ds_1_ld149, dark_gauss_ds_1_ld150] : 0 <= dark_gauss_ds_1_ld150 <= 542 and 0 <= dark_gauss_ds_1_ld149 <= 542 }
  // Read schedule : { load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 52] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  // Write schedule: { dark_gauss_ds_1_update_0_sm717_01059[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 49] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int root, int dark_gauss_ds_1_ld154, int dark_gauss_ds_1_ld153, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135 read pattern: { load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877[root = 0, dark_gauss_ds_1_ld154, dark_gauss_ds_1_ld153] -> dark_gauss_ds_1[3 + dark_gauss_ds_1_ld153, 3 + dark_gauss_ds_1_ld154] : 0 <= dark_gauss_ds_1_ld154 <= 539 and 0 <= dark_gauss_ds_1_ld153 <= 539 }
  // Read schedule : { load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877[d0 = 0, d1, d2] -> [0, 8 + 2d1, 10 + 2d2, 64] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { dark_gauss_ds_1_update_0_sm717_01059[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 49] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135.peek(/* one reader or all rams */ (538 - dark_gauss_ds_1_ld153 >= 0) ? (1) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int root, int dark_gauss_ds_1_ld158, int dark_gauss_ds_1_ld157, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133 read pattern: { load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851[root = 0, dark_gauss_ds_1_ld158, dark_gauss_ds_1_ld157] -> dark_gauss_ds_1[3 + dark_gauss_ds_1_ld157, 3 + dark_gauss_ds_1_ld158] : 0 <= dark_gauss_ds_1_ld158 <= 539 and 0 <= dark_gauss_ds_1_ld157 <= 539 }
  // Read schedule : { load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 63] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { dark_gauss_ds_1_update_0_sm717_01059[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 49] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_to_dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378;
  return 0;
}

// # of bundles = 4
// dark_gauss_ds_1_update_0_sm717_01059_write
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378
inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_write_bundle_write(hw_uint<16>& dark_gauss_ds_1_update_0_sm717_01059_write, dark_gauss_ds_1_cache& dark_gauss_ds_1, int root, int dark_gauss_ds_1_0, int dark_gauss_ds_1_1, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_res = dark_gauss_ds_1_update_0_sm717_01059_write.extract<0, 15>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_378_res, dark_gauss_ds_1, root, dark_gauss_ds_1_0, dark_gauss_ds_1_1, dynamic_address);
}

// load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_read
//	dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137
inline hw_uint<16> dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_read_bundle_read(dark_gauss_ds_1_cache& dark_gauss_ds_1, int root, int dark_gauss_ds_1_ld150, int dark_gauss_ds_1_ld149, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137_res = dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137_select(dark_gauss_ds_1, root, dark_gauss_ds_1_ld150, dark_gauss_ds_1_ld149, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_137_res);
	return result;
}

// load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_read
//	dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135
inline hw_uint<16> dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_read_bundle_read(dark_gauss_ds_1_cache& dark_gauss_ds_1, int root, int dark_gauss_ds_1_ld154, int dark_gauss_ds_1_ld153, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135_res = dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135_select(dark_gauss_ds_1, root, dark_gauss_ds_1_ld154, dark_gauss_ds_1_ld153, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_135_res);
	return result;
}

// load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_read
//	dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133
inline hw_uint<16> dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_read_bundle_read(dark_gauss_ds_1_cache& dark_gauss_ds_1, int root, int dark_gauss_ds_1_ld158, int dark_gauss_ds_1_ld157, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133_res = dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133_select(dark_gauss_ds_1, root, dark_gauss_ds_1_ld158, dark_gauss_ds_1_ld157, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_133_res);
	return result;
}

struct dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9_cache {
	// RAM Box: {[0, 542], [0, 542]}
	// Capacity: 1089
	// # of read delays: 9
  // 0, 1, 2, 543, 544, 545, 1086, 1087, 1088
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 540> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 540> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_542() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_543() {
		return f6;
	}

	inline hw_uint<16> peek_544() {
		return f8;
	}

	inline hw_uint<16> peek_545() {
		return f10;
	}

	inline hw_uint<16> peek_1085() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_1086() {
		return f12;
	}

	inline hw_uint<16> peek_1087() {
		return f14;
	}

	inline hw_uint<16> peek_1088() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 540
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 540 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 540
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 540 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_FIFO_buf432_cache {
  // Reader addrs...
    // { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[dark_gauss_blur_2_1, dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
    // { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[1 + dark_gauss_blur_2_1, dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
    // { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[2 + dark_gauss_blur_2_1, dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
    // { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[dark_gauss_blur_2_1, 1 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
    // { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[1 + dark_gauss_blur_2_1, 1 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
    // { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[2 + dark_gauss_blur_2_1, 1 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
    // { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[dark_gauss_blur_2_1, 2 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
    // { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[1 + dark_gauss_blur_2_1, 2 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
    // { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[2 + dark_gauss_blur_2_1, 2 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
  // # of banks: 1
  dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9_cache dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9;
};



inline void dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_write(hw_uint<16>& dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142, dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_ds_1_to_gp_23148_ld434, int dark_gauss_ds_1_to_gp_23148_ld433, int dynamic_address) {
  dark_gauss_ds_1_FIFO_buf432.dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9.push(dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142);
}

inline hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_391_select(dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_391 read pattern: { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[dark_gauss_blur_2_1, dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 60] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142 = dark_gauss_ds_1_FIFO_buf432.dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9.peek_1088();
  return value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_392_select(dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_392 read pattern: { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[1 + dark_gauss_blur_2_1, dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 60] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142 = dark_gauss_ds_1_FIFO_buf432.dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9.peek_1087();
  return value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_393_select(dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_393 read pattern: { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[2 + dark_gauss_blur_2_1, dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 60] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142 = dark_gauss_ds_1_FIFO_buf432.dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9.peek_1086();
  return value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_394_select(dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_394 read pattern: { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[dark_gauss_blur_2_1, 1 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 60] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142 = dark_gauss_ds_1_FIFO_buf432.dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9.peek_545();
  return value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_395_select(dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_395 read pattern: { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[1 + dark_gauss_blur_2_1, 1 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 60] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142 = dark_gauss_ds_1_FIFO_buf432.dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9.peek_544();
  return value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_396_select(dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_396 read pattern: { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[2 + dark_gauss_blur_2_1, 1 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 60] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142 = dark_gauss_ds_1_FIFO_buf432.dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9.peek_543();
  return value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_397_select(dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_397 read pattern: { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[dark_gauss_blur_2_1, 2 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 60] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142 = dark_gauss_ds_1_FIFO_buf432.dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9.peek_2();
  return value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_398_select(dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_398 read pattern: { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[1 + dark_gauss_blur_2_1, 2 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 60] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142 = dark_gauss_ds_1_FIFO_buf432.dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9.peek_1();
  return value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_399_select(dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_399 read pattern: { dark_gauss_blur_2_update_0_sm718_01061[root = 0, dark_gauss_blur_2_0, dark_gauss_blur_2_1] -> dark_gauss_ds_1_FIFO_buf432[2 + dark_gauss_blur_2_1, 2 + dark_gauss_blur_2_0] : 0 <= dark_gauss_blur_2_0 <= 540 and 0 <= dark_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 60] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142 = dark_gauss_ds_1_FIFO_buf432.dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_merged_banks_9.peek_0();
  return value_dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_2_update_0_sm718_01061_read
//	dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_391
//	dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_392
//	dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_393
//	dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_394
//	dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_395
//	dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_396
//	dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_397
//	dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_398
//	dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_399
inline hw_uint<144> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_read_bundle_read(dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_blur_2_0, int dark_gauss_blur_2_1, int dynamic_address) {
  // # of ports in bundle: 9
    // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_391
    // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_392
    // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_393
    // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_394
    // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_395
    // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_396
    // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_397
    // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_398
    // dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_399

	hw_uint<144> result;
	hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_391_res = dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_391_select(dark_gauss_ds_1_FIFO_buf432, root, dark_gauss_blur_2_0, dark_gauss_blur_2_1, dynamic_address);
	set_at<0, 144>(result, dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_391_res);
	hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_392_res = dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_392_select(dark_gauss_ds_1_FIFO_buf432, root, dark_gauss_blur_2_0, dark_gauss_blur_2_1, dynamic_address);
	set_at<16, 144>(result, dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_392_res);
	hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_393_res = dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_393_select(dark_gauss_ds_1_FIFO_buf432, root, dark_gauss_blur_2_0, dark_gauss_blur_2_1, dynamic_address);
	set_at<32, 144>(result, dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_393_res);
	hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_394_res = dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_394_select(dark_gauss_ds_1_FIFO_buf432, root, dark_gauss_blur_2_0, dark_gauss_blur_2_1, dynamic_address);
	set_at<48, 144>(result, dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_394_res);
	hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_395_res = dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_395_select(dark_gauss_ds_1_FIFO_buf432, root, dark_gauss_blur_2_0, dark_gauss_blur_2_1, dynamic_address);
	set_at<64, 144>(result, dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_395_res);
	hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_396_res = dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_396_select(dark_gauss_ds_1_FIFO_buf432, root, dark_gauss_blur_2_0, dark_gauss_blur_2_1, dynamic_address);
	set_at<80, 144>(result, dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_396_res);
	hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_397_res = dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_397_select(dark_gauss_ds_1_FIFO_buf432, root, dark_gauss_blur_2_0, dark_gauss_blur_2_1, dynamic_address);
	set_at<96, 144>(result, dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_397_res);
	hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_398_res = dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_398_select(dark_gauss_ds_1_FIFO_buf432, root, dark_gauss_blur_2_0, dark_gauss_blur_2_1, dynamic_address);
	set_at<112, 144>(result, dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_398_res);
	hw_uint<16> dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_399_res = dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_399_select(dark_gauss_ds_1_FIFO_buf432, root, dark_gauss_blur_2_0, dark_gauss_blur_2_1, dynamic_address);
	set_at<128, 144>(result, dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_399_res);
	return result;
}

// load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_write
//	dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142
inline void dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_write_bundle_write(hw_uint<16>& load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_write, dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int root, int dark_gauss_ds_1_to_gp_23148_ld434, int dark_gauss_ds_1_to_gp_23148_ld433, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_res = load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_write.extract<0, 15>();
	dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_write(dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_142_res, dark_gauss_ds_1_FIFO_buf432, root, dark_gauss_ds_1_to_gp_23148_ld434, dark_gauss_ds_1_to_gp_23148_ld433, dynamic_address);
}

struct dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140_to_dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 541
	// # of read delays: 541
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540
	fifo<hw_uint<16>, 541> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(540 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_FIFO_buf436_cache {
  // Reader addrs...
    // { dark_laplace_diff_1_update_0_sm741_01107[root = 0, dark_laplace_diff_1_0, dark_laplace_diff_1_1] -> dark_gauss_ds_1_FIFO_buf436[3 + dark_laplace_diff_1_1, 3 + dark_laplace_diff_1_0] : 0 <= dark_laplace_diff_1_0 <= 539 and 0 <= dark_laplace_diff_1_1 <= 539 }
  // # of banks: 1
  dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140_to_dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369_cache dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140_to_dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369;
};



inline void dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140_write(hw_uint<16>& dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140, dark_gauss_ds_1_FIFO_buf436_cache& dark_gauss_ds_1_FIFO_buf436, int root, int dark_gauss_ds_1_to_gp_29152_ld438, int dark_gauss_ds_1_to_gp_29152_ld437, int dynamic_address) {
  dark_gauss_ds_1_FIFO_buf436.dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140_to_dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369.push(dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140);
}

inline hw_uint<16> dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369_select(dark_gauss_ds_1_FIFO_buf436_cache& dark_gauss_ds_1_FIFO_buf436, int root, int dark_laplace_diff_1_0, int dark_laplace_diff_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369 read pattern: { dark_laplace_diff_1_update_0_sm741_01107[root = 0, dark_laplace_diff_1_0, dark_laplace_diff_1_1] -> dark_gauss_ds_1_FIFO_buf436[3 + dark_laplace_diff_1_1, 3 + dark_laplace_diff_1_0] : 0 <= dark_laplace_diff_1_0 <= 539 and 0 <= dark_laplace_diff_1_1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0_sm741_01107[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 127] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991[d0 = 0, d1, d2] -> [0, 8 + 2d1, 10 + 2d2, 69] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140 = dark_gauss_ds_1_FIFO_buf436.dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140_to_dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369.peek(/* one reader or all rams */ (538 - dark_laplace_diff_1_1 >= 0 && 538 - dark_laplace_diff_1_0 >= 0) ? (540) : (-539 + dark_laplace_diff_1_1 == 0 && 538 - dark_laplace_diff_1_0 >= 0) ? (540) : (-539 + dark_laplace_diff_1_0 == 0 && 538 - dark_laplace_diff_1_1 >= 0) ? ((539 - dark_laplace_diff_1_1)) : 0);
  return value_dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_1_update_0_sm741_01107_read
//	dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369
inline hw_uint<16> dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_read_bundle_read(dark_gauss_ds_1_FIFO_buf436_cache& dark_gauss_ds_1_FIFO_buf436, int root, int dark_laplace_diff_1_0, int dark_laplace_diff_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369_res = dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369_select(dark_gauss_ds_1_FIFO_buf436, root, dark_laplace_diff_1_0, dark_laplace_diff_1_1, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_369_res);
	return result;
}

// load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_write
//	dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140
inline void dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_write_bundle_write(hw_uint<16>& load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_write, dark_gauss_ds_1_FIFO_buf436_cache& dark_gauss_ds_1_FIFO_buf436, int root, int dark_gauss_ds_1_to_gp_29152_ld438, int dark_gauss_ds_1_to_gp_29152_ld437, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140_res = load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_write.extract<0, 15>();
	dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140_write(dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_140_res, dark_gauss_ds_1_FIFO_buf436, root, dark_gauss_ds_1_to_gp_29152_ld438, dark_gauss_ds_1_to_gp_29152_ld437, dynamic_address);
}

struct dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138_to_dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 540
	// # of read delays: 541
  // 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539
	fifo<hw_uint<16>, 540> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(539 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_FIFO_buf440_cache {
  // Reader addrs...
    // { dark_laplace_us_0_update_0_sm723_01071[root = 0, dark_laplace_us_0_0, dark_laplace_us_0_1] -> dark_gauss_ds_1_FIFO_buf440[o0, o1] : 0 <= dark_laplace_us_0_0 <= 1079 and 0 <= dark_laplace_us_0_1 <= 1079 and 5 + dark_laplace_us_0_1 <= 2o0 <= 6 + dark_laplace_us_0_1 and 5 + dark_laplace_us_0_0 <= 2o1 <= 6 + dark_laplace_us_0_0 }
  // # of banks: 1
  dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138_to_dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364_cache dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138_to_dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364;
};



inline void dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138_write(hw_uint<16>& dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138, dark_gauss_ds_1_FIFO_buf440_cache& dark_gauss_ds_1_FIFO_buf440, int root, int dark_gauss_ds_1_to_gp_31156_ld442, int dark_gauss_ds_1_to_gp_31156_ld441, int dynamic_address) {
  dark_gauss_ds_1_FIFO_buf440.dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138_to_dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364.push(dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138);
}

inline hw_uint<16> dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364_select(dark_gauss_ds_1_FIFO_buf440_cache& dark_gauss_ds_1_FIFO_buf440, int root, int dark_laplace_us_0_0, int dark_laplace_us_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364 read pattern: { dark_laplace_us_0_update_0_sm723_01071[root = 0, dark_laplace_us_0_0, dark_laplace_us_0_1] -> dark_gauss_ds_1_FIFO_buf440[o0, o1] : 0 <= dark_laplace_us_0_0 <= 1079 and 0 <= dark_laplace_us_0_1 <= 1079 and 5 + dark_laplace_us_0_1 <= 2o0 <= 6 + dark_laplace_us_0_1 and 5 + dark_laplace_us_0_0 <= 2o1 <= 6 + dark_laplace_us_0_0 }
  // Read schedule : { dark_laplace_us_0_update_0_sm723_01071[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 85] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 78] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138 = dark_gauss_ds_1_FIFO_buf440.dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138_to_dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364.peek(/* one reader or all rams */ ((-1 - dark_laplace_us_0_0) % 2 == 0 && 1077 - dark_laplace_us_0_1 >= 0) ? ((539 - floord(2*dark_laplace_us_0_1, 4))) : 0);
  return value_dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138;
  return 0;
}

// # of bundles = 2
// dark_laplace_us_0_update_0_sm723_01071_read
//	dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364
inline hw_uint<16> dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_read_bundle_read(dark_gauss_ds_1_FIFO_buf440_cache& dark_gauss_ds_1_FIFO_buf440, int root, int dark_laplace_us_0_0, int dark_laplace_us_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364_res = dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364_select(dark_gauss_ds_1_FIFO_buf440, root, dark_laplace_us_0_0, dark_laplace_us_0_1, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_364_res);
	return result;
}

// load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_write
//	dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138
inline void dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_write_bundle_write(hw_uint<16>& load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_write, dark_gauss_ds_1_FIFO_buf440_cache& dark_gauss_ds_1_FIFO_buf440, int root, int dark_gauss_ds_1_to_gp_31156_ld442, int dark_gauss_ds_1_to_gp_31156_ld441, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138_res = load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_write.extract<0, 15>();
	dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138_write(dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_138_res, dark_gauss_ds_1_FIFO_buf440, root, dark_gauss_ds_1_to_gp_31156_ld442, dark_gauss_ds_1_to_gp_31156_ld441, dynamic_address);
}

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125_cache {
	// RAM Box: {[0, 270], [0, 270]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_cache {
  // Reader addrs...
    // { load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821[root = 0, dark_gauss_ds_2_ld162, dark_gauss_ds_2_ld161] -> dark_gauss_ds_2[dark_gauss_ds_2_ld161, dark_gauss_ds_2_ld162] : 0 <= dark_gauss_ds_2_ld162 <= 270 and 0 <= dark_gauss_ds_2_ld161 <= 270 }
    // { load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855[root = 0, dark_gauss_ds_2_ld166, dark_gauss_ds_2_ld165] -> dark_gauss_ds_2[1 + dark_gauss_ds_2_ld165, 1 + dark_gauss_ds_2_ld166] : 0 <= dark_gauss_ds_2_ld166 <= 269 and 0 <= dark_gauss_ds_2_ld165 <= 269 }
    // { load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849[root = 0, dark_gauss_ds_2_ld170, dark_gauss_ds_2_ld169] -> dark_gauss_ds_2[1 + dark_gauss_ds_2_ld169, 1 + dark_gauss_ds_2_ld170] : 0 <= dark_gauss_ds_2_ld170 <= 269 and 0 <= dark_gauss_ds_2_ld169 <= 269 }
  // # of banks: 3
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121;
};



inline void dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_write(hw_uint<16>& dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376, dark_gauss_ds_2_cache& dark_gauss_ds_2, int root, int dark_gauss_ds_2_0, int dark_gauss_ds_2_1, int dynamic_address) {
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376);
}

inline hw_uint<16> dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int root, int dark_gauss_ds_2_ld162, int dark_gauss_ds_2_ld161, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125 read pattern: { load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821[root = 0, dark_gauss_ds_2_ld162, dark_gauss_ds_2_ld161] -> dark_gauss_ds_2[dark_gauss_ds_2_ld161, dark_gauss_ds_2_ld162] : 0 <= dark_gauss_ds_2_ld162 <= 270 and 0 <= dark_gauss_ds_2_ld161 <= 270 }
  // Read schedule : { load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 87] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  // Write schedule: { dark_gauss_ds_2_update_0_sm725_01075[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 74] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int root, int dark_gauss_ds_2_ld166, int dark_gauss_ds_2_ld165, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123 read pattern: { load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855[root = 0, dark_gauss_ds_2_ld166, dark_gauss_ds_2_ld165] -> dark_gauss_ds_2[1 + dark_gauss_ds_2_ld165, 1 + dark_gauss_ds_2_ld166] : 0 <= dark_gauss_ds_2_ld166 <= 269 and 0 <= dark_gauss_ds_2_ld165 <= 269 }
  // Read schedule : { load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 75] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { dark_gauss_ds_2_update_0_sm725_01075[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 74] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int root, int dark_gauss_ds_2_ld170, int dark_gauss_ds_2_ld169, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121 read pattern: { load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849[root = 0, dark_gauss_ds_2_ld170, dark_gauss_ds_2_ld169] -> dark_gauss_ds_2[1 + dark_gauss_ds_2_ld169, 1 + dark_gauss_ds_2_ld170] : 0 <= dark_gauss_ds_2_ld170 <= 269 and 0 <= dark_gauss_ds_2_ld169 <= 269 }
  // Read schedule : { load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 90] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { dark_gauss_ds_2_update_0_sm725_01075[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 74] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_to_dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376;
  return 0;
}

// # of bundles = 4
// dark_gauss_ds_2_update_0_sm725_01075_write
//	dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376
inline void dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_write_bundle_write(hw_uint<16>& dark_gauss_ds_2_update_0_sm725_01075_write, dark_gauss_ds_2_cache& dark_gauss_ds_2, int root, int dark_gauss_ds_2_0, int dark_gauss_ds_2_1, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_res = dark_gauss_ds_2_update_0_sm725_01075_write.extract<0, 15>();
	dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_write(dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_376_res, dark_gauss_ds_2, root, dark_gauss_ds_2_0, dark_gauss_ds_2_1, dynamic_address);
}

// load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_read
//	dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125
inline hw_uint<16> dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_read_bundle_read(dark_gauss_ds_2_cache& dark_gauss_ds_2, int root, int dark_gauss_ds_2_ld162, int dark_gauss_ds_2_ld161, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125_res = dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125_select(dark_gauss_ds_2, root, dark_gauss_ds_2_ld162, dark_gauss_ds_2_ld161, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_125_res);
	return result;
}

// load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_read
//	dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123
inline hw_uint<16> dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_read_bundle_read(dark_gauss_ds_2_cache& dark_gauss_ds_2, int root, int dark_gauss_ds_2_ld166, int dark_gauss_ds_2_ld165, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123_res = dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123_select(dark_gauss_ds_2, root, dark_gauss_ds_2_ld166, dark_gauss_ds_2_ld165, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_123_res);
	return result;
}

// load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_read
//	dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121
inline hw_uint<16> dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_read_bundle_read(dark_gauss_ds_2_cache& dark_gauss_ds_2, int root, int dark_gauss_ds_2_ld170, int dark_gauss_ds_2_ld169, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121_res = dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121_select(dark_gauss_ds_2, root, dark_gauss_ds_2_ld170, dark_gauss_ds_2_ld169, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_121_res);
	return result;
}

struct dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9_cache {
	// RAM Box: {[0, 270], [0, 270]}
	// Capacity: 545
	// # of read delays: 9
  // 0, 1, 2, 271, 272, 273, 542, 543, 544
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 268> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 268> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_270() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_271() {
		return f6;
	}

	inline hw_uint<16> peek_272() {
		return f8;
	}

	inline hw_uint<16> peek_273() {
		return f10;
	}

	inline hw_uint<16> peek_541() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_542() {
		return f12;
	}

	inline hw_uint<16> peek_543() {
		return f14;
	}

	inline hw_uint<16> peek_544() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 268
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 268 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 268
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 268 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_2_FIFO_buf444_cache {
  // Reader addrs...
    // { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[dark_gauss_blur_3_1, dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
    // { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[1 + dark_gauss_blur_3_1, dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
    // { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[2 + dark_gauss_blur_3_1, dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
    // { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[dark_gauss_blur_3_1, 1 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
    // { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[1 + dark_gauss_blur_3_1, 1 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
    // { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[2 + dark_gauss_blur_3_1, 1 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
    // { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[dark_gauss_blur_3_1, 2 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
    // { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[1 + dark_gauss_blur_3_1, 2 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
    // { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[2 + dark_gauss_blur_3_1, 2 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
  // # of banks: 1
  dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9_cache dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9;
};



inline void dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_write(hw_uint<16>& dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130, dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_ds_2_to_gp_24160_ld446, int dark_gauss_ds_2_to_gp_24160_ld445, int dynamic_address) {
  dark_gauss_ds_2_FIFO_buf444.dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9.push(dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130);
}

inline hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_381_select(dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_381 read pattern: { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[dark_gauss_blur_3_1, dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 92] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130 = dark_gauss_ds_2_FIFO_buf444.dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9.peek_544();
  return value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_382_select(dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_382 read pattern: { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[1 + dark_gauss_blur_3_1, dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 92] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130 = dark_gauss_ds_2_FIFO_buf444.dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9.peek_543();
  return value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_383_select(dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_383 read pattern: { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[2 + dark_gauss_blur_3_1, dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 92] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130 = dark_gauss_ds_2_FIFO_buf444.dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9.peek_542();
  return value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_384_select(dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_384 read pattern: { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[dark_gauss_blur_3_1, 1 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 92] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130 = dark_gauss_ds_2_FIFO_buf444.dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9.peek_273();
  return value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_385_select(dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_385 read pattern: { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[1 + dark_gauss_blur_3_1, 1 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 92] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130 = dark_gauss_ds_2_FIFO_buf444.dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9.peek_272();
  return value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_386_select(dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_386 read pattern: { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[2 + dark_gauss_blur_3_1, 1 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 92] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130 = dark_gauss_ds_2_FIFO_buf444.dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9.peek_271();
  return value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_387_select(dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_387 read pattern: { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[dark_gauss_blur_3_1, 2 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 92] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130 = dark_gauss_ds_2_FIFO_buf444.dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9.peek_2();
  return value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_388_select(dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_388 read pattern: { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[1 + dark_gauss_blur_3_1, 2 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 92] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130 = dark_gauss_ds_2_FIFO_buf444.dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_389_select(dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_389 read pattern: { dark_gauss_blur_3_update_0_sm726_01077[root = 0, dark_gauss_blur_3_0, dark_gauss_blur_3_1] -> dark_gauss_ds_2_FIFO_buf444[2 + dark_gauss_blur_3_1, 2 + dark_gauss_blur_3_0] : 0 <= dark_gauss_blur_3_0 <= 268 and 0 <= dark_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 92] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130 = dark_gauss_ds_2_FIFO_buf444.dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_merged_banks_9.peek_0();
  return value_dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_3_update_0_sm726_01077_read
//	dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_381
//	dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_382
//	dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_383
//	dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_384
//	dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_385
//	dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_386
//	dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_387
//	dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_388
//	dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_389
inline hw_uint<144> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_read_bundle_read(dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_blur_3_0, int dark_gauss_blur_3_1, int dynamic_address) {
  // # of ports in bundle: 9
    // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_381
    // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_382
    // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_383
    // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_384
    // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_385
    // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_386
    // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_387
    // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_388
    // dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_389

	hw_uint<144> result;
	hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_381_res = dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_381_select(dark_gauss_ds_2_FIFO_buf444, root, dark_gauss_blur_3_0, dark_gauss_blur_3_1, dynamic_address);
	set_at<0, 144>(result, dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_381_res);
	hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_382_res = dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_382_select(dark_gauss_ds_2_FIFO_buf444, root, dark_gauss_blur_3_0, dark_gauss_blur_3_1, dynamic_address);
	set_at<16, 144>(result, dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_382_res);
	hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_383_res = dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_383_select(dark_gauss_ds_2_FIFO_buf444, root, dark_gauss_blur_3_0, dark_gauss_blur_3_1, dynamic_address);
	set_at<32, 144>(result, dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_383_res);
	hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_384_res = dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_384_select(dark_gauss_ds_2_FIFO_buf444, root, dark_gauss_blur_3_0, dark_gauss_blur_3_1, dynamic_address);
	set_at<48, 144>(result, dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_384_res);
	hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_385_res = dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_385_select(dark_gauss_ds_2_FIFO_buf444, root, dark_gauss_blur_3_0, dark_gauss_blur_3_1, dynamic_address);
	set_at<64, 144>(result, dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_385_res);
	hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_386_res = dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_386_select(dark_gauss_ds_2_FIFO_buf444, root, dark_gauss_blur_3_0, dark_gauss_blur_3_1, dynamic_address);
	set_at<80, 144>(result, dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_386_res);
	hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_387_res = dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_387_select(dark_gauss_ds_2_FIFO_buf444, root, dark_gauss_blur_3_0, dark_gauss_blur_3_1, dynamic_address);
	set_at<96, 144>(result, dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_387_res);
	hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_388_res = dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_388_select(dark_gauss_ds_2_FIFO_buf444, root, dark_gauss_blur_3_0, dark_gauss_blur_3_1, dynamic_address);
	set_at<112, 144>(result, dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_388_res);
	hw_uint<16> dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_389_res = dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_389_select(dark_gauss_ds_2_FIFO_buf444, root, dark_gauss_blur_3_0, dark_gauss_blur_3_1, dynamic_address);
	set_at<128, 144>(result, dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_389_res);
	return result;
}

// load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_write
//	dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130
inline void dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_write_bundle_write(hw_uint<16>& load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_write, dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int root, int dark_gauss_ds_2_to_gp_24160_ld446, int dark_gauss_ds_2_to_gp_24160_ld445, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_res = load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_write.extract<0, 15>();
	dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_write(dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_130_res, dark_gauss_ds_2_FIFO_buf444, root, dark_gauss_ds_2_to_gp_24160_ld446, dark_gauss_ds_2_to_gp_24160_ld445, dynamic_address);
}

struct dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128_to_dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_FIFO_buf448_cache {
  // Reader addrs...
    // { dark_laplace_diff_2_update_0_sm740_01105[root = 0, dark_laplace_diff_2_0, dark_laplace_diff_2_1] -> dark_gauss_ds_2_FIFO_buf448[1 + dark_laplace_diff_2_1, 1 + dark_laplace_diff_2_0] : 0 <= dark_laplace_diff_2_0 <= 269 and 0 <= dark_laplace_diff_2_1 <= 269 }
  // # of banks: 1
  dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128_to_dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366_cache dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128_to_dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366;
};



inline void dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128_write(hw_uint<16>& dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128, dark_gauss_ds_2_FIFO_buf448_cache& dark_gauss_ds_2_FIFO_buf448, int root, int dark_gauss_ds_2_to_gp_30164_ld450, int dark_gauss_ds_2_to_gp_30164_ld449, int dynamic_address) {
  dark_gauss_ds_2_FIFO_buf448.dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128_to_dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366.push(dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128);
}

inline hw_uint<16> dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366_select(dark_gauss_ds_2_FIFO_buf448_cache& dark_gauss_ds_2_FIFO_buf448, int root, int dark_laplace_diff_2_0, int dark_laplace_diff_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366 read pattern: { dark_laplace_diff_2_update_0_sm740_01105[root = 0, dark_laplace_diff_2_0, dark_laplace_diff_2_1] -> dark_gauss_ds_2_FIFO_buf448[1 + dark_laplace_diff_2_1, 1 + dark_laplace_diff_2_0] : 0 <= dark_laplace_diff_2_0 <= 269 and 0 <= dark_laplace_diff_2_1 <= 269 }
  // Read schedule : { dark_laplace_diff_2_update_0_sm740_01105[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 170] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 80] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128 = dark_gauss_ds_2_FIFO_buf448.dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128_to_dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_2_update_0_sm740_01105_read
//	dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366
inline hw_uint<16> dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_read_bundle_read(dark_gauss_ds_2_FIFO_buf448_cache& dark_gauss_ds_2_FIFO_buf448, int root, int dark_laplace_diff_2_0, int dark_laplace_diff_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366_res = dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366_select(dark_gauss_ds_2_FIFO_buf448, root, dark_laplace_diff_2_0, dark_laplace_diff_2_1, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_366_res);
	return result;
}

// load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_write
//	dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128
inline void dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_write_bundle_write(hw_uint<16>& load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_write, dark_gauss_ds_2_FIFO_buf448_cache& dark_gauss_ds_2_FIFO_buf448, int root, int dark_gauss_ds_2_to_gp_30164_ld450, int dark_gauss_ds_2_to_gp_30164_ld449, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128_res = load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_write.extract<0, 15>();
	dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128_write(dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_128_res, dark_gauss_ds_2_FIFO_buf448, root, dark_gauss_ds_2_to_gp_30164_ld450, dark_gauss_ds_2_to_gp_30164_ld449, dynamic_address);
}

struct dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126_to_dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 270
	// # of read delays: 271
  // 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
	fifo<hw_uint<16>, 270> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(269 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_FIFO_buf452_cache {
  // Reader addrs...
    // { dark_laplace_us_1_update_0_sm739_01103[root = 0, dark_laplace_us_1_0, dark_laplace_us_1_1] -> dark_gauss_ds_2_FIFO_buf452[o0, o1] : 0 <= dark_laplace_us_1_0 <= 539 and 0 <= dark_laplace_us_1_1 <= 539 and dark_laplace_us_1_1 < 2o0 <= 2 + dark_laplace_us_1_1 and dark_laplace_us_1_0 < 2o1 <= 2 + dark_laplace_us_1_0 }
  // # of banks: 1
  dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126_to_dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362_cache dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126_to_dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362;
};



inline void dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126_write(hw_uint<16>& dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126, dark_gauss_ds_2_FIFO_buf452_cache& dark_gauss_ds_2_FIFO_buf452, int root, int dark_gauss_ds_2_to_gp_32168_ld454, int dark_gauss_ds_2_to_gp_32168_ld453, int dynamic_address) {
  dark_gauss_ds_2_FIFO_buf452.dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126_to_dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362.push(dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126);
}

inline hw_uint<16> dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362_select(dark_gauss_ds_2_FIFO_buf452_cache& dark_gauss_ds_2_FIFO_buf452, int root, int dark_laplace_us_1_0, int dark_laplace_us_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362 read pattern: { dark_laplace_us_1_update_0_sm739_01103[root = 0, dark_laplace_us_1_0, dark_laplace_us_1_1] -> dark_gauss_ds_2_FIFO_buf452[o0, o1] : 0 <= dark_laplace_us_1_0 <= 539 and 0 <= dark_laplace_us_1_1 <= 539 and dark_laplace_us_1_1 < 2o0 <= 2 + dark_laplace_us_1_1 and dark_laplace_us_1_0 < 2o1 <= 2 + dark_laplace_us_1_0 }
  // Read schedule : { dark_laplace_us_1_update_0_sm739_01103[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 112] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 105] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126 = dark_gauss_ds_2_FIFO_buf452.dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126_to_dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362.peek(/* one reader or all rams */ ((-1 - dark_laplace_us_1_0) % 2 == 0 && 537 - dark_laplace_us_1_1 >= 0) ? ((269 - floord(2*dark_laplace_us_1_1, 4))) : 0);
  return value_dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126;
  return 0;
}

// # of bundles = 2
// dark_laplace_us_1_update_0_sm739_01103_read
//	dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362
inline hw_uint<16> dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_read_bundle_read(dark_gauss_ds_2_FIFO_buf452_cache& dark_gauss_ds_2_FIFO_buf452, int root, int dark_laplace_us_1_0, int dark_laplace_us_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362_res = dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362_select(dark_gauss_ds_2_FIFO_buf452, root, dark_laplace_us_1_0, dark_laplace_us_1_1, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_362_res);
	return result;
}

// load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_write
//	dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126
inline void dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_write_bundle_write(hw_uint<16>& load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_write, dark_gauss_ds_2_FIFO_buf452_cache& dark_gauss_ds_2_FIFO_buf452, int root, int dark_gauss_ds_2_to_gp_32168_ld454, int dark_gauss_ds_2_to_gp_32168_ld453, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126_res = load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_write.extract<0, 15>();
	dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126_write(dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_126_res, dark_gauss_ds_2_FIFO_buf452, root, dark_gauss_ds_2_to_gp_32168_ld454, dark_gauss_ds_2_to_gp_32168_ld453, dynamic_address);
}

struct dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_to_dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_to_dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_cache {
  // Reader addrs...
    // { load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823[root = 0, dark_gauss_ds_3_ld174, dark_gauss_ds_3_ld173] -> dark_gauss_ds_3[dark_gauss_ds_3_ld173, dark_gauss_ds_3_ld174] : 0 <= dark_gauss_ds_3_ld174 <= 134 and 0 <= dark_gauss_ds_3_ld173 <= 134 }
    // { load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879[root = 0, dark_gauss_ds_3_ld178, dark_gauss_ds_3_ld177] -> dark_gauss_ds_3[dark_gauss_ds_3_ld177, dark_gauss_ds_3_ld178] : 0 <= dark_gauss_ds_3_ld178 <= 134 and 0 <= dark_gauss_ds_3_ld177 <= 134 }
  // # of banks: 2
  dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_to_dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115_cache dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_to_dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115;
  dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_to_dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113_cache dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_to_dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113;
};



inline void dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_write(hw_uint<16>& dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374, dark_gauss_ds_3_cache& dark_gauss_ds_3, int root, int dark_gauss_ds_3_0, int dark_gauss_ds_3_1, int dynamic_address) {
  dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_to_dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115.push(dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374);
  dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_to_dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113.push(dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374);
}

inline hw_uint<16> dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115_select(dark_gauss_ds_3_cache& dark_gauss_ds_3, int root, int dark_gauss_ds_3_ld174, int dark_gauss_ds_3_ld173, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115 read pattern: { load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823[root = 0, dark_gauss_ds_3_ld174, dark_gauss_ds_3_ld173] -> dark_gauss_ds_3[dark_gauss_ds_3_ld173, dark_gauss_ds_3_ld174] : 0 <= dark_gauss_ds_3_ld174 <= 134 and 0 <= dark_gauss_ds_3_ld173 <= 134 }
  // Read schedule : { load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 124] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { dark_gauss_ds_3_update_0_sm733_01091[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 119] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374 = dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_to_dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113_select(dark_gauss_ds_3_cache& dark_gauss_ds_3, int root, int dark_gauss_ds_3_ld178, int dark_gauss_ds_3_ld177, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113 read pattern: { load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879[root = 0, dark_gauss_ds_3_ld178, dark_gauss_ds_3_ld177] -> dark_gauss_ds_3[dark_gauss_ds_3_ld177, dark_gauss_ds_3_ld178] : 0 <= dark_gauss_ds_3_ld178 <= 134 and 0 <= dark_gauss_ds_3_ld177 <= 134 }
  // Read schedule : { load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 123] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { dark_gauss_ds_3_update_0_sm733_01091[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 119] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374 = dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_to_dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374;
  return 0;
}

// # of bundles = 3
// dark_gauss_ds_3_update_0_sm733_01091_write
//	dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374
inline void dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_write_bundle_write(hw_uint<16>& dark_gauss_ds_3_update_0_sm733_01091_write, dark_gauss_ds_3_cache& dark_gauss_ds_3, int root, int dark_gauss_ds_3_0, int dark_gauss_ds_3_1, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_res = dark_gauss_ds_3_update_0_sm733_01091_write.extract<0, 15>();
	dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_write(dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_374_res, dark_gauss_ds_3, root, dark_gauss_ds_3_0, dark_gauss_ds_3_1, dynamic_address);
}

// load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_read
//	dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115
inline hw_uint<16> dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_read_bundle_read(dark_gauss_ds_3_cache& dark_gauss_ds_3, int root, int dark_gauss_ds_3_ld174, int dark_gauss_ds_3_ld173, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115_res = dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115_select(dark_gauss_ds_3, root, dark_gauss_ds_3_ld174, dark_gauss_ds_3_ld173, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_115_res);
	return result;
}

// load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_read
//	dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113
inline hw_uint<16> dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_read_bundle_read(dark_gauss_ds_3_cache& dark_gauss_ds_3, int root, int dark_gauss_ds_3_ld178, int dark_gauss_ds_3_ld177, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113_res = dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113_select(dark_gauss_ds_3, root, dark_gauss_ds_3_ld178, dark_gauss_ds_3_ld177, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_113_res);
	return result;
}

struct dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118_to_dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 135
	// # of read delays: 136
  // 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_FIFO_buf456_cache {
  // Reader addrs...
    // { dark_laplace_us_2_update_0_sm738_01101[root = 0, dark_laplace_us_2_0, dark_laplace_us_2_1] -> dark_gauss_ds_3_FIFO_buf456[o0, o1] : 0 <= dark_laplace_us_2_0 <= 269 and 0 <= dark_laplace_us_2_1 <= 269 and -1 + dark_laplace_us_2_1 <= 2o0 <= dark_laplace_us_2_1 and -1 + dark_laplace_us_2_0 <= 2o1 <= dark_laplace_us_2_0 }
  // # of banks: 1
  dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118_to_dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360_cache dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118_to_dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360;
};



inline void dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118_write(hw_uint<16>& dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118, dark_gauss_ds_3_FIFO_buf456_cache& dark_gauss_ds_3_FIFO_buf456, int root, int dark_gauss_ds_3_to_gp_33172_ld458, int dark_gauss_ds_3_to_gp_33172_ld457, int dynamic_address) {
  dark_gauss_ds_3_FIFO_buf456.dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118_to_dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360.push(dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118);
}

inline hw_uint<16> dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360_select(dark_gauss_ds_3_FIFO_buf456_cache& dark_gauss_ds_3_FIFO_buf456, int root, int dark_laplace_us_2_0, int dark_laplace_us_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360 read pattern: { dark_laplace_us_2_update_0_sm738_01101[root = 0, dark_laplace_us_2_0, dark_laplace_us_2_1] -> dark_gauss_ds_3_FIFO_buf456[o0, o1] : 0 <= dark_laplace_us_2_0 <= 269 and 0 <= dark_laplace_us_2_1 <= 269 and -1 + dark_laplace_us_2_1 <= 2o0 <= dark_laplace_us_2_1 and -1 + dark_laplace_us_2_0 <= 2o1 <= dark_laplace_us_2_0 }
  // Read schedule : { dark_laplace_us_2_update_0_sm738_01101[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 148] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 133] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118 = dark_gauss_ds_3_FIFO_buf456.dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118_to_dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360.peek(/* one reader or all rams */ ((-1 - dark_laplace_us_2_0) % 2 == 0 && 267 - dark_laplace_us_2_1 >= 0) ? ((134 - floord(2*dark_laplace_us_2_1, 4))) : 0);
  return value_dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118;
  return 0;
}

// # of bundles = 2
// dark_laplace_us_2_update_0_sm738_01101_read
//	dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360
inline hw_uint<16> dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_read_bundle_read(dark_gauss_ds_3_FIFO_buf456_cache& dark_gauss_ds_3_FIFO_buf456, int root, int dark_laplace_us_2_0, int dark_laplace_us_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360_res = dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360_select(dark_gauss_ds_3_FIFO_buf456, root, dark_laplace_us_2_0, dark_laplace_us_2_1, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_360_res);
	return result;
}

// load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_write
//	dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118
inline void dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_write_bundle_write(hw_uint<16>& load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_write, dark_gauss_ds_3_FIFO_buf456_cache& dark_gauss_ds_3_FIFO_buf456, int root, int dark_gauss_ds_3_to_gp_33172_ld458, int dark_gauss_ds_3_to_gp_33172_ld457, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118_res = load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_write.extract<0, 15>();
	dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118_write(dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_118_res, dark_gauss_ds_3_FIFO_buf456, root, dark_gauss_ds_3_to_gp_33172_ld458, dark_gauss_ds_3_to_gp_33172_ld457, dynamic_address);
}

struct dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116_to_dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_FIFO_buf460_cache {
  // Reader addrs...
    // { fused_level_3_update_0_sm750_01119[root = 0, fused_level_3_0, fused_level_3_1] -> dark_gauss_ds_3_FIFO_buf460[fused_level_3_1, fused_level_3_0] : 0 <= fused_level_3_0 <= 134 and 0 <= fused_level_3_1 <= 134 }
  // # of banks: 1
  dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116_to_dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290_cache dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116_to_dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290;
};



inline void dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116_write(hw_uint<16>& dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116, dark_gauss_ds_3_FIFO_buf460_cache& dark_gauss_ds_3_FIFO_buf460, int root, int dark_gauss_ds_3_to_gp_48176_ld462, int dark_gauss_ds_3_to_gp_48176_ld461, int dynamic_address) {
  dark_gauss_ds_3_FIFO_buf460.dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116_to_dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290.push(dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116);
}

inline hw_uint<16> dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290_select(dark_gauss_ds_3_FIFO_buf460_cache& dark_gauss_ds_3_FIFO_buf460, int root, int fused_level_3_0, int fused_level_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290 read pattern: { fused_level_3_update_0_sm750_01119[root = 0, fused_level_3_0, fused_level_3_1] -> dark_gauss_ds_3_FIFO_buf460[fused_level_3_1, fused_level_3_0] : 0 <= fused_level_3_0 <= 134 and 0 <= fused_level_3_1 <= 134 }
  // Read schedule : { fused_level_3_update_0_sm750_01119[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 175] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 137] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116 = dark_gauss_ds_3_FIFO_buf460.dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116_to_dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116;
  return 0;
}

// # of bundles = 2
// fused_level_3_update_0_sm750_01119_read
//	dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290
inline hw_uint<16> dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_read_bundle_read(dark_gauss_ds_3_FIFO_buf460_cache& dark_gauss_ds_3_FIFO_buf460, int root, int fused_level_3_0, int fused_level_3_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290_res = dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290_select(dark_gauss_ds_3_FIFO_buf460, root, fused_level_3_0, fused_level_3_1, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_290_res);
	return result;
}

// load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_write
//	dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116
inline void dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_write_bundle_write(hw_uint<16>& load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_write, dark_gauss_ds_3_FIFO_buf460_cache& dark_gauss_ds_3_FIFO_buf460, int root, int dark_gauss_ds_3_to_gp_48176_ld462, int dark_gauss_ds_3_to_gp_48176_ld461, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116_res = load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_write.extract<0, 15>();
	dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116_write(dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_116_res, dark_gauss_ds_3_FIFO_buf460, root, dark_gauss_ds_3_to_gp_48176_ld462, dark_gauss_ds_3_to_gp_48176_ld461, dynamic_address);
}

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371_to_dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_cache {
  // Reader addrs...
    // { load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881[root = 0, dark_laplace_diff_0_ld182, dark_laplace_diff_0_ld181] -> dark_laplace_diff_0[dark_laplace_diff_0_ld181, dark_laplace_diff_0_ld182] : 0 <= dark_laplace_diff_0_ld182 <= 1079 and 0 <= dark_laplace_diff_0_ld181 <= 1079 }
  // # of banks: 1
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371_to_dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371_to_dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109;
};



inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371, dark_laplace_diff_0_cache& dark_laplace_diff_0, int root, int dark_laplace_diff_0_0, int dark_laplace_diff_0_1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371_to_dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371);
}

inline hw_uint<16> dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int root, int dark_laplace_diff_0_ld182, int dark_laplace_diff_0_ld181, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109 read pattern: { load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881[root = 0, dark_laplace_diff_0_ld182, dark_laplace_diff_0_ld181] -> dark_laplace_diff_0[dark_laplace_diff_0_ld181, dark_laplace_diff_0_ld182] : 0 <= dark_laplace_diff_0_ld182 <= 1079 and 0 <= dark_laplace_diff_0_ld181 <= 1079 }
  // Read schedule : { load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 134] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { dark_laplace_diff_0_update_0_sm742_01135[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 128] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371_to_dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_0_update_0_sm742_01135_write
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371
inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_write_bundle_write(hw_uint<16>& dark_laplace_diff_0_update_0_sm742_01135_write, dark_laplace_diff_0_cache& dark_laplace_diff_0, int root, int dark_laplace_diff_0_0, int dark_laplace_diff_0_1, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371_res = dark_laplace_diff_0_update_0_sm742_01135_write.extract<0, 15>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_371_res, dark_laplace_diff_0, root, dark_laplace_diff_0_0, dark_laplace_diff_0_1, dynamic_address);
}

// load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_read
//	dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109
inline hw_uint<16> dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_read_bundle_read(dark_laplace_diff_0_cache& dark_laplace_diff_0, int root, int dark_laplace_diff_0_ld182, int dark_laplace_diff_0_ld181, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109

	hw_uint<16> result;
	hw_uint<16> dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109_res = dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109_select(dark_laplace_diff_0, root, dark_laplace_diff_0_ld182, dark_laplace_diff_0_ld181, dynamic_address);
	set_at<0, 16>(result, dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_109_res);
	return result;
}

struct dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110_to_dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_FIFO_buf464_cache {
  // Reader addrs...
    // { fused_level_0_update_0_sm753_01125[root = 0, fused_level_0_0, fused_level_0_1] -> dark_laplace_diff_0_FIFO_buf464[fused_level_0_1, fused_level_0_0] : 0 <= fused_level_0_0 <= 1079 and 0 <= fused_level_0_1 <= 1079 }
  // # of banks: 1
  dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110_to_dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305_cache dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110_to_dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305;
};



inline void dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110_write(hw_uint<16>& dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110, dark_laplace_diff_0_FIFO_buf464_cache& dark_laplace_diff_0_FIFO_buf464, int root, int dark_laplace_diff_0_to_gp_45180_ld466, int dark_laplace_diff_0_to_gp_45180_ld465, int dynamic_address) {
  dark_laplace_diff_0_FIFO_buf464.dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110_to_dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305.push(dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110);
}

inline hw_uint<16> dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305_select(dark_laplace_diff_0_FIFO_buf464_cache& dark_laplace_diff_0_FIFO_buf464, int root, int fused_level_0_0, int fused_level_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305 read pattern: { fused_level_0_update_0_sm753_01125[root = 0, fused_level_0_0, fused_level_0_1] -> dark_laplace_diff_0_FIFO_buf464[fused_level_0_1, fused_level_0_0] : 0 <= fused_level_0_0 <= 1079 and 0 <= fused_level_0_1 <= 1079 }
  // Read schedule : { fused_level_0_update_0_sm753_01125[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 156] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 145] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110 = dark_laplace_diff_0_FIFO_buf464.dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110_to_dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110;
  return 0;
}

// # of bundles = 2
// fused_level_0_update_0_sm753_01125_read
//	dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305
inline hw_uint<16> dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_read_bundle_read(dark_laplace_diff_0_FIFO_buf464_cache& dark_laplace_diff_0_FIFO_buf464, int root, int fused_level_0_0, int fused_level_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305

	hw_uint<16> result;
	hw_uint<16> dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305_res = dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305_select(dark_laplace_diff_0_FIFO_buf464, root, fused_level_0_0, fused_level_0_1, dynamic_address);
	set_at<0, 16>(result, dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_305_res);
	return result;
}

// load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_write
//	dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110
inline void dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_write_bundle_write(hw_uint<16>& load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_write, dark_laplace_diff_0_FIFO_buf464_cache& dark_laplace_diff_0_FIFO_buf464, int root, int dark_laplace_diff_0_to_gp_45180_ld466, int dark_laplace_diff_0_to_gp_45180_ld465, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110_res = load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_write.extract<0, 15>();
	dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110_write(dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_110_res, dark_laplace_diff_0_FIFO_buf464, root, dark_laplace_diff_0_to_gp_45180_ld466, dark_laplace_diff_0_to_gp_45180_ld465, dynamic_address);
}

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368_to_dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_cache {
  // Reader addrs...
    // { load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853[root = 0, dark_laplace_diff_1_ld186, dark_laplace_diff_1_ld185] -> dark_laplace_diff_1[dark_laplace_diff_1_ld185, dark_laplace_diff_1_ld186] : 0 <= dark_laplace_diff_1_ld186 <= 539 and 0 <= dark_laplace_diff_1_ld185 <= 539 }
  // # of banks: 1
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368_to_dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368_to_dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105;
};



inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368, dark_laplace_diff_1_cache& dark_laplace_diff_1, int root, int dark_laplace_diff_1_0, int dark_laplace_diff_1_1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368_to_dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368);
}

inline hw_uint<16> dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int root, int dark_laplace_diff_1_ld186, int dark_laplace_diff_1_ld185, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105 read pattern: { load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853[root = 0, dark_laplace_diff_1_ld186, dark_laplace_diff_1_ld185] -> dark_laplace_diff_1[dark_laplace_diff_1_ld185, dark_laplace_diff_1_ld186] : 0 <= dark_laplace_diff_1_ld186 <= 539 and 0 <= dark_laplace_diff_1_ld185 <= 539 }
  // Read schedule : { load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 130] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { dark_laplace_diff_1_update_0_sm741_01107[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 127] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368_to_dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_1_update_0_sm741_01107_write
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368
inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_write_bundle_write(hw_uint<16>& dark_laplace_diff_1_update_0_sm741_01107_write, dark_laplace_diff_1_cache& dark_laplace_diff_1, int root, int dark_laplace_diff_1_0, int dark_laplace_diff_1_1, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368_res = dark_laplace_diff_1_update_0_sm741_01107_write.extract<0, 15>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_368_res, dark_laplace_diff_1, root, dark_laplace_diff_1_0, dark_laplace_diff_1_1, dynamic_address);
}

// load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_read
//	dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105
inline hw_uint<16> dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_read_bundle_read(dark_laplace_diff_1_cache& dark_laplace_diff_1, int root, int dark_laplace_diff_1_ld186, int dark_laplace_diff_1_ld185, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105

	hw_uint<16> result;
	hw_uint<16> dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105_res = dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105_select(dark_laplace_diff_1, root, dark_laplace_diff_1_ld186, dark_laplace_diff_1_ld185, dynamic_address);
	set_at<0, 16>(result, dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_105_res);
	return result;
}

struct dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106_to_dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_FIFO_buf468_cache {
  // Reader addrs...
    // { fused_level_1_update_0_sm752_01123[root = 0, fused_level_1_0, fused_level_1_1] -> dark_laplace_diff_1_FIFO_buf468[fused_level_1_1, fused_level_1_0] : 0 <= fused_level_1_0 <= 539 and 0 <= fused_level_1_1 <= 539 }
  // # of banks: 1
  dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106_to_dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300_cache dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106_to_dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300;
};



inline void dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106_write(hw_uint<16>& dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106, dark_laplace_diff_1_FIFO_buf468_cache& dark_laplace_diff_1_FIFO_buf468, int root, int dark_laplace_diff_1_to_gp_46184_ld470, int dark_laplace_diff_1_to_gp_46184_ld469, int dynamic_address) {
  dark_laplace_diff_1_FIFO_buf468.dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106_to_dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300.push(dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106);
}

inline hw_uint<16> dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300_select(dark_laplace_diff_1_FIFO_buf468_cache& dark_laplace_diff_1_FIFO_buf468, int root, int fused_level_1_0, int fused_level_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300 read pattern: { fused_level_1_update_0_sm752_01123[root = 0, fused_level_1_0, fused_level_1_1] -> dark_laplace_diff_1_FIFO_buf468[fused_level_1_1, fused_level_1_0] : 0 <= fused_level_1_0 <= 539 and 0 <= fused_level_1_1 <= 539 }
  // Read schedule : { fused_level_1_update_0_sm752_01123[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 164] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 139] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106 = dark_laplace_diff_1_FIFO_buf468.dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106_to_dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106;
  return 0;
}

// # of bundles = 2
// fused_level_1_update_0_sm752_01123_read
//	dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300
inline hw_uint<16> dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_read_bundle_read(dark_laplace_diff_1_FIFO_buf468_cache& dark_laplace_diff_1_FIFO_buf468, int root, int fused_level_1_0, int fused_level_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300

	hw_uint<16> result;
	hw_uint<16> dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300_res = dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300_select(dark_laplace_diff_1_FIFO_buf468, root, fused_level_1_0, fused_level_1_1, dynamic_address);
	set_at<0, 16>(result, dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_300_res);
	return result;
}

// load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_write
//	dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106
inline void dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_write_bundle_write(hw_uint<16>& load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_write, dark_laplace_diff_1_FIFO_buf468_cache& dark_laplace_diff_1_FIFO_buf468, int root, int dark_laplace_diff_1_to_gp_46184_ld470, int dark_laplace_diff_1_to_gp_46184_ld469, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106_res = load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_write.extract<0, 15>();
	dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106_write(dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_106_res, dark_laplace_diff_1_FIFO_buf468, root, dark_laplace_diff_1_to_gp_46184_ld470, dark_laplace_diff_1_to_gp_46184_ld469, dynamic_address);
}

struct dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365_to_dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_2_cache {
  // Reader addrs...
    // { load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761[root = 0, dark_laplace_diff_2_ld190, dark_laplace_diff_2_ld189] -> dark_laplace_diff_2[dark_laplace_diff_2_ld189, dark_laplace_diff_2_ld190] : 0 <= dark_laplace_diff_2_ld190 <= 269 and 0 <= dark_laplace_diff_2_ld189 <= 269 }
  // # of banks: 1
  dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365_to_dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101_cache dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365_to_dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101;
};



inline void dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365_write(hw_uint<16>& dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365, dark_laplace_diff_2_cache& dark_laplace_diff_2, int root, int dark_laplace_diff_2_0, int dark_laplace_diff_2_1, int dynamic_address) {
  dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365_to_dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101.push(dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365);
}

inline hw_uint<16> dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101_select(dark_laplace_diff_2_cache& dark_laplace_diff_2, int root, int dark_laplace_diff_2_ld190, int dark_laplace_diff_2_ld189, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101 read pattern: { load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761[root = 0, dark_laplace_diff_2_ld190, dark_laplace_diff_2_ld189] -> dark_laplace_diff_2[dark_laplace_diff_2_ld189, dark_laplace_diff_2_ld190] : 0 <= dark_laplace_diff_2_ld190 <= 269 and 0 <= dark_laplace_diff_2_ld189 <= 269 }
  // Read schedule : { load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 174] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { dark_laplace_diff_2_update_0_sm740_01105[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 170] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365 = dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365_to_dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_2_update_0_sm740_01105_write
//	dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365
inline void dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_write_bundle_write(hw_uint<16>& dark_laplace_diff_2_update_0_sm740_01105_write, dark_laplace_diff_2_cache& dark_laplace_diff_2, int root, int dark_laplace_diff_2_0, int dark_laplace_diff_2_1, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365_res = dark_laplace_diff_2_update_0_sm740_01105_write.extract<0, 15>();
	dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365_write(dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_365_res, dark_laplace_diff_2, root, dark_laplace_diff_2_0, dark_laplace_diff_2_1, dynamic_address);
}

// load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_read
//	dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101
inline hw_uint<16> dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_read_bundle_read(dark_laplace_diff_2_cache& dark_laplace_diff_2, int root, int dark_laplace_diff_2_ld190, int dark_laplace_diff_2_ld189, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101

	hw_uint<16> result;
	hw_uint<16> dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101_res = dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101_select(dark_laplace_diff_2, root, dark_laplace_diff_2_ld190, dark_laplace_diff_2_ld189, dynamic_address);
	set_at<0, 16>(result, dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_101_res);
	return result;
}

struct dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102_to_dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_2_FIFO_buf472_cache {
  // Reader addrs...
    // { fused_level_2_update_0_sm751_01121[root = 0, fused_level_2_0, fused_level_2_1] -> dark_laplace_diff_2_FIFO_buf472[fused_level_2_1, fused_level_2_0] : 0 <= fused_level_2_0 <= 269 and 0 <= fused_level_2_1 <= 269 }
  // # of banks: 1
  dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102_to_dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295_cache dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102_to_dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295;
};



inline void dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102_write(hw_uint<16>& dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102, dark_laplace_diff_2_FIFO_buf472_cache& dark_laplace_diff_2_FIFO_buf472, int root, int dark_laplace_diff_2_to_gp_47188_ld474, int dark_laplace_diff_2_to_gp_47188_ld473, int dynamic_address) {
  dark_laplace_diff_2_FIFO_buf472.dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102_to_dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295.push(dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102);
}

inline hw_uint<16> dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295_select(dark_laplace_diff_2_FIFO_buf472_cache& dark_laplace_diff_2_FIFO_buf472, int root, int fused_level_2_0, int fused_level_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295 read pattern: { fused_level_2_update_0_sm751_01121[root = 0, fused_level_2_0, fused_level_2_1] -> dark_laplace_diff_2_FIFO_buf472[fused_level_2_1, fused_level_2_0] : 0 <= fused_level_2_0 <= 269 and 0 <= fused_level_2_1 <= 269 }
  // Read schedule : { fused_level_2_update_0_sm751_01121[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 180] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 178] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102 = dark_laplace_diff_2_FIFO_buf472.dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102_to_dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102;
  return 0;
}

// # of bundles = 2
// fused_level_2_update_0_sm751_01121_read
//	dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295
inline hw_uint<16> dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_read_bundle_read(dark_laplace_diff_2_FIFO_buf472_cache& dark_laplace_diff_2_FIFO_buf472, int root, int fused_level_2_0, int fused_level_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295

	hw_uint<16> result;
	hw_uint<16> dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295_res = dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295_select(dark_laplace_diff_2_FIFO_buf472, root, fused_level_2_0, fused_level_2_1, dynamic_address);
	set_at<0, 16>(result, dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_295_res);
	return result;
}

// load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_write
//	dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102
inline void dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_write_bundle_write(hw_uint<16>& load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_write, dark_laplace_diff_2_FIFO_buf472_cache& dark_laplace_diff_2_FIFO_buf472, int root, int dark_laplace_diff_2_to_gp_47188_ld474, int dark_laplace_diff_2_to_gp_47188_ld473, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102_res = load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_write.extract<0, 15>();
	dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102_write(dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_102_res, dark_laplace_diff_2_FIFO_buf472, root, dark_laplace_diff_2_to_gp_47188_ld474, dark_laplace_diff_2_to_gp_47188_ld473, dynamic_address);
}

struct dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363_to_dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_cache {
  // Reader addrs...
    // { load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903[root = 0, dark_laplace_us_0_ld194, dark_laplace_us_0_ld193] -> dark_laplace_us_0[dark_laplace_us_0_ld193, dark_laplace_us_0_ld194] : 0 <= dark_laplace_us_0_ld194 <= 1079 and 0 <= dark_laplace_us_0_ld193 <= 1079 }
  // # of banks: 1
  dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363_to_dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97_cache dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363_to_dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97;
};



inline void dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363, dark_laplace_us_0_cache& dark_laplace_us_0, int root, int dark_laplace_us_0_0, int dark_laplace_us_0_1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363_to_dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97.push(dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363);
}

inline hw_uint<16> dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97_select(dark_laplace_us_0_cache& dark_laplace_us_0, int root, int dark_laplace_us_0_ld194, int dark_laplace_us_0_ld193, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97 read pattern: { load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903[root = 0, dark_laplace_us_0_ld194, dark_laplace_us_0_ld193] -> dark_laplace_us_0[dark_laplace_us_0_ld193, dark_laplace_us_0_ld194] : 0 <= dark_laplace_us_0_ld194 <= 1079 and 0 <= dark_laplace_us_0_ld193 <= 1079 }
  // Read schedule : { load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 102] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { dark_laplace_us_0_update_0_sm723_01071[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 85] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363_to_dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363;
  return 0;
}

// # of bundles = 2
// dark_laplace_us_0_update_0_sm723_01071_write
//	dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363
inline void dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_write_bundle_write(hw_uint<16>& dark_laplace_us_0_update_0_sm723_01071_write, dark_laplace_us_0_cache& dark_laplace_us_0, int root, int dark_laplace_us_0_0, int dark_laplace_us_0_1, int dynamic_address) {
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363_res = dark_laplace_us_0_update_0_sm723_01071_write.extract<0, 15>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363_write(dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_363_res, dark_laplace_us_0, root, dark_laplace_us_0_0, dark_laplace_us_0_1, dynamic_address);
}

// load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_read
//	dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97
inline hw_uint<16> dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_read_bundle_read(dark_laplace_us_0_cache& dark_laplace_us_0, int root, int dark_laplace_us_0_ld194, int dark_laplace_us_0_ld193, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97

	hw_uint<16> result;
	hw_uint<16> dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97_res = dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97_select(dark_laplace_us_0, root, dark_laplace_us_0_ld194, dark_laplace_us_0_ld193, dynamic_address);
	set_at<0, 16>(result, dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_97_res);
	return result;
}

struct dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98_to_dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_FIFO_buf476_cache {
  // Reader addrs...
    // { dark_laplace_diff_0_update_0_sm742_01135[root = 0, dark_laplace_diff_0_0, dark_laplace_diff_0_1] -> dark_laplace_us_0_FIFO_buf476[dark_laplace_diff_0_1, dark_laplace_diff_0_0] : 0 <= dark_laplace_diff_0_0 <= 1079 and 0 <= dark_laplace_diff_0_1 <= 1079 }
  // # of banks: 1
  dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98_to_dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373_cache dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98_to_dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373;
};



inline void dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98_write(hw_uint<16>& dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98, dark_laplace_us_0_FIFO_buf476_cache& dark_laplace_us_0_FIFO_buf476, int root, int dark_laplace_us_0_to_gp_28192_ld478, int dark_laplace_us_0_to_gp_28192_ld477, int dynamic_address) {
  dark_laplace_us_0_FIFO_buf476.dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98_to_dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373.push(dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98);
}

inline hw_uint<16> dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373_select(dark_laplace_us_0_FIFO_buf476_cache& dark_laplace_us_0_FIFO_buf476, int root, int dark_laplace_diff_0_0, int dark_laplace_diff_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373 read pattern: { dark_laplace_diff_0_update_0_sm742_01135[root = 0, dark_laplace_diff_0_0, dark_laplace_diff_0_1] -> dark_laplace_us_0_FIFO_buf476[dark_laplace_diff_0_1, dark_laplace_diff_0_0] : 0 <= dark_laplace_diff_0_0 <= 1079 and 0 <= dark_laplace_diff_0_1 <= 1079 }
  // Read schedule : { dark_laplace_diff_0_update_0_sm742_01135[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 128] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 115] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98 = dark_laplace_us_0_FIFO_buf476.dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98_to_dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_0_update_0_sm742_01135_read
//	dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373
inline hw_uint<16> dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_read_bundle_read(dark_laplace_us_0_FIFO_buf476_cache& dark_laplace_us_0_FIFO_buf476, int root, int dark_laplace_diff_0_0, int dark_laplace_diff_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373

	hw_uint<16> result;
	hw_uint<16> dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373_res = dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373_select(dark_laplace_us_0_FIFO_buf476, root, dark_laplace_diff_0_0, dark_laplace_diff_0_1, dynamic_address);
	set_at<0, 16>(result, dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_373_res);
	return result;
}

// load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_write
//	dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98
inline void dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_write_bundle_write(hw_uint<16>& load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_write, dark_laplace_us_0_FIFO_buf476_cache& dark_laplace_us_0_FIFO_buf476, int root, int dark_laplace_us_0_to_gp_28192_ld478, int dark_laplace_us_0_to_gp_28192_ld477, int dynamic_address) {
	hw_uint<16> dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98_res = load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_write.extract<0, 15>();
	dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98_write(dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_98_res, dark_laplace_us_0_FIFO_buf476, root, dark_laplace_us_0_to_gp_28192_ld478, dark_laplace_us_0_to_gp_28192_ld477, dynamic_address);
}

struct dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361_to_dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_cache {
  // Reader addrs...
    // { load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891[root = 0, dark_laplace_us_1_ld198, dark_laplace_us_1_ld197] -> dark_laplace_us_1[dark_laplace_us_1_ld197, dark_laplace_us_1_ld198] : 0 <= dark_laplace_us_1_ld198 <= 539 and 0 <= dark_laplace_us_1_ld197 <= 539 }
  // # of banks: 1
  dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361_to_dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93_cache dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361_to_dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93;
};



inline void dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361, dark_laplace_us_1_cache& dark_laplace_us_1, int root, int dark_laplace_us_1_0, int dark_laplace_us_1_1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361_to_dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93.push(dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361);
}

inline hw_uint<16> dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93_select(dark_laplace_us_1_cache& dark_laplace_us_1, int root, int dark_laplace_us_1_ld198, int dark_laplace_us_1_ld197, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93 read pattern: { load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891[root = 0, dark_laplace_us_1_ld198, dark_laplace_us_1_ld197] -> dark_laplace_us_1[dark_laplace_us_1_ld197, dark_laplace_us_1_ld198] : 0 <= dark_laplace_us_1_ld198 <= 539 and 0 <= dark_laplace_us_1_ld197 <= 539 }
  // Read schedule : { load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 116] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { dark_laplace_us_1_update_0_sm739_01103[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 112] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361_to_dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361;
  return 0;
}

// # of bundles = 2
// dark_laplace_us_1_update_0_sm739_01103_write
//	dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361
inline void dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_write_bundle_write(hw_uint<16>& dark_laplace_us_1_update_0_sm739_01103_write, dark_laplace_us_1_cache& dark_laplace_us_1, int root, int dark_laplace_us_1_0, int dark_laplace_us_1_1, int dynamic_address) {
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361_res = dark_laplace_us_1_update_0_sm739_01103_write.extract<0, 15>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361_write(dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_361_res, dark_laplace_us_1, root, dark_laplace_us_1_0, dark_laplace_us_1_1, dynamic_address);
}

// load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_read
//	dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93
inline hw_uint<16> dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_read_bundle_read(dark_laplace_us_1_cache& dark_laplace_us_1, int root, int dark_laplace_us_1_ld198, int dark_laplace_us_1_ld197, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93

	hw_uint<16> result;
	hw_uint<16> dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93_res = dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93_select(dark_laplace_us_1, root, dark_laplace_us_1_ld198, dark_laplace_us_1_ld197, dynamic_address);
	set_at<0, 16>(result, dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_93_res);
	return result;
}

struct dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94_to_dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_FIFO_buf480_cache {
  // Reader addrs...
    // { dark_laplace_diff_1_update_0_sm741_01107[root = 0, dark_laplace_diff_1_0, dark_laplace_diff_1_1] -> dark_laplace_us_1_FIFO_buf480[dark_laplace_diff_1_1, dark_laplace_diff_1_0] : 0 <= dark_laplace_diff_1_0 <= 539 and 0 <= dark_laplace_diff_1_1 <= 539 }
  // # of banks: 1
  dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94_to_dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370_cache dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94_to_dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370;
};



inline void dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94_write(hw_uint<16>& dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94, dark_laplace_us_1_FIFO_buf480_cache& dark_laplace_us_1_FIFO_buf480, int root, int dark_laplace_us_1_to_gp_29196_ld482, int dark_laplace_us_1_to_gp_29196_ld481, int dynamic_address) {
  dark_laplace_us_1_FIFO_buf480.dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94_to_dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370.push(dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94);
}

inline hw_uint<16> dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370_select(dark_laplace_us_1_FIFO_buf480_cache& dark_laplace_us_1_FIFO_buf480, int root, int dark_laplace_diff_1_0, int dark_laplace_diff_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370 read pattern: { dark_laplace_diff_1_update_0_sm741_01107[root = 0, dark_laplace_diff_1_0, dark_laplace_diff_1_1] -> dark_laplace_us_1_FIFO_buf480[dark_laplace_diff_1_1, dark_laplace_diff_1_0] : 0 <= dark_laplace_diff_1_0 <= 539 and 0 <= dark_laplace_diff_1_1 <= 539 }
  // Read schedule : { dark_laplace_diff_1_update_0_sm741_01107[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 127] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 118] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94 = dark_laplace_us_1_FIFO_buf480.dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94_to_dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_1_update_0_sm741_01107_read
//	dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370
inline hw_uint<16> dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_read_bundle_read(dark_laplace_us_1_FIFO_buf480_cache& dark_laplace_us_1_FIFO_buf480, int root, int dark_laplace_diff_1_0, int dark_laplace_diff_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370

	hw_uint<16> result;
	hw_uint<16> dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370_res = dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370_select(dark_laplace_us_1_FIFO_buf480, root, dark_laplace_diff_1_0, dark_laplace_diff_1_1, dynamic_address);
	set_at<0, 16>(result, dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_370_res);
	return result;
}

// load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_write
//	dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94
inline void dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_write_bundle_write(hw_uint<16>& load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_write, dark_laplace_us_1_FIFO_buf480_cache& dark_laplace_us_1_FIFO_buf480, int root, int dark_laplace_us_1_to_gp_29196_ld482, int dark_laplace_us_1_to_gp_29196_ld481, int dynamic_address) {
	hw_uint<16> dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94_res = load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_write.extract<0, 15>();
	dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94_write(dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_94_res, dark_laplace_us_1_FIFO_buf480, root, dark_laplace_us_1_to_gp_29196_ld482, dark_laplace_us_1_to_gp_29196_ld481, dynamic_address);
}

struct dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359_to_dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_2_cache {
  // Reader addrs...
    // { load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893[root = 0, dark_laplace_us_2_ld202, dark_laplace_us_2_ld201] -> dark_laplace_us_2[dark_laplace_us_2_ld201, dark_laplace_us_2_ld202] : 0 <= dark_laplace_us_2_ld202 <= 269 and 0 <= dark_laplace_us_2_ld201 <= 269 }
  // # of banks: 1
  dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359_to_dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89_cache dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359_to_dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89;
};



inline void dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359_write(hw_uint<16>& dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359, dark_laplace_us_2_cache& dark_laplace_us_2, int root, int dark_laplace_us_2_0, int dark_laplace_us_2_1, int dynamic_address) {
  dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359_to_dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89.push(dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359);
}

inline hw_uint<16> dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89_select(dark_laplace_us_2_cache& dark_laplace_us_2, int root, int dark_laplace_us_2_ld202, int dark_laplace_us_2_ld201, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89 read pattern: { load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893[root = 0, dark_laplace_us_2_ld202, dark_laplace_us_2_ld201] -> dark_laplace_us_2[dark_laplace_us_2_ld201, dark_laplace_us_2_ld202] : 0 <= dark_laplace_us_2_ld202 <= 269 and 0 <= dark_laplace_us_2_ld201 <= 269 }
  // Read schedule : { load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 153] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { dark_laplace_us_2_update_0_sm738_01101[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 148] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359 = dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359_to_dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359;
  return 0;
}

// # of bundles = 2
// dark_laplace_us_2_update_0_sm738_01101_write
//	dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359
inline void dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_write_bundle_write(hw_uint<16>& dark_laplace_us_2_update_0_sm738_01101_write, dark_laplace_us_2_cache& dark_laplace_us_2, int root, int dark_laplace_us_2_0, int dark_laplace_us_2_1, int dynamic_address) {
	hw_uint<16> dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359_res = dark_laplace_us_2_update_0_sm738_01101_write.extract<0, 15>();
	dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359_write(dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_359_res, dark_laplace_us_2, root, dark_laplace_us_2_0, dark_laplace_us_2_1, dynamic_address);
}

// load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_read
//	dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89
inline hw_uint<16> dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_read_bundle_read(dark_laplace_us_2_cache& dark_laplace_us_2, int root, int dark_laplace_us_2_ld202, int dark_laplace_us_2_ld201, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89

	hw_uint<16> result;
	hw_uint<16> dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89_res = dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89_select(dark_laplace_us_2, root, dark_laplace_us_2_ld202, dark_laplace_us_2_ld201, dynamic_address);
	set_at<0, 16>(result, dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_89_res);
	return result;
}

struct dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90_to_dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_2_FIFO_buf484_cache {
  // Reader addrs...
    // { dark_laplace_diff_2_update_0_sm740_01105[root = 0, dark_laplace_diff_2_0, dark_laplace_diff_2_1] -> dark_laplace_us_2_FIFO_buf484[dark_laplace_diff_2_1, dark_laplace_diff_2_0] : 0 <= dark_laplace_diff_2_0 <= 269 and 0 <= dark_laplace_diff_2_1 <= 269 }
  // # of banks: 1
  dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90_to_dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367_cache dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90_to_dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367;
};



inline void dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90_write(hw_uint<16>& dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90, dark_laplace_us_2_FIFO_buf484_cache& dark_laplace_us_2_FIFO_buf484, int root, int dark_laplace_us_2_to_gp_30200_ld486, int dark_laplace_us_2_to_gp_30200_ld485, int dynamic_address) {
  dark_laplace_us_2_FIFO_buf484.dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90_to_dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367.push(dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90);
}

inline hw_uint<16> dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367_select(dark_laplace_us_2_FIFO_buf484_cache& dark_laplace_us_2_FIFO_buf484, int root, int dark_laplace_diff_2_0, int dark_laplace_diff_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367 read pattern: { dark_laplace_diff_2_update_0_sm740_01105[root = 0, dark_laplace_diff_2_0, dark_laplace_diff_2_1] -> dark_laplace_us_2_FIFO_buf484[dark_laplace_diff_2_1, dark_laplace_diff_2_0] : 0 <= dark_laplace_diff_2_0 <= 269 and 0 <= dark_laplace_diff_2_1 <= 269 }
  // Read schedule : { dark_laplace_diff_2_update_0_sm740_01105[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 170] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 165] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90 = dark_laplace_us_2_FIFO_buf484.dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90_to_dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_2_update_0_sm740_01105_read
//	dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367
inline hw_uint<16> dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_read_bundle_read(dark_laplace_us_2_FIFO_buf484_cache& dark_laplace_us_2_FIFO_buf484, int root, int dark_laplace_diff_2_0, int dark_laplace_diff_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367

	hw_uint<16> result;
	hw_uint<16> dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367_res = dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367_select(dark_laplace_us_2_FIFO_buf484, root, dark_laplace_diff_2_0, dark_laplace_diff_2_1, dynamic_address);
	set_at<0, 16>(result, dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_367_res);
	return result;
}

// load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_write
//	dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90
inline void dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_write_bundle_write(hw_uint<16>& load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_write, dark_laplace_us_2_FIFO_buf484_cache& dark_laplace_us_2_FIFO_buf484, int root, int dark_laplace_us_2_to_gp_30200_ld486, int dark_laplace_us_2_to_gp_30200_ld485, int dynamic_address) {
	hw_uint<16> dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90_res = load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_write.extract<0, 15>();
	dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90_write(dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_90_res, dark_laplace_us_2_FIFO_buf484, root, dark_laplace_us_2_to_gp_30200_ld486, dark_laplace_us_2_to_gp_30200_ld485, dynamic_address);
}

struct dark_weights_dark_weights_update_0_sm710_01045_317_to_dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_cache {
  // Reader addrs...
    // { load_to_dark_weights_to_gp_35204207_sm638_0901[root = 0, dark_weights_ld206, dark_weights_ld205] -> dark_weights[dark_weights_ld205, dark_weights_ld206] : 0 <= dark_weights_ld206 <= 1086 and 0 <= dark_weights_ld205 <= 1086 }
  // # of banks: 1
  dark_weights_dark_weights_update_0_sm710_01045_317_to_dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39_cache dark_weights_dark_weights_update_0_sm710_01045_317_to_dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39;
};



inline void dark_weights_dark_weights_update_0_sm710_01045_317_write(hw_uint<16>& dark_weights_dark_weights_update_0_sm710_01045_317, dark_weights_cache& dark_weights, int root, int dark_weights_0, int dark_weights_1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_sm710_01045_317_to_dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39.push(dark_weights_dark_weights_update_0_sm710_01045_317);
}

inline hw_uint<16> dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39_select(dark_weights_cache& dark_weights, int root, int dark_weights_ld206, int dark_weights_ld205, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39 read pattern: { load_to_dark_weights_to_gp_35204207_sm638_0901[root = 0, dark_weights_ld206, dark_weights_ld205] -> dark_weights[dark_weights_ld205, dark_weights_ld206] : 0 <= dark_weights_ld206 <= 1086 and 0 <= dark_weights_ld205 <= 1086 }
  // Read schedule : { load_to_dark_weights_to_gp_35204207_sm638_0901[d0 = 0, d1, d2] -> [0, d1, d2, 38] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { dark_weights_update_0_sm710_01045[d0 = 0, d1, d2] -> [0, d1, d2, 35] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_dark_weights_update_0_sm710_01045_317 = dark_weights.dark_weights_dark_weights_update_0_sm710_01045_317_to_dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39.peek(/* one reader or all rams */ 0);
  return value_dark_weights_dark_weights_update_0_sm710_01045_317;
  return 0;
}

// # of bundles = 2
// dark_weights_update_0_sm710_01045_write
//	dark_weights_dark_weights_update_0_sm710_01045_317
inline void dark_weights_dark_weights_update_0_sm710_01045_write_bundle_write(hw_uint<16>& dark_weights_update_0_sm710_01045_write, dark_weights_cache& dark_weights, int root, int dark_weights_0, int dark_weights_1, int dynamic_address) {
	hw_uint<16> dark_weights_dark_weights_update_0_sm710_01045_317_res = dark_weights_update_0_sm710_01045_write.extract<0, 15>();
	dark_weights_dark_weights_update_0_sm710_01045_317_write(dark_weights_dark_weights_update_0_sm710_01045_317_res, dark_weights, root, dark_weights_0, dark_weights_1, dynamic_address);
}

// load_to_dark_weights_to_gp_35204207_sm638_0901_read
//	dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39
inline hw_uint<16> dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_read_bundle_read(dark_weights_cache& dark_weights, int root, int dark_weights_ld206, int dark_weights_ld205, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39

	hw_uint<16> result;
	hw_uint<16> dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39_res = dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39_select(dark_weights, root, dark_weights_ld206, dark_weights_ld205, dynamic_address);
	set_at<0, 16>(result, dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_39_res);
	return result;
}

struct dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80_to_dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_FIFO_buf488_cache {
  // Reader addrs...
    // { dark_weights_normed_update_0_sm713_01051[root = 0, dark_weights_normed_0, dark_weights_normed_1] -> dark_weights_FIFO_buf488[dark_weights_normed_1, dark_weights_normed_0] : 0 <= dark_weights_normed_0 <= 1086 and 0 <= dark_weights_normed_1 <= 1086 }
  // # of banks: 1
  dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80_to_dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320_cache dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80_to_dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320;
};



inline void dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80_write(hw_uint<16>& dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80, dark_weights_FIFO_buf488_cache& dark_weights_FIFO_buf488, int root, int dark_weights_to_gp_35204_ld490, int dark_weights_to_gp_35204_ld489, int dynamic_address) {
  dark_weights_FIFO_buf488.dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80_to_dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320.push(dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80);
}

inline hw_uint<16> dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320_select(dark_weights_FIFO_buf488_cache& dark_weights_FIFO_buf488, int root, int dark_weights_normed_0, int dark_weights_normed_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320 read pattern: { dark_weights_normed_update_0_sm713_01051[root = 0, dark_weights_normed_0, dark_weights_normed_1] -> dark_weights_FIFO_buf488[dark_weights_normed_1, dark_weights_normed_0] : 0 <= dark_weights_normed_0 <= 1086 and 0 <= dark_weights_normed_1 <= 1086 }
  // Read schedule : { dark_weights_normed_update_0_sm713_01051[d0 = 0, d1, d2] -> [0, d1, d2, 53] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { load_to_dark_weights_FIFO_buf488491_sm679_0983[d0 = 0, d1, d2] -> [0, d1, d2, 47] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80 = dark_weights_FIFO_buf488.dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80_to_dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320.peek(/* one reader or all rams */ 0);
  return value_dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_update_0_sm713_01051_read
//	dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320
inline hw_uint<16> dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_read_bundle_read(dark_weights_FIFO_buf488_cache& dark_weights_FIFO_buf488, int root, int dark_weights_normed_0, int dark_weights_normed_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320

	hw_uint<16> result;
	hw_uint<16> dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320_res = dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320_select(dark_weights_FIFO_buf488, root, dark_weights_normed_0, dark_weights_normed_1, dynamic_address);
	set_at<0, 16>(result, dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_320_res);
	return result;
}

// load_to_dark_weights_FIFO_buf488491_sm679_0983_write
//	dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80
inline void dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_write_bundle_write(hw_uint<16>& load_to_dark_weights_FIFO_buf488491_sm679_0983_write, dark_weights_FIFO_buf488_cache& dark_weights_FIFO_buf488, int root, int dark_weights_to_gp_35204_ld490, int dark_weights_to_gp_35204_ld489, int dynamic_address) {
	hw_uint<16> dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80_res = load_to_dark_weights_FIFO_buf488491_sm679_0983_write.extract<0, 15>();
	dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80_write(dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_80_res, dark_weights_FIFO_buf488, root, dark_weights_to_gp_35204_ld490, dark_weights_to_gp_35204_ld489, dynamic_address);
}

struct dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_to_dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_to_dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41_cache {
	// RAM Box: {[7, 1086], [7, 1086]}
	// Capacity: 1089
	// # of read delays: 1089

	fifo<hw_uint<16>, 1089> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1088 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_cache {
  // Reader addrs...
    // { load_to_dark_weights_normed_to_gp_36208211_sm594_0813[root = 0, dark_weights_normed_ld210, dark_weights_normed_ld209] -> dark_weights_normed[dark_weights_normed_ld209, dark_weights_normed_ld210] : 0 <= dark_weights_normed_ld210 <= 1086 and 0 <= dark_weights_normed_ld209 <= 1086 }
    // { load_to_dark_weights_normed_to_gp_45212215_sm629_0883[root = 0, dark_weights_normed_ld214, dark_weights_normed_ld213] -> dark_weights_normed[7 + dark_weights_normed_ld213, 7 + dark_weights_normed_ld214] : 0 <= dark_weights_normed_ld214 <= 1079 and 0 <= dark_weights_normed_ld213 <= 1079 }
  // # of banks: 2
  dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_to_dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43_cache dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_to_dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43;
  dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_to_dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41_cache dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_to_dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41;
};



inline void dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319, dark_weights_normed_cache& dark_weights_normed, int root, int dark_weights_normed_0, int dark_weights_normed_1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_to_dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43.push(dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319);
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_to_dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41.push(dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319);
}

inline hw_uint<16> dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43_select(dark_weights_normed_cache& dark_weights_normed, int root, int dark_weights_normed_ld210, int dark_weights_normed_ld209, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43 read pattern: { load_to_dark_weights_normed_to_gp_36208211_sm594_0813[root = 0, dark_weights_normed_ld210, dark_weights_normed_ld209] -> dark_weights_normed[dark_weights_normed_ld209, dark_weights_normed_ld210] : 0 <= dark_weights_normed_ld210 <= 1086 and 0 <= dark_weights_normed_ld209 <= 1086 }
  // Read schedule : { load_to_dark_weights_normed_to_gp_36208211_sm594_0813[d0 = 0, d1, d2] -> [0, d1, d2, 56] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { dark_weights_normed_update_0_sm713_01051[d0 = 0, d1, d2] -> [0, d1, d2, 53] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_to_dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319;
  return 0;
}

inline hw_uint<16> dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41_select(dark_weights_normed_cache& dark_weights_normed, int root, int dark_weights_normed_ld214, int dark_weights_normed_ld213, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41 read pattern: { load_to_dark_weights_normed_to_gp_45212215_sm629_0883[root = 0, dark_weights_normed_ld214, dark_weights_normed_ld213] -> dark_weights_normed[7 + dark_weights_normed_ld213, 7 + dark_weights_normed_ld214] : 0 <= dark_weights_normed_ld214 <= 1079 and 0 <= dark_weights_normed_ld213 <= 1079 }
  // Read schedule : { load_to_dark_weights_normed_to_gp_45212215_sm629_0883[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 54] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { dark_weights_normed_update_0_sm713_01051[d0 = 0, d1, d2] -> [0, d1, d2, 53] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_to_dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41.peek(/* one reader or all rams */ (1078 - dark_weights_normed_ld213 >= 0 && 1078 - dark_weights_normed_ld214 >= 0) ? (1088) : (-1079 + dark_weights_normed_ld213 == 0 && 1078 - dark_weights_normed_ld214 >= 0) ? (1087) : (-1079 + dark_weights_normed_ld214 == 0 && 1078 - dark_weights_normed_ld213 >= 0) ? ((1079 - dark_weights_normed_ld213)) : 0);
  return value_dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319;
  return 0;
}

// # of bundles = 3
// dark_weights_normed_update_0_sm713_01051_write
//	dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319
inline void dark_weights_normed_dark_weights_normed_update_0_sm713_01051_write_bundle_write(hw_uint<16>& dark_weights_normed_update_0_sm713_01051_write, dark_weights_normed_cache& dark_weights_normed, int root, int dark_weights_normed_0, int dark_weights_normed_1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_res = dark_weights_normed_update_0_sm713_01051_write.extract<0, 15>();
	dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_write(dark_weights_normed_dark_weights_normed_update_0_sm713_01051_319_res, dark_weights_normed, root, dark_weights_normed_0, dark_weights_normed_1, dynamic_address);
}

// load_to_dark_weights_normed_to_gp_36208211_sm594_0813_read
//	dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43
inline hw_uint<16> dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_read_bundle_read(dark_weights_normed_cache& dark_weights_normed, int root, int dark_weights_normed_ld210, int dark_weights_normed_ld209, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43_res = dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43_select(dark_weights_normed, root, dark_weights_normed_ld210, dark_weights_normed_ld209, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_43_res);
	return result;
}

// load_to_dark_weights_normed_to_gp_45212215_sm629_0883_read
//	dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41
inline hw_uint<16> dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_read_bundle_read(dark_weights_normed_cache& dark_weights_normed, int root, int dark_weights_normed_ld214, int dark_weights_normed_ld213, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41_res = dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41_select(dark_weights_normed, root, dark_weights_normed_ld214, dark_weights_normed_ld213, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_41_res);
	return result;
}

struct dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 2177
	// # of read delays: 9
  // 0, 1, 2, 1087, 1088, 1089, 2174, 2175, 2176
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 1084> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 1084> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_1086() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_1087() {
		return f6;
	}

	inline hw_uint<16> peek_1088() {
		return f8;
	}

	inline hw_uint<16> peek_1089() {
		return f10;
	}

	inline hw_uint<16> peek_2173() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_2174() {
		return f12;
	}

	inline hw_uint<16> peek_2175() {
		return f14;
	}

	inline hw_uint<16> peek_2176() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1084
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1084 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1084
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1084 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_FIFO_buf492_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[dark_weights_normed_gauss_blur_1_1, dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
    // { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[1 + dark_weights_normed_gauss_blur_1_1, dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
    // { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[2 + dark_weights_normed_gauss_blur_1_1, dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
    // { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[dark_weights_normed_gauss_blur_1_1, 1 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
    // { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[1 + dark_weights_normed_gauss_blur_1_1, 1 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
    // { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[2 + dark_weights_normed_gauss_blur_1_1, 1 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
    // { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[dark_weights_normed_gauss_blur_1_1, 2 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
    // { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[1 + dark_weights_normed_gauss_blur_1_1, 2 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
    // { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[2 + dark_weights_normed_gauss_blur_1_1, 2 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
  // # of banks: 1
  dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9_cache dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9;
};



inline void dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_write(hw_uint<16>& dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78, dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_to_gp_36208_ld494, int dark_weights_normed_to_gp_36208_ld493, int dynamic_address) {
  dark_weights_normed_FIFO_buf492.dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9.push(dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78);
}

inline hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_348_select(dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_348 read pattern: { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[dark_weights_normed_gauss_blur_1_1, dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_weights_normed_FIFO_buf492495_sm698_01021[d0 = 0, d1, d2] -> [0, d1, d2, 66] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78 = dark_weights_normed_FIFO_buf492.dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9.peek_2176();
  return value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78;
  return 0;
}

inline hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_349_select(dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_349 read pattern: { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[1 + dark_weights_normed_gauss_blur_1_1, dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_weights_normed_FIFO_buf492495_sm698_01021[d0 = 0, d1, d2] -> [0, d1, d2, 66] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78 = dark_weights_normed_FIFO_buf492.dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9.peek_2175();
  return value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78;
  return 0;
}

inline hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_350_select(dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_350 read pattern: { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[2 + dark_weights_normed_gauss_blur_1_1, dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_weights_normed_FIFO_buf492495_sm698_01021[d0 = 0, d1, d2] -> [0, d1, d2, 66] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78 = dark_weights_normed_FIFO_buf492.dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9.peek_2174();
  return value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78;
  return 0;
}

inline hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_351_select(dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_351 read pattern: { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[dark_weights_normed_gauss_blur_1_1, 1 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_weights_normed_FIFO_buf492495_sm698_01021[d0 = 0, d1, d2] -> [0, d1, d2, 66] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78 = dark_weights_normed_FIFO_buf492.dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9.peek_1089();
  return value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78;
  return 0;
}

inline hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_352_select(dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_352 read pattern: { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[1 + dark_weights_normed_gauss_blur_1_1, 1 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_weights_normed_FIFO_buf492495_sm698_01021[d0 = 0, d1, d2] -> [0, d1, d2, 66] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78 = dark_weights_normed_FIFO_buf492.dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9.peek_1088();
  return value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78;
  return 0;
}

inline hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_353_select(dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_353 read pattern: { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[2 + dark_weights_normed_gauss_blur_1_1, 1 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_weights_normed_FIFO_buf492495_sm698_01021[d0 = 0, d1, d2] -> [0, d1, d2, 66] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78 = dark_weights_normed_FIFO_buf492.dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9.peek_1087();
  return value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78;
  return 0;
}

inline hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_354_select(dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_354 read pattern: { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[dark_weights_normed_gauss_blur_1_1, 2 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_weights_normed_FIFO_buf492495_sm698_01021[d0 = 0, d1, d2] -> [0, d1, d2, 66] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78 = dark_weights_normed_FIFO_buf492.dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9.peek_2();
  return value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78;
  return 0;
}

inline hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_355_select(dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_355 read pattern: { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[1 + dark_weights_normed_gauss_blur_1_1, 2 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_weights_normed_FIFO_buf492495_sm698_01021[d0 = 0, d1, d2] -> [0, d1, d2, 66] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78 = dark_weights_normed_FIFO_buf492.dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9.peek_1();
  return value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78;
  return 0;
}

inline hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_356_select(dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_356 read pattern: { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[root = 0, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1] -> dark_weights_normed_FIFO_buf492[2 + dark_weights_normed_gauss_blur_1_1, 2 + dark_weights_normed_gauss_blur_1_0] : 0 <= dark_weights_normed_gauss_blur_1_0 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_1 <= 1084 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { load_to_dark_weights_normed_FIFO_buf492495_sm698_01021[d0 = 0, d1, d2] -> [0, d1, d2, 66] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78 = dark_weights_normed_FIFO_buf492.dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_merged_banks_9.peek_0();
  return value_dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_1_update_0_sm716_01057_read
//	dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_348
//	dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_349
//	dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_350
//	dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_351
//	dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_352
//	dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_353
//	dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_354
//	dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_355
//	dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_356
inline hw_uint<144> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_read_bundle_read(dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
  // # of ports in bundle: 9
    // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_348
    // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_349
    // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_350
    // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_351
    // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_352
    // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_353
    // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_354
    // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_355
    // dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_356

	hw_uint<144> result;
	hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_348_res = dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_348_select(dark_weights_normed_FIFO_buf492, root, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<0, 144>(result, dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_348_res);
	hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_349_res = dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_349_select(dark_weights_normed_FIFO_buf492, root, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<16, 144>(result, dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_349_res);
	hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_350_res = dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_350_select(dark_weights_normed_FIFO_buf492, root, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<32, 144>(result, dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_350_res);
	hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_351_res = dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_351_select(dark_weights_normed_FIFO_buf492, root, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<48, 144>(result, dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_351_res);
	hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_352_res = dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_352_select(dark_weights_normed_FIFO_buf492, root, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<64, 144>(result, dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_352_res);
	hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_353_res = dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_353_select(dark_weights_normed_FIFO_buf492, root, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<80, 144>(result, dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_353_res);
	hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_354_res = dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_354_select(dark_weights_normed_FIFO_buf492, root, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<96, 144>(result, dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_354_res);
	hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_355_res = dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_355_select(dark_weights_normed_FIFO_buf492, root, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<112, 144>(result, dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_355_res);
	hw_uint<16> dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_356_res = dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_356_select(dark_weights_normed_FIFO_buf492, root, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1, dynamic_address);
	set_at<128, 144>(result, dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_356_res);
	return result;
}

// load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_write
//	dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78
inline void dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_write_bundle_write(hw_uint<16>& load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_write, dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int root, int dark_weights_normed_to_gp_36208_ld494, int dark_weights_normed_to_gp_36208_ld493, int dynamic_address) {
	hw_uint<16> dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_res = load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_write.extract<0, 15>();
	dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_write(dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_78_res, dark_weights_normed_FIFO_buf492, root, dark_weights_normed_to_gp_36208_ld494, dark_weights_normed_to_gp_36208_ld493, dynamic_address);
}

struct dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76_to_dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307_cache {
	// RAM Box: {[7, 1086], [7, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_FIFO_buf496_cache {
  // Reader addrs...
    // { fused_level_0_update_0_sm753_01125[root = 0, fused_level_0_0, fused_level_0_1] -> dark_weights_normed_FIFO_buf496[7 + fused_level_0_1, 7 + fused_level_0_0] : 0 <= fused_level_0_0 <= 1079 and 0 <= fused_level_0_1 <= 1079 }
  // # of banks: 1
  dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76_to_dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307_cache dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76_to_dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307;
};



inline void dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76_write(hw_uint<16>& dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76, dark_weights_normed_FIFO_buf496_cache& dark_weights_normed_FIFO_buf496, int root, int dark_weights_normed_to_gp_45212_ld498, int dark_weights_normed_to_gp_45212_ld497, int dynamic_address) {
  dark_weights_normed_FIFO_buf496.dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76_to_dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307.push(dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76);
}

inline hw_uint<16> dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307_select(dark_weights_normed_FIFO_buf496_cache& dark_weights_normed_FIFO_buf496, int root, int fused_level_0_0, int fused_level_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307 read pattern: { fused_level_0_update_0_sm753_01125[root = 0, fused_level_0_0, fused_level_0_1] -> dark_weights_normed_FIFO_buf496[7 + fused_level_0_1, 7 + fused_level_0_0] : 0 <= fused_level_0_0 <= 1079 and 0 <= fused_level_0_1 <= 1079 }
  // Read schedule : { fused_level_0_update_0_sm753_01125[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 156] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_dark_weights_normed_FIFO_buf496499_sm665_0955[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 61] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76 = dark_weights_normed_FIFO_buf496.dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76_to_dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76;
  return 0;
}

// # of bundles = 2
// fused_level_0_update_0_sm753_01125_read
//	dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307
inline hw_uint<16> dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_read_bundle_read(dark_weights_normed_FIFO_buf496_cache& dark_weights_normed_FIFO_buf496, int root, int fused_level_0_0, int fused_level_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307_res = dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307_select(dark_weights_normed_FIFO_buf496, root, fused_level_0_0, fused_level_0_1, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_307_res);
	return result;
}

// load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_write
//	dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76
inline void dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_write_bundle_write(hw_uint<16>& load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_write, dark_weights_normed_FIFO_buf496_cache& dark_weights_normed_FIFO_buf496, int root, int dark_weights_normed_to_gp_45212_ld498, int dark_weights_normed_to_gp_45212_ld497, int dynamic_address) {
	hw_uint<16> dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76_res = load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_write.extract<0, 15>();
	dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76_write(dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_76_res, dark_weights_normed_FIFO_buf496, root, dark_weights_normed_to_gp_45212_ld498, dark_weights_normed_to_gp_45212_ld497, dynamic_address);
}

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347_to_dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73_cache {
	// RAM Box: {[0, 1084], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_cache {
  // Reader addrs...
    // { load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885[root = 0, dark_weights_normed_gauss_blur_1_ld218, dark_weights_normed_gauss_blur_1_ld217] -> dark_weights_normed_gauss_blur_1[dark_weights_normed_gauss_blur_1_ld217, dark_weights_normed_gauss_blur_1_ld218] : 0 <= dark_weights_normed_gauss_blur_1_ld218 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_ld217 <= 1084 }
  // # of banks: 1
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347_to_dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347_to_dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73;
};



inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347_to_dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int root, int dark_weights_normed_gauss_blur_1_ld218, int dark_weights_normed_gauss_blur_1_ld217, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73 read pattern: { load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885[root = 0, dark_weights_normed_gauss_blur_1_ld218, dark_weights_normed_gauss_blur_1_ld217] -> dark_weights_normed_gauss_blur_1[dark_weights_normed_gauss_blur_1_ld217, dark_weights_normed_gauss_blur_1_ld218] : 0 <= dark_weights_normed_gauss_blur_1_ld218 <= 1084 and 0 <= dark_weights_normed_gauss_blur_1_ld217 <= 1084 }
  // Read schedule : { load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 83] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347_to_dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_1_update_0_sm716_01057_write
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347
inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_write_bundle_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_update_0_sm716_01057_write, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int root, int dark_weights_normed_gauss_blur_1_0, int dark_weights_normed_gauss_blur_1_1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347_res = dark_weights_normed_gauss_blur_1_update_0_sm716_01057_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_347_res, dark_weights_normed_gauss_blur_1, root, dark_weights_normed_gauss_blur_1_0, dark_weights_normed_gauss_blur_1_1, dynamic_address);
}

// load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_read
//	dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73
inline hw_uint<16> dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_read_bundle_read(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int root, int dark_weights_normed_gauss_blur_1_ld218, int dark_weights_normed_gauss_blur_1_ld217, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73_res = dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73_select(dark_weights_normed_gauss_blur_1, root, dark_weights_normed_gauss_blur_1_ld218, dark_weights_normed_gauss_blur_1_ld217, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_73_res);
	return result;
}

struct dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74_to_dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326_cache {
	// RAM Box: {[0, 1084], [0, 1084]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_FIFO_buf500_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_ds_1_update_0_sm722_01069[root = 0, dark_weights_normed_gauss_ds_1_0, dark_weights_normed_gauss_ds_1_1] -> dark_weights_normed_gauss_blur_1_FIFO_buf500[2dark_weights_normed_gauss_ds_1_1, 2dark_weights_normed_gauss_ds_1_0] : 0 <= dark_weights_normed_gauss_ds_1_0 <= 542 and 0 <= dark_weights_normed_gauss_ds_1_1 <= 542 }
  // # of banks: 1
  dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74_to_dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326_cache dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74_to_dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326;
};



inline void dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74, dark_weights_normed_gauss_blur_1_FIFO_buf500_cache& dark_weights_normed_gauss_blur_1_FIFO_buf500, int root, int dark_weights_normed_gauss_blur_1_to_gp_39216_ld502, int dark_weights_normed_gauss_blur_1_to_gp_39216_ld501, int dynamic_address) {
  dark_weights_normed_gauss_blur_1_FIFO_buf500.dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74_to_dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326.push(dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326_select(dark_weights_normed_gauss_blur_1_FIFO_buf500_cache& dark_weights_normed_gauss_blur_1_FIFO_buf500, int root, int dark_weights_normed_gauss_ds_1_0, int dark_weights_normed_gauss_ds_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326 read pattern: { dark_weights_normed_gauss_ds_1_update_0_sm722_01069[root = 0, dark_weights_normed_gauss_ds_1_0, dark_weights_normed_gauss_ds_1_1] -> dark_weights_normed_gauss_blur_1_FIFO_buf500[2dark_weights_normed_gauss_ds_1_1, 2dark_weights_normed_gauss_ds_1_0] : 0 <= dark_weights_normed_gauss_ds_1_0 <= 542 and 0 <= dark_weights_normed_gauss_ds_1_1 <= 542 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0_sm722_01069[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 93] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  // Write schedule: { load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 86] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
  auto value_dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74 = dark_weights_normed_gauss_blur_1_FIFO_buf500.dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74_to_dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_ds_1_update_0_sm722_01069_read
//	dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326
inline hw_uint<16> dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_read_bundle_read(dark_weights_normed_gauss_blur_1_FIFO_buf500_cache& dark_weights_normed_gauss_blur_1_FIFO_buf500, int root, int dark_weights_normed_gauss_ds_1_0, int dark_weights_normed_gauss_ds_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326_res = dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326_select(dark_weights_normed_gauss_blur_1_FIFO_buf500, root, dark_weights_normed_gauss_ds_1_0, dark_weights_normed_gauss_ds_1_1, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_326_res);
	return result;
}

// load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_write
//	dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74
inline void dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_write_bundle_write(hw_uint<16>& load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_write, dark_weights_normed_gauss_blur_1_FIFO_buf500_cache& dark_weights_normed_gauss_blur_1_FIFO_buf500, int root, int dark_weights_normed_gauss_blur_1_to_gp_39216_ld502, int dark_weights_normed_gauss_blur_1_to_gp_39216_ld501, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74_res = load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74_write(dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_74_res, dark_weights_normed_gauss_blur_1_FIFO_buf500, root, dark_weights_normed_gauss_blur_1_to_gp_39216_ld502, dark_weights_normed_gauss_blur_1_to_gp_39216_ld501, dynamic_address);
}

struct dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337_to_dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69_cache {
	// RAM Box: {[0, 540], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_2_cache {
  // Reader addrs...
    // { load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889[root = 0, dark_weights_normed_gauss_blur_2_ld222, dark_weights_normed_gauss_blur_2_ld221] -> dark_weights_normed_gauss_blur_2[dark_weights_normed_gauss_blur_2_ld221, dark_weights_normed_gauss_blur_2_ld222] : 0 <= dark_weights_normed_gauss_blur_2_ld222 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_ld221 <= 540 }
  // # of banks: 1
  dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337_to_dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69_cache dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337_to_dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69;
};



inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
  dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337_to_dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69.push(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69_select(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int root, int dark_weights_normed_gauss_blur_2_ld222, int dark_weights_normed_gauss_blur_2_ld221, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69 read pattern: { load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889[root = 0, dark_weights_normed_gauss_blur_2_ld222, dark_weights_normed_gauss_blur_2_ld221] -> dark_weights_normed_gauss_blur_2[dark_weights_normed_gauss_blur_2_ld221, dark_weights_normed_gauss_blur_2_ld222] : 0 <= dark_weights_normed_gauss_blur_2_ld222 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_ld221 <= 540 }
  // Read schedule : { load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 117] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  auto value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337 = dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337_to_dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_2_update_0_sm724_01073_write
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337
inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_write_bundle_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_update_0_sm724_01073_write, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337_res = dark_weights_normed_gauss_blur_2_update_0_sm724_01073_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_337_res, dark_weights_normed_gauss_blur_2, root, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1, dynamic_address);
}

// load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_read
//	dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69
inline hw_uint<16> dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_read_bundle_read(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int root, int dark_weights_normed_gauss_blur_2_ld222, int dark_weights_normed_gauss_blur_2_ld221, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69_res = dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69_select(dark_weights_normed_gauss_blur_2, root, dark_weights_normed_gauss_blur_2_ld222, dark_weights_normed_gauss_blur_2_ld221, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_69_res);
	return result;
}

struct dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70_to_dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324_cache {
	// RAM Box: {[0, 540], [0, 540]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_2_FIFO_buf504_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_ds_2_update_0_sm731_01087[root = 0, dark_weights_normed_gauss_ds_2_0, dark_weights_normed_gauss_ds_2_1] -> dark_weights_normed_gauss_blur_2_FIFO_buf504[2dark_weights_normed_gauss_ds_2_1, 2dark_weights_normed_gauss_ds_2_0] : 0 <= dark_weights_normed_gauss_ds_2_0 <= 270 and 0 <= dark_weights_normed_gauss_ds_2_1 <= 270 }
  // # of banks: 1
  dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70_to_dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324_cache dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70_to_dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324;
};



inline void dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70, dark_weights_normed_gauss_blur_2_FIFO_buf504_cache& dark_weights_normed_gauss_blur_2_FIFO_buf504, int root, int dark_weights_normed_gauss_blur_2_to_gp_40220_ld506, int dark_weights_normed_gauss_blur_2_to_gp_40220_ld505, int dynamic_address) {
  dark_weights_normed_gauss_blur_2_FIFO_buf504.dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70_to_dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324.push(dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324_select(dark_weights_normed_gauss_blur_2_FIFO_buf504_cache& dark_weights_normed_gauss_blur_2_FIFO_buf504, int root, int dark_weights_normed_gauss_ds_2_0, int dark_weights_normed_gauss_ds_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324 read pattern: { dark_weights_normed_gauss_ds_2_update_0_sm731_01087[root = 0, dark_weights_normed_gauss_ds_2_0, dark_weights_normed_gauss_ds_2_1] -> dark_weights_normed_gauss_blur_2_FIFO_buf504[2dark_weights_normed_gauss_ds_2_1, 2dark_weights_normed_gauss_ds_2_0] : 0 <= dark_weights_normed_gauss_ds_2_0 <= 270 and 0 <= dark_weights_normed_gauss_ds_2_1 <= 270 }
  // Read schedule : { dark_weights_normed_gauss_ds_2_update_0_sm731_01087[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 135] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  // Write schedule: { load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 129] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  auto value_dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70 = dark_weights_normed_gauss_blur_2_FIFO_buf504.dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70_to_dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_ds_2_update_0_sm731_01087_read
//	dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324
inline hw_uint<16> dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_read_bundle_read(dark_weights_normed_gauss_blur_2_FIFO_buf504_cache& dark_weights_normed_gauss_blur_2_FIFO_buf504, int root, int dark_weights_normed_gauss_ds_2_0, int dark_weights_normed_gauss_ds_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324_res = dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324_select(dark_weights_normed_gauss_blur_2_FIFO_buf504, root, dark_weights_normed_gauss_ds_2_0, dark_weights_normed_gauss_ds_2_1, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_324_res);
	return result;
}

// load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_write
//	dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70
inline void dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_write_bundle_write(hw_uint<16>& load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_write, dark_weights_normed_gauss_blur_2_FIFO_buf504_cache& dark_weights_normed_gauss_blur_2_FIFO_buf504, int root, int dark_weights_normed_gauss_blur_2_to_gp_40220_ld506, int dark_weights_normed_gauss_blur_2_to_gp_40220_ld505, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70_res = load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70_write(dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_70_res, dark_weights_normed_gauss_blur_2_FIFO_buf504, root, dark_weights_normed_gauss_blur_2_to_gp_40220_ld506, dark_weights_normed_gauss_blur_2_to_gp_40220_ld505, dynamic_address);
}

struct dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327_to_dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65_cache {
	// RAM Box: {[0, 268], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_3_cache {
  // Reader addrs...
    // { load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825[root = 0, dark_weights_normed_gauss_blur_3_ld226, dark_weights_normed_gauss_blur_3_ld225] -> dark_weights_normed_gauss_blur_3[dark_weights_normed_gauss_blur_3_ld225, dark_weights_normed_gauss_blur_3_ld226] : 0 <= dark_weights_normed_gauss_blur_3_ld226 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_ld225 <= 268 }
  // # of banks: 1
  dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327_to_dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65_cache dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327_to_dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65;
};



inline void dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327_write(hw_uint<16>& dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
  dark_weights_normed_gauss_blur_3.dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327_to_dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65.push(dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65_select(dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int root, int dark_weights_normed_gauss_blur_3_ld226, int dark_weights_normed_gauss_blur_3_ld225, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65 read pattern: { load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825[root = 0, dark_weights_normed_gauss_blur_3_ld226, dark_weights_normed_gauss_blur_3_ld225] -> dark_weights_normed_gauss_blur_3[dark_weights_normed_gauss_blur_3_ld225, dark_weights_normed_gauss_blur_3_ld226] : 0 <= dark_weights_normed_gauss_blur_3_ld226 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_ld225 <= 268 }
  // Read schedule : { load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 147] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  auto value_dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327 = dark_weights_normed_gauss_blur_3.dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327_to_dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_3_update_0_sm732_01089_write
//	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327
inline void dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_write_bundle_write(hw_uint<16>& dark_weights_normed_gauss_blur_3_update_0_sm732_01089_write, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327_res = dark_weights_normed_gauss_blur_3_update_0_sm732_01089_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327_write(dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_327_res, dark_weights_normed_gauss_blur_3, root, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1, dynamic_address);
}

// load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_read
//	dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65
inline hw_uint<16> dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_read_bundle_read(dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int root, int dark_weights_normed_gauss_blur_3_ld226, int dark_weights_normed_gauss_blur_3_ld225, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65_res = dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65_select(dark_weights_normed_gauss_blur_3, root, dark_weights_normed_gauss_blur_3_ld226, dark_weights_normed_gauss_blur_3_ld225, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_65_res);
	return result;
}

struct dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66_to_dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322_cache {
	// RAM Box: {[0, 268], [0, 268]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_3_FIFO_buf508_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_ds_3_update_0_sm737_01099[root = 0, dark_weights_normed_gauss_ds_3_0, dark_weights_normed_gauss_ds_3_1] -> dark_weights_normed_gauss_blur_3_FIFO_buf508[2dark_weights_normed_gauss_ds_3_1, 2dark_weights_normed_gauss_ds_3_0] : 0 <= dark_weights_normed_gauss_ds_3_0 <= 134 and 0 <= dark_weights_normed_gauss_ds_3_1 <= 134 }
  // # of banks: 1
  dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66_to_dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322_cache dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66_to_dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322;
};



inline void dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66_write(hw_uint<16>& dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66, dark_weights_normed_gauss_blur_3_FIFO_buf508_cache& dark_weights_normed_gauss_blur_3_FIFO_buf508, int root, int dark_weights_normed_gauss_blur_3_to_gp_41224_ld510, int dark_weights_normed_gauss_blur_3_to_gp_41224_ld509, int dynamic_address) {
  dark_weights_normed_gauss_blur_3_FIFO_buf508.dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66_to_dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322.push(dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322_select(dark_weights_normed_gauss_blur_3_FIFO_buf508_cache& dark_weights_normed_gauss_blur_3_FIFO_buf508, int root, int dark_weights_normed_gauss_ds_3_0, int dark_weights_normed_gauss_ds_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322 read pattern: { dark_weights_normed_gauss_ds_3_update_0_sm737_01099[root = 0, dark_weights_normed_gauss_ds_3_0, dark_weights_normed_gauss_ds_3_1] -> dark_weights_normed_gauss_blur_3_FIFO_buf508[2dark_weights_normed_gauss_ds_3_1, 2dark_weights_normed_gauss_ds_3_0] : 0 <= dark_weights_normed_gauss_ds_3_0 <= 134 and 0 <= dark_weights_normed_gauss_ds_3_1 <= 134 }
  // Read schedule : { dark_weights_normed_gauss_ds_3_update_0_sm737_01099[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 159] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 158] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  auto value_dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66 = dark_weights_normed_gauss_blur_3_FIFO_buf508.dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66_to_dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_ds_3_update_0_sm737_01099_read
//	dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322
inline hw_uint<16> dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_read_bundle_read(dark_weights_normed_gauss_blur_3_FIFO_buf508_cache& dark_weights_normed_gauss_blur_3_FIFO_buf508, int root, int dark_weights_normed_gauss_ds_3_0, int dark_weights_normed_gauss_ds_3_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322_res = dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322_select(dark_weights_normed_gauss_blur_3_FIFO_buf508, root, dark_weights_normed_gauss_ds_3_0, dark_weights_normed_gauss_ds_3_1, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_322_res);
	return result;
}

// load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_write
//	dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66
inline void dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_write_bundle_write(hw_uint<16>& load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_write, dark_weights_normed_gauss_blur_3_FIFO_buf508_cache& dark_weights_normed_gauss_blur_3_FIFO_buf508, int root, int dark_weights_normed_gauss_blur_3_to_gp_41224_ld510, int dark_weights_normed_gauss_blur_3_to_gp_41224_ld509, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66_res = load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66_write(dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_66_res, dark_weights_normed_gauss_blur_3_FIFO_buf508, root, dark_weights_normed_gauss_blur_3_to_gp_41224_ld510, dark_weights_normed_gauss_blur_3_to_gp_41224_ld509, dynamic_address);
}

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_to_dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59_cache {
	// RAM Box: {[0, 542], [0, 542]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_to_dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_1_cache {
  // Reader addrs...
    // { load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895[root = 0, dark_weights_normed_gauss_ds_1_ld230, dark_weights_normed_gauss_ds_1_ld229] -> dark_weights_normed_gauss_ds_1[dark_weights_normed_gauss_ds_1_ld229, dark_weights_normed_gauss_ds_1_ld230] : 0 <= dark_weights_normed_gauss_ds_1_ld230 <= 542 and 0 <= dark_weights_normed_gauss_ds_1_ld229 <= 542 }
    // { load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887[root = 0, dark_weights_normed_gauss_ds_1_ld234, dark_weights_normed_gauss_ds_1_ld233] -> dark_weights_normed_gauss_ds_1[3 + dark_weights_normed_gauss_ds_1_ld233, 3 + dark_weights_normed_gauss_ds_1_ld234] : 0 <= dark_weights_normed_gauss_ds_1_ld234 <= 539 and 0 <= dark_weights_normed_gauss_ds_1_ld233 <= 539 }
  // # of banks: 2
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_to_dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_to_dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_to_dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_to_dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57;
};



inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int root, int dark_weights_normed_gauss_ds_1_0, int dark_weights_normed_gauss_ds_1_1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_to_dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325);
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_to_dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325);
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int root, int dark_weights_normed_gauss_ds_1_ld230, int dark_weights_normed_gauss_ds_1_ld229, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59 read pattern: { load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895[root = 0, dark_weights_normed_gauss_ds_1_ld230, dark_weights_normed_gauss_ds_1_ld229] -> dark_weights_normed_gauss_ds_1[dark_weights_normed_gauss_ds_1_ld229, dark_weights_normed_gauss_ds_1_ld230] : 0 <= dark_weights_normed_gauss_ds_1_ld230 <= 542 and 0 <= dark_weights_normed_gauss_ds_1_ld229 <= 542 }
  // Read schedule : { load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 95] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0_sm722_01069[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 93] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_to_dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int root, int dark_weights_normed_gauss_ds_1_ld234, int dark_weights_normed_gauss_ds_1_ld233, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57 read pattern: { load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887[root = 0, dark_weights_normed_gauss_ds_1_ld234, dark_weights_normed_gauss_ds_1_ld233] -> dark_weights_normed_gauss_ds_1[3 + dark_weights_normed_gauss_ds_1_ld233, 3 + dark_weights_normed_gauss_ds_1_ld234] : 0 <= dark_weights_normed_gauss_ds_1_ld234 <= 539 and 0 <= dark_weights_normed_gauss_ds_1_ld233 <= 539 }
  // Read schedule : { load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 94] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0_sm722_01069[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 93] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_to_dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325;
  return 0;
}

// # of bundles = 3
// dark_weights_normed_gauss_ds_1_update_0_sm722_01069_write
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325
inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_write_bundle_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_update_0_sm722_01069_write, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int root, int dark_weights_normed_gauss_ds_1_0, int dark_weights_normed_gauss_ds_1_1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_res = dark_weights_normed_gauss_ds_1_update_0_sm722_01069_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_325_res, dark_weights_normed_gauss_ds_1, root, dark_weights_normed_gauss_ds_1_0, dark_weights_normed_gauss_ds_1_1, dynamic_address);
}

// load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_read
//	dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59
inline hw_uint<16> dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_read_bundle_read(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int root, int dark_weights_normed_gauss_ds_1_ld230, int dark_weights_normed_gauss_ds_1_ld229, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59_res = dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59_select(dark_weights_normed_gauss_ds_1, root, dark_weights_normed_gauss_ds_1_ld230, dark_weights_normed_gauss_ds_1_ld229, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_59_res);
	return result;
}

// load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_read
//	dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57
inline hw_uint<16> dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_read_bundle_read(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int root, int dark_weights_normed_gauss_ds_1_ld234, int dark_weights_normed_gauss_ds_1_ld233, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57_res = dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57_select(dark_weights_normed_gauss_ds_1, root, dark_weights_normed_gauss_ds_1_ld234, dark_weights_normed_gauss_ds_1_ld233, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_57_res);
	return result;
}

struct dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9_cache {
	// RAM Box: {[0, 542], [0, 542]}
	// Capacity: 1089
	// # of read delays: 9
  // 0, 1, 2, 543, 544, 545, 1086, 1087, 1088
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 540> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 540> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_542() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_543() {
		return f6;
	}

	inline hw_uint<16> peek_544() {
		return f8;
	}

	inline hw_uint<16> peek_545() {
		return f10;
	}

	inline hw_uint<16> peek_1085() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_1086() {
		return f12;
	}

	inline hw_uint<16> peek_1087() {
		return f14;
	}

	inline hw_uint<16> peek_1088() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 540
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 540 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 540
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 540 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_FIFO_buf512_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[dark_weights_normed_gauss_blur_2_1, dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
    // { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[1 + dark_weights_normed_gauss_blur_2_1, dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
    // { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[2 + dark_weights_normed_gauss_blur_2_1, dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
    // { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[dark_weights_normed_gauss_blur_2_1, 1 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
    // { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[1 + dark_weights_normed_gauss_blur_2_1, 1 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
    // { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[2 + dark_weights_normed_gauss_blur_2_1, 1 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
    // { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[dark_weights_normed_gauss_blur_2_1, 2 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
    // { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[1 + dark_weights_normed_gauss_blur_2_1, 2 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
    // { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[2 + dark_weights_normed_gauss_blur_2_1, 2 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
  // # of banks: 1
  dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9_cache dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9;
};



inline void dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62, dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_ds_1_to_gp_37228_ld514, int dark_weights_normed_gauss_ds_1_to_gp_37228_ld513, int dynamic_address) {
  dark_weights_normed_gauss_ds_1_FIFO_buf512.dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9.push(dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62);
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_338_select(dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_338 read pattern: { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[dark_weights_normed_gauss_blur_2_1, dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 99] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62 = dark_weights_normed_gauss_ds_1_FIFO_buf512.dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9.peek_1088();
  return value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_339_select(dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_339 read pattern: { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[1 + dark_weights_normed_gauss_blur_2_1, dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 99] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62 = dark_weights_normed_gauss_ds_1_FIFO_buf512.dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9.peek_1087();
  return value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_340_select(dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_340 read pattern: { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[2 + dark_weights_normed_gauss_blur_2_1, dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 99] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62 = dark_weights_normed_gauss_ds_1_FIFO_buf512.dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9.peek_1086();
  return value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_341_select(dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_341 read pattern: { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[dark_weights_normed_gauss_blur_2_1, 1 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 99] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62 = dark_weights_normed_gauss_ds_1_FIFO_buf512.dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9.peek_545();
  return value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_342_select(dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_342 read pattern: { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[1 + dark_weights_normed_gauss_blur_2_1, 1 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 99] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62 = dark_weights_normed_gauss_ds_1_FIFO_buf512.dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9.peek_544();
  return value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_343_select(dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_343 read pattern: { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[2 + dark_weights_normed_gauss_blur_2_1, 1 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 99] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62 = dark_weights_normed_gauss_ds_1_FIFO_buf512.dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9.peek_543();
  return value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_344_select(dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_344 read pattern: { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[dark_weights_normed_gauss_blur_2_1, 2 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 99] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62 = dark_weights_normed_gauss_ds_1_FIFO_buf512.dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9.peek_2();
  return value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_345_select(dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_345 read pattern: { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[1 + dark_weights_normed_gauss_blur_2_1, 2 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 99] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62 = dark_weights_normed_gauss_ds_1_FIFO_buf512.dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_346_select(dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_346 read pattern: { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[root = 0, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf512[2 + dark_weights_normed_gauss_blur_2_1, 2 + dark_weights_normed_gauss_blur_2_0] : 0 <= dark_weights_normed_gauss_blur_2_0 <= 540 and 0 <= dark_weights_normed_gauss_blur_2_1 <= 540 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 99] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
  auto value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62 = dark_weights_normed_gauss_ds_1_FIFO_buf512.dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_merged_banks_9.peek_0();
  return value_dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_2_update_0_sm724_01073_read
//	dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_338
//	dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_339
//	dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_340
//	dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_341
//	dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_342
//	dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_343
//	dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_344
//	dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_345
//	dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_346
inline hw_uint<144> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_read_bundle_read(dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_blur_2_0, int dark_weights_normed_gauss_blur_2_1, int dynamic_address) {
  // # of ports in bundle: 9
    // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_338
    // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_339
    // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_340
    // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_341
    // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_342
    // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_343
    // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_344
    // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_345
    // dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_346

	hw_uint<144> result;
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_338_res = dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_338_select(dark_weights_normed_gauss_ds_1_FIFO_buf512, root, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<0, 144>(result, dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_338_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_339_res = dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_339_select(dark_weights_normed_gauss_ds_1_FIFO_buf512, root, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<16, 144>(result, dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_339_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_340_res = dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_340_select(dark_weights_normed_gauss_ds_1_FIFO_buf512, root, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<32, 144>(result, dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_340_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_341_res = dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_341_select(dark_weights_normed_gauss_ds_1_FIFO_buf512, root, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<48, 144>(result, dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_341_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_342_res = dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_342_select(dark_weights_normed_gauss_ds_1_FIFO_buf512, root, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<64, 144>(result, dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_342_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_343_res = dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_343_select(dark_weights_normed_gauss_ds_1_FIFO_buf512, root, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<80, 144>(result, dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_343_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_344_res = dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_344_select(dark_weights_normed_gauss_ds_1_FIFO_buf512, root, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<96, 144>(result, dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_344_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_345_res = dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_345_select(dark_weights_normed_gauss_ds_1_FIFO_buf512, root, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<112, 144>(result, dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_345_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_346_res = dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_346_select(dark_weights_normed_gauss_ds_1_FIFO_buf512, root, dark_weights_normed_gauss_blur_2_0, dark_weights_normed_gauss_blur_2_1, dynamic_address);
	set_at<128, 144>(result, dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_346_res);
	return result;
}

// load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_write
//	dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62
inline void dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_write_bundle_write(hw_uint<16>& load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_write, dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int root, int dark_weights_normed_gauss_ds_1_to_gp_37228_ld514, int dark_weights_normed_gauss_ds_1_to_gp_37228_ld513, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_res = load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_write(dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_62_res, dark_weights_normed_gauss_ds_1_FIFO_buf512, root, dark_weights_normed_gauss_ds_1_to_gp_37228_ld514, dark_weights_normed_gauss_ds_1_to_gp_37228_ld513, dynamic_address);
}

struct dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60_to_dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302_cache {
	// RAM Box: {[3, 542], [3, 542]}
	// Capacity: 542
	// # of read delays: 542
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541
	fifo<hw_uint<16>, 542> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(541 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_1_FIFO_buf516_cache {
  // Reader addrs...
    // { fused_level_1_update_0_sm752_01123[root = 0, fused_level_1_0, fused_level_1_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf516[3 + fused_level_1_1, 3 + fused_level_1_0] : 0 <= fused_level_1_0 <= 539 and 0 <= fused_level_1_1 <= 539 }
  // # of banks: 1
  dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60_to_dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302_cache dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60_to_dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302;
};



inline void dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60, dark_weights_normed_gauss_ds_1_FIFO_buf516_cache& dark_weights_normed_gauss_ds_1_FIFO_buf516, int root, int dark_weights_normed_gauss_ds_1_to_gp_46232_ld518, int dark_weights_normed_gauss_ds_1_to_gp_46232_ld517, int dynamic_address) {
  dark_weights_normed_gauss_ds_1_FIFO_buf516.dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60_to_dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302.push(dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60);
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302_select(dark_weights_normed_gauss_ds_1_FIFO_buf516_cache& dark_weights_normed_gauss_ds_1_FIFO_buf516, int root, int fused_level_1_0, int fused_level_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302 read pattern: { fused_level_1_update_0_sm752_01123[root = 0, fused_level_1_0, fused_level_1_1] -> dark_weights_normed_gauss_ds_1_FIFO_buf516[3 + fused_level_1_1, 3 + fused_level_1_0] : 0 <= fused_level_1_0 <= 539 and 0 <= fused_level_1_1 <= 539 }
  // Read schedule : { fused_level_1_update_0_sm752_01123[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 164] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 98] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60 = dark_weights_normed_gauss_ds_1_FIFO_buf516.dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60_to_dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302.peek(/* one reader or all rams */ (538 - fused_level_1_1 >= 0 && 538 - fused_level_1_0 >= 0) ? (541) : (-539 + fused_level_1_1 == 0 && 538 - fused_level_1_0 >= 0) ? (540) : (-539 + fused_level_1_0 == 0 && 538 - fused_level_1_1 >= 0) ? ((539 - fused_level_1_1)) : 0);
  return value_dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60;
  return 0;
}

// # of bundles = 2
// fused_level_1_update_0_sm752_01123_read
//	dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302
inline hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_read_bundle_read(dark_weights_normed_gauss_ds_1_FIFO_buf516_cache& dark_weights_normed_gauss_ds_1_FIFO_buf516, int root, int fused_level_1_0, int fused_level_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302_res = dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302_select(dark_weights_normed_gauss_ds_1_FIFO_buf516, root, fused_level_1_0, fused_level_1_1, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_302_res);
	return result;
}

// load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_write
//	dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60
inline void dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_write_bundle_write(hw_uint<16>& load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_write, dark_weights_normed_gauss_ds_1_FIFO_buf516_cache& dark_weights_normed_gauss_ds_1_FIFO_buf516, int root, int dark_weights_normed_gauss_ds_1_to_gp_46232_ld518, int dark_weights_normed_gauss_ds_1_to_gp_46232_ld517, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60_res = load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60_write(dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_60_res, dark_weights_normed_gauss_ds_1_FIFO_buf516, root, dark_weights_normed_gauss_ds_1_to_gp_46232_ld518, dark_weights_normed_gauss_ds_1_to_gp_46232_ld517, dynamic_address);
}

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_to_dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51_cache {
	// RAM Box: {[0, 270], [0, 270]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_to_dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 2
	// # of read delays: 2
  // 0, 1
	fifo<hw_uint<16>, 2> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(1 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_2_cache {
  // Reader addrs...
    // { load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767[root = 0, dark_weights_normed_gauss_ds_2_ld238, dark_weights_normed_gauss_ds_2_ld237] -> dark_weights_normed_gauss_ds_2[dark_weights_normed_gauss_ds_2_ld237, dark_weights_normed_gauss_ds_2_ld238] : 0 <= dark_weights_normed_gauss_ds_2_ld238 <= 270 and 0 <= dark_weights_normed_gauss_ds_2_ld237 <= 270 }
    // { load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859[root = 0, dark_weights_normed_gauss_ds_2_ld242, dark_weights_normed_gauss_ds_2_ld241] -> dark_weights_normed_gauss_ds_2[1 + dark_weights_normed_gauss_ds_2_ld241, 1 + dark_weights_normed_gauss_ds_2_ld242] : 0 <= dark_weights_normed_gauss_ds_2_ld242 <= 269 and 0 <= dark_weights_normed_gauss_ds_2_ld241 <= 269 }
  // # of banks: 2
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_to_dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_to_dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51;
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_to_dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_to_dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49;
};



inline void dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_write(hw_uint<16>& dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int root, int dark_weights_normed_gauss_ds_2_0, int dark_weights_normed_gauss_ds_2_1, int dynamic_address) {
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_to_dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323);
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_to_dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323);
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int root, int dark_weights_normed_gauss_ds_2_ld238, int dark_weights_normed_gauss_ds_2_ld237, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51 read pattern: { load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767[root = 0, dark_weights_normed_gauss_ds_2_ld238, dark_weights_normed_gauss_ds_2_ld237] -> dark_weights_normed_gauss_ds_2[dark_weights_normed_gauss_ds_2_ld237, dark_weights_normed_gauss_ds_2_ld238] : 0 <= dark_weights_normed_gauss_ds_2_ld238 <= 270 and 0 <= dark_weights_normed_gauss_ds_2_ld237 <= 270 }
  // Read schedule : { load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 136] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0_sm731_01087[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 135] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_to_dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int root, int dark_weights_normed_gauss_ds_2_ld242, int dark_weights_normed_gauss_ds_2_ld241, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49 read pattern: { load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859[root = 0, dark_weights_normed_gauss_ds_2_ld242, dark_weights_normed_gauss_ds_2_ld241] -> dark_weights_normed_gauss_ds_2[1 + dark_weights_normed_gauss_ds_2_ld241, 1 + dark_weights_normed_gauss_ds_2_ld242] : 0 <= dark_weights_normed_gauss_ds_2_ld242 <= 269 and 0 <= dark_weights_normed_gauss_ds_2_ld241 <= 269 }
  // Read schedule : { load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 142] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0_sm731_01087[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 135] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_to_dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49.peek(/* one reader or all rams */ (268 - dark_weights_normed_gauss_ds_2_ld241 >= 0) ? (1) : 0);
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323;
  return 0;
}

// # of bundles = 3
// dark_weights_normed_gauss_ds_2_update_0_sm731_01087_write
//	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323
inline void dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_write_bundle_write(hw_uint<16>& dark_weights_normed_gauss_ds_2_update_0_sm731_01087_write, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int root, int dark_weights_normed_gauss_ds_2_0, int dark_weights_normed_gauss_ds_2_1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_res = dark_weights_normed_gauss_ds_2_update_0_sm731_01087_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_write(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_323_res, dark_weights_normed_gauss_ds_2, root, dark_weights_normed_gauss_ds_2_0, dark_weights_normed_gauss_ds_2_1, dynamic_address);
}

// load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_read
//	dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51
inline hw_uint<16> dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_read_bundle_read(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int root, int dark_weights_normed_gauss_ds_2_ld238, int dark_weights_normed_gauss_ds_2_ld237, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51_res = dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51_select(dark_weights_normed_gauss_ds_2, root, dark_weights_normed_gauss_ds_2_ld238, dark_weights_normed_gauss_ds_2_ld237, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_51_res);
	return result;
}

// load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_read
//	dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49
inline hw_uint<16> dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_read_bundle_read(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int root, int dark_weights_normed_gauss_ds_2_ld242, int dark_weights_normed_gauss_ds_2_ld241, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49_res = dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49_select(dark_weights_normed_gauss_ds_2, root, dark_weights_normed_gauss_ds_2_ld242, dark_weights_normed_gauss_ds_2_ld241, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_49_res);
	return result;
}

struct dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9_cache {
	// RAM Box: {[0, 270], [0, 270]}
	// Capacity: 545
	// # of read delays: 9
  // 0, 1, 2, 271, 272, 273, 542, 543, 544
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 268> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	hw_uint<16> f10;
	fifo<hw_uint<16>, 268> f11;
	hw_uint<16> f12;
	hw_uint<16> f14;
	hw_uint<16> f16;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_270() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_271() {
		return f6;
	}

	inline hw_uint<16> peek_272() {
		return f8;
	}

	inline hw_uint<16> peek_273() {
		return f10;
	}

	inline hw_uint<16> peek_541() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f11.back();
	}

	inline hw_uint<16> peek_542() {
		return f12;
	}

	inline hw_uint<16> peek_543() {
		return f14;
	}

	inline hw_uint<16> peek_544() {
		return f16;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f16 = f14;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f14 = f12;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 268
    f12 = f11.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 268 reading from capacity: 1
    f11.push(f10);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 268
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 268 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_2_FIFO_buf520_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[dark_weights_normed_gauss_blur_3_1, dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
    // { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[1 + dark_weights_normed_gauss_blur_3_1, dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
    // { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[2 + dark_weights_normed_gauss_blur_3_1, dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
    // { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[dark_weights_normed_gauss_blur_3_1, 1 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
    // { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[1 + dark_weights_normed_gauss_blur_3_1, 1 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
    // { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[2 + dark_weights_normed_gauss_blur_3_1, 1 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
    // { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[dark_weights_normed_gauss_blur_3_1, 2 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
    // { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[1 + dark_weights_normed_gauss_blur_3_1, 2 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
    // { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[2 + dark_weights_normed_gauss_blur_3_1, 2 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
  // # of banks: 1
  dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9_cache dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9;
};



inline void dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_write(hw_uint<16>& dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54, dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_ds_2_to_gp_38236_ld522, int dark_weights_normed_gauss_ds_2_to_gp_38236_ld521, int dynamic_address) {
  dark_weights_normed_gauss_ds_2_FIFO_buf520.dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9.push(dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54);
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_328_select(dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_328 read pattern: { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[dark_weights_normed_gauss_blur_3_1, dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 141] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54 = dark_weights_normed_gauss_ds_2_FIFO_buf520.dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9.peek_544();
  return value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_329_select(dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_329 read pattern: { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[1 + dark_weights_normed_gauss_blur_3_1, dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 141] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54 = dark_weights_normed_gauss_ds_2_FIFO_buf520.dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9.peek_543();
  return value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_330_select(dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_330 read pattern: { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[2 + dark_weights_normed_gauss_blur_3_1, dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 141] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54 = dark_weights_normed_gauss_ds_2_FIFO_buf520.dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9.peek_542();
  return value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_331_select(dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_331 read pattern: { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[dark_weights_normed_gauss_blur_3_1, 1 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 141] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54 = dark_weights_normed_gauss_ds_2_FIFO_buf520.dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9.peek_273();
  return value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_332_select(dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_332 read pattern: { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[1 + dark_weights_normed_gauss_blur_3_1, 1 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 141] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54 = dark_weights_normed_gauss_ds_2_FIFO_buf520.dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9.peek_272();
  return value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_333_select(dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_333 read pattern: { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[2 + dark_weights_normed_gauss_blur_3_1, 1 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 141] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54 = dark_weights_normed_gauss_ds_2_FIFO_buf520.dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9.peek_271();
  return value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_334_select(dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_334 read pattern: { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[dark_weights_normed_gauss_blur_3_1, 2 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 141] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54 = dark_weights_normed_gauss_ds_2_FIFO_buf520.dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9.peek_2();
  return value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_335_select(dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_335 read pattern: { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[1 + dark_weights_normed_gauss_blur_3_1, 2 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 141] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54 = dark_weights_normed_gauss_ds_2_FIFO_buf520.dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_336_select(dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_336 read pattern: { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[root = 0, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf520[2 + dark_weights_normed_gauss_blur_3_1, 2 + dark_weights_normed_gauss_blur_3_0] : 0 <= dark_weights_normed_gauss_blur_3_0 <= 268 and 0 <= dark_weights_normed_gauss_blur_3_1 <= 268 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 141] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
  auto value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54 = dark_weights_normed_gauss_ds_2_FIFO_buf520.dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_merged_banks_9.peek_0();
  return value_dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_3_update_0_sm732_01089_read
//	dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_328
//	dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_329
//	dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_330
//	dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_331
//	dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_332
//	dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_333
//	dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_334
//	dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_335
//	dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_336
inline hw_uint<144> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_read_bundle_read(dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_blur_3_0, int dark_weights_normed_gauss_blur_3_1, int dynamic_address) {
  // # of ports in bundle: 9
    // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_328
    // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_329
    // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_330
    // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_331
    // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_332
    // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_333
    // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_334
    // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_335
    // dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_336

	hw_uint<144> result;
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_328_res = dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_328_select(dark_weights_normed_gauss_ds_2_FIFO_buf520, root, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<0, 144>(result, dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_328_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_329_res = dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_329_select(dark_weights_normed_gauss_ds_2_FIFO_buf520, root, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<16, 144>(result, dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_329_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_330_res = dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_330_select(dark_weights_normed_gauss_ds_2_FIFO_buf520, root, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<32, 144>(result, dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_330_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_331_res = dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_331_select(dark_weights_normed_gauss_ds_2_FIFO_buf520, root, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<48, 144>(result, dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_331_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_332_res = dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_332_select(dark_weights_normed_gauss_ds_2_FIFO_buf520, root, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<64, 144>(result, dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_332_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_333_res = dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_333_select(dark_weights_normed_gauss_ds_2_FIFO_buf520, root, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<80, 144>(result, dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_333_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_334_res = dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_334_select(dark_weights_normed_gauss_ds_2_FIFO_buf520, root, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<96, 144>(result, dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_334_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_335_res = dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_335_select(dark_weights_normed_gauss_ds_2_FIFO_buf520, root, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<112, 144>(result, dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_335_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_336_res = dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_336_select(dark_weights_normed_gauss_ds_2_FIFO_buf520, root, dark_weights_normed_gauss_blur_3_0, dark_weights_normed_gauss_blur_3_1, dynamic_address);
	set_at<128, 144>(result, dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_336_res);
	return result;
}

// load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_write
//	dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54
inline void dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_write_bundle_write(hw_uint<16>& load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_write, dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int root, int dark_weights_normed_gauss_ds_2_to_gp_38236_ld522, int dark_weights_normed_gauss_ds_2_to_gp_38236_ld521, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_res = load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_write(dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_54_res, dark_weights_normed_gauss_ds_2_FIFO_buf520, root, dark_weights_normed_gauss_ds_2_to_gp_38236_ld522, dark_weights_normed_gauss_ds_2_to_gp_38236_ld521, dynamic_address);
}

struct dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52_to_dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297_cache {
	// RAM Box: {[1, 270], [1, 270]}
	// Capacity: 271
	// # of read delays: 271
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
	fifo<hw_uint<16>, 271> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(270 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_2_FIFO_buf524_cache {
  // Reader addrs...
    // { fused_level_2_update_0_sm751_01121[root = 0, fused_level_2_0, fused_level_2_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf524[1 + fused_level_2_1, 1 + fused_level_2_0] : 0 <= fused_level_2_0 <= 269 and 0 <= fused_level_2_1 <= 269 }
  // # of banks: 1
  dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52_to_dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297_cache dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52_to_dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297;
};



inline void dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52_write(hw_uint<16>& dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52, dark_weights_normed_gauss_ds_2_FIFO_buf524_cache& dark_weights_normed_gauss_ds_2_FIFO_buf524, int root, int dark_weights_normed_gauss_ds_2_to_gp_47240_ld526, int dark_weights_normed_gauss_ds_2_to_gp_47240_ld525, int dynamic_address) {
  dark_weights_normed_gauss_ds_2_FIFO_buf524.dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52_to_dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297.push(dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52);
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297_select(dark_weights_normed_gauss_ds_2_FIFO_buf524_cache& dark_weights_normed_gauss_ds_2_FIFO_buf524, int root, int fused_level_2_0, int fused_level_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297 read pattern: { fused_level_2_update_0_sm751_01121[root = 0, fused_level_2_0, fused_level_2_1] -> dark_weights_normed_gauss_ds_2_FIFO_buf524[1 + fused_level_2_1, 1 + fused_level_2_0] : 0 <= fused_level_2_0 <= 269 and 0 <= fused_level_2_1 <= 269 }
  // Read schedule : { fused_level_2_update_0_sm751_01121[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 180] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 155] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52 = dark_weights_normed_gauss_ds_2_FIFO_buf524.dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52_to_dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297.peek(/* one reader or all rams */ (268 - fused_level_2_1 >= 0 && 268 - fused_level_2_0 >= 0) ? (270) : (-269 + fused_level_2_1 == 0 && 268 - fused_level_2_0 >= 0) ? (270) : (-269 + fused_level_2_0 == 0 && 268 - fused_level_2_1 >= 0) ? ((269 - fused_level_2_1)) : 0);
  return value_dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52;
  return 0;
}

// # of bundles = 2
// fused_level_2_update_0_sm751_01121_read
//	dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297
inline hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_read_bundle_read(dark_weights_normed_gauss_ds_2_FIFO_buf524_cache& dark_weights_normed_gauss_ds_2_FIFO_buf524, int root, int fused_level_2_0, int fused_level_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297_res = dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297_select(dark_weights_normed_gauss_ds_2_FIFO_buf524, root, fused_level_2_0, fused_level_2_1, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_297_res);
	return result;
}

// load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_write
//	dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52
inline void dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_write_bundle_write(hw_uint<16>& load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_write, dark_weights_normed_gauss_ds_2_FIFO_buf524_cache& dark_weights_normed_gauss_ds_2_FIFO_buf524, int root, int dark_weights_normed_gauss_ds_2_to_gp_47240_ld526, int dark_weights_normed_gauss_ds_2_to_gp_47240_ld525, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52_res = load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52_write(dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_52_res, dark_weights_normed_gauss_ds_2_FIFO_buf524, root, dark_weights_normed_gauss_ds_2_to_gp_47240_ld526, dark_weights_normed_gauss_ds_2_to_gp_47240_ld525, dynamic_address);
}

struct dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321_to_dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_3_cache {
  // Reader addrs...
    // { load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897[root = 0, dark_weights_normed_gauss_ds_3_ld246, dark_weights_normed_gauss_ds_3_ld245] -> dark_weights_normed_gauss_ds_3[dark_weights_normed_gauss_ds_3_ld245, dark_weights_normed_gauss_ds_3_ld246] : 0 <= dark_weights_normed_gauss_ds_3_ld246 <= 134 and 0 <= dark_weights_normed_gauss_ds_3_ld245 <= 134 }
  // # of banks: 1
  dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321_to_dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45_cache dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321_to_dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45;
};



inline void dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321_write(hw_uint<16>& dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int root, int dark_weights_normed_gauss_ds_3_0, int dark_weights_normed_gauss_ds_3_1, int dynamic_address) {
  dark_weights_normed_gauss_ds_3.dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321_to_dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45.push(dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321);
}

inline hw_uint<16> dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45_select(dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int root, int dark_weights_normed_gauss_ds_3_ld246, int dark_weights_normed_gauss_ds_3_ld245, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45 read pattern: { load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897[root = 0, dark_weights_normed_gauss_ds_3_ld246, dark_weights_normed_gauss_ds_3_ld245] -> dark_weights_normed_gauss_ds_3[dark_weights_normed_gauss_ds_3_ld245, dark_weights_normed_gauss_ds_3_ld246] : 0 <= dark_weights_normed_gauss_ds_3_ld246 <= 134 and 0 <= dark_weights_normed_gauss_ds_3_ld245 <= 134 }
  // Read schedule : { load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 162] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { dark_weights_normed_gauss_ds_3_update_0_sm737_01099[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 159] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321 = dark_weights_normed_gauss_ds_3.dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321_to_dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_ds_3_update_0_sm737_01099_write
//	dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321
inline void dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_write_bundle_write(hw_uint<16>& dark_weights_normed_gauss_ds_3_update_0_sm737_01099_write, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int root, int dark_weights_normed_gauss_ds_3_0, int dark_weights_normed_gauss_ds_3_1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321_res = dark_weights_normed_gauss_ds_3_update_0_sm737_01099_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321_write(dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_321_res, dark_weights_normed_gauss_ds_3, root, dark_weights_normed_gauss_ds_3_0, dark_weights_normed_gauss_ds_3_1, dynamic_address);
}

// load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_read
//	dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45
inline hw_uint<16> dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_read_bundle_read(dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int root, int dark_weights_normed_gauss_ds_3_ld246, int dark_weights_normed_gauss_ds_3_ld245, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45_res = dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45_select(dark_weights_normed_gauss_ds_3, root, dark_weights_normed_gauss_ds_3_ld246, dark_weights_normed_gauss_ds_3_ld245, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_45_res);
	return result;
}

struct dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46_to_dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_3_FIFO_buf528_cache {
  // Reader addrs...
    // { fused_level_3_update_0_sm750_01119[root = 0, fused_level_3_0, fused_level_3_1] -> dark_weights_normed_gauss_ds_3_FIFO_buf528[fused_level_3_1, fused_level_3_0] : 0 <= fused_level_3_0 <= 134 and 0 <= fused_level_3_1 <= 134 }
  // # of banks: 1
  dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46_to_dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292_cache dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46_to_dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292;
};



inline void dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46_write(hw_uint<16>& dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46, dark_weights_normed_gauss_ds_3_FIFO_buf528_cache& dark_weights_normed_gauss_ds_3_FIFO_buf528, int root, int dark_weights_normed_gauss_ds_3_to_gp_48244_ld530, int dark_weights_normed_gauss_ds_3_to_gp_48244_ld529, int dynamic_address) {
  dark_weights_normed_gauss_ds_3_FIFO_buf528.dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46_to_dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292.push(dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46);
}

inline hw_uint<16> dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292_select(dark_weights_normed_gauss_ds_3_FIFO_buf528_cache& dark_weights_normed_gauss_ds_3_FIFO_buf528, int root, int fused_level_3_0, int fused_level_3_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292 read pattern: { fused_level_3_update_0_sm750_01119[root = 0, fused_level_3_0, fused_level_3_1] -> dark_weights_normed_gauss_ds_3_FIFO_buf528[fused_level_3_1, fused_level_3_0] : 0 <= fused_level_3_0 <= 134 and 0 <= fused_level_3_1 <= 134 }
  // Read schedule : { fused_level_3_update_0_sm750_01119[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 175] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 169] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46 = dark_weights_normed_gauss_ds_3_FIFO_buf528.dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46_to_dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46;
  return 0;
}

// # of bundles = 2
// fused_level_3_update_0_sm750_01119_read
//	dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292
inline hw_uint<16> dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_read_bundle_read(dark_weights_normed_gauss_ds_3_FIFO_buf528_cache& dark_weights_normed_gauss_ds_3_FIFO_buf528, int root, int fused_level_3_0, int fused_level_3_1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292_res = dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292_select(dark_weights_normed_gauss_ds_3_FIFO_buf528, root, fused_level_3_0, fused_level_3_1, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_292_res);
	return result;
}

// load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_write
//	dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46
inline void dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_write_bundle_write(hw_uint<16>& load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_write, dark_weights_normed_gauss_ds_3_FIFO_buf528_cache& dark_weights_normed_gauss_ds_3_FIFO_buf528, int root, int dark_weights_normed_gauss_ds_3_to_gp_48244_ld530, int dark_weights_normed_gauss_ds_3_to_gp_48244_ld529, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46_res = load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46_write(dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_46_res, dark_weights_normed_gauss_ds_3_FIFO_buf528, root, dark_weights_normed_gauss_ds_3_to_gp_48244_ld530, dark_weights_normed_gauss_ds_3_to_gp_48244_ld529, dynamic_address);
}

struct final_merged_0_final_merged_0_update_0_sm756_01141_314_to_final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_cache {
  // Reader addrs...
    // { load_to_final_merged_0_to_gp_50248251_sm604_0833[root = 0, final_merged_0_ld250, final_merged_0_ld249] -> final_merged_0[final_merged_0_ld249, final_merged_0_ld250] : 0 <= final_merged_0_ld250 <= 1079 and 0 <= final_merged_0_ld249 <= 1079 }
  // # of banks: 1
  final_merged_0_final_merged_0_update_0_sm756_01141_314_to_final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35_cache final_merged_0_final_merged_0_update_0_sm756_01141_314_to_final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35;
};



inline void final_merged_0_final_merged_0_update_0_sm756_01141_314_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_sm756_01141_314, final_merged_0_cache& final_merged_0, int root, int final_merged_0_0, int final_merged_0_1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_sm756_01141_314_to_final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35.push(final_merged_0_final_merged_0_update_0_sm756_01141_314);
}

inline hw_uint<16> final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35_select(final_merged_0_cache& final_merged_0, int root, int final_merged_0_ld250, int final_merged_0_ld249, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35 read pattern: { load_to_final_merged_0_to_gp_50248251_sm604_0833[root = 0, final_merged_0_ld250, final_merged_0_ld249] -> final_merged_0[final_merged_0_ld249, final_merged_0_ld250] : 0 <= final_merged_0_ld250 <= 1079 and 0 <= final_merged_0_ld249 <= 1079 }
  // Read schedule : { load_to_final_merged_0_to_gp_50248251_sm604_0833[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 190] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { final_merged_0_update_0_sm756_01141[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 189] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_final_merged_0_final_merged_0_update_0_sm756_01141_314 = final_merged_0.final_merged_0_final_merged_0_update_0_sm756_01141_314_to_final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_sm756_01141_314;
  return 0;
}

// # of bundles = 2
// final_merged_0_update_0_sm756_01141_write
//	final_merged_0_final_merged_0_update_0_sm756_01141_314
inline void final_merged_0_final_merged_0_update_0_sm756_01141_write_bundle_write(hw_uint<16>& final_merged_0_update_0_sm756_01141_write, final_merged_0_cache& final_merged_0, int root, int final_merged_0_0, int final_merged_0_1, int dynamic_address) {
	hw_uint<16> final_merged_0_final_merged_0_update_0_sm756_01141_314_res = final_merged_0_update_0_sm756_01141_write.extract<0, 15>();
	final_merged_0_final_merged_0_update_0_sm756_01141_314_write(final_merged_0_final_merged_0_update_0_sm756_01141_314_res, final_merged_0, root, final_merged_0_0, final_merged_0_1, dynamic_address);
}

// load_to_final_merged_0_to_gp_50248251_sm604_0833_read
//	final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35
inline hw_uint<16> final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_read_bundle_read(final_merged_0_cache& final_merged_0, int root, int final_merged_0_ld250, int final_merged_0_ld249, int dynamic_address) {
  // # of ports in bundle: 1
    // final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35

	hw_uint<16> result;
	hw_uint<16> final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35_res = final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35_select(final_merged_0, root, final_merged_0_ld250, final_merged_0_ld249, dynamic_address);
	set_at<0, 16>(result, final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_35_res);
	return result;
}

struct final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36_to_final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_FIFO_buf532_cache {
  // Reader addrs...
    // { sef_1_update_0_sm757_01127[root = 0, sef_1_0, sef_1_1] -> final_merged_0_FIFO_buf532[sef_1_1, sef_1_0] : 0 <= sef_1_0 <= 1079 and 0 <= sef_1_1 <= 1079 }
  // # of banks: 1
  final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36_to_final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1_cache final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36_to_final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1;
};



inline void final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36_write(hw_uint<16>& final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36, final_merged_0_FIFO_buf532_cache& final_merged_0_FIFO_buf532, int root, int final_merged_0_to_gp_50248_ld534, int final_merged_0_to_gp_50248_ld533, int dynamic_address) {
  final_merged_0_FIFO_buf532.final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36_to_final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1.push(final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36);
}

inline hw_uint<16> final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1_select(final_merged_0_FIFO_buf532_cache& final_merged_0_FIFO_buf532, int root, int sef_1_0, int sef_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1 read pattern: { sef_1_update_0_sm757_01127[root = 0, sef_1_0, sef_1_1] -> final_merged_0_FIFO_buf532[sef_1_1, sef_1_0] : 0 <= sef_1_0 <= 1079 and 0 <= sef_1_1 <= 1079 }
  // Read schedule : { sef_1_update_0_sm757_01127[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 192] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_final_merged_0_FIFO_buf532535_sm574_0773[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 191] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36 = final_merged_0_FIFO_buf532.final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36_to_final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36;
  return 0;
}

// # of bundles = 2
// load_to_final_merged_0_FIFO_buf532535_sm574_0773_write
//	final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36
inline void final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_write_bundle_write(hw_uint<16>& load_to_final_merged_0_FIFO_buf532535_sm574_0773_write, final_merged_0_FIFO_buf532_cache& final_merged_0_FIFO_buf532, int root, int final_merged_0_to_gp_50248_ld534, int final_merged_0_to_gp_50248_ld533, int dynamic_address) {
	hw_uint<16> final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36_res = load_to_final_merged_0_FIFO_buf532535_sm574_0773_write.extract<0, 15>();
	final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36_write(final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_36_res, final_merged_0_FIFO_buf532, root, final_merged_0_to_gp_50248_ld534, final_merged_0_to_gp_50248_ld533, dynamic_address);
}

// sef_1_update_0_sm757_01127_read
//	final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1
inline hw_uint<16> final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_read_bundle_read(final_merged_0_FIFO_buf532_cache& final_merged_0_FIFO_buf532, int root, int sef_1_0, int sef_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1

	hw_uint<16> result;
	hw_uint<16> final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1_res = final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1_select(final_merged_0_FIFO_buf532, root, sef_1_0, sef_1_1, dynamic_address);
	set_at<0, 16>(result, final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_1_res);
	return result;
}

struct final_merged_1_final_merged_1_update_0_sm755_01139_311_to_final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_cache {
  // Reader addrs...
    // { load_to_final_merged_1_to_gp_42252255_sm601_0827[root = 0, final_merged_1_ld254, final_merged_1_ld253] -> final_merged_1[final_merged_1_ld253, final_merged_1_ld254] : 0 <= final_merged_1_ld254 <= 539 and 0 <= final_merged_1_ld253 <= 539 }
  // # of banks: 1
  final_merged_1_final_merged_1_update_0_sm755_01139_311_to_final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31_cache final_merged_1_final_merged_1_update_0_sm755_01139_311_to_final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31;
};



inline void final_merged_1_final_merged_1_update_0_sm755_01139_311_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_sm755_01139_311, final_merged_1_cache& final_merged_1, int root, int final_merged_1_0, int final_merged_1_1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_sm755_01139_311_to_final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31.push(final_merged_1_final_merged_1_update_0_sm755_01139_311);
}

inline hw_uint<16> final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31_select(final_merged_1_cache& final_merged_1, int root, int final_merged_1_ld254, int final_merged_1_ld253, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31 read pattern: { load_to_final_merged_1_to_gp_42252255_sm601_0827[root = 0, final_merged_1_ld254, final_merged_1_ld253] -> final_merged_1[final_merged_1_ld253, final_merged_1_ld254] : 0 <= final_merged_1_ld254 <= 539 and 0 <= final_merged_1_ld253 <= 539 }
  // Read schedule : { load_to_final_merged_1_to_gp_42252255_sm601_0827[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 187] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { final_merged_1_update_0_sm755_01139[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 186] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_final_merged_1_final_merged_1_update_0_sm755_01139_311 = final_merged_1.final_merged_1_final_merged_1_update_0_sm755_01139_311_to_final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31.peek(/* one reader or all rams */ 0);
  return value_final_merged_1_final_merged_1_update_0_sm755_01139_311;
  return 0;
}

// # of bundles = 2
// final_merged_1_update_0_sm755_01139_write
//	final_merged_1_final_merged_1_update_0_sm755_01139_311
inline void final_merged_1_final_merged_1_update_0_sm755_01139_write_bundle_write(hw_uint<16>& final_merged_1_update_0_sm755_01139_write, final_merged_1_cache& final_merged_1, int root, int final_merged_1_0, int final_merged_1_1, int dynamic_address) {
	hw_uint<16> final_merged_1_final_merged_1_update_0_sm755_01139_311_res = final_merged_1_update_0_sm755_01139_write.extract<0, 15>();
	final_merged_1_final_merged_1_update_0_sm755_01139_311_write(final_merged_1_final_merged_1_update_0_sm755_01139_311_res, final_merged_1, root, final_merged_1_0, final_merged_1_1, dynamic_address);
}

// load_to_final_merged_1_to_gp_42252255_sm601_0827_read
//	final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31
inline hw_uint<16> final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_read_bundle_read(final_merged_1_cache& final_merged_1, int root, int final_merged_1_ld254, int final_merged_1_ld253, int dynamic_address) {
  // # of ports in bundle: 1
    // final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31

	hw_uint<16> result;
	hw_uint<16> final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31_res = final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31_select(final_merged_1, root, final_merged_1_ld254, final_merged_1_ld253, dynamic_address);
	set_at<0, 16>(result, final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_31_res);
	return result;
}

struct final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32_to_final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 540
	// # of read delays: 541
  // 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539
	fifo<hw_uint<16>, 540> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(539 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_FIFO_buf536_cache {
  // Reader addrs...
    // { final_merged_0_update_0_sm756_01141[root = 0, final_merged_0_0, final_merged_0_1] -> final_merged_1_FIFO_buf536[o0, o1] : 0 <= final_merged_0_0 <= 1079 and 0 <= final_merged_0_1 <= 1079 and -1 + final_merged_0_1 <= 2o0 <= final_merged_0_1 and -1 + final_merged_0_0 <= 2o1 <= final_merged_0_0 }
  // # of banks: 1
  final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32_to_final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315_cache final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32_to_final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315;
};



inline void final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32_write(hw_uint<16>& final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32, final_merged_1_FIFO_buf536_cache& final_merged_1_FIFO_buf536, int root, int final_merged_1_to_gp_42252_ld538, int final_merged_1_to_gp_42252_ld537, int dynamic_address) {
  final_merged_1_FIFO_buf536.final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32_to_final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315.push(final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32);
}

inline hw_uint<16> final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315_select(final_merged_1_FIFO_buf536_cache& final_merged_1_FIFO_buf536, int root, int final_merged_0_0, int final_merged_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315 read pattern: { final_merged_0_update_0_sm756_01141[root = 0, final_merged_0_0, final_merged_0_1] -> final_merged_1_FIFO_buf536[o0, o1] : 0 <= final_merged_0_0 <= 1079 and 0 <= final_merged_0_1 <= 1079 and -1 + final_merged_0_1 <= 2o0 <= final_merged_0_1 and -1 + final_merged_0_0 <= 2o1 <= final_merged_0_0 }
  // Read schedule : { final_merged_0_update_0_sm756_01141[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 189] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_final_merged_1_FIFO_buf536539_sm667_0959[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 188] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32 = final_merged_1_FIFO_buf536.final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32_to_final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315.peek(/* one reader or all rams */ ((-1 - final_merged_0_0) % 2 == 0 && 1077 - final_merged_0_1 >= 0) ? ((539 - floord(2*final_merged_0_1, 4))) : 0);
  return value_final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32;
  return 0;
}

// # of bundles = 2
// final_merged_0_update_0_sm756_01141_read
//	final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315
inline hw_uint<16> final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_read_bundle_read(final_merged_1_FIFO_buf536_cache& final_merged_1_FIFO_buf536, int root, int final_merged_0_0, int final_merged_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315

	hw_uint<16> result;
	hw_uint<16> final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315_res = final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315_select(final_merged_1_FIFO_buf536, root, final_merged_0_0, final_merged_0_1, dynamic_address);
	set_at<0, 16>(result, final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_315_res);
	return result;
}

// load_to_final_merged_1_FIFO_buf536539_sm667_0959_write
//	final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32
inline void final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_write_bundle_write(hw_uint<16>& load_to_final_merged_1_FIFO_buf536539_sm667_0959_write, final_merged_1_FIFO_buf536_cache& final_merged_1_FIFO_buf536, int root, int final_merged_1_to_gp_42252_ld538, int final_merged_1_to_gp_42252_ld537, int dynamic_address) {
	hw_uint<16> final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32_res = load_to_final_merged_1_FIFO_buf536539_sm667_0959_write.extract<0, 15>();
	final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32_write(final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_32_res, final_merged_1_FIFO_buf536, root, final_merged_1_to_gp_42252_ld538, final_merged_1_to_gp_42252_ld537, dynamic_address);
}

struct final_merged_2_final_merged_2_update_0_sm754_01137_308_to_final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_cache {
  // Reader addrs...
    // { load_to_final_merged_2_to_gp_43256259_sm637_0899[root = 0, final_merged_2_ld258, final_merged_2_ld257] -> final_merged_2[final_merged_2_ld257, final_merged_2_ld258] : 0 <= final_merged_2_ld258 <= 269 and 0 <= final_merged_2_ld257 <= 269 }
  // # of banks: 1
  final_merged_2_final_merged_2_update_0_sm754_01137_308_to_final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27_cache final_merged_2_final_merged_2_update_0_sm754_01137_308_to_final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27;
};



inline void final_merged_2_final_merged_2_update_0_sm754_01137_308_write(hw_uint<16>& final_merged_2_final_merged_2_update_0_sm754_01137_308, final_merged_2_cache& final_merged_2, int root, int final_merged_2_0, int final_merged_2_1, int dynamic_address) {
  final_merged_2.final_merged_2_final_merged_2_update_0_sm754_01137_308_to_final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27.push(final_merged_2_final_merged_2_update_0_sm754_01137_308);
}

inline hw_uint<16> final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27_select(final_merged_2_cache& final_merged_2, int root, int final_merged_2_ld258, int final_merged_2_ld257, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27 read pattern: { load_to_final_merged_2_to_gp_43256259_sm637_0899[root = 0, final_merged_2_ld258, final_merged_2_ld257] -> final_merged_2[final_merged_2_ld257, final_merged_2_ld258] : 0 <= final_merged_2_ld258 <= 269 and 0 <= final_merged_2_ld257 <= 269 }
  // Read schedule : { load_to_final_merged_2_to_gp_43256259_sm637_0899[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 184] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { final_merged_2_update_0_sm754_01137[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 183] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_final_merged_2_final_merged_2_update_0_sm754_01137_308 = final_merged_2.final_merged_2_final_merged_2_update_0_sm754_01137_308_to_final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27.peek(/* one reader or all rams */ 0);
  return value_final_merged_2_final_merged_2_update_0_sm754_01137_308;
  return 0;
}

// # of bundles = 2
// final_merged_2_update_0_sm754_01137_write
//	final_merged_2_final_merged_2_update_0_sm754_01137_308
inline void final_merged_2_final_merged_2_update_0_sm754_01137_write_bundle_write(hw_uint<16>& final_merged_2_update_0_sm754_01137_write, final_merged_2_cache& final_merged_2, int root, int final_merged_2_0, int final_merged_2_1, int dynamic_address) {
	hw_uint<16> final_merged_2_final_merged_2_update_0_sm754_01137_308_res = final_merged_2_update_0_sm754_01137_write.extract<0, 15>();
	final_merged_2_final_merged_2_update_0_sm754_01137_308_write(final_merged_2_final_merged_2_update_0_sm754_01137_308_res, final_merged_2, root, final_merged_2_0, final_merged_2_1, dynamic_address);
}

// load_to_final_merged_2_to_gp_43256259_sm637_0899_read
//	final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27
inline hw_uint<16> final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_read_bundle_read(final_merged_2_cache& final_merged_2, int root, int final_merged_2_ld258, int final_merged_2_ld257, int dynamic_address) {
  // # of ports in bundle: 1
    // final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27

	hw_uint<16> result;
	hw_uint<16> final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27_res = final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27_select(final_merged_2, root, final_merged_2_ld258, final_merged_2_ld257, dynamic_address);
	set_at<0, 16>(result, final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_27_res);
	return result;
}

struct final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28_to_final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 270
	// # of read delays: 271
  // 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
	fifo<hw_uint<16>, 270> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(269 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_FIFO_buf540_cache {
  // Reader addrs...
    // { final_merged_1_update_0_sm755_01139[root = 0, final_merged_1_0, final_merged_1_1] -> final_merged_2_FIFO_buf540[o0, o1] : 0 <= final_merged_1_0 <= 539 and 0 <= final_merged_1_1 <= 539 and -1 + final_merged_1_1 <= 2o0 <= final_merged_1_1 and -1 + final_merged_1_0 <= 2o1 <= final_merged_1_0 }
  // # of banks: 1
  final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28_to_final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312_cache final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28_to_final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312;
};



inline void final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28_write(hw_uint<16>& final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28, final_merged_2_FIFO_buf540_cache& final_merged_2_FIFO_buf540, int root, int final_merged_2_to_gp_43256_ld542, int final_merged_2_to_gp_43256_ld541, int dynamic_address) {
  final_merged_2_FIFO_buf540.final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28_to_final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312.push(final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28);
}

inline hw_uint<16> final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312_select(final_merged_2_FIFO_buf540_cache& final_merged_2_FIFO_buf540, int root, int final_merged_1_0, int final_merged_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312 read pattern: { final_merged_1_update_0_sm755_01139[root = 0, final_merged_1_0, final_merged_1_1] -> final_merged_2_FIFO_buf540[o0, o1] : 0 <= final_merged_1_0 <= 539 and 0 <= final_merged_1_1 <= 539 and -1 + final_merged_1_1 <= 2o0 <= final_merged_1_1 and -1 + final_merged_1_0 <= 2o1 <= final_merged_1_0 }
  // Read schedule : { final_merged_1_update_0_sm755_01139[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 186] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_final_merged_2_FIFO_buf540543_sm703_01031[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 185] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28 = final_merged_2_FIFO_buf540.final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28_to_final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312.peek(/* one reader or all rams */ ((-1 - final_merged_1_0) % 2 == 0 && 537 - final_merged_1_1 >= 0) ? ((269 - floord(2*final_merged_1_1, 4))) : 0);
  return value_final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28;
  return 0;
}

// # of bundles = 2
// final_merged_1_update_0_sm755_01139_read
//	final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312
inline hw_uint<16> final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_read_bundle_read(final_merged_2_FIFO_buf540_cache& final_merged_2_FIFO_buf540, int root, int final_merged_1_0, int final_merged_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312

	hw_uint<16> result;
	hw_uint<16> final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312_res = final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312_select(final_merged_2_FIFO_buf540, root, final_merged_1_0, final_merged_1_1, dynamic_address);
	set_at<0, 16>(result, final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_312_res);
	return result;
}

// load_to_final_merged_2_FIFO_buf540543_sm703_01031_write
//	final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28
inline void final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_write_bundle_write(hw_uint<16>& load_to_final_merged_2_FIFO_buf540543_sm703_01031_write, final_merged_2_FIFO_buf540_cache& final_merged_2_FIFO_buf540, int root, int final_merged_2_to_gp_43256_ld542, int final_merged_2_to_gp_43256_ld541, int dynamic_address) {
	hw_uint<16> final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28_res = load_to_final_merged_2_FIFO_buf540543_sm703_01031_write.extract<0, 15>();
	final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28_write(final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_28_res, final_merged_2_FIFO_buf540, root, final_merged_2_to_gp_43256_ld542, final_merged_2_to_gp_43256_ld541, dynamic_address);
}

struct fused_level_0_fused_level_0_update_0_sm753_01125_303_to_fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 6481
	// # of read delays: 6481

	fifo<hw_uint<16>, 6481> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(6480 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_cache {
  // Reader addrs...
    // { load_to_fused_level_0_to_gp_42260263_sm616_0857[root = 0, fused_level_0_ld262, fused_level_0_ld261] -> fused_level_0[fused_level_0_ld261, fused_level_0_ld262] : 0 <= fused_level_0_ld262 <= 1079 and 0 <= fused_level_0_ld261 <= 1079 }
  // # of banks: 1
  fused_level_0_fused_level_0_update_0_sm753_01125_303_to_fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23_cache fused_level_0_fused_level_0_update_0_sm753_01125_303_to_fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23;
};



inline void fused_level_0_fused_level_0_update_0_sm753_01125_303_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_sm753_01125_303, fused_level_0_cache& fused_level_0, int root, int fused_level_0_0, int fused_level_0_1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_sm753_01125_303_to_fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23.push(fused_level_0_fused_level_0_update_0_sm753_01125_303);
}

inline hw_uint<16> fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23_select(fused_level_0_cache& fused_level_0, int root, int fused_level_0_ld262, int fused_level_0_ld261, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23 read pattern: { load_to_fused_level_0_to_gp_42260263_sm616_0857[root = 0, fused_level_0_ld262, fused_level_0_ld261] -> fused_level_0[fused_level_0_ld261, fused_level_0_ld262] : 0 <= fused_level_0_ld262 <= 1079 and 0 <= fused_level_0_ld261 <= 1079 }
  // Read schedule : { load_to_fused_level_0_to_gp_42260263_sm616_0857[d0 = 0, d1, d2] -> [0, 14 + d1, 8 + d2, 161] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { fused_level_0_update_0_sm753_01125[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 156] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_fused_level_0_fused_level_0_update_0_sm753_01125_303 = fused_level_0.fused_level_0_fused_level_0_update_0_sm753_01125_303_to_fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23.peek(/* one reader or all rams */ (-1079 + fused_level_0_ld261 == 0 && -1074 + fused_level_0_ld262 == 0) ? (5400) : (1078 - fused_level_0_ld261 >= 0 && 1073 - fused_level_0_ld262 >= 0) ? (6480) : (-1079 + fused_level_0_ld261 == 0 && -1075 + fused_level_0_ld262 >= 0 && 1078 - fused_level_0_ld262 >= 0) ? ((1165320 - 1080 * fused_level_0_ld262)) : (-1079 + fused_level_0_ld262 == 0 && 1078 - fused_level_0_ld261 >= 0) ? ((1079 - fused_level_0_ld261)) : (-1079 + fused_level_0_ld261 == 0 && 1073 - fused_level_0_ld262 >= 0) ? (6480) : (-1074 + fused_level_0_ld262 == 0 && 1078 - fused_level_0_ld261 >= 0) ? ((6479 - fused_level_0_ld261)) : (-1075 + fused_level_0_ld262 >= 0 && 1078 - fused_level_0_ld262 >= 0 && 1078 - fused_level_0_ld261 >= 0) ? (((1166399 - 1080 * fused_level_0_ld262) - fused_level_0_ld261)) : 0);
  return value_fused_level_0_fused_level_0_update_0_sm753_01125_303;
  return 0;
}

// # of bundles = 2
// fused_level_0_update_0_sm753_01125_write
//	fused_level_0_fused_level_0_update_0_sm753_01125_303
inline void fused_level_0_fused_level_0_update_0_sm753_01125_write_bundle_write(hw_uint<16>& fused_level_0_update_0_sm753_01125_write, fused_level_0_cache& fused_level_0, int root, int fused_level_0_0, int fused_level_0_1, int dynamic_address) {
	hw_uint<16> fused_level_0_fused_level_0_update_0_sm753_01125_303_res = fused_level_0_update_0_sm753_01125_write.extract<0, 15>();
	fused_level_0_fused_level_0_update_0_sm753_01125_303_write(fused_level_0_fused_level_0_update_0_sm753_01125_303_res, fused_level_0, root, fused_level_0_0, fused_level_0_1, dynamic_address);
}

// load_to_fused_level_0_to_gp_42260263_sm616_0857_read
//	fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23
inline hw_uint<16> fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_read_bundle_read(fused_level_0_cache& fused_level_0, int root, int fused_level_0_ld262, int fused_level_0_ld261, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23

	hw_uint<16> result;
	hw_uint<16> fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23_res = fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23_select(fused_level_0, root, fused_level_0_ld262, fused_level_0_ld261, dynamic_address);
	set_at<0, 16>(result, fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_23_res);
	return result;
}

struct fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24_to_fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316_cache {
	// RAM Box: {[0, 1079], [0, 1079]}
	// Capacity: 7
	// # of read delays: 7
  // 0, 1, 2, 3, 4, 5, 6
	fifo<hw_uint<16>, 7> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(6 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_FIFO_buf544_cache {
  // Reader addrs...
    // { final_merged_0_update_0_sm756_01141[root = 0, final_merged_0_0, final_merged_0_1] -> fused_level_0_FIFO_buf544[final_merged_0_1, final_merged_0_0] : 0 <= final_merged_0_0 <= 1079 and 0 <= final_merged_0_1 <= 1079 }
  // # of banks: 1
  fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24_to_fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316_cache fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24_to_fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316;
};



inline void fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24_write(hw_uint<16>& fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24, fused_level_0_FIFO_buf544_cache& fused_level_0_FIFO_buf544, int root, int fused_level_0_to_gp_42260_ld546, int fused_level_0_to_gp_42260_ld545, int dynamic_address) {
  fused_level_0_FIFO_buf544.fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24_to_fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316.push(fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24);
}

inline hw_uint<16> fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316_select(fused_level_0_FIFO_buf544_cache& fused_level_0_FIFO_buf544, int root, int final_merged_0_0, int final_merged_0_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316 read pattern: { final_merged_0_update_0_sm756_01141[root = 0, final_merged_0_0, final_merged_0_1] -> fused_level_0_FIFO_buf544[final_merged_0_1, final_merged_0_0] : 0 <= final_merged_0_0 <= 1079 and 0 <= final_merged_0_1 <= 1079 }
  // Read schedule : { final_merged_0_update_0_sm756_01141[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 189] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  // Write schedule: { load_to_fused_level_0_FIFO_buf544547_sm680_0985[d0 = 0, d1, d2] -> [0, 14 + d1, 8 + d2, 167] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
  auto value_fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24 = fused_level_0_FIFO_buf544.fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24_to_fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316.peek(/* one reader or all rams */ (-1074 + final_merged_0_1 == 0) ? (5) : (1073 - final_merged_0_1 >= 0) ? (6) : (-1075 + final_merged_0_1 >= 0 && 1078 - final_merged_0_1 >= 0) ? ((1079 - final_merged_0_1)) : 0);
  return value_fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24;
  return 0;
}

// # of bundles = 2
// final_merged_0_update_0_sm756_01141_read
//	fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316
inline hw_uint<16> fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_read_bundle_read(fused_level_0_FIFO_buf544_cache& fused_level_0_FIFO_buf544, int root, int final_merged_0_0, int final_merged_0_1, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316

	hw_uint<16> result;
	hw_uint<16> fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316_res = fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316_select(fused_level_0_FIFO_buf544, root, final_merged_0_0, final_merged_0_1, dynamic_address);
	set_at<0, 16>(result, fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_316_res);
	return result;
}

// load_to_fused_level_0_FIFO_buf544547_sm680_0985_write
//	fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24
inline void fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_write_bundle_write(hw_uint<16>& load_to_fused_level_0_FIFO_buf544547_sm680_0985_write, fused_level_0_FIFO_buf544_cache& fused_level_0_FIFO_buf544, int root, int fused_level_0_to_gp_42260_ld546, int fused_level_0_to_gp_42260_ld545, int dynamic_address) {
	hw_uint<16> fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24_res = load_to_fused_level_0_FIFO_buf544547_sm680_0985_write.extract<0, 15>();
	fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24_write(fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_24_res, fused_level_0_FIFO_buf544, root, fused_level_0_to_gp_42260_ld546, fused_level_0_to_gp_42260_ld545, dynamic_address);
}

struct fused_level_1_fused_level_1_update_0_sm752_01123_298_to_fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 3
	// # of read delays: 3
  // 0, 1, 2
	fifo<hw_uint<16>, 3> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(2 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_cache {
  // Reader addrs...
    // { load_to_fused_level_1_to_gp_43264267_sm572_0769[root = 0, fused_level_1_ld266, fused_level_1_ld265] -> fused_level_1[fused_level_1_ld265, fused_level_1_ld266] : 0 <= fused_level_1_ld266 <= 539 and 0 <= fused_level_1_ld265 <= 539 }
  // # of banks: 1
  fused_level_1_fused_level_1_update_0_sm752_01123_298_to_fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19_cache fused_level_1_fused_level_1_update_0_sm752_01123_298_to_fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19;
};



inline void fused_level_1_fused_level_1_update_0_sm752_01123_298_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_sm752_01123_298, fused_level_1_cache& fused_level_1, int root, int fused_level_1_0, int fused_level_1_1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_sm752_01123_298_to_fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19.push(fused_level_1_fused_level_1_update_0_sm752_01123_298);
}

inline hw_uint<16> fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19_select(fused_level_1_cache& fused_level_1, int root, int fused_level_1_ld266, int fused_level_1_ld265, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19 read pattern: { load_to_fused_level_1_to_gp_43264267_sm572_0769[root = 0, fused_level_1_ld266, fused_level_1_ld265] -> fused_level_1[fused_level_1_ld265, fused_level_1_ld266] : 0 <= fused_level_1_ld266 <= 539 and 0 <= fused_level_1_ld265 <= 539 }
  // Read schedule : { load_to_fused_level_1_to_gp_43264267_sm572_0769[d0 = 0, d1, d2] -> [0, 10 + 2d1, 14 + 2d2, 171] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { fused_level_1_update_0_sm752_01123[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 164] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_fused_level_1_fused_level_1_update_0_sm752_01123_298 = fused_level_1.fused_level_1_fused_level_1_update_0_sm752_01123_298_to_fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19.peek(/* one reader or all rams */ (-538 + fused_level_1_ld265 == 0) ? (1) : (537 - fused_level_1_ld265 >= 0) ? (2) : 0);
  return value_fused_level_1_fused_level_1_update_0_sm752_01123_298;
  return 0;
}

// # of bundles = 2
// fused_level_1_update_0_sm752_01123_write
//	fused_level_1_fused_level_1_update_0_sm752_01123_298
inline void fused_level_1_fused_level_1_update_0_sm752_01123_write_bundle_write(hw_uint<16>& fused_level_1_update_0_sm752_01123_write, fused_level_1_cache& fused_level_1, int root, int fused_level_1_0, int fused_level_1_1, int dynamic_address) {
	hw_uint<16> fused_level_1_fused_level_1_update_0_sm752_01123_298_res = fused_level_1_update_0_sm752_01123_write.extract<0, 15>();
	fused_level_1_fused_level_1_update_0_sm752_01123_298_write(fused_level_1_fused_level_1_update_0_sm752_01123_298_res, fused_level_1, root, fused_level_1_0, fused_level_1_1, dynamic_address);
}

// load_to_fused_level_1_to_gp_43264267_sm572_0769_read
//	fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19
inline hw_uint<16> fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_read_bundle_read(fused_level_1_cache& fused_level_1, int root, int fused_level_1_ld266, int fused_level_1_ld265, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19

	hw_uint<16> result;
	hw_uint<16> fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19_res = fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19_select(fused_level_1, root, fused_level_1_ld266, fused_level_1_ld265, dynamic_address);
	set_at<0, 16>(result, fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_19_res);
	return result;
}

struct fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20_to_fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313_cache {
	// RAM Box: {[0, 539], [0, 539]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_FIFO_buf548_cache {
  // Reader addrs...
    // { final_merged_1_update_0_sm755_01139[root = 0, final_merged_1_0, final_merged_1_1] -> fused_level_1_FIFO_buf548[final_merged_1_1, final_merged_1_0] : 0 <= final_merged_1_0 <= 539 and 0 <= final_merged_1_1 <= 539 }
  // # of banks: 1
  fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20_to_fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313_cache fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20_to_fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313;
};



inline void fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20_write(hw_uint<16>& fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20, fused_level_1_FIFO_buf548_cache& fused_level_1_FIFO_buf548, int root, int fused_level_1_to_gp_43264_ld550, int fused_level_1_to_gp_43264_ld549, int dynamic_address) {
  fused_level_1_FIFO_buf548.fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20_to_fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313.push(fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20);
}

inline hw_uint<16> fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313_select(fused_level_1_FIFO_buf548_cache& fused_level_1_FIFO_buf548, int root, int final_merged_1_0, int final_merged_1_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313 read pattern: { final_merged_1_update_0_sm755_01139[root = 0, final_merged_1_0, final_merged_1_1] -> fused_level_1_FIFO_buf548[final_merged_1_1, final_merged_1_0] : 0 <= final_merged_1_0 <= 539 and 0 <= final_merged_1_1 <= 539 }
  // Read schedule : { final_merged_1_update_0_sm755_01139[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 186] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  // Write schedule: { load_to_fused_level_1_FIFO_buf548551_sm704_01033[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 172] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
  auto value_fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20 = fused_level_1_FIFO_buf548.fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20_to_fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313.peek(/* one reader or all rams */ 0);
  return value_fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20;
  return 0;
}

// # of bundles = 2
// final_merged_1_update_0_sm755_01139_read
//	fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313
inline hw_uint<16> fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_read_bundle_read(fused_level_1_FIFO_buf548_cache& fused_level_1_FIFO_buf548, int root, int final_merged_1_0, int final_merged_1_1, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313

	hw_uint<16> result;
	hw_uint<16> fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313_res = fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313_select(fused_level_1_FIFO_buf548, root, final_merged_1_0, final_merged_1_1, dynamic_address);
	set_at<0, 16>(result, fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_313_res);
	return result;
}

// load_to_fused_level_1_FIFO_buf548551_sm704_01033_write
//	fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20
inline void fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_write_bundle_write(hw_uint<16>& load_to_fused_level_1_FIFO_buf548551_sm704_01033_write, fused_level_1_FIFO_buf548_cache& fused_level_1_FIFO_buf548, int root, int fused_level_1_to_gp_43264_ld550, int fused_level_1_to_gp_43264_ld549, int dynamic_address) {
	hw_uint<16> fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20_res = load_to_fused_level_1_FIFO_buf548551_sm704_01033_write.extract<0, 15>();
	fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20_write(fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_20_res, fused_level_1_FIFO_buf548, root, fused_level_1_to_gp_43264_ld550, fused_level_1_to_gp_43264_ld549, dynamic_address);
}

struct fused_level_2_fused_level_2_update_0_sm751_01121_293_to_fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_2_cache {
  // Reader addrs...
    // { load_to_fused_level_2_to_gp_44268271_sm602_0829[root = 0, fused_level_2_ld270, fused_level_2_ld269] -> fused_level_2[fused_level_2_ld269, fused_level_2_ld270] : 0 <= fused_level_2_ld270 <= 269 and 0 <= fused_level_2_ld269 <= 269 }
  // # of banks: 1
  fused_level_2_fused_level_2_update_0_sm751_01121_293_to_fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15_cache fused_level_2_fused_level_2_update_0_sm751_01121_293_to_fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15;
};



inline void fused_level_2_fused_level_2_update_0_sm751_01121_293_write(hw_uint<16>& fused_level_2_fused_level_2_update_0_sm751_01121_293, fused_level_2_cache& fused_level_2, int root, int fused_level_2_0, int fused_level_2_1, int dynamic_address) {
  fused_level_2.fused_level_2_fused_level_2_update_0_sm751_01121_293_to_fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15.push(fused_level_2_fused_level_2_update_0_sm751_01121_293);
}

inline hw_uint<16> fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15_select(fused_level_2_cache& fused_level_2, int root, int fused_level_2_ld270, int fused_level_2_ld269, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15 read pattern: { load_to_fused_level_2_to_gp_44268271_sm602_0829[root = 0, fused_level_2_ld270, fused_level_2_ld269] -> fused_level_2[fused_level_2_ld269, fused_level_2_ld270] : 0 <= fused_level_2_ld270 <= 269 and 0 <= fused_level_2_ld269 <= 269 }
  // Read schedule : { load_to_fused_level_2_to_gp_44268271_sm602_0829[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 181] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { fused_level_2_update_0_sm751_01121[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 180] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_fused_level_2_fused_level_2_update_0_sm751_01121_293 = fused_level_2.fused_level_2_fused_level_2_update_0_sm751_01121_293_to_fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15.peek(/* one reader or all rams */ 0);
  return value_fused_level_2_fused_level_2_update_0_sm751_01121_293;
  return 0;
}

// # of bundles = 2
// fused_level_2_update_0_sm751_01121_write
//	fused_level_2_fused_level_2_update_0_sm751_01121_293
inline void fused_level_2_fused_level_2_update_0_sm751_01121_write_bundle_write(hw_uint<16>& fused_level_2_update_0_sm751_01121_write, fused_level_2_cache& fused_level_2, int root, int fused_level_2_0, int fused_level_2_1, int dynamic_address) {
	hw_uint<16> fused_level_2_fused_level_2_update_0_sm751_01121_293_res = fused_level_2_update_0_sm751_01121_write.extract<0, 15>();
	fused_level_2_fused_level_2_update_0_sm751_01121_293_write(fused_level_2_fused_level_2_update_0_sm751_01121_293_res, fused_level_2, root, fused_level_2_0, fused_level_2_1, dynamic_address);
}

// load_to_fused_level_2_to_gp_44268271_sm602_0829_read
//	fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15
inline hw_uint<16> fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_read_bundle_read(fused_level_2_cache& fused_level_2, int root, int fused_level_2_ld270, int fused_level_2_ld269, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15

	hw_uint<16> result;
	hw_uint<16> fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15_res = fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15_select(fused_level_2, root, fused_level_2_ld270, fused_level_2_ld269, dynamic_address);
	set_at<0, 16>(result, fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_15_res);
	return result;
}

struct fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16_to_fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310_cache {
	// RAM Box: {[0, 269], [0, 269]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_2_FIFO_buf552_cache {
  // Reader addrs...
    // { final_merged_2_update_0_sm754_01137[root = 0, final_merged_2_0, final_merged_2_1] -> fused_level_2_FIFO_buf552[final_merged_2_1, final_merged_2_0] : 0 <= final_merged_2_0 <= 269 and 0 <= final_merged_2_1 <= 269 }
  // # of banks: 1
  fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16_to_fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310_cache fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16_to_fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310;
};



inline void fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16_write(hw_uint<16>& fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16, fused_level_2_FIFO_buf552_cache& fused_level_2_FIFO_buf552, int root, int fused_level_2_to_gp_44268_ld554, int fused_level_2_to_gp_44268_ld553, int dynamic_address) {
  fused_level_2_FIFO_buf552.fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16_to_fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310.push(fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16);
}

inline hw_uint<16> fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310_select(fused_level_2_FIFO_buf552_cache& fused_level_2_FIFO_buf552, int root, int final_merged_2_0, int final_merged_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310 read pattern: { final_merged_2_update_0_sm754_01137[root = 0, final_merged_2_0, final_merged_2_1] -> fused_level_2_FIFO_buf552[final_merged_2_1, final_merged_2_0] : 0 <= final_merged_2_0 <= 269 and 0 <= final_merged_2_1 <= 269 }
  // Read schedule : { final_merged_2_update_0_sm754_01137[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 183] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_fused_level_2_FIFO_buf552555_sm706_01037[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 182] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  auto value_fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16 = fused_level_2_FIFO_buf552.fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16_to_fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310.peek(/* one reader or all rams */ 0);
  return value_fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16;
  return 0;
}

// # of bundles = 2
// final_merged_2_update_0_sm754_01137_read
//	fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310
inline hw_uint<16> fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_read_bundle_read(fused_level_2_FIFO_buf552_cache& fused_level_2_FIFO_buf552, int root, int final_merged_2_0, int final_merged_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310

	hw_uint<16> result;
	hw_uint<16> fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310_res = fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310_select(fused_level_2_FIFO_buf552, root, final_merged_2_0, final_merged_2_1, dynamic_address);
	set_at<0, 16>(result, fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_310_res);
	return result;
}

// load_to_fused_level_2_FIFO_buf552555_sm706_01037_write
//	fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16
inline void fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_write_bundle_write(hw_uint<16>& load_to_fused_level_2_FIFO_buf552555_sm706_01037_write, fused_level_2_FIFO_buf552_cache& fused_level_2_FIFO_buf552, int root, int fused_level_2_to_gp_44268_ld554, int fused_level_2_to_gp_44268_ld553, int dynamic_address) {
	hw_uint<16> fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16_res = load_to_fused_level_2_FIFO_buf552555_sm706_01037_write.extract<0, 15>();
	fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16_write(fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_16_res, fused_level_2_FIFO_buf552, root, fused_level_2_to_gp_44268_ld554, fused_level_2_to_gp_44268_ld553, dynamic_address);
}

struct fused_level_3_fused_level_3_update_0_sm750_01119_288_to_fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_3_cache {
  // Reader addrs...
    // { load_to_fused_level_3_to_gp_44272275_sm645_0915[root = 0, fused_level_3_ld274, fused_level_3_ld273] -> fused_level_3[fused_level_3_ld273, fused_level_3_ld274] : 0 <= fused_level_3_ld274 <= 134 and 0 <= fused_level_3_ld273 <= 134 }
  // # of banks: 1
  fused_level_3_fused_level_3_update_0_sm750_01119_288_to_fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11_cache fused_level_3_fused_level_3_update_0_sm750_01119_288_to_fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11;
};



inline void fused_level_3_fused_level_3_update_0_sm750_01119_288_write(hw_uint<16>& fused_level_3_fused_level_3_update_0_sm750_01119_288, fused_level_3_cache& fused_level_3, int root, int fused_level_3_0, int fused_level_3_1, int dynamic_address) {
  fused_level_3.fused_level_3_fused_level_3_update_0_sm750_01119_288_to_fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11.push(fused_level_3_fused_level_3_update_0_sm750_01119_288);
}

inline hw_uint<16> fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11_select(fused_level_3_cache& fused_level_3, int root, int fused_level_3_ld274, int fused_level_3_ld273, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11 read pattern: { load_to_fused_level_3_to_gp_44272275_sm645_0915[root = 0, fused_level_3_ld274, fused_level_3_ld273] -> fused_level_3[fused_level_3_ld273, fused_level_3_ld274] : 0 <= fused_level_3_ld274 <= 134 and 0 <= fused_level_3_ld273 <= 134 }
  // Read schedule : { load_to_fused_level_3_to_gp_44272275_sm645_0915[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 177] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  // Write schedule: { fused_level_3_update_0_sm750_01119[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 175] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_fused_level_3_fused_level_3_update_0_sm750_01119_288 = fused_level_3.fused_level_3_fused_level_3_update_0_sm750_01119_288_to_fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11.peek(/* one reader or all rams */ 0);
  return value_fused_level_3_fused_level_3_update_0_sm750_01119_288;
  return 0;
}

// # of bundles = 2
// fused_level_3_update_0_sm750_01119_write
//	fused_level_3_fused_level_3_update_0_sm750_01119_288
inline void fused_level_3_fused_level_3_update_0_sm750_01119_write_bundle_write(hw_uint<16>& fused_level_3_update_0_sm750_01119_write, fused_level_3_cache& fused_level_3, int root, int fused_level_3_0, int fused_level_3_1, int dynamic_address) {
	hw_uint<16> fused_level_3_fused_level_3_update_0_sm750_01119_288_res = fused_level_3_update_0_sm750_01119_write.extract<0, 15>();
	fused_level_3_fused_level_3_update_0_sm750_01119_288_write(fused_level_3_fused_level_3_update_0_sm750_01119_288_res, fused_level_3, root, fused_level_3_0, fused_level_3_1, dynamic_address);
}

// load_to_fused_level_3_to_gp_44272275_sm645_0915_read
//	fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11
inline hw_uint<16> fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_read_bundle_read(fused_level_3_cache& fused_level_3, int root, int fused_level_3_ld274, int fused_level_3_ld273, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11

	hw_uint<16> result;
	hw_uint<16> fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11_res = fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11_select(fused_level_3, root, fused_level_3_ld274, fused_level_3_ld273, dynamic_address);
	set_at<0, 16>(result, fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_11_res);
	return result;
}

struct fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12_to_fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309_cache {
	// RAM Box: {[0, 134], [0, 134]}
	// Capacity: 135
	// # of read delays: 136
  // 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_3_FIFO_buf556_cache {
  // Reader addrs...
    // { final_merged_2_update_0_sm754_01137[root = 0, final_merged_2_0, final_merged_2_1] -> fused_level_3_FIFO_buf556[o0, o1] : 0 <= final_merged_2_0 <= 269 and 0 <= final_merged_2_1 <= 269 and -1 + final_merged_2_1 <= 2o0 <= final_merged_2_1 and -1 + final_merged_2_0 <= 2o1 <= final_merged_2_0 }
  // # of banks: 1
  fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12_to_fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309_cache fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12_to_fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309;
};



inline void fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12_write(hw_uint<16>& fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12, fused_level_3_FIFO_buf556_cache& fused_level_3_FIFO_buf556, int root, int fused_level_3_to_gp_44272_ld558, int fused_level_3_to_gp_44272_ld557, int dynamic_address) {
  fused_level_3_FIFO_buf556.fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12_to_fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309.push(fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12);
}

inline hw_uint<16> fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309_select(fused_level_3_FIFO_buf556_cache& fused_level_3_FIFO_buf556, int root, int final_merged_2_0, int final_merged_2_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309 read pattern: { final_merged_2_update_0_sm754_01137[root = 0, final_merged_2_0, final_merged_2_1] -> fused_level_3_FIFO_buf556[o0, o1] : 0 <= final_merged_2_0 <= 269 and 0 <= final_merged_2_1 <= 269 and -1 + final_merged_2_1 <= 2o0 <= final_merged_2_1 and -1 + final_merged_2_0 <= 2o1 <= final_merged_2_0 }
  // Read schedule : { final_merged_2_update_0_sm754_01137[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 183] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
  // Write schedule: { load_to_fused_level_3_FIFO_buf556559_sm702_01029[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 179] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
  auto value_fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12 = fused_level_3_FIFO_buf556.fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12_to_fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309.peek(/* one reader or all rams */ ((-1 - final_merged_2_0) % 2 == 0 && 267 - final_merged_2_1 >= 0) ? ((134 - floord(2*final_merged_2_1, 4))) : 0);
  return value_fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12;
  return 0;
}

// # of bundles = 2
// final_merged_2_update_0_sm754_01137_read
//	fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309
inline hw_uint<16> fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_read_bundle_read(fused_level_3_FIFO_buf556_cache& fused_level_3_FIFO_buf556, int root, int final_merged_2_0, int final_merged_2_1, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309

	hw_uint<16> result;
	hw_uint<16> fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309_res = fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309_select(fused_level_3_FIFO_buf556, root, final_merged_2_0, final_merged_2_1, dynamic_address);
	set_at<0, 16>(result, fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_309_res);
	return result;
}

// load_to_fused_level_3_FIFO_buf556559_sm702_01029_write
//	fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12
inline void fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_write_bundle_write(hw_uint<16>& load_to_fused_level_3_FIFO_buf556559_sm702_01029_write, fused_level_3_FIFO_buf556_cache& fused_level_3_FIFO_buf556, int root, int fused_level_3_to_gp_44272_ld558, int fused_level_3_to_gp_44272_ld557, int dynamic_address) {
	hw_uint<16> fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12_res = load_to_fused_level_3_FIFO_buf556559_sm702_01029_write.extract<0, 15>();
	fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12_write(fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_12_res, fused_level_3_FIFO_buf556, root, fused_level_3_to_gp_44272_ld558, fused_level_3_to_gp_44272_ld557, dynamic_address);
}

struct in_in_update_0_sm711_01047_286_to_in_load_to_in_to_gp_0276279_sm652_0929_5_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct in_in_update_0_sm711_01047_286_to_in_load_to_in_to_gp_21280283_sm618_0861_3_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct in_cache {
  // Reader addrs...
    // { load_to_in_to_gp_0276279_sm652_0929[root = 0, in_ld278, in_ld277] -> in[in_ld277, in_ld278] : 0 <= in_ld278 <= 1086 and 0 <= in_ld277 <= 1086 }
    // { load_to_in_to_gp_21280283_sm618_0861[root = 0, in_ld282, in_ld281] -> in[in_ld281, in_ld282] : 0 <= in_ld282 <= 1086 and 0 <= in_ld281 <= 1086 }
  // # of banks: 2
  in_in_update_0_sm711_01047_286_to_in_load_to_in_to_gp_0276279_sm652_0929_5_cache in_in_update_0_sm711_01047_286_to_in_load_to_in_to_gp_0276279_sm652_0929_5;
  in_in_update_0_sm711_01047_286_to_in_load_to_in_to_gp_21280283_sm618_0861_3_cache in_in_update_0_sm711_01047_286_to_in_load_to_in_to_gp_21280283_sm618_0861_3;
};



inline void in_in_update_0_sm711_01047_286_write(hw_uint<16>& in_in_update_0_sm711_01047_286, in_cache& in, int root, int in_0, int in_1, int dynamic_address) {
  in.in_in_update_0_sm711_01047_286_to_in_load_to_in_to_gp_0276279_sm652_0929_5.push(in_in_update_0_sm711_01047_286);
  in.in_in_update_0_sm711_01047_286_to_in_load_to_in_to_gp_21280283_sm618_0861_3.push(in_in_update_0_sm711_01047_286);
}

inline hw_uint<16> in_load_to_in_to_gp_0276279_sm652_0929_5_select(in_cache& in, int root, int in_ld278, int in_ld277, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // in_load_to_in_to_gp_0276279_sm652_0929_5 read pattern: { load_to_in_to_gp_0276279_sm652_0929[root = 0, in_ld278, in_ld277] -> in[in_ld277, in_ld278] : 0 <= in_ld278 <= 1086 and 0 <= in_ld277 <= 1086 }
  // Read schedule : { load_to_in_to_gp_0276279_sm652_0929[d0 = 0, d1, d2] -> [0, d1, d2, 1] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { in_update_0_sm711_01047[d0 = 0, d1, d2] -> [0, d1, d2, 0] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_in_in_update_0_sm711_01047_286 = in.in_in_update_0_sm711_01047_286_to_in_load_to_in_to_gp_0276279_sm652_0929_5.peek(/* one reader or all rams */ 0);
  return value_in_in_update_0_sm711_01047_286;
  return 0;
}

inline hw_uint<16> in_load_to_in_to_gp_21280283_sm618_0861_3_select(in_cache& in, int root, int in_ld282, int in_ld281, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // in_load_to_in_to_gp_21280283_sm618_0861_3 read pattern: { load_to_in_to_gp_21280283_sm618_0861[root = 0, in_ld282, in_ld281] -> in[in_ld281, in_ld282] : 0 <= in_ld282 <= 1086 and 0 <= in_ld281 <= 1086 }
  // Read schedule : { load_to_in_to_gp_21280283_sm618_0861[d0 = 0, d1, d2] -> [0, d1, d2, 2] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { in_update_0_sm711_01047[d0 = 0, d1, d2] -> [0, d1, d2, 0] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_in_in_update_0_sm711_01047_286 = in.in_in_update_0_sm711_01047_286_to_in_load_to_in_to_gp_21280283_sm618_0861_3.peek(/* one reader or all rams */ 0);
  return value_in_in_update_0_sm711_01047_286;
  return 0;
}

// # of bundles = 3
// in_update_0_sm711_01047_write
//	in_in_update_0_sm711_01047_286
inline void in_in_update_0_sm711_01047_write_bundle_write(hw_uint<16>& in_update_0_sm711_01047_write, in_cache& in, int root, int in_0, int in_1, int dynamic_address) {
	hw_uint<16> in_in_update_0_sm711_01047_286_res = in_update_0_sm711_01047_write.extract<0, 15>();
	in_in_update_0_sm711_01047_286_write(in_in_update_0_sm711_01047_286_res, in, root, in_0, in_1, dynamic_address);
}

// load_to_in_to_gp_0276279_sm652_0929_read
//	in_load_to_in_to_gp_0276279_sm652_0929_5
inline hw_uint<16> in_load_to_in_to_gp_0276279_sm652_0929_read_bundle_read(in_cache& in, int root, int in_ld278, int in_ld277, int dynamic_address) {
  // # of ports in bundle: 1
    // in_load_to_in_to_gp_0276279_sm652_0929_5

	hw_uint<16> result;
	hw_uint<16> in_load_to_in_to_gp_0276279_sm652_0929_5_res = in_load_to_in_to_gp_0276279_sm652_0929_5_select(in, root, in_ld278, in_ld277, dynamic_address);
	set_at<0, 16>(result, in_load_to_in_to_gp_0276279_sm652_0929_5_res);
	return result;
}

// load_to_in_to_gp_21280283_sm618_0861_read
//	in_load_to_in_to_gp_21280283_sm618_0861_3
inline hw_uint<16> in_load_to_in_to_gp_21280283_sm618_0861_read_bundle_read(in_cache& in, int root, int in_ld282, int in_ld281, int dynamic_address) {
  // # of ports in bundle: 1
    // in_load_to_in_to_gp_21280283_sm618_0861_3

	hw_uint<16> result;
	hw_uint<16> in_load_to_in_to_gp_21280283_sm618_0861_3_res = in_load_to_in_to_gp_21280283_sm618_0861_3_select(in, root, in_ld282, in_ld281, dynamic_address);
	set_at<0, 16>(result, in_load_to_in_to_gp_21280283_sm618_0861_3_res);
	return result;
}

struct in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8_to_in_FIFO_buf560_bright_update_0_sm709_01043_451_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct in_FIFO_buf560_cache {
  // Reader addrs...
    // { bright_update_0_sm709_01043[root = 0, bright_0, bright_1] -> in_FIFO_buf560[bright_1, bright_0] : 0 <= bright_0 <= 1086 and 0 <= bright_1 <= 1086 }
  // # of banks: 1
  in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8_to_in_FIFO_buf560_bright_update_0_sm709_01043_451_cache in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8_to_in_FIFO_buf560_bright_update_0_sm709_01043_451;
};



inline void in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8_write(hw_uint<16>& in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8, in_FIFO_buf560_cache& in_FIFO_buf560, int root, int in_to_gp_0276_ld562, int in_to_gp_0276_ld561, int dynamic_address) {
  in_FIFO_buf560.in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8_to_in_FIFO_buf560_bright_update_0_sm709_01043_451.push(in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8);
}

inline hw_uint<16> in_FIFO_buf560_bright_update_0_sm709_01043_451_select(in_FIFO_buf560_cache& in_FIFO_buf560, int root, int bright_0, int bright_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // in_FIFO_buf560_bright_update_0_sm709_01043_451 read pattern: { bright_update_0_sm709_01043[root = 0, bright_0, bright_1] -> in_FIFO_buf560[bright_1, bright_0] : 0 <= bright_0 <= 1086 and 0 <= bright_1 <= 1086 }
  // Read schedule : { bright_update_0_sm709_01043[d0 = 0, d1, d2] -> [0, d1, d2, 4] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { load_to_in_FIFO_buf560563_sm705_01035[d0 = 0, d1, d2] -> [0, d1, d2, 3] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8 = in_FIFO_buf560.in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8_to_in_FIFO_buf560_bright_update_0_sm709_01043_451.peek(/* one reader or all rams */ 0);
  return value_in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8;
  return 0;
}

// # of bundles = 2
// bright_update_0_sm709_01043_read
//	in_FIFO_buf560_bright_update_0_sm709_01043_451
inline hw_uint<16> in_FIFO_buf560_bright_update_0_sm709_01043_read_bundle_read(in_FIFO_buf560_cache& in_FIFO_buf560, int root, int bright_0, int bright_1, int dynamic_address) {
  // # of ports in bundle: 1
    // in_FIFO_buf560_bright_update_0_sm709_01043_451

	hw_uint<16> result;
	hw_uint<16> in_FIFO_buf560_bright_update_0_sm709_01043_451_res = in_FIFO_buf560_bright_update_0_sm709_01043_451_select(in_FIFO_buf560, root, bright_0, bright_1, dynamic_address);
	set_at<0, 16>(result, in_FIFO_buf560_bright_update_0_sm709_01043_451_res);
	return result;
}

// load_to_in_FIFO_buf560563_sm705_01035_write
//	in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8
inline void in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_write_bundle_write(hw_uint<16>& load_to_in_FIFO_buf560563_sm705_01035_write, in_FIFO_buf560_cache& in_FIFO_buf560, int root, int in_to_gp_0276_ld562, int in_to_gp_0276_ld561, int dynamic_address) {
	hw_uint<16> in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8_res = load_to_in_FIFO_buf560563_sm705_01035_write.extract<0, 15>();
	in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8_write(in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_8_res, in_FIFO_buf560, root, in_to_gp_0276_ld562, in_to_gp_0276_ld561, dynamic_address);
}

struct in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6_to_in_FIFO_buf564_dark_update_0_sm712_01049_358_cache {
	// RAM Box: {[0, 1086], [0, 1086]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct in_FIFO_buf564_cache {
  // Reader addrs...
    // { dark_update_0_sm712_01049[root = 0, dark_0, dark_1] -> in_FIFO_buf564[dark_1, dark_0] : 0 <= dark_0 <= 1086 and 0 <= dark_1 <= 1086 }
  // # of banks: 1
  in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6_to_in_FIFO_buf564_dark_update_0_sm712_01049_358_cache in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6_to_in_FIFO_buf564_dark_update_0_sm712_01049_358;
};



inline void in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6_write(hw_uint<16>& in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6, in_FIFO_buf564_cache& in_FIFO_buf564, int root, int in_to_gp_21280_ld566, int in_to_gp_21280_ld565, int dynamic_address) {
  in_FIFO_buf564.in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6_to_in_FIFO_buf564_dark_update_0_sm712_01049_358.push(in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6);
}

inline hw_uint<16> in_FIFO_buf564_dark_update_0_sm712_01049_358_select(in_FIFO_buf564_cache& in_FIFO_buf564, int root, int dark_0, int dark_1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // in_FIFO_buf564_dark_update_0_sm712_01049_358 read pattern: { dark_update_0_sm712_01049[root = 0, dark_0, dark_1] -> in_FIFO_buf564[dark_1, dark_0] : 0 <= dark_0 <= 1086 and 0 <= dark_1 <= 1086 }
  // Read schedule : { dark_update_0_sm712_01049[d0 = 0, d1, d2] -> [0, d1, d2, 12] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  // Write schedule: { load_to_in_FIFO_buf564567_sm691_01007[d0 = 0, d1, d2] -> [0, d1, d2, 6] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
  auto value_in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6 = in_FIFO_buf564.in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6_to_in_FIFO_buf564_dark_update_0_sm712_01049_358.peek(/* one reader or all rams */ 0);
  return value_in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6;
  return 0;
}

// # of bundles = 2
// dark_update_0_sm712_01049_read
//	in_FIFO_buf564_dark_update_0_sm712_01049_358
inline hw_uint<16> in_FIFO_buf564_dark_update_0_sm712_01049_read_bundle_read(in_FIFO_buf564_cache& in_FIFO_buf564, int root, int dark_0, int dark_1, int dynamic_address) {
  // # of ports in bundle: 1
    // in_FIFO_buf564_dark_update_0_sm712_01049_358

	hw_uint<16> result;
	hw_uint<16> in_FIFO_buf564_dark_update_0_sm712_01049_358_res = in_FIFO_buf564_dark_update_0_sm712_01049_358_select(in_FIFO_buf564, root, dark_0, dark_1, dynamic_address);
	set_at<0, 16>(result, in_FIFO_buf564_dark_update_0_sm712_01049_358_res);
	return result;
}

// load_to_in_FIFO_buf564567_sm691_01007_write
//	in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6
inline void in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_write_bundle_write(hw_uint<16>& load_to_in_FIFO_buf564567_sm691_01007_write, in_FIFO_buf564_cache& in_FIFO_buf564, int root, int in_to_gp_21280_ld566, int in_to_gp_21280_ld565, int dynamic_address) {
	hw_uint<16> in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6_res = load_to_in_FIFO_buf564567_sm691_01007_write.extract<0, 15>();
	in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6_write(in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_6_res, in_FIFO_buf564, root, in_to_gp_21280_ld566, in_to_gp_21280_ld565, dynamic_address);
}

// Operation logic
inline void load_to_bright_to_gp_103_sm586_0797(bright_cache& bright, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_to_gp_10, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright
	auto bright__lp_1_m_bright_ld1__p__0_rp__c____bright_ld2_value = bright_load_to_bright_to_gp_103_sm586_0797_read_bundle_read(bright/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_to_gp_10
	bright_to_gp_10.write(bright__lp_1_m_bright_ld1__p__0_rp__c____bright_ld2_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_to_gp_7811_sm758_01129(bright_cache& bright, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_to_gp_78, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright
	auto bright__lp__lp_1_m_bright_ld9__p__0_rp___p__7_rp__c_______lp_bright_ld10__p__7_rp__value = bright_load_to_bright_to_gp_7811_sm758_01129_read_bundle_read(bright/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_to_gp_78
	bright_to_gp_78.write(bright__lp__lp_1_m_bright_ld9__p__0_rp___p__7_rp__c_______lp_bright_ld10__p__7_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_to_gp_1347_sm587_0799(bright_cache& bright, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_to_gp_134, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright
	auto bright__lp_1_m_bright_ld5__p__0_rp__c____bright_ld6_value = bright_load_to_bright_to_gp_1347_sm587_0799_read_bundle_read(bright/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_to_gp_134
	bright_to_gp_134.write(bright__lp_1_m_bright_ld5__p__0_rp__c____bright_ld6_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_in_FIFO_buf560563_sm705_01035(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */in_to_gp_0276, in_FIFO_buf560_cache& in_FIFO_buf560, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: in_to_gp_0276
	auto in_to_gp_0276__lp_1_m_in_to_gp_0276_ld561__p__0_rp__c____in_to_gp_0276_ld562_value = in_to_gp_0276.read();
	// Produce: in_FIFO_buf560
	in_FIFO_buf560_load_to_in_FIFO_buf560563_sm705_01035_write_bundle_write(/* arg names */in_to_gp_0276__lp_1_m_in_to_gp_0276_ld561__p__0_rp__c____in_to_gp_0276_ld562_value, in_FIFO_buf560, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_update_0_sm709_01043(in_FIFO_buf560_cache& in_FIFO_buf560, bright_cache& bright, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: in_FIFO_buf560
	auto in_FIFO_buf560_1_m__lp__lp_1_m_bright_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_bright_0__p___m_7_rp___p__0_p_7_value = in_FIFO_buf560_bright_update_0_sm709_01043_read_bundle_read(in_FIFO_buf560/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(in_FIFO_buf560_1_m__lp__lp_1_m_bright_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_bright_0__p___m_7_rp___p__0_p_7_value);
	// Produce: bright
	bright_bright_update_0_sm709_01043_write_bundle_write(/* arg names */compute_result, bright, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_0_bright_ld10_bright_ld2_bright_ld6_in_to_gp_0276_ld562_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */in_to_gp_0276, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_to_gp_10, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_to_gp_134, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_to_gp_78) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_0_bright_ld10_bright_ld2_bright_ld6_in_to_gp_0276_ld562__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_cache bright;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  in_FIFO_buf560_cache in_FIFO_buf560;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_to_gp_103_sm586_0797[d0 = 0, d1, d2] -> [0, d1, d2, 5] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_in_FIFO_buf560563_sm705_01035[d0 = 0, d1, d2] -> [0, d1, d2, 3] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_bright_to_gp_1347_sm587_0799[d0 = 0, d1, d2] -> [0, d1, d2, 8] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; bright_update_0_sm709_01043[d0 = 0, d1, d2] -> [0, d1, d2, 4] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_bright_to_gp_7811_sm758_01129[d0 = 0, d1, d2] -> [0, 8 + d1, 7 + d2, 10] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
//   { load_to_bright_to_gp_103_sm586_0797[d0 = 0, d1, d2] -> [0, d1, d2, 5] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_bright_to_gp_103_sm586_0797(((((-5 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_in_FIFO_buf560563_sm705_01035[d0 = 0, d1, d2] -> [0, d1, d2, 3] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_in_FIFO_buf560563_sm705_01035(((((-3 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_to_gp_1347_sm587_0799[d0 = 0, d1, d2] -> [0, d1, d2, 8] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_bright_to_gp_1347_sm587_0799(((((-8 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_update_0_sm709_01043[d0 = 0, d1, d2] -> [0, d1, d2, 4] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for bright_update_0_sm709_01043(((((-4 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_to_gp_7811_sm758_01129[d0 = 0, d1, d2] -> [0, 8 + d1, 7 + d2, 10] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_bright_to_gp_7811_sm758_01129(((((-10 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-7 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 and 3 <= i3 <= 5; [0, i1, i2, 10] : 8 <= i1 <= 1087 and 7 <= i2 <= 1086; [0, i1, i2, 8] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 0; i1 <= 1087; i1++) {
	    for (int i2 = 0; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : i1 <= 1086 }
	        // { [i0, i1, i2] : i1 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	        if ((((((1086 + -1*i1)) >= 0)))) {
	          load_to_in_FIFO_buf560563_sm705_01035(in_to_gp_0276 /* buf name */, in_FIFO_buf560, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 <= 1086 }
	        // { [i0, i1, i2] : i1 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	        if ((((((1086 + -1*i1)) >= 0)))) {
	          bright_update_0_sm709_01043(in_FIFO_buf560 /* buf name */, bright, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 <= 1086 }
	        // { [i0, i1, i2] : i1 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	        if ((((((1086 + -1*i1)) >= 0)))) {
	          load_to_bright_to_gp_103_sm586_0797(bright /* buf name */, bright_to_gp_10, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 <= 1086 }
	        // { [i0, i1, i2] : i1 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	        if ((((((1086 + -1*i1)) >= 0)))) {
	          load_to_bright_to_gp_1347_sm587_0799(bright /* buf name */, bright_to_gp_134, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 8 and i2 >= 7 }
	        // { [i0, i1, i2] : i1 >= 8 and i2 >= 7 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : -7 + i2 >= 0 }
	        if ((((((-8 + 1*i1)) >= 0) && (((-7 + 1*i2)) >= 0)))) {
	          load_to_bright_to_gp_7811_sm758_01129(bright /* buf name */, bright_to_gp_78, 0, ((-8 + 1*i1)), ((-7 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775(bright_gauss_blur_1_cache& bright_gauss_blur_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_blur_1_to_gp_412, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_1
	auto bright_gauss_blur_1__lp_1_m_bright_gauss_blur_1_ld13__p__0_rp__c____bright_gauss_blur_1_ld14_value = bright_gauss_blur_1_load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775_read_bundle_read(bright_gauss_blur_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_gauss_blur_1_to_gp_412
	bright_gauss_blur_1_to_gp_412.write(bright_gauss_blur_1__lp_1_m_bright_gauss_blur_1_ld13__p__0_rp__c____bright_gauss_blur_1_ld14_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_blur_1_update_0_sm715_01055(bright_FIFO_buf284_cache& bright_FIFO_buf284, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_FIFO_buf284
	auto bright_FIFO_buf284_1_m__lp__lp_1_m_bright_gauss_blur_1_1__p__0_rp___p___m_6_rp___p___m_1_p_7_c_______1_m__lp_bright_gauss_blur_1_0__p___m_6_rp___p___m_1_p_7_value = bright_FIFO_buf284_bright_gauss_blur_1_update_0_sm715_01055_read_bundle_read(bright_FIFO_buf284/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(bright_FIFO_buf284_1_m__lp__lp_1_m_bright_gauss_blur_1_1__p__0_rp___p___m_6_rp___p___m_1_p_7_c_______1_m__lp_bright_gauss_blur_1_0__p___m_6_rp___p___m_1_p_7_value);
	// Produce: bright_gauss_blur_1
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_sm715_01055_write_bundle_write(/* arg names */compute_result, bright_gauss_blur_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_FIFO_buf284287_sm603_0831(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_to_gp_10, bright_FIFO_buf284_cache& bright_FIFO_buf284, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_to_gp_10
	auto bright_to_gp_10__lp_1_m_bright_to_gp_10_ld285__p__0_rp__c____bright_to_gp_10_ld286_value = bright_to_gp_10.read();
	// Produce: bright_FIFO_buf284
	bright_FIFO_buf284_load_to_bright_FIFO_buf284287_sm603_0831_write_bundle_write(/* arg names */bright_to_gp_10__lp_1_m_bright_to_gp_10_ld285__p__0_rp__c____bright_to_gp_10_ld286_value, bright_FIFO_buf284, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_blur_1_0_bright_gauss_blur_1_ld14_bright_to_gp_10_ld286_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_to_gp_10, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_blur_1_to_gp_412) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_blur_1_0_bright_gauss_blur_1_ld14_bright_to_gp_10_ld286__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_FIFO_buf284_cache bright_FIFO_buf284;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_1_cache bright_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084; load_to_bright_FIFO_buf284287_sm603_0831[d0 = 0, d1, d2] -> [0, d1, d2, 7] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 18] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
//   { bright_gauss_blur_1_update_0_sm715_01055[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 13] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for bright_gauss_blur_1_update_0_sm715_01055(((((-13 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_FIFO_buf284287_sm603_0831[d0 = 0, d1, d2] -> [0, d1, d2, 7] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_bright_FIFO_buf284287_sm603_0831(((((-7 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 18] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775(((((-18 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 18] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 13] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 7] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 0; i1 <= 1086; i1++) {
	    for (int i2 = 0; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_bright_FIFO_buf284287_sm603_0831(bright_to_gp_10 /* buf name */, bright_FIFO_buf284, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	          // { [i0, i1, i2] : -2 + i1 >= 0 }
	          // { [i0, i1, i2] : -2 + i2 >= 0 }
	        if ((((((-2 + 1*i1)) >= 0) && (((-2 + 1*i2)) >= 0)))) {
	          bright_gauss_blur_1_update_0_sm715_01055(bright_FIFO_buf284 /* buf name */, bright_gauss_blur_1, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	          // { [i0, i1, i2] : -2 + i1 >= 0 }
	          // { [i0, i1, i2] : -2 + i2 >= 0 }
	        if ((((((-2 + 1*i1)) >= 0) && (((-2 + 1*i2)) >= 0)))) {
	          load_to_bright_gauss_blur_1_to_gp_41215_sm575_0775(bright_gauss_blur_1 /* buf name */, bright_gauss_blur_1_to_gp_412, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void bright_laplace_us_0_update_0_sm746_01111(bright_gauss_ds_1_FIFO_buf308_cache& bright_gauss_ds_1_FIFO_buf308, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1_FIFO_buf308
	auto bright_gauss_ds_1_FIFO_buf308_floor_lp__lp_1_m__lp_1_m_bright_laplace_us_0_1__p__0_rp__rp__div_2_rp___p__0_p_3_c_____floor_lp__lp_1_m_bright_laplace_us_0_0_rp__div_2_rp___p__0_p_3_value = bright_gauss_ds_1_FIFO_buf308_bright_laplace_us_0_update_0_sm746_01111_read_bundle_read(bright_gauss_ds_1_FIFO_buf308/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(bright_gauss_ds_1_FIFO_buf308_floor_lp__lp_1_m__lp_1_m_bright_laplace_us_0_1__p__0_rp__rp__div_2_rp___p__0_p_3_c_____floor_lp__lp_1_m_bright_laplace_us_0_0_rp__div_2_rp___p__0_p_3_value);
	// Produce: bright_laplace_us_0
	bright_laplace_us_0_bright_laplace_us_0_update_0_sm746_01111_write_bundle_write(/* arg names */compute_result, bright_laplace_us_0, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_laplace_us_0_to_gp_76871_sm595_0815(bright_laplace_us_0_cache& bright_laplace_us_0, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_us_0_to_gp_768, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_us_0
	auto bright_laplace_us_0__lp_1_m_bright_laplace_us_0_ld69__p__0_rp__c____bright_laplace_us_0_ld70_value = bright_laplace_us_0_load_to_bright_laplace_us_0_to_gp_76871_sm595_0815_read_bundle_read(bright_laplace_us_0/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_laplace_us_0_to_gp_768
	bright_laplace_us_0_to_gp_768.write(bright_laplace_us_0__lp_1_m_bright_laplace_us_0_ld69__p__0_rp__c____bright_laplace_us_0_ld70_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_1_to_gp_1024, bright_gauss_ds_1_FIFO_buf308_cache& bright_gauss_ds_1_FIFO_buf308, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1_to_gp_1024
	auto bright_gauss_ds_1_to_gp_1024__lp__lp_1_m_bright_gauss_ds_1_to_gp_1024_ld309__p__0_rp___p__3_rp__c_______lp_bright_gauss_ds_1_to_gp_1024_ld310__p__3_rp__value = bright_gauss_ds_1_to_gp_1024.read();
	// Produce: bright_gauss_ds_1_FIFO_buf308
	bright_gauss_ds_1_FIFO_buf308_load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919_write_bundle_write(/* arg names */bright_gauss_ds_1_to_gp_1024__lp__lp_1_m_bright_gauss_ds_1_to_gp_1024_ld309__p__0_rp___p__3_rp__c_______lp_bright_gauss_ds_1_to_gp_1024_ld310__p__3_rp__value, bright_gauss_ds_1_FIFO_buf308, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_ds_1_to_gp_1024_ld310_bright_laplace_us_0_0_bright_laplace_us_0_ld70_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_1_to_gp_1024, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_us_0_to_gp_768) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_ds_1_to_gp_1024_ld310_bright_laplace_us_0_0_bright_laplace_us_0_ld70__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_1_FIFO_buf308_cache bright_gauss_ds_1_FIFO_buf308;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_0_cache bright_laplace_us_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 44] : 0 <= d1 <= 539 and 0 <= d2 <= 539; bright_laplace_us_0_update_0_sm746_01111[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 45] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_bright_laplace_us_0_to_gp_76871_sm595_0815[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 51] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
//   { load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 44] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-44 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_laplace_us_0_update_0_sm746_01111[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 45] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for bright_laplace_us_0_update_0_sm746_01111(((((-45 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { load_to_bright_laplace_us_0_to_gp_76871_sm595_0815[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 51] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_bright_laplace_us_0_to_gp_76871_sm595_0815(((((-51 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : 8 <= i1 <= 1087 and i2 <= 1087 and i3 <= 45 and 2*floor((i1)/2) >= 44 + i1 - i3 and floor((i2)/2) >= 4 and 2*floor((i2)/2) >= 44 + i2 - i3; [0, i1, i2, 51] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 8; i1 <= 1087; i1++) {
	    for (int i2 = 8; i2 <= 1087; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_bright_gauss_ds_1_FIFO_buf308311_sm647_0919(bright_gauss_ds_1_to_gp_1024 /* buf name */, bright_gauss_ds_1_FIFO_buf308, 0, ((-4 + (1*(((1*i1)) >> 1)))), ((-4 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          bright_laplace_us_0_update_0_sm746_01111(bright_gauss_ds_1_FIFO_buf308 /* buf name */, bright_laplace_us_0, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_bright_laplace_us_0_to_gp_76871_sm595_0815(bright_laplace_us_0 /* buf name */, bright_laplace_us_0_to_gp_768, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_laplace_us_1_to_gp_87275_sm570_0765(bright_laplace_us_1_cache& bright_laplace_us_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_us_1_to_gp_872, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_us_1
	auto bright_laplace_us_1__lp_1_m_bright_laplace_us_1_ld73__p__0_rp__c____bright_laplace_us_1_ld74_value = bright_laplace_us_1_load_to_bright_laplace_us_1_to_gp_87275_sm570_0765_read_bundle_read(bright_laplace_us_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_laplace_us_1_to_gp_872
	bright_laplace_us_1_to_gp_872.write(bright_laplace_us_1__lp_1_m_bright_laplace_us_1_ld73__p__0_rp__c____bright_laplace_us_1_ld74_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_2_to_gp_1136, bright_gauss_ds_2_FIFO_buf320_cache& bright_gauss_ds_2_FIFO_buf320, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2_to_gp_1136
	auto bright_gauss_ds_2_to_gp_1136__lp__lp_1_m_bright_gauss_ds_2_to_gp_1136_ld321__p__0_rp___p__1_rp__c_______lp_bright_gauss_ds_2_to_gp_1136_ld322__p__1_rp__value = bright_gauss_ds_2_to_gp_1136.read();
	// Produce: bright_gauss_ds_2_FIFO_buf320
	bright_gauss_ds_2_FIFO_buf320_load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921_write_bundle_write(/* arg names */bright_gauss_ds_2_to_gp_1136__lp__lp_1_m_bright_gauss_ds_2_to_gp_1136_ld321__p__0_rp___p__1_rp__c_______lp_bright_gauss_ds_2_to_gp_1136_ld322__p__1_rp__value, bright_gauss_ds_2_FIFO_buf320, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_us_1_update_0_sm745_01145(bright_gauss_ds_2_FIFO_buf320_cache& bright_gauss_ds_2_FIFO_buf320, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2_FIFO_buf320
	auto bright_gauss_ds_2_FIFO_buf320_floor_lp__lp_1_m__lp_1_m_bright_laplace_us_1_1__p__0_rp__rp__div_2_rp___p__0_p_1_c_____floor_lp__lp_1_m_bright_laplace_us_1_0_rp__div_2_rp___p__0_p_1_value = bright_gauss_ds_2_FIFO_buf320_bright_laplace_us_1_update_0_sm745_01145_read_bundle_read(bright_gauss_ds_2_FIFO_buf320/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(bright_gauss_ds_2_FIFO_buf320_floor_lp__lp_1_m__lp_1_m_bright_laplace_us_1_1__p__0_rp__rp__div_2_rp___p__0_p_1_c_____floor_lp__lp_1_m_bright_laplace_us_1_0_rp__div_2_rp___p__0_p_1_value);
	// Produce: bright_laplace_us_1
	bright_laplace_us_1_bright_laplace_us_1_update_0_sm745_01145_write_bundle_write(/* arg names */compute_result, bright_laplace_us_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_ds_2_to_gp_1136_ld322_bright_laplace_us_1_0_bright_laplace_us_1_ld74_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_2_to_gp_1136, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_us_1_to_gp_872) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_ds_2_to_gp_1136_ld322_bright_laplace_us_1_0_bright_laplace_us_1_ld74__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_2_FIFO_buf320_cache bright_gauss_ds_2_FIFO_buf320;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_1_cache bright_laplace_us_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_laplace_us_1_to_gp_87275_sm570_0765[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 111] : 0 <= d1 <= 539 and 0 <= d2 <= 539; bright_laplace_us_1_update_0_sm745_01145[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 109] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 96] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
//   { load_to_bright_laplace_us_1_to_gp_87275_sm570_0765[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 111] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_bright_laplace_us_1_to_gp_87275_sm570_0765(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-111 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { bright_laplace_us_1_update_0_sm745_01145[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 109] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for bright_laplace_us_1_update_0_sm745_01145(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-109 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 96] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-96 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 111] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 109] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 96] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 10 <= i1 <= 1086 and 10 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 10; i1 <= 1088; i1++) {
	    for (int i2 = 10; i2 <= 1088; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_bright_gauss_ds_2_FIFO_buf320323_sm648_0921(bright_gauss_ds_2_to_gp_1136 /* buf name */, bright_gauss_ds_2_FIFO_buf320, 0, ((-3 + (1*(((2 + 1*i1)) >> 2)))), ((-3 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          bright_laplace_us_1_update_0_sm745_01145(bright_gauss_ds_2_FIFO_buf320 /* buf name */, bright_laplace_us_1, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_bright_laplace_us_1_to_gp_87275_sm570_0765(bright_laplace_us_1 /* buf name */, bright_laplace_us_1_to_gp_872, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_laplace_us_2_to_gp_97679_sm606_0837(bright_laplace_us_2_cache& bright_laplace_us_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_us_2_to_gp_976, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_us_2
	auto bright_laplace_us_2__lp_1_m_bright_laplace_us_2_ld77__p__0_rp__c____bright_laplace_us_2_ld78_value = bright_laplace_us_2_load_to_bright_laplace_us_2_to_gp_97679_sm606_0837_read_bundle_read(bright_laplace_us_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_laplace_us_2_to_gp_976
	bright_laplace_us_2_to_gp_976.write(bright_laplace_us_2__lp_1_m_bright_laplace_us_2_ld77__p__0_rp__c____bright_laplace_us_2_ld78_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_3_to_gp_1248, bright_gauss_ds_3_FIFO_buf332_cache& bright_gauss_ds_3_FIFO_buf332, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_3_to_gp_1248
	auto bright_gauss_ds_3_to_gp_1248__lp_1_m_bright_gauss_ds_3_to_gp_1248_ld333__p__0_rp__c____bright_gauss_ds_3_to_gp_1248_ld334_value = bright_gauss_ds_3_to_gp_1248.read();
	// Produce: bright_gauss_ds_3_FIFO_buf332
	bright_gauss_ds_3_FIFO_buf332_load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963_write_bundle_write(/* arg names */bright_gauss_ds_3_to_gp_1248__lp_1_m_bright_gauss_ds_3_to_gp_1248_ld333__p__0_rp__c____bright_gauss_ds_3_to_gp_1248_ld334_value, bright_gauss_ds_3_FIFO_buf332, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_us_2_update_0_sm744_01143(bright_gauss_ds_3_FIFO_buf332_cache& bright_gauss_ds_3_FIFO_buf332, bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_3_FIFO_buf332
	auto bright_gauss_ds_3_FIFO_buf332_floor_lp__lp_1_m__lp_1_m_bright_laplace_us_2_1__p__0_rp__rp__div_2_rp___p__0_p_0_c_____floor_lp__lp_1_m_bright_laplace_us_2_0_rp__div_2_rp___p__0_p_0_value = bright_gauss_ds_3_FIFO_buf332_bright_laplace_us_2_update_0_sm744_01143_read_bundle_read(bright_gauss_ds_3_FIFO_buf332/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(bright_gauss_ds_3_FIFO_buf332_floor_lp__lp_1_m__lp_1_m_bright_laplace_us_2_1__p__0_rp__rp__div_2_rp___p__0_p_0_c_____floor_lp__lp_1_m_bright_laplace_us_2_0_rp__div_2_rp___p__0_p_0_value);
	// Produce: bright_laplace_us_2
	bright_laplace_us_2_bright_laplace_us_2_update_0_sm744_01143_write_bundle_write(/* arg names */compute_result, bright_laplace_us_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_ds_3_to_gp_1248_ld334_bright_laplace_us_2_0_bright_laplace_us_2_ld78_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_3_to_gp_1248, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_us_2_to_gp_976) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_ds_3_to_gp_1248_ld334_bright_laplace_us_2_0_bright_laplace_us_2_ld78__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_3_FIFO_buf332_cache bright_gauss_ds_3_FIFO_buf332;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_2_cache bright_laplace_us_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_laplace_us_2_to_gp_97679_sm606_0837[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 154] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 146] : 0 <= d1 <= 134 and 0 <= d2 <= 134; bright_laplace_us_2_update_0_sm744_01143[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 150] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
//   { load_to_bright_laplace_us_2_to_gp_97679_sm606_0837[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 154] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_bright_laplace_us_2_to_gp_97679_sm606_0837(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-154 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 146] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-146 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_laplace_us_2_update_0_sm744_01143[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 150] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for bright_laplace_us_2_update_0_sm744_01143(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-150 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 154] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 150] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 146] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1090; i1++) {
	    for (int i2 = 14; i2 <= 1090; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_bright_gauss_ds_3_FIFO_buf332335_sm669_0963(bright_gauss_ds_3_to_gp_1248 /* buf name */, bright_gauss_ds_3_FIFO_buf332, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          bright_laplace_us_2_update_0_sm744_01143(bright_gauss_ds_3_FIFO_buf332 /* buf name */, bright_laplace_us_2, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_bright_laplace_us_2_to_gp_97679_sm606_0837(bright_laplace_us_2 /* buf name */, bright_laplace_us_2_to_gp_976, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_weights_to_gp_148083_sm607_0839(bright_weights_cache& bright_weights, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_to_gp_1480, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights
	auto bright_weights__lp_1_m_bright_weights_ld81__p__0_rp__c____bright_weights_ld82_value = bright_weights_load_to_bright_weights_to_gp_148083_sm607_0839_read_bundle_read(bright_weights/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_weights_to_gp_1480
	bright_weights_to_gp_1480.write(bright_weights__lp_1_m_bright_weights_ld81__p__0_rp__c____bright_weights_ld82_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_update_0_sm707_01039(bright_FIFO_buf288_cache& bright_FIFO_buf288, bright_weights_cache& bright_weights, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_FIFO_buf288
	auto bright_FIFO_buf288_1_m__lp__lp_1_m_bright_weights_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_bright_weights_0__p___m_7_rp___p__0_p_7_value = bright_FIFO_buf288_bright_weights_update_0_sm707_01039_read_bundle_read(bright_FIFO_buf288/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weight_unrolled_1(bright_FIFO_buf288_1_m__lp__lp_1_m_bright_weights_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_bright_weights_0__p___m_7_rp___p__0_p_7_value);
	// Produce: bright_weights
	bright_weights_bright_weights_update_0_sm707_01039_write_bundle_write(/* arg names */compute_result, bright_weights, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_FIFO_buf288291_sm641_0907(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_to_gp_134, bright_FIFO_buf288_cache& bright_FIFO_buf288, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_to_gp_134
	auto bright_to_gp_134__lp_1_m_bright_to_gp_134_ld289__p__0_rp__c____bright_to_gp_134_ld290_value = bright_to_gp_134.read();
	// Produce: bright_FIFO_buf288
	bright_FIFO_buf288_load_to_bright_FIFO_buf288291_sm641_0907_write_bundle_write(/* arg names */bright_to_gp_134__lp_1_m_bright_to_gp_134_ld289__p__0_rp__c____bright_to_gp_134_ld290_value, bright_FIFO_buf288, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_to_gp_134_ld290_bright_weights_0_bright_weights_ld82_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_to_gp_134, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_to_gp_1480) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_to_gp_134_ld290_bright_weights_0_bright_weights_ld82__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_FIFO_buf288_cache bright_FIFO_buf288;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_cache bright_weights;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_weights_to_gp_148083_sm607_0839[d0 = 0, d1, d2] -> [0, d1, d2, 20] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; bright_weights_update_0_sm707_01039[d0 = 0, d1, d2] -> [0, d1, d2, 15] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_bright_FIFO_buf288291_sm641_0907[d0 = 0, d1, d2] -> [0, d1, d2, 9] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
//   { load_to_bright_weights_to_gp_148083_sm607_0839[d0 = 0, d1, d2] -> [0, d1, d2, 20] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_bright_weights_to_gp_148083_sm607_0839(((((-20 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_weights_update_0_sm707_01039[d0 = 0, d1, d2] -> [0, d1, d2, 15] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for bright_weights_update_0_sm707_01039(((((-15 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_FIFO_buf288291_sm641_0907[d0 = 0, d1, d2] -> [0, d1, d2, 9] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_bright_FIFO_buf288291_sm641_0907(((((-9 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 20] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086; [0, i1, i2, 15] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086; [0, i1, i2, 9] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 0; i1 <= 1086; i1++) {
	    for (int i2 = 0; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_bright_FIFO_buf288291_sm641_0907(bright_to_gp_134 /* buf name */, bright_FIFO_buf288, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          bright_weights_update_0_sm707_01039(bright_FIFO_buf288 /* buf name */, bright_weights, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_bright_weights_to_gp_148083_sm607_0839(bright_weights /* buf name */, bright_weights_to_gp_1480, 0, ((1*i1)), ((1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_weights_normed_to_gp_458891_sm573_0771(bright_weights_normed_cache& bright_weights_normed, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_to_gp_4588, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed
	auto bright_weights_normed__lp__lp_1_m_bright_weights_normed_ld89__p__0_rp___p__7_rp__c_______lp_bright_weights_normed_ld90__p__7_rp__value = bright_weights_normed_load_to_bright_weights_normed_to_gp_458891_sm573_0771_read_bundle_read(bright_weights_normed/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_weights_normed_to_gp_4588
	bright_weights_normed_to_gp_4588.write(bright_weights_normed__lp__lp_1_m_bright_weights_normed_ld89__p__0_rp___p__7_rp__c_______lp_bright_weights_normed_ld90__p__7_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_FIFO_buf364367_sm671_0967(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_to_gp_1480, bright_weights_FIFO_buf364_cache& bright_weights_FIFO_buf364, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_to_gp_1480
	auto bright_weights_to_gp_1480__lp_1_m_bright_weights_to_gp_1480_ld365__p__0_rp__c____bright_weights_to_gp_1480_ld366_value = bright_weights_to_gp_1480.read();
	// Produce: bright_weights_FIFO_buf364
	bright_weights_FIFO_buf364_load_to_bright_weights_FIFO_buf364367_sm671_0967_write_bundle_write(/* arg names */bright_weights_to_gp_1480__lp_1_m_bright_weights_to_gp_1480_ld365__p__0_rp__c____bright_weights_to_gp_1480_ld366_value, bright_weights_FIFO_buf364, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_update_0_sm714_01053(bright_weights_FIFO_buf364_cache& bright_weights_FIFO_buf364, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_FIFO_buf364
	auto bright_weights_FIFO_buf364_1_m__lp__lp_1_m_bright_weights_normed_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_bright_weights_normed_0__p___m_7_rp___p__0_p_7_value = bright_weights_FIFO_buf364_bright_weights_normed_update_0_sm714_01053_read_bundle_read(bright_weights_FIFO_buf364/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_normalize_weights_unrolled_1(bright_weights_FIFO_buf364_1_m__lp__lp_1_m_bright_weights_normed_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_bright_weights_normed_0__p___m_7_rp___p__0_p_7_value);
	// Produce: bright_weights_normed
	bright_weights_normed_bright_weights_normed_update_0_sm714_01053_write_bundle_write(/* arg names */compute_result, bright_weights_normed, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_to_gp_158487_sm596_0817(bright_weights_normed_cache& bright_weights_normed, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_to_gp_1584, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed
	auto bright_weights_normed__lp_1_m_bright_weights_normed_ld85__p__0_rp__c____bright_weights_normed_ld86_value = bright_weights_normed_load_to_bright_weights_normed_to_gp_158487_sm596_0817_read_bundle_read(bright_weights_normed/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_weights_normed_to_gp_1584
	bright_weights_normed_to_gp_1584.write(bright_weights_normed__lp_1_m_bright_weights_normed_ld85__p__0_rp__c____bright_weights_normed_ld86_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_weights_normed_0_bright_weights_normed_ld86_bright_weights_normed_ld90_bright_weights_to_gp_1480_ld366_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_to_gp_1480, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_to_gp_1584, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_to_gp_4588) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_weights_normed_0_bright_weights_normed_ld86_bright_weights_normed_ld90_bright_weights_to_gp_1480_ld366__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_weights_FIFO_buf364_cache bright_weights_FIFO_buf364;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_cache bright_weights_normed;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { bright_weights_normed_update_0_sm714_01053[d0 = 0, d1, d2] -> [0, d1, d2, 23] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_bright_weights_normed_to_gp_458891_sm573_0771[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 32] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_bright_weights_FIFO_buf364367_sm671_0967[d0 = 0, d1, d2] -> [0, d1, d2, 21] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_bright_weights_normed_to_gp_158487_sm596_0817[d0 = 0, d1, d2] -> [0, d1, d2, 24] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
//   { bright_weights_normed_update_0_sm714_01053[d0 = 0, d1, d2] -> [0, d1, d2, 23] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for bright_weights_normed_update_0_sm714_01053(((((-23 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_to_gp_458891_sm573_0771[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 32] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_bright_weights_normed_to_gp_458891_sm573_0771(((((-32 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-7 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-7 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_FIFO_buf364367_sm671_0967[d0 = 0, d1, d2] -> [0, d1, d2, 21] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_bright_weights_FIFO_buf364367_sm671_0967(((((-21 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_to_gp_158487_sm596_0817[d0 = 0, d1, d2] -> [0, d1, d2, 24] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_bright_weights_normed_to_gp_158487_sm596_0817(((((-24 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 and 23 <= i3 <= 24; [0, i1, i2, 32] : 7 <= i1 <= 1086 and 7 <= i2 <= 1086; [0, i1, i2, 21] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 0; i1 <= 1086; i1++) {
	    for (int i2 = 0; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_bright_weights_FIFO_buf364367_sm671_0967(bright_weights_to_gp_1480 /* buf name */, bright_weights_FIFO_buf364, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          bright_weights_normed_update_0_sm714_01053(bright_weights_FIFO_buf364 /* buf name */, bright_weights_normed, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_bright_weights_normed_to_gp_158487_sm596_0817(bright_weights_normed /* buf name */, bright_weights_normed_to_gp_1584, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 7 and i2 >= 7 }
	        // { [i0, i1, i2] : i1 >= 7 and i2 >= 7 }
	          // { [i0, i1, i2] : -7 + i1 >= 0 }
	          // { [i0, i1, i2] : -7 + i2 >= 0 }
	        if ((((((-7 + 1*i1)) >= 0) && (((-7 + 1*i2)) >= 0)))) {
	          load_to_bright_weights_normed_to_gp_458891_sm573_0771(bright_weights_normed /* buf name */, bright_weights_normed_to_gp_4588, 0, ((-7 + 1*i1)), ((-7 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_weights_normed_FIFO_buf368371_sm670_0965(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_to_gp_1584, bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_to_gp_1584
	auto bright_weights_normed_to_gp_1584__lp_1_m_bright_weights_normed_to_gp_1584_ld369__p__0_rp__c____bright_weights_normed_to_gp_1584_ld370_value = bright_weights_normed_to_gp_1584.read();
	// Produce: bright_weights_normed_FIFO_buf368
	bright_weights_normed_FIFO_buf368_load_to_bright_weights_normed_FIFO_buf368371_sm670_0965_write_bundle_write(/* arg names */bright_weights_normed_to_gp_1584__lp_1_m_bright_weights_normed_to_gp_1584_ld369__p__0_rp__c____bright_weights_normed_to_gp_1584_ld370_value, bright_weights_normed_FIFO_buf368, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_blur_1_to_gp_1892, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_1
	auto bright_weights_normed_gauss_blur_1__lp_1_m_bright_weights_normed_gauss_blur_1_ld93__p__0_rp__c____bright_weights_normed_gauss_blur_1_ld94_value = bright_weights_normed_gauss_blur_1_load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835_read_bundle_read(bright_weights_normed_gauss_blur_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_weights_normed_gauss_blur_1_to_gp_1892
	bright_weights_normed_gauss_blur_1_to_gp_1892.write(bright_weights_normed_gauss_blur_1__lp_1_m_bright_weights_normed_gauss_blur_1_ld93__p__0_rp__c____bright_weights_normed_gauss_blur_1_ld94_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_blur_1_update_0_sm719_01063(bright_weights_normed_FIFO_buf368_cache& bright_weights_normed_FIFO_buf368, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_FIFO_buf368
	auto bright_weights_normed_FIFO_buf368_1_m__lp__lp_1_m_bright_weights_normed_gauss_blur_1_1__p__0_rp___p___m_6_rp___p___m_1_p_7_c_______1_m__lp_bright_weights_normed_gauss_blur_1_0__p___m_6_rp___p___m_1_p_7_value = bright_weights_normed_FIFO_buf368_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_read_bundle_read(bright_weights_normed_FIFO_buf368/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(bright_weights_normed_FIFO_buf368_1_m__lp__lp_1_m_bright_weights_normed_gauss_blur_1_1__p__0_rp___p___m_6_rp___p___m_1_p_7_c_______1_m__lp_bright_weights_normed_gauss_blur_1_0__p___m_6_rp___p___m_1_p_7_value);
	// Produce: bright_weights_normed_gauss_blur_1
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_sm719_01063_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_blur_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_weights_normed_gauss_blur_1_0_bright_weights_normed_gauss_blur_1_ld94_bright_weights_normed_to_gp_1584_ld370_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_to_gp_1584, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_blur_1_to_gp_1892) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_weights_normed_gauss_blur_1_0_bright_weights_normed_gauss_blur_1_ld94_bright_weights_normed_to_gp_1584_ld370__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_weights_normed_FIFO_buf368_cache bright_weights_normed_FIFO_buf368;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_1_cache bright_weights_normed_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_weights_normed_FIFO_buf368371_sm670_0965[d0 = 0, d1, d2] -> [0, d1, d2, 26] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 33] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084; bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
//   { load_to_bright_weights_normed_FIFO_buf368371_sm670_0965[d0 = 0, d1, d2] -> [0, d1, d2, 26] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_bright_weights_normed_FIFO_buf368371_sm670_0965(((((-26 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 33] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835(((((-33 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_weights_normed_gauss_blur_1_update_0_sm719_01063[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 29] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for bright_weights_normed_gauss_blur_1_update_0_sm719_01063(((((-29 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 33] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 29] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 26] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 0; i1 <= 1086; i1++) {
	    for (int i2 = 0; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_bright_weights_normed_FIFO_buf368371_sm670_0965(bright_weights_normed_to_gp_1584 /* buf name */, bright_weights_normed_FIFO_buf368, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	          // { [i0, i1, i2] : -2 + i1 >= 0 }
	          // { [i0, i1, i2] : -2 + i2 >= 0 }
	        if ((((((-2 + 1*i1)) >= 0) && (((-2 + 1*i2)) >= 0)))) {
	          bright_weights_normed_gauss_blur_1_update_0_sm719_01063(bright_weights_normed_FIFO_buf368 /* buf name */, bright_weights_normed_gauss_blur_1, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	          // { [i0, i1, i2] : -2 + i1 >= 0 }
	          // { [i0, i1, i2] : -2 + i2 >= 0 }
	        if ((((((-2 + 1*i1)) >= 0) && (((-2 + 1*i2)) >= 0)))) {
	          load_to_bright_weights_normed_gauss_blur_1_to_gp_189295_sm605_0835(bright_weights_normed_gauss_blur_1 /* buf name */, bright_weights_normed_gauss_blur_1_to_gp_1892, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_ds_1_to_gp_16104, bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_1_to_gp_16104
	auto bright_weights_normed_gauss_ds_1_to_gp_16104__lp_1_m_bright_weights_normed_gauss_ds_1_to_gp_16104_ld389__p__0_rp__c____bright_weights_normed_gauss_ds_1_to_gp_16104_ld390_value = bright_weights_normed_gauss_ds_1_to_gp_16104.read();
	// Produce: bright_weights_normed_gauss_ds_1_FIFO_buf388
	bright_weights_normed_gauss_ds_1_FIFO_buf388_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945_write_bundle_write(/* arg names */bright_weights_normed_gauss_ds_1_to_gp_16104__lp_1_m_bright_weights_normed_gauss_ds_1_to_gp_16104_ld389__p__0_rp__c____bright_weights_normed_gauss_ds_1_to_gp_16104_ld390_value, bright_weights_normed_gauss_ds_1_FIFO_buf388, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_blur_2_update_0_sm728_01081(bright_weights_normed_gauss_ds_1_FIFO_buf388_cache& bright_weights_normed_gauss_ds_1_FIFO_buf388, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_1_FIFO_buf388
	auto bright_weights_normed_gauss_ds_1_FIFO_buf388_1_m__lp__lp_1_m_bright_weights_normed_gauss_blur_2_1__p__0_rp___p___m_2_rp___p___m_1_p_3_c_______1_m__lp_bright_weights_normed_gauss_blur_2_0__p___m_2_rp___p___m_1_p_3_value = bright_weights_normed_gauss_ds_1_FIFO_buf388_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_read_bundle_read(bright_weights_normed_gauss_ds_1_FIFO_buf388/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(bright_weights_normed_gauss_ds_1_FIFO_buf388_1_m__lp__lp_1_m_bright_weights_normed_gauss_blur_2_1__p__0_rp___p___m_2_rp___p___m_1_p_3_c_______1_m__lp_bright_weights_normed_gauss_blur_2_0__p___m_2_rp___p___m_1_p_3_value);
	// Produce: bright_weights_normed_gauss_blur_2
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_sm728_01081_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_blur_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_blur_2_to_gp_1996, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_2
	auto bright_weights_normed_gauss_blur_2__lp_1_m_bright_weights_normed_gauss_blur_2_ld97__p__0_rp__c____bright_weights_normed_gauss_blur_2_ld98_value = bright_weights_normed_gauss_blur_2_load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795_read_bundle_read(bright_weights_normed_gauss_blur_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_weights_normed_gauss_blur_2_to_gp_1996
	bright_weights_normed_gauss_blur_2_to_gp_1996.write(bright_weights_normed_gauss_blur_2__lp_1_m_bright_weights_normed_gauss_blur_2_ld97__p__0_rp__c____bright_weights_normed_gauss_blur_2_ld98_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_weights_normed_gauss_blur_2_0_bright_weights_normed_gauss_blur_2_ld98_bright_weights_normed_gauss_ds_1_to_gp_16104_ld390_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_ds_1_to_gp_16104, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_blur_2_to_gp_1996) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_weights_normed_gauss_blur_2_0_bright_weights_normed_gauss_blur_2_ld98_bright_weights_normed_gauss_ds_1_to_gp_16104_ld390__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_2_cache bright_weights_normed_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_1_FIFO_buf388_cache bright_weights_normed_gauss_ds_1_FIFO_buf388;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 55] : 0 <= d1 <= 542 and 0 <= d2 <= 542; bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540; load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 76] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
//   { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 55] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-55 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_weights_normed_gauss_blur_2_update_0_sm728_01081[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 67] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for bright_weights_normed_gauss_blur_2_update_0_sm728_01081(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-67 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 76] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-76 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 76] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086; [0, i1, i2, 67] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086; [0, i1, i2, 55] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 2; i1 <= 1086; i1++) {
	    for (int i2 = 2; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_bright_weights_normed_gauss_ds_1_FIFO_buf388391_sm660_0945(bright_weights_normed_gauss_ds_1_to_gp_16104 /* buf name */, bright_weights_normed_gauss_ds_1_FIFO_buf388, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -6 + i1 >= 0 }
	          // { [i0, i1, i2] : -6 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-6 + 1*i1)) >= 0) && (((-6 + 1*i2)) >= 0)))) {
	          bright_weights_normed_gauss_blur_2_update_0_sm728_01081(bright_weights_normed_gauss_ds_1_FIFO_buf388 /* buf name */, bright_weights_normed_gauss_blur_2, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -6 + i1 >= 0 }
	          // { [i0, i1, i2] : -6 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-6 + 1*i1)) >= 0) && (((-6 + 1*i2)) >= 0)))) {
	          load_to_bright_weights_normed_gauss_blur_2_to_gp_199699_sm585_0795(bright_weights_normed_gauss_blur_2 /* buf name */, bright_weights_normed_gauss_blur_2_to_gp_1996, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void bright_weights_normed_gauss_blur_3_update_0_sm735_01095(bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_2_FIFO_buf396
	auto bright_weights_normed_gauss_ds_2_FIFO_buf396_1_m__lp_1_m_bright_weights_normed_gauss_blur_3_1__p__0_rp___p___m_1_p_1_c_____1_m_bright_weights_normed_gauss_blur_3_0__p___m_1_p_1_value = bright_weights_normed_gauss_ds_2_FIFO_buf396_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_read_bundle_read(bright_weights_normed_gauss_ds_2_FIFO_buf396/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(bright_weights_normed_gauss_ds_2_FIFO_buf396_1_m__lp_1_m_bright_weights_normed_gauss_blur_3_1__p__0_rp___p___m_1_p_1_c_____1_m_bright_weights_normed_gauss_blur_3_0__p___m_1_p_1_value);
	// Produce: bright_weights_normed_gauss_blur_3
	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_sm735_01095_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_blur_3, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793(bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_blur_3_to_gp_20100, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_3
	auto bright_weights_normed_gauss_blur_3__lp_1_m_bright_weights_normed_gauss_blur_3_ld101__p__0_rp__c____bright_weights_normed_gauss_blur_3_ld102_value = bright_weights_normed_gauss_blur_3_load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793_read_bundle_read(bright_weights_normed_gauss_blur_3/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_weights_normed_gauss_blur_3_to_gp_20100
	bright_weights_normed_gauss_blur_3_to_gp_20100.write(bright_weights_normed_gauss_blur_3__lp_1_m_bright_weights_normed_gauss_blur_3_ld101__p__0_rp__c____bright_weights_normed_gauss_blur_3_ld102_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_ds_2_to_gp_17112, bright_weights_normed_gauss_ds_2_FIFO_buf396_cache& bright_weights_normed_gauss_ds_2_FIFO_buf396, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_2_to_gp_17112
	auto bright_weights_normed_gauss_ds_2_to_gp_17112__lp_1_m_bright_weights_normed_gauss_ds_2_to_gp_17112_ld397__p__0_rp__c____bright_weights_normed_gauss_ds_2_to_gp_17112_ld398_value = bright_weights_normed_gauss_ds_2_to_gp_17112.read();
	// Produce: bright_weights_normed_gauss_ds_2_FIFO_buf396
	bright_weights_normed_gauss_ds_2_FIFO_buf396_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969_write_bundle_write(/* arg names */bright_weights_normed_gauss_ds_2_to_gp_17112__lp_1_m_bright_weights_normed_gauss_ds_2_to_gp_17112_ld397__p__0_rp__c____bright_weights_normed_gauss_ds_2_to_gp_17112_ld398_value, bright_weights_normed_gauss_ds_2_FIFO_buf396, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_weights_normed_gauss_blur_3_0_bright_weights_normed_gauss_blur_3_ld102_bright_weights_normed_gauss_ds_2_to_gp_17112_ld398_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_ds_2_to_gp_17112, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_blur_3_to_gp_20100) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_weights_normed_gauss_blur_3_0_bright_weights_normed_gauss_blur_3_ld102_bright_weights_normed_gauss_ds_2_to_gp_17112_ld398__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_3_cache bright_weights_normed_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_2_FIFO_buf396_cache bright_weights_normed_gauss_ds_2_FIFO_buf396;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 114] : 0 <= d1 <= 270 and 0 <= d2 <= 270; bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268; load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 122] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
//   { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 114] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-114 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_weights_normed_gauss_blur_3_update_0_sm735_01095[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 120] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for bright_weights_normed_gauss_blur_3_update_0_sm735_01095(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-120 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 122] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-122 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 122] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 120] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 114] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 6; i1 <= 1086; i1++) {
	    for (int i2 = 6; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_bright_weights_normed_gauss_ds_2_FIFO_buf396399_sm672_0969(bright_weights_normed_gauss_ds_2_to_gp_17112 /* buf name */, bright_weights_normed_gauss_ds_2_FIFO_buf396, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0) && (((-14 + 1*i2)) >= 0)))) {
	          bright_weights_normed_gauss_blur_3_update_0_sm735_01095(bright_weights_normed_gauss_ds_2_FIFO_buf396 /* buf name */, bright_weights_normed_gauss_blur_3, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0) && (((-14 + 1*i2)) >= 0)))) {
	          load_to_bright_weights_normed_gauss_blur_3_to_gp_20100103_sm584_0793(bright_weights_normed_gauss_blur_3 /* buf name */, bright_weights_normed_gauss_blur_3_to_gp_20100, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_blur_1_to_gp_1892, bright_weights_normed_gauss_blur_1_FIFO_buf376_cache& bright_weights_normed_gauss_blur_1_FIFO_buf376, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_1_to_gp_1892
	auto bright_weights_normed_gauss_blur_1_to_gp_1892__lp_1_m_bright_weights_normed_gauss_blur_1_to_gp_1892_ld377__p__0_rp__c____bright_weights_normed_gauss_blur_1_to_gp_1892_ld378_value = bright_weights_normed_gauss_blur_1_to_gp_1892.read();
	// Produce: bright_weights_normed_gauss_blur_1_FIFO_buf376
	bright_weights_normed_gauss_blur_1_FIFO_buf376_load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987_write_bundle_write(/* arg names */bright_weights_normed_gauss_blur_1_to_gp_1892__lp_1_m_bright_weights_normed_gauss_blur_1_to_gp_1892_ld377__p__0_rp__c____bright_weights_normed_gauss_blur_1_to_gp_1892_ld378_value, bright_weights_normed_gauss_blur_1_FIFO_buf376, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_ds_1_update_0_sm727_01079(bright_weights_normed_gauss_blur_1_FIFO_buf376_cache& bright_weights_normed_gauss_blur_1_FIFO_buf376, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_1_FIFO_buf376
	auto bright_weights_normed_gauss_blur_1_FIFO_buf376_2_m__lp__lp_1_m_bright_weights_normed_gauss_ds_1_1__p__0_rp___p___m_3_rp___p__0_p_6_c_______2_m__lp_bright_weights_normed_gauss_ds_1_0__p___m_3_rp___p__0_p_6_value = bright_weights_normed_gauss_blur_1_FIFO_buf376_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_read_bundle_read(bright_weights_normed_gauss_blur_1_FIFO_buf376/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(bright_weights_normed_gauss_blur_1_FIFO_buf376_2_m__lp__lp_1_m_bright_weights_normed_gauss_ds_1_1__p__0_rp___p___m_3_rp___p__0_p_6_c_______2_m__lp_bright_weights_normed_gauss_ds_1_0__p___m_3_rp___p__0_p_6_value);
	// Produce: bright_weights_normed_gauss_ds_1
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_sm727_01079_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_ds_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_ds_1_to_gp_46108, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_1
	auto bright_weights_normed_gauss_ds_1__lp__lp_1_m_bright_weights_normed_gauss_ds_1_ld109__p__0_rp___p__3_rp__c_______lp_bright_weights_normed_gauss_ds_1_ld110__p__3_rp__value = bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841_read_bundle_read(bright_weights_normed_gauss_ds_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_weights_normed_gauss_ds_1_to_gp_46108
	bright_weights_normed_gauss_ds_1_to_gp_46108.write(bright_weights_normed_gauss_ds_1__lp__lp_1_m_bright_weights_normed_gauss_ds_1_ld109__p__0_rp___p__3_rp__c_______lp_bright_weights_normed_gauss_ds_1_ld110__p__3_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_ds_1_to_gp_16104, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_1
	auto bright_weights_normed_gauss_ds_1__lp_1_m_bright_weights_normed_gauss_ds_1_ld105__p__0_rp__c____bright_weights_normed_gauss_ds_1_ld106_value = bright_weights_normed_gauss_ds_1_load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805_read_bundle_read(bright_weights_normed_gauss_ds_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_weights_normed_gauss_ds_1_to_gp_16104
	bright_weights_normed_gauss_ds_1_to_gp_16104.write(bright_weights_normed_gauss_ds_1__lp_1_m_bright_weights_normed_gauss_ds_1_ld105__p__0_rp__c____bright_weights_normed_gauss_ds_1_ld106_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_weights_normed_gauss_blur_1_to_gp_1892_ld378_bright_weights_normed_gauss_ds_1_0_bright_weights_normed_gauss_ds_1_ld106_bright_weights_normed_gauss_ds_1_ld110_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_blur_1_to_gp_1892, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_ds_1_to_gp_16104, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_ds_1_to_gp_46108) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_weights_normed_gauss_blur_1_to_gp_1892_ld378_bright_weights_normed_gauss_ds_1_0_bright_weights_normed_gauss_ds_1_ld106_bright_weights_normed_gauss_ds_1_ld110__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_1_FIFO_buf376_cache bright_weights_normed_gauss_blur_1_FIFO_buf376;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_1_cache bright_weights_normed_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 36] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084; bright_weights_normed_gauss_ds_1_update_0_sm727_01079[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 41] : 0 <= d1 <= 542 and 0 <= d2 <= 542; load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 43] : 0 <= d1 <= 542 and 0 <= d2 <= 542; load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 50] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
//   { load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 36] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987(((((-36 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_weights_normed_gauss_ds_1_update_0_sm727_01079[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 41] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for bright_weights_normed_gauss_ds_1_update_0_sm727_01079(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-41 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 43] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-43 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 50] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-50 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 50] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 43] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 41] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 36] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 2; i1 <= 1088; i1++) {
	    for (int i2 = 2; i2 <= 1088; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((1086 + -1*i1)) >= 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_bright_weights_normed_gauss_blur_1_FIFO_buf376379_sm681_0987(bright_weights_normed_gauss_blur_1_to_gp_1892 /* buf name */, bright_weights_normed_gauss_blur_1_FIFO_buf376, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 and i2 <= 1086 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 and i2 <= 1086 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((1086 + -1*i1)) >= 0) && (((1086 + -1*i2)) >= 0)))) {
	          bright_weights_normed_gauss_ds_1_update_0_sm727_01079(bright_weights_normed_gauss_blur_1_FIFO_buf376 /* buf name */, bright_weights_normed_gauss_ds_1, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 and i2 <= 1086 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 and i2 <= 1086 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((1086 + -1*i1)) >= 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_bright_weights_normed_gauss_ds_1_to_gp_16104107_sm590_0805(bright_weights_normed_gauss_ds_1 /* buf name */, bright_weights_normed_gauss_ds_1_to_gp_16104, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and i2 >= 10 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and i2 >= 10 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -10 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-10 + 1*i2)) >= 0)))) {
	          load_to_bright_weights_normed_gauss_ds_1_to_gp_46108111_sm608_0841(bright_weights_normed_gauss_ds_1 /* buf name */, bright_weights_normed_gauss_ds_1_to_gp_46108, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_ds_2_to_gp_47116, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_2
	auto bright_weights_normed_gauss_ds_2__lp__lp_1_m_bright_weights_normed_gauss_ds_2_ld117__p__0_rp___p__1_rp__c_______lp_bright_weights_normed_gauss_ds_2_ld118__p__1_rp__value = bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843_read_bundle_read(bright_weights_normed_gauss_ds_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_weights_normed_gauss_ds_2_to_gp_47116
	bright_weights_normed_gauss_ds_2_to_gp_47116.write(bright_weights_normed_gauss_ds_2__lp__lp_1_m_bright_weights_normed_gauss_ds_2_ld117__p__0_rp___p__1_rp__c_______lp_bright_weights_normed_gauss_ds_2_ld118__p__1_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_blur_2_to_gp_1996, bright_weights_normed_gauss_blur_2_FIFO_buf380_cache& bright_weights_normed_gauss_blur_2_FIFO_buf380, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_2_to_gp_1996
	auto bright_weights_normed_gauss_blur_2_to_gp_1996__lp_1_m_bright_weights_normed_gauss_blur_2_to_gp_1996_ld381__p__0_rp__c____bright_weights_normed_gauss_blur_2_to_gp_1996_ld382_value = bright_weights_normed_gauss_blur_2_to_gp_1996.read();
	// Produce: bright_weights_normed_gauss_blur_2_FIFO_buf380
	bright_weights_normed_gauss_blur_2_FIFO_buf380_load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941_write_bundle_write(/* arg names */bright_weights_normed_gauss_blur_2_to_gp_1996__lp_1_m_bright_weights_normed_gauss_blur_2_to_gp_1996_ld381__p__0_rp__c____bright_weights_normed_gauss_blur_2_to_gp_1996_ld382_value, bright_weights_normed_gauss_blur_2_FIFO_buf380, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_ds_2_to_gp_17112, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_2
	auto bright_weights_normed_gauss_ds_2__lp_1_m_bright_weights_normed_gauss_ds_2_ld113__p__0_rp__c____bright_weights_normed_gauss_ds_2_ld114_value = bright_weights_normed_gauss_ds_2_load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871_read_bundle_read(bright_weights_normed_gauss_ds_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_weights_normed_gauss_ds_2_to_gp_17112
	bright_weights_normed_gauss_ds_2_to_gp_17112.write(bright_weights_normed_gauss_ds_2__lp_1_m_bright_weights_normed_gauss_ds_2_ld113__p__0_rp__c____bright_weights_normed_gauss_ds_2_ld114_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_ds_2_update_0_sm734_01093(bright_weights_normed_gauss_blur_2_FIFO_buf380_cache& bright_weights_normed_gauss_blur_2_FIFO_buf380, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_2_FIFO_buf380
	auto bright_weights_normed_gauss_blur_2_FIFO_buf380_2_m__lp__lp_1_m_bright_weights_normed_gauss_ds_2_1__p__0_rp___p___m_1_rp___p__0_p_2_c_______2_m__lp_bright_weights_normed_gauss_ds_2_0__p___m_1_rp___p__0_p_2_value = bright_weights_normed_gauss_blur_2_FIFO_buf380_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_read_bundle_read(bright_weights_normed_gauss_blur_2_FIFO_buf380/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(bright_weights_normed_gauss_blur_2_FIFO_buf380_2_m__lp__lp_1_m_bright_weights_normed_gauss_ds_2_1__p__0_rp___p___m_1_rp___p__0_p_2_c_______2_m__lp_bright_weights_normed_gauss_ds_2_0__p___m_1_rp___p__0_p_2_value);
	// Produce: bright_weights_normed_gauss_ds_2
	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_sm734_01093_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_ds_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_weights_normed_gauss_blur_2_to_gp_1996_ld382_bright_weights_normed_gauss_ds_2_0_bright_weights_normed_gauss_ds_2_ld114_bright_weights_normed_gauss_ds_2_ld118_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_blur_2_to_gp_1996, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_ds_2_to_gp_17112, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_ds_2_to_gp_47116) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_weights_normed_gauss_blur_2_to_gp_1996_ld382_bright_weights_normed_gauss_ds_2_0_bright_weights_normed_gauss_ds_2_ld114_bright_weights_normed_gauss_ds_2_ld118__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_2_FIFO_buf380_cache bright_weights_normed_gauss_blur_2_FIFO_buf380;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_2_cache bright_weights_normed_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 91] : 0 <= d1 <= 540 and 0 <= d2 <= 540; bright_weights_normed_gauss_ds_2_update_0_sm734_01093[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 100] : 0 <= d1 <= 270 and 0 <= d2 <= 270; load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 108] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 110] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
//   { load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 91] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-91 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_weights_normed_gauss_ds_2_update_0_sm734_01093[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 100] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for bright_weights_normed_gauss_ds_2_update_0_sm734_01093(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-100 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 108] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-108 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 110] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-110 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 110] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086; [0, i1, i2, 108] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 10 <= i1 <= 1086 and 10 <= i2 <= 1086; [0, i1, i2, 100] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086; [0, i1, i2, 91] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 6; i1 <= 1086; i1++) {
	    for (int i2 = 6; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_bright_weights_normed_gauss_blur_2_FIFO_buf380383_sm658_0941(bright_weights_normed_gauss_blur_2_to_gp_1996 /* buf name */, bright_weights_normed_gauss_blur_2_FIFO_buf380, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          bright_weights_normed_gauss_ds_2_update_0_sm734_01093(bright_weights_normed_gauss_blur_2_FIFO_buf380 /* buf name */, bright_weights_normed_gauss_ds_2, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and i2 >= 10 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and i2 >= 10 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -10 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-10 + 1*i2)) >= 0)))) {
	          load_to_bright_weights_normed_gauss_ds_2_to_gp_47116119_sm609_0843(bright_weights_normed_gauss_ds_2 /* buf name */, bright_weights_normed_gauss_ds_2_to_gp_47116, 0, ((-3 + (1*(((2 + 1*i1)) >> 2)))), ((-3 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_bright_weights_normed_gauss_ds_2_to_gp_17112115_sm623_0871(bright_weights_normed_gauss_ds_2 /* buf name */, bright_weights_normed_gauss_ds_2_to_gp_17112, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801(bright_gauss_blur_2_cache& bright_gauss_blur_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_blur_2_to_gp_516, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_2
	auto bright_gauss_blur_2__lp_1_m_bright_gauss_blur_2_ld17__p__0_rp__c____bright_gauss_blur_2_ld18_value = bright_gauss_blur_2_load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801_read_bundle_read(bright_gauss_blur_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_gauss_blur_2_to_gp_516
	bright_gauss_blur_2_to_gp_516.write(bright_gauss_blur_2__lp_1_m_bright_gauss_blur_2_ld17__p__0_rp__c____bright_gauss_blur_2_ld18_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_1_to_gp_228, bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1_to_gp_228
	auto bright_gauss_ds_1_to_gp_228__lp_1_m_bright_gauss_ds_1_to_gp_228_ld313__p__0_rp__c____bright_gauss_ds_1_to_gp_228_ld314_value = bright_gauss_ds_1_to_gp_228.read();
	// Produce: bright_gauss_ds_1_FIFO_buf312
	bright_gauss_ds_1_FIFO_buf312_load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931_write_bundle_write(/* arg names */bright_gauss_ds_1_to_gp_228__lp_1_m_bright_gauss_ds_1_to_gp_228_ld313__p__0_rp__c____bright_gauss_ds_1_to_gp_228_ld314_value, bright_gauss_ds_1_FIFO_buf312, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_blur_2_update_0_sm721_01067(bright_gauss_ds_1_FIFO_buf312_cache& bright_gauss_ds_1_FIFO_buf312, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1_FIFO_buf312
	auto bright_gauss_ds_1_FIFO_buf312_1_m__lp__lp_1_m_bright_gauss_blur_2_1__p__0_rp___p___m_2_rp___p___m_1_p_3_c_______1_m__lp_bright_gauss_blur_2_0__p___m_2_rp___p___m_1_p_3_value = bright_gauss_ds_1_FIFO_buf312_bright_gauss_blur_2_update_0_sm721_01067_read_bundle_read(bright_gauss_ds_1_FIFO_buf312/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(bright_gauss_ds_1_FIFO_buf312_1_m__lp__lp_1_m_bright_gauss_blur_2_1__p__0_rp___p___m_2_rp___p___m_1_p_3_c_______1_m__lp_bright_gauss_blur_2_0__p___m_2_rp___p___m_1_p_3_value);
	// Produce: bright_gauss_blur_2
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_sm721_01067_write_bundle_write(/* arg names */compute_result, bright_gauss_blur_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_blur_2_0_bright_gauss_blur_2_ld18_bright_gauss_ds_1_to_gp_228_ld314_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_1_to_gp_228, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_blur_2_to_gp_516) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_blur_2_0_bright_gauss_blur_2_ld18_bright_gauss_ds_1_to_gp_228_ld314__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_2_cache bright_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_1_FIFO_buf312_cache bright_gauss_ds_1_FIFO_buf312;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 68] : 0 <= d1 <= 540 and 0 <= d2 <= 540; bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540; load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 42] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
//   { load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 68] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-68 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_gauss_blur_2_update_0_sm721_01067[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 58] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for bright_gauss_blur_2_update_0_sm721_01067(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-58 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 42] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-42 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 68] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086; [0, i1, i2, 58] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086; [0, i1, i2, 42] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 2; i1 <= 1086; i1++) {
	    for (int i2 = 2; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_bright_gauss_ds_1_FIFO_buf312315_sm653_0931(bright_gauss_ds_1_to_gp_228 /* buf name */, bright_gauss_ds_1_FIFO_buf312, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -6 + i1 >= 0 }
	          // { [i0, i1, i2] : -6 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-6 + 1*i1)) >= 0) && (((-6 + 1*i2)) >= 0)))) {
	          bright_gauss_blur_2_update_0_sm721_01067(bright_gauss_ds_1_FIFO_buf312 /* buf name */, bright_gauss_blur_2, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -6 + i1 >= 0 }
	          // { [i0, i1, i2] : -6 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-6 + 1*i1)) >= 0) && (((-6 + 1*i2)) >= 0)))) {
	          load_to_bright_gauss_blur_2_to_gp_51619_sm588_0801(bright_gauss_blur_2 /* buf name */, bright_gauss_blur_2_to_gp_516, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void bright_weights_normed_gauss_ds_3_update_0_sm743_01133(bright_weights_normed_gauss_blur_3_FIFO_buf384_cache& bright_weights_normed_gauss_blur_3_FIFO_buf384, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_3_FIFO_buf384
	auto bright_weights_normed_gauss_blur_3_FIFO_buf384_2_m__lp_1_m_bright_weights_normed_gauss_ds_3_1__p__0_rp___p__0_p_0_c_____2_m_bright_weights_normed_gauss_ds_3_0__p__0_p_0_value = bright_weights_normed_gauss_blur_3_FIFO_buf384_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_read_bundle_read(bright_weights_normed_gauss_blur_3_FIFO_buf384/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(bright_weights_normed_gauss_blur_3_FIFO_buf384_2_m__lp_1_m_bright_weights_normed_gauss_ds_3_1__p__0_rp___p__0_p_0_c_____2_m_bright_weights_normed_gauss_ds_3_0__p__0_p_0_value);
	// Produce: bright_weights_normed_gauss_ds_3
	bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_sm743_01133_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_ds_3, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873(bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_ds_3_to_gp_48120, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_3
	auto bright_weights_normed_gauss_ds_3__lp_1_m_bright_weights_normed_gauss_ds_3_ld121__p__0_rp__c____bright_weights_normed_gauss_ds_3_ld122_value = bright_weights_normed_gauss_ds_3_load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873_read_bundle_read(bright_weights_normed_gauss_ds_3/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_weights_normed_gauss_ds_3_to_gp_48120
	bright_weights_normed_gauss_ds_3_to_gp_48120.write(bright_weights_normed_gauss_ds_3__lp_1_m_bright_weights_normed_gauss_ds_3_ld121__p__0_rp__c____bright_weights_normed_gauss_ds_3_ld122_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_blur_3_to_gp_20100, bright_weights_normed_gauss_blur_3_FIFO_buf384_cache& bright_weights_normed_gauss_blur_3_FIFO_buf384, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_3_to_gp_20100
	auto bright_weights_normed_gauss_blur_3_to_gp_20100__lp_1_m_bright_weights_normed_gauss_blur_3_to_gp_20100_ld385__p__0_rp__c____bright_weights_normed_gauss_blur_3_to_gp_20100_ld386_value = bright_weights_normed_gauss_blur_3_to_gp_20100.read();
	// Produce: bright_weights_normed_gauss_blur_3_FIFO_buf384
	bright_weights_normed_gauss_blur_3_FIFO_buf384_load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943_write_bundle_write(/* arg names */bright_weights_normed_gauss_blur_3_to_gp_20100__lp_1_m_bright_weights_normed_gauss_blur_3_to_gp_20100_ld385__p__0_rp__c____bright_weights_normed_gauss_blur_3_to_gp_20100_ld386_value, bright_weights_normed_gauss_blur_3_FIFO_buf384, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_weights_normed_gauss_blur_3_to_gp_20100_ld386_bright_weights_normed_gauss_ds_3_0_bright_weights_normed_gauss_ds_3_ld122_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_blur_3_to_gp_20100, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_ds_3_to_gp_48120) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_weights_normed_gauss_blur_3_to_gp_20100_ld386_bright_weights_normed_gauss_ds_3_0_bright_weights_normed_gauss_ds_3_ld122__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_3_FIFO_buf384_cache bright_weights_normed_gauss_blur_3_FIFO_buf384;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_3_cache bright_weights_normed_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 138] : 0 <= d1 <= 268 and 0 <= d2 <= 268; load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 157] : 0 <= d1 <= 134 and 0 <= d2 <= 134; bright_weights_normed_gauss_ds_3_update_0_sm743_01133[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 149] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
//   { load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 138] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-138 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 157] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-157 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_weights_normed_gauss_ds_3_update_0_sm743_01133[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 149] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for bright_weights_normed_gauss_ds_3_update_0_sm743_01133(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-149 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 157] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 149] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 138] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1086; i1++) {
	    for (int i2 = 14; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_bright_weights_normed_gauss_blur_3_FIFO_buf384387_sm659_0943(bright_weights_normed_gauss_blur_3_to_gp_20100 /* buf name */, bright_weights_normed_gauss_blur_3_FIFO_buf384, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          bright_weights_normed_gauss_ds_3_update_0_sm743_01133(bright_weights_normed_gauss_blur_3_FIFO_buf384 /* buf name */, bright_weights_normed_gauss_ds_3, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_bright_weights_normed_gauss_ds_3_to_gp_48120123_sm624_0873(bright_weights_normed_gauss_ds_3 /* buf name */, bright_weights_normed_gauss_ds_3_to_gp_48120, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_in_FIFO_buf564567_sm691_01007(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */in_to_gp_21280, in_FIFO_buf564_cache& in_FIFO_buf564, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: in_to_gp_21280
	auto in_to_gp_21280__lp_1_m_in_to_gp_21280_ld565__p__0_rp__c____in_to_gp_21280_ld566_value = in_to_gp_21280.read();
	// Produce: in_FIFO_buf564
	in_FIFO_buf564_load_to_in_FIFO_buf564567_sm691_01007_write_bundle_write(/* arg names */in_to_gp_21280__lp_1_m_in_to_gp_21280_ld565__p__0_rp__c____in_to_gp_21280_ld566_value, in_FIFO_buf564, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_to_gp_34132135_sm611_0847(dark_cache& dark, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_to_gp_34132, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark
	auto dark__lp_1_m_dark_ld133__p__0_rp__c____dark_ld134_value = dark_load_to_dark_to_gp_34132135_sm611_0847_read_bundle_read(dark/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_to_gp_34132
	dark_to_gp_34132.write(dark__lp_1_m_dark_ld133__p__0_rp__c____dark_ld134_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_to_gp_28128131_sm610_0845(dark_cache& dark, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_to_gp_28128, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark
	auto dark__lp__lp_1_m_dark_ld129__p__0_rp___p__7_rp__c_______lp_dark_ld130__p__7_rp__value = dark_load_to_dark_to_gp_28128131_sm610_0845_read_bundle_read(dark/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_to_gp_28128
	dark_to_gp_28128.write(dark__lp__lp_1_m_dark_ld129__p__0_rp___p__7_rp__c_______lp_dark_ld130__p__7_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_to_gp_22124127_sm597_0819(dark_cache& dark, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_to_gp_22124, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark
	auto dark__lp_1_m_dark_ld125__p__0_rp__c____dark_ld126_value = dark_load_to_dark_to_gp_22124127_sm597_0819_read_bundle_read(dark/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_to_gp_22124
	dark_to_gp_22124.write(dark__lp_1_m_dark_ld125__p__0_rp__c____dark_ld126_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_update_0_sm712_01049(in_FIFO_buf564_cache& in_FIFO_buf564, dark_cache& dark, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: in_FIFO_buf564
	auto in_FIFO_buf564_1_m__lp__lp_1_m_dark_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_dark_0__p___m_7_rp___p__0_p_7_value = in_FIFO_buf564_dark_update_0_sm712_01049_read_bundle_read(in_FIFO_buf564/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = scale_exposure_unrolled_1(in_FIFO_buf564_1_m__lp__lp_1_m_dark_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_dark_0__p___m_7_rp___p__0_p_7_value);
	// Produce: dark
	dark_dark_update_0_sm712_01049_write_bundle_write(/* arg names */compute_result, dark, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_0_dark_ld126_dark_ld130_dark_ld134_in_to_gp_21280_ld566_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */in_to_gp_21280, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_to_gp_22124, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_to_gp_28128, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_to_gp_34132) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_0_dark_ld126_dark_ld130_dark_ld134_in_to_gp_21280_ld566__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_cache dark;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  in_FIFO_buf564_cache in_FIFO_buf564;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { dark_update_0_sm712_01049[d0 = 0, d1, d2] -> [0, d1, d2, 12] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_dark_to_gp_22124127_sm597_0819[d0 = 0, d1, d2] -> [0, d1, d2, 17] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_dark_to_gp_34132135_sm611_0847[d0 = 0, d1, d2] -> [0, d1, d2, 19] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_in_FIFO_buf564567_sm691_01007[d0 = 0, d1, d2] -> [0, d1, d2, 6] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_dark_to_gp_28128131_sm610_0845[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 14] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
//   { dark_update_0_sm712_01049[d0 = 0, d1, d2] -> [0, d1, d2, 12] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for dark_update_0_sm712_01049(((((-12 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_to_gp_22124127_sm597_0819[d0 = 0, d1, d2] -> [0, d1, d2, 17] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_dark_to_gp_22124127_sm597_0819(((((-17 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_to_gp_34132135_sm611_0847[d0 = 0, d1, d2] -> [0, d1, d2, 19] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_dark_to_gp_34132135_sm611_0847(((((-19 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_in_FIFO_buf564567_sm691_01007[d0 = 0, d1, d2] -> [0, d1, d2, 6] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_in_FIFO_buf564567_sm691_01007(((((-6 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_to_gp_28128131_sm610_0845[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 14] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_dark_to_gp_28128131_sm610_0845(((((-14 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-7 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-7 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 19] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086; [0, i1, i2, 17] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086; [0, i1, i2, 14] : 7 <= i1 <= 1086 and 7 <= i2 <= 1086; [0, i1, i2, 12] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086; [0, i1, i2, 6] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 0; i1 <= 1086; i1++) {
	    for (int i2 = 0; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_in_FIFO_buf564567_sm691_01007(in_to_gp_21280 /* buf name */, in_FIFO_buf564, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          dark_update_0_sm712_01049(in_FIFO_buf564 /* buf name */, dark, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 7 and i2 >= 7 }
	        // { [i0, i1, i2] : i1 >= 7 and i2 >= 7 }
	          // { [i0, i1, i2] : -7 + i1 >= 0 }
	          // { [i0, i1, i2] : -7 + i2 >= 0 }
	        if ((((((-7 + 1*i1)) >= 0) && (((-7 + 1*i2)) >= 0)))) {
	          load_to_dark_to_gp_28128131_sm610_0845(dark /* buf name */, dark_to_gp_28128, 0, ((-7 + 1*i1)), ((-7 + 1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_dark_to_gp_22124127_sm597_0819(dark /* buf name */, dark_to_gp_22124, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_dark_to_gp_34132135_sm611_0847(dark /* buf name */, dark_to_gp_34132, 0, ((1*i1)), ((1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_FIFO_buf408411_sm661_0947(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_to_gp_22124, dark_FIFO_buf408_cache& dark_FIFO_buf408, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_to_gp_22124
	auto dark_to_gp_22124__lp_1_m_dark_to_gp_22124_ld409__p__0_rp__c____dark_to_gp_22124_ld410_value = dark_to_gp_22124.read();
	// Produce: dark_FIFO_buf408
	dark_FIFO_buf408_load_to_dark_FIFO_buf408411_sm661_0947_write_bundle_write(/* arg names */dark_to_gp_22124__lp_1_m_dark_to_gp_22124_ld409__p__0_rp__c____dark_to_gp_22124_ld410_value, dark_FIFO_buf408, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807(dark_gauss_blur_1_cache& dark_gauss_blur_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_blur_1_to_gp_25136, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_1
	auto dark_gauss_blur_1__lp_1_m_dark_gauss_blur_1_ld137__p__0_rp__c____dark_gauss_blur_1_ld138_value = dark_gauss_blur_1_load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807_read_bundle_read(dark_gauss_blur_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_gauss_blur_1_to_gp_25136
	dark_gauss_blur_1_to_gp_25136.write(dark_gauss_blur_1__lp_1_m_dark_gauss_blur_1_ld137__p__0_rp__c____dark_gauss_blur_1_ld138_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_blur_1_update_0_sm708_01041(dark_FIFO_buf408_cache& dark_FIFO_buf408, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_FIFO_buf408
	auto dark_FIFO_buf408_1_m__lp__lp_1_m_dark_gauss_blur_1_1__p__0_rp___p___m_6_rp___p___m_1_p_7_c_______1_m__lp_dark_gauss_blur_1_0__p___m_6_rp___p___m_1_p_7_value = dark_FIFO_buf408_dark_gauss_blur_1_update_0_sm708_01041_read_bundle_read(dark_FIFO_buf408/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(dark_FIFO_buf408_1_m__lp__lp_1_m_dark_gauss_blur_1_1__p__0_rp___p___m_6_rp___p___m_1_p_7_c_______1_m__lp_dark_gauss_blur_1_0__p___m_6_rp___p___m_1_p_7_value);
	// Produce: dark_gauss_blur_1
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_sm708_01041_write_bundle_write(/* arg names */compute_result, dark_gauss_blur_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_gauss_blur_1_0_dark_gauss_blur_1_ld138_dark_to_gp_22124_ld410_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_to_gp_22124, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_blur_1_to_gp_25136) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_gauss_blur_1_0_dark_gauss_blur_1_ld138_dark_to_gp_22124_ld410__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_FIFO_buf408_cache dark_FIFO_buf408;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_1_cache dark_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_FIFO_buf408411_sm661_0947[d0 = 0, d1, d2] -> [0, d1, d2, 22] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 31] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084; dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
//   { load_to_dark_FIFO_buf408411_sm661_0947[d0 = 0, d1, d2] -> [0, d1, d2, 22] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_dark_FIFO_buf408411_sm661_0947(((((-22 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 31] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807(((((-31 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_gauss_blur_1_update_0_sm708_01041[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 25] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for dark_gauss_blur_1_update_0_sm708_01041(((((-25 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 31] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 25] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 22] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 0; i1 <= 1086; i1++) {
	    for (int i2 = 0; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_dark_FIFO_buf408411_sm661_0947(dark_to_gp_22124 /* buf name */, dark_FIFO_buf408, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	          // { [i0, i1, i2] : -2 + i1 >= 0 }
	          // { [i0, i1, i2] : -2 + i2 >= 0 }
	        if ((((((-2 + 1*i1)) >= 0) && (((-2 + 1*i2)) >= 0)))) {
	          dark_gauss_blur_1_update_0_sm708_01041(dark_FIFO_buf408 /* buf name */, dark_gauss_blur_1, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	          // { [i0, i1, i2] : -2 + i1 >= 0 }
	          // { [i0, i1, i2] : -2 + i2 >= 0 }
	        if ((((((-2 + 1*i1)) >= 0) && (((-2 + 1*i2)) >= 0)))) {
	          load_to_dark_gauss_blur_1_to_gp_25136139_sm591_0807(dark_gauss_blur_1 /* buf name */, dark_gauss_blur_1_to_gp_25136, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void dark_gauss_blur_2_update_0_sm718_01061(dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1_FIFO_buf432
	auto dark_gauss_ds_1_FIFO_buf432_1_m__lp__lp_1_m_dark_gauss_blur_2_1__p__0_rp___p___m_2_rp___p___m_1_p_3_c_______1_m__lp_dark_gauss_blur_2_0__p___m_2_rp___p___m_1_p_3_value = dark_gauss_ds_1_FIFO_buf432_dark_gauss_blur_2_update_0_sm718_01061_read_bundle_read(dark_gauss_ds_1_FIFO_buf432/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(dark_gauss_ds_1_FIFO_buf432_1_m__lp__lp_1_m_dark_gauss_blur_2_1__p__0_rp___p___m_2_rp___p___m_1_p_3_c_______1_m__lp_dark_gauss_blur_2_0__p___m_2_rp___p___m_1_p_3_value);
	// Produce: dark_gauss_blur_2
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_sm718_01061_write_bundle_write(/* arg names */compute_result, dark_gauss_blur_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_1_to_gp_23148, dark_gauss_ds_1_FIFO_buf432_cache& dark_gauss_ds_1_FIFO_buf432, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1_to_gp_23148
	auto dark_gauss_ds_1_to_gp_23148__lp_1_m_dark_gauss_ds_1_to_gp_23148_ld433__p__0_rp__c____dark_gauss_ds_1_to_gp_23148_ld434_value = dark_gauss_ds_1_to_gp_23148.read();
	// Produce: dark_gauss_ds_1_FIFO_buf432
	dark_gauss_ds_1_FIFO_buf432_load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993_write_bundle_write(/* arg names */dark_gauss_ds_1_to_gp_23148__lp_1_m_dark_gauss_ds_1_to_gp_23148_ld433__p__0_rp__c____dark_gauss_ds_1_to_gp_23148_ld434_value, dark_gauss_ds_1_FIFO_buf432, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809(dark_gauss_blur_2_cache& dark_gauss_blur_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_blur_2_to_gp_26140, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_2
	auto dark_gauss_blur_2__lp_1_m_dark_gauss_blur_2_ld141__p__0_rp__c____dark_gauss_blur_2_ld142_value = dark_gauss_blur_2_load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809_read_bundle_read(dark_gauss_blur_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_gauss_blur_2_to_gp_26140
	dark_gauss_blur_2_to_gp_26140.write(dark_gauss_blur_2__lp_1_m_dark_gauss_blur_2_ld141__p__0_rp__c____dark_gauss_blur_2_ld142_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_gauss_blur_2_0_dark_gauss_blur_2_ld142_dark_gauss_ds_1_to_gp_23148_ld434_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_1_to_gp_23148, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_blur_2_to_gp_26140) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_gauss_blur_2_0_dark_gauss_blur_2_ld142_dark_gauss_ds_1_to_gp_23148_ld434__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_2_cache dark_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_1_FIFO_buf432_cache dark_gauss_ds_1_FIFO_buf432;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 71] : 0 <= d1 <= 540 and 0 <= d2 <= 540; load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 60] : 0 <= d1 <= 542 and 0 <= d2 <= 542; dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
//   { load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 71] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-71 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 60] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-60 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_gauss_blur_2_update_0_sm718_01061[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 70] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for dark_gauss_blur_2_update_0_sm718_01061(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-70 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086 and 70 <= i3 <= 71; [0, i1, i2, 60] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 2; i1 <= 1086; i1++) {
	    for (int i2 = 2; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_dark_gauss_ds_1_FIFO_buf432435_sm684_0993(dark_gauss_ds_1_to_gp_23148 /* buf name */, dark_gauss_ds_1_FIFO_buf432, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -6 + i1 >= 0 }
	          // { [i0, i1, i2] : -6 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-6 + 1*i1)) >= 0) && (((-6 + 1*i2)) >= 0)))) {
	          dark_gauss_blur_2_update_0_sm718_01061(dark_gauss_ds_1_FIFO_buf432 /* buf name */, dark_gauss_blur_2, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -6 + i1 >= 0 }
	          // { [i0, i1, i2] : -6 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-6 + 1*i1)) >= 0) && (((-6 + 1*i2)) >= 0)))) {
	          load_to_dark_gauss_blur_2_to_gp_26140143_sm592_0809(dark_gauss_blur_2 /* buf name */, dark_gauss_blur_2_to_gp_26140, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811(dark_gauss_blur_3_cache& dark_gauss_blur_3, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_blur_3_to_gp_27144, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_3
	auto dark_gauss_blur_3__lp_1_m_dark_gauss_blur_3_ld145__p__0_rp__c____dark_gauss_blur_3_ld146_value = dark_gauss_blur_3_load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811_read_bundle_read(dark_gauss_blur_3/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_gauss_blur_3_to_gp_27144
	dark_gauss_blur_3_to_gp_27144.write(dark_gauss_blur_3__lp_1_m_dark_gauss_blur_3_ld145__p__0_rp__c____dark_gauss_blur_3_ld146_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_blur_3_update_0_sm726_01077(dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2_FIFO_buf444
	auto dark_gauss_ds_2_FIFO_buf444_1_m__lp_1_m_dark_gauss_blur_3_1__p__0_rp___p___m_1_p_1_c_____1_m_dark_gauss_blur_3_0__p___m_1_p_1_value = dark_gauss_ds_2_FIFO_buf444_dark_gauss_blur_3_update_0_sm726_01077_read_bundle_read(dark_gauss_ds_2_FIFO_buf444/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(dark_gauss_ds_2_FIFO_buf444_1_m__lp_1_m_dark_gauss_blur_3_1__p__0_rp___p___m_1_p_1_c_____1_m_dark_gauss_blur_3_0__p___m_1_p_1_value);
	// Produce: dark_gauss_blur_3
	dark_gauss_blur_3_dark_gauss_blur_3_update_0_sm726_01077_write_bundle_write(/* arg names */compute_result, dark_gauss_blur_3, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_2_to_gp_24160, dark_gauss_ds_2_FIFO_buf444_cache& dark_gauss_ds_2_FIFO_buf444, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2_to_gp_24160
	auto dark_gauss_ds_2_to_gp_24160__lp_1_m_dark_gauss_ds_2_to_gp_24160_ld445__p__0_rp__c____dark_gauss_ds_2_to_gp_24160_ld446_value = dark_gauss_ds_2_to_gp_24160.read();
	// Produce: dark_gauss_ds_2_FIFO_buf444
	dark_gauss_ds_2_FIFO_buf444_load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025_write_bundle_write(/* arg names */dark_gauss_ds_2_to_gp_24160__lp_1_m_dark_gauss_ds_2_to_gp_24160_ld445__p__0_rp__c____dark_gauss_ds_2_to_gp_24160_ld446_value, dark_gauss_ds_2_FIFO_buf444, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_gauss_blur_3_0_dark_gauss_blur_3_ld146_dark_gauss_ds_2_to_gp_24160_ld446_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_2_to_gp_24160, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_blur_3_to_gp_27144) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_gauss_blur_3_0_dark_gauss_blur_3_ld146_dark_gauss_ds_2_to_gp_24160_ld446__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_3_cache dark_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_2_FIFO_buf444_cache dark_gauss_ds_2_FIFO_buf444;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 92] : 0 <= d1 <= 270 and 0 <= d2 <= 270; load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 104] : 0 <= d1 <= 268 and 0 <= d2 <= 268; dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
//   { load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 92] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-92 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 104] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-104 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_gauss_blur_3_update_0_sm726_01077[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 97] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for dark_gauss_blur_3_update_0_sm726_01077(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-97 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 104] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 97] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 92] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 6; i1 <= 1086; i1++) {
	    for (int i2 = 6; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_dark_gauss_ds_2_FIFO_buf444447_sm700_01025(dark_gauss_ds_2_to_gp_24160 /* buf name */, dark_gauss_ds_2_FIFO_buf444, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0) && (((-14 + 1*i2)) >= 0)))) {
	          dark_gauss_blur_3_update_0_sm726_01077(dark_gauss_ds_2_FIFO_buf444 /* buf name */, dark_gauss_blur_3, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0) && (((-14 + 1*i2)) >= 0)))) {
	          load_to_dark_gauss_blur_3_to_gp_27144147_sm593_0811(dark_gauss_blur_3 /* buf name */, dark_gauss_blur_3_to_gp_27144, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877(dark_gauss_ds_1_cache& dark_gauss_ds_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_1_to_gp_29152, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1
	auto dark_gauss_ds_1__lp__lp_1_m_dark_gauss_ds_1_ld153__p__0_rp___p__3_rp__c_______lp_dark_gauss_ds_1_ld154__p__3_rp__value = dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877_read_bundle_read(dark_gauss_ds_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_gauss_ds_1_to_gp_29152
	dark_gauss_ds_1_to_gp_29152.write(dark_gauss_ds_1__lp__lp_1_m_dark_gauss_ds_1_ld153__p__0_rp___p__3_rp__c_______lp_dark_gauss_ds_1_ld154__p__3_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_ds_1_update_0_sm717_01059(dark_gauss_blur_1_FIFO_buf420_cache& dark_gauss_blur_1_FIFO_buf420, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_1_FIFO_buf420
	auto dark_gauss_blur_1_FIFO_buf420_2_m__lp__lp_1_m_dark_gauss_ds_1_1__p__0_rp___p___m_3_rp___p__0_p_6_c_______2_m__lp_dark_gauss_ds_1_0__p___m_3_rp___p__0_p_6_value = dark_gauss_blur_1_FIFO_buf420_dark_gauss_ds_1_update_0_sm717_01059_read_bundle_read(dark_gauss_blur_1_FIFO_buf420/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(dark_gauss_blur_1_FIFO_buf420_2_m__lp__lp_1_m_dark_gauss_ds_1_1__p__0_rp___p___m_3_rp___p__0_p_6_c_______2_m__lp_dark_gauss_ds_1_0__p___m_3_rp___p__0_p_6_value);
	// Produce: dark_gauss_ds_1
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_sm717_01059_write_bundle_write(/* arg names */compute_result, dark_gauss_ds_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_blur_1_to_gp_25136, dark_gauss_blur_1_FIFO_buf420_cache& dark_gauss_blur_1_FIFO_buf420, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_1_to_gp_25136
	auto dark_gauss_blur_1_to_gp_25136__lp_1_m_dark_gauss_blur_1_to_gp_25136_ld421__p__0_rp__c____dark_gauss_blur_1_to_gp_25136_ld422_value = dark_gauss_blur_1_to_gp_25136.read();
	// Produce: dark_gauss_blur_1_FIFO_buf420
	dark_gauss_blur_1_FIFO_buf420_load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867_write_bundle_write(/* arg names */dark_gauss_blur_1_to_gp_25136__lp_1_m_dark_gauss_blur_1_to_gp_25136_ld421__p__0_rp__c____dark_gauss_blur_1_to_gp_25136_ld422_value, dark_gauss_blur_1_FIFO_buf420, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875(dark_gauss_ds_1_cache& dark_gauss_ds_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_1_to_gp_23148, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1
	auto dark_gauss_ds_1__lp_1_m_dark_gauss_ds_1_ld149__p__0_rp__c____dark_gauss_ds_1_ld150_value = dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875_read_bundle_read(dark_gauss_ds_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_gauss_ds_1_to_gp_23148
	dark_gauss_ds_1_to_gp_23148.write(dark_gauss_ds_1__lp_1_m_dark_gauss_ds_1_ld149__p__0_rp__c____dark_gauss_ds_1_ld150_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851(dark_gauss_ds_1_cache& dark_gauss_ds_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_1_to_gp_31156, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1
	auto dark_gauss_ds_1__lp__lp_1_m_dark_gauss_ds_1_ld157__p__0_rp___p__3_rp__c_______lp_dark_gauss_ds_1_ld158__p__3_rp__value = dark_gauss_ds_1_load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851_read_bundle_read(dark_gauss_ds_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_gauss_ds_1_to_gp_31156
	dark_gauss_ds_1_to_gp_31156.write(dark_gauss_ds_1__lp__lp_1_m_dark_gauss_ds_1_ld157__p__0_rp___p__3_rp__c_______lp_dark_gauss_ds_1_ld158__p__3_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_gauss_blur_1_to_gp_25136_ld422_dark_gauss_ds_1_0_dark_gauss_ds_1_ld150_dark_gauss_ds_1_ld154_dark_gauss_ds_1_ld158_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_blur_1_to_gp_25136, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_1_to_gp_23148, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_1_to_gp_29152, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_1_to_gp_31156) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_gauss_blur_1_to_gp_25136_ld422_dark_gauss_ds_1_0_dark_gauss_ds_1_ld150_dark_gauss_ds_1_ld154_dark_gauss_ds_1_ld158__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_1_FIFO_buf420_cache dark_gauss_blur_1_FIFO_buf420;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_1_cache dark_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877[d0 = 0, d1, d2] -> [0, 8 + 2d1, 10 + 2d2, 64] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 40] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084; load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 63] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 52] : 0 <= d1 <= 542 and 0 <= d2 <= 542; dark_gauss_ds_1_update_0_sm717_01059[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 49] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
//   { load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877[d0 = 0, d1, d2] -> [0, 8 + 2d1, 10 + 2d2, 64] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-64 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 40] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867(((((-40 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 63] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-63 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 52] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-52 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_gauss_ds_1_update_0_sm717_01059[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 49] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for dark_gauss_ds_1_update_0_sm717_01059(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-49 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 8 <= i1 <= 1086 and 63 <= i3 <= 64 and -960 + i2 <= 2i3 <= 118 + i2; [0, i1, i2, 52] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 49] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 40] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 2; i1 <= 1086; i1++) {
	    for (int i2 = 2; i2 <= 1088; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : i2 <= 1086 }
	        // { [i0, i1, i2] : i2 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((1086 + -1*i2)) >= 0)))) {
	          load_to_dark_gauss_blur_1_FIFO_buf420423_sm621_0867(dark_gauss_blur_1_to_gp_25136 /* buf name */, dark_gauss_blur_1_FIFO_buf420, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i2 <= 1086 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i2 <= 1086 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((1086 + -1*i2)) >= 0)))) {
	          dark_gauss_ds_1_update_0_sm717_01059(dark_gauss_blur_1_FIFO_buf420 /* buf name */, dark_gauss_ds_1, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i2 <= 1086 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i2 <= 1086 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_dark_gauss_ds_1_to_gp_23148151_sm625_0875(dark_gauss_ds_1 /* buf name */, dark_gauss_ds_1_to_gp_23148, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 8 and 8 <= i2 <= 1086 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 8 and 8 <= i2 <= 1086 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-8 + 1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_dark_gauss_ds_1_to_gp_31156159_sm613_0851(dark_gauss_ds_1 /* buf name */, dark_gauss_ds_1_to_gp_31156, 0, ((-4 + (1*(((1*i1)) >> 1)))), ((-4 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 8 and i2 >= 10 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 8 and i2 >= 10 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : -10 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-8 + 1*i1)) >= 0) && (((-10 + 1*i2)) >= 0)))) {
	          load_to_dark_gauss_ds_1_to_gp_29152155_sm626_0877(dark_gauss_ds_1 /* buf name */, dark_gauss_ds_1_to_gp_29152, 0, ((-4 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void dark_gauss_ds_2_update_0_sm725_01075(dark_gauss_blur_2_FIFO_buf424_cache& dark_gauss_blur_2_FIFO_buf424, dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_2_FIFO_buf424
	auto dark_gauss_blur_2_FIFO_buf424_2_m__lp__lp_1_m_dark_gauss_ds_2_1__p__0_rp___p___m_1_rp___p__0_p_2_c_______2_m__lp_dark_gauss_ds_2_0__p___m_1_rp___p__0_p_2_value = dark_gauss_blur_2_FIFO_buf424_dark_gauss_ds_2_update_0_sm725_01075_read_bundle_read(dark_gauss_blur_2_FIFO_buf424/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(dark_gauss_blur_2_FIFO_buf424_2_m__lp__lp_1_m_dark_gauss_ds_2_1__p__0_rp___p___m_1_rp___p__0_p_2_c_______2_m__lp_dark_gauss_ds_2_0__p___m_1_rp___p__0_p_2_value);
	// Produce: dark_gauss_ds_2
	dark_gauss_ds_2_dark_gauss_ds_2_update_0_sm725_01075_write_bundle_write(/* arg names */compute_result, dark_gauss_ds_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849(dark_gauss_ds_2_cache& dark_gauss_ds_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_2_to_gp_32168, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2
	auto dark_gauss_ds_2__lp__lp_1_m_dark_gauss_ds_2_ld169__p__0_rp___p__1_rp__c_______lp_dark_gauss_ds_2_ld170__p__1_rp__value = dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849_read_bundle_read(dark_gauss_ds_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_gauss_ds_2_to_gp_32168
	dark_gauss_ds_2_to_gp_32168.write(dark_gauss_ds_2__lp__lp_1_m_dark_gauss_ds_2_ld169__p__0_rp___p__1_rp__c_______lp_dark_gauss_ds_2_ld170__p__1_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855(dark_gauss_ds_2_cache& dark_gauss_ds_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_2_to_gp_30164, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2
	auto dark_gauss_ds_2__lp__lp_1_m_dark_gauss_ds_2_ld165__p__0_rp___p__1_rp__c_______lp_dark_gauss_ds_2_ld166__p__1_rp__value = dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855_read_bundle_read(dark_gauss_ds_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_gauss_ds_2_to_gp_30164
	dark_gauss_ds_2_to_gp_30164.write(dark_gauss_ds_2__lp__lp_1_m_dark_gauss_ds_2_ld165__p__0_rp___p__1_rp__c_______lp_dark_gauss_ds_2_ld166__p__1_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821(dark_gauss_ds_2_cache& dark_gauss_ds_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_2_to_gp_24160, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2
	auto dark_gauss_ds_2__lp_1_m_dark_gauss_ds_2_ld161__p__0_rp__c____dark_gauss_ds_2_ld162_value = dark_gauss_ds_2_load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821_read_bundle_read(dark_gauss_ds_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_gauss_ds_2_to_gp_24160
	dark_gauss_ds_2_to_gp_24160.write(dark_gauss_ds_2__lp_1_m_dark_gauss_ds_2_ld161__p__0_rp__c____dark_gauss_ds_2_ld162_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_blur_2_to_gp_26140, dark_gauss_blur_2_FIFO_buf424_cache& dark_gauss_blur_2_FIFO_buf424, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_2_to_gp_26140
	auto dark_gauss_blur_2_to_gp_26140__lp_1_m_dark_gauss_blur_2_to_gp_26140_ld425__p__0_rp__c____dark_gauss_blur_2_to_gp_26140_ld426_value = dark_gauss_blur_2_to_gp_26140.read();
	// Produce: dark_gauss_blur_2_FIFO_buf424
	dark_gauss_blur_2_FIFO_buf424_load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869_write_bundle_write(/* arg names */dark_gauss_blur_2_to_gp_26140__lp_1_m_dark_gauss_blur_2_to_gp_26140_ld425__p__0_rp__c____dark_gauss_blur_2_to_gp_26140_ld426_value, dark_gauss_blur_2_FIFO_buf424, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_gauss_blur_2_to_gp_26140_ld426_dark_gauss_ds_2_0_dark_gauss_ds_2_ld162_dark_gauss_ds_2_ld166_dark_gauss_ds_2_ld170_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_blur_2_to_gp_26140, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_2_to_gp_24160, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_2_to_gp_30164, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_2_to_gp_32168) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_gauss_blur_2_to_gp_26140_ld426_dark_gauss_ds_2_0_dark_gauss_ds_2_ld162_dark_gauss_ds_2_ld166_dark_gauss_ds_2_ld170__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_2_FIFO_buf424_cache dark_gauss_blur_2_FIFO_buf424;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_2_cache dark_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 87] : 0 <= d1 <= 270 and 0 <= d2 <= 270; load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 75] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 90] : 0 <= d1 <= 269 and 0 <= d2 <= 269; dark_gauss_ds_2_update_0_sm725_01075[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 74] : 0 <= d1 <= 270 and 0 <= d2 <= 270; load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 72] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
//   { load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 87] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-87 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 75] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-75 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 90] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-90 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_gauss_ds_2_update_0_sm725_01075[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 74] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for dark_gauss_ds_2_update_0_sm725_01075(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-74 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 72] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-72 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 <= 1086 and i2 <= 1086 and 74 <= i3 <= 75 and 4i3 <= 290 + i2 and 4i3 <= 290 + i1; [0, i1, i2, 90] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 10 <= i1 <= 1086 and 10 <= i2 <= 1086; [0, i1, i2, 87] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086; [0, i1, i2, 72] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 6; i1 <= 1086; i1++) {
	    for (int i2 = 6; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_dark_gauss_blur_2_FIFO_buf424427_sm622_0869(dark_gauss_blur_2_to_gp_26140 /* buf name */, dark_gauss_blur_2_FIFO_buf424, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          dark_gauss_ds_2_update_0_sm725_01075(dark_gauss_blur_2_FIFO_buf424 /* buf name */, dark_gauss_ds_2, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and i2 >= 10 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and i2 >= 10 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -10 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-10 + 1*i2)) >= 0)))) {
	          load_to_dark_gauss_ds_2_to_gp_30164167_sm615_0855(dark_gauss_ds_2 /* buf name */, dark_gauss_ds_2_to_gp_30164, 0, ((-3 + (1*(((2 + 1*i1)) >> 2)))), ((-3 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_dark_gauss_ds_2_to_gp_24160163_sm598_0821(dark_gauss_ds_2 /* buf name */, dark_gauss_ds_2_to_gp_24160, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and i2 >= 10 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and i2 >= 10 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -10 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-10 + 1*i2)) >= 0)))) {
	          load_to_dark_gauss_ds_2_to_gp_32168171_sm612_0849(dark_gauss_ds_2 /* buf name */, dark_gauss_ds_2_to_gp_32168, 0, ((-3 + (1*(((2 + 1*i1)) >> 2)))), ((-3 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_blur_3_to_gp_27144, dark_gauss_blur_3_FIFO_buf428_cache& dark_gauss_blur_3_FIFO_buf428, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_3_to_gp_27144
	auto dark_gauss_blur_3_to_gp_27144__lp_1_m_dark_gauss_blur_3_to_gp_27144_ld429__p__0_rp__c____dark_gauss_blur_3_to_gp_27144_ld430_value = dark_gauss_blur_3_to_gp_27144.read();
	// Produce: dark_gauss_blur_3_FIFO_buf428
	dark_gauss_blur_3_FIFO_buf428_load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865_write_bundle_write(/* arg names */dark_gauss_blur_3_to_gp_27144__lp_1_m_dark_gauss_blur_3_to_gp_27144_ld429__p__0_rp__c____dark_gauss_blur_3_to_gp_27144_ld430_value, dark_gauss_blur_3_FIFO_buf428, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_ds_3_update_0_sm733_01091(dark_gauss_blur_3_FIFO_buf428_cache& dark_gauss_blur_3_FIFO_buf428, dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_3_FIFO_buf428
	auto dark_gauss_blur_3_FIFO_buf428_2_m__lp_1_m_dark_gauss_ds_3_1__p__0_rp___p__0_p_0_c_____2_m_dark_gauss_ds_3_0__p__0_p_0_value = dark_gauss_blur_3_FIFO_buf428_dark_gauss_ds_3_update_0_sm733_01091_read_bundle_read(dark_gauss_blur_3_FIFO_buf428/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(dark_gauss_blur_3_FIFO_buf428_2_m__lp_1_m_dark_gauss_ds_3_1__p__0_rp___p__0_p_0_c_____2_m_dark_gauss_ds_3_0__p__0_p_0_value);
	// Produce: dark_gauss_ds_3
	dark_gauss_ds_3_dark_gauss_ds_3_update_0_sm733_01091_write_bundle_write(/* arg names */compute_result, dark_gauss_ds_3, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879(dark_gauss_ds_3_cache& dark_gauss_ds_3, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_3_to_gp_48176, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_3
	auto dark_gauss_ds_3__lp_1_m_dark_gauss_ds_3_ld177__p__0_rp__c____dark_gauss_ds_3_ld178_value = dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879_read_bundle_read(dark_gauss_ds_3/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_gauss_ds_3_to_gp_48176
	dark_gauss_ds_3_to_gp_48176.write(dark_gauss_ds_3__lp_1_m_dark_gauss_ds_3_ld177__p__0_rp__c____dark_gauss_ds_3_ld178_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823(dark_gauss_ds_3_cache& dark_gauss_ds_3, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_3_to_gp_33172, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_3
	auto dark_gauss_ds_3__lp_1_m_dark_gauss_ds_3_ld173__p__0_rp__c____dark_gauss_ds_3_ld174_value = dark_gauss_ds_3_load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823_read_bundle_read(dark_gauss_ds_3/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_gauss_ds_3_to_gp_33172
	dark_gauss_ds_3_to_gp_33172.write(dark_gauss_ds_3__lp_1_m_dark_gauss_ds_3_ld173__p__0_rp__c____dark_gauss_ds_3_ld174_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_gauss_blur_3_to_gp_27144_ld430_dark_gauss_ds_3_0_dark_gauss_ds_3_ld174_dark_gauss_ds_3_ld178_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_blur_3_to_gp_27144, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_3_to_gp_33172, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_3_to_gp_48176) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_gauss_blur_3_to_gp_27144_ld430_dark_gauss_ds_3_0_dark_gauss_ds_3_ld174_dark_gauss_ds_3_ld178__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_3_FIFO_buf428_cache dark_gauss_blur_3_FIFO_buf428;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_3_cache dark_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 123] : 0 <= d1 <= 134 and 0 <= d2 <= 134; dark_gauss_ds_3_update_0_sm733_01091[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 119] : 0 <= d1 <= 134 and 0 <= d2 <= 134; load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 107] : 0 <= d1 <= 268 and 0 <= d2 <= 268; load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 124] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
//   { load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 123] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-123 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_gauss_ds_3_update_0_sm733_01091[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 119] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for dark_gauss_ds_3_update_0_sm733_01091(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-119 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 107] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-107 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 124] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-124 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086 and 123 <= i3 <= 124; [0, i1, i2, 119] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 107] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1086; i1++) {
	    for (int i2 = 14; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_dark_gauss_blur_3_FIFO_buf428431_sm620_0865(dark_gauss_blur_3_to_gp_27144 /* buf name */, dark_gauss_blur_3_FIFO_buf428, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          dark_gauss_ds_3_update_0_sm733_01091(dark_gauss_blur_3_FIFO_buf428 /* buf name */, dark_gauss_ds_3, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_dark_gauss_ds_3_to_gp_48176179_sm627_0879(dark_gauss_ds_3 /* buf name */, dark_gauss_ds_3_to_gp_48176, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_dark_gauss_ds_3_to_gp_33172175_sm599_0823(dark_gauss_ds_3 /* buf name */, dark_gauss_ds_3_to_gp_33172, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_FIFO_buf412415_sm662_0949(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_to_gp_28128, dark_FIFO_buf412_cache& dark_FIFO_buf412, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_to_gp_28128
	auto dark_to_gp_28128__lp__lp_1_m_dark_to_gp_28128_ld413__p__0_rp___p__7_rp__c_______lp_dark_to_gp_28128_ld414__p__7_rp__value = dark_to_gp_28128.read();
	// Produce: dark_FIFO_buf412
	dark_FIFO_buf412_load_to_dark_FIFO_buf412415_sm662_0949_write_bundle_write(/* arg names */dark_to_gp_28128__lp__lp_1_m_dark_to_gp_28128_ld413__p__0_rp___p__7_rp__c_______lp_dark_to_gp_28128_ld414__p__7_rp__value, dark_FIFO_buf412, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_us_0_to_gp_28192, dark_laplace_us_0_FIFO_buf476_cache& dark_laplace_us_0_FIFO_buf476, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_us_0_to_gp_28192
	auto dark_laplace_us_0_to_gp_28192__lp_1_m_dark_laplace_us_0_to_gp_28192_ld477__p__0_rp__c____dark_laplace_us_0_to_gp_28192_ld478_value = dark_laplace_us_0_to_gp_28192.read();
	// Produce: dark_laplace_us_0_FIFO_buf476
	dark_laplace_us_0_FIFO_buf476_load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027_write_bundle_write(/* arg names */dark_laplace_us_0_to_gp_28192__lp_1_m_dark_laplace_us_0_to_gp_28192_ld477__p__0_rp__c____dark_laplace_us_0_to_gp_28192_ld478_value, dark_laplace_us_0_FIFO_buf476, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_diff_0_update_0_sm742_01135(dark_FIFO_buf412_cache& dark_FIFO_buf412, dark_laplace_us_0_FIFO_buf476_cache& dark_laplace_us_0_FIFO_buf476, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_FIFO_buf412
	auto dark_FIFO_buf412_1_m__lp_1_m_dark_laplace_diff_0_1__p__0_rp___p__0_p_7_c_____1_m_dark_laplace_diff_0_0__p__0_p_7_value = dark_FIFO_buf412_dark_laplace_diff_0_update_0_sm742_01135_read_bundle_read(dark_FIFO_buf412/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_us_0_FIFO_buf476
	auto dark_laplace_us_0_FIFO_buf476_1_m__lp_1_m_dark_laplace_diff_0_1__p__0_rp___p__0_p_0_c_____1_m_dark_laplace_diff_0_0__p__0_p_0_value = dark_laplace_us_0_FIFO_buf476_dark_laplace_diff_0_update_0_sm742_01135_read_bundle_read(dark_laplace_us_0_FIFO_buf476/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_1(dark_FIFO_buf412_1_m__lp_1_m_dark_laplace_diff_0_1__p__0_rp___p__0_p_7_c_____1_m_dark_laplace_diff_0_0__p__0_p_7_value, dark_laplace_us_0_FIFO_buf476_1_m__lp_1_m_dark_laplace_diff_0_1__p__0_rp___p__0_p_0_c_____1_m_dark_laplace_diff_0_0__p__0_p_0_value);
	// Produce: dark_laplace_diff_0
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_sm742_01135_write_bundle_write(/* arg names */compute_result, dark_laplace_diff_0, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881(dark_laplace_diff_0_cache& dark_laplace_diff_0, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_diff_0_to_gp_45180, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_diff_0
	auto dark_laplace_diff_0__lp_1_m_dark_laplace_diff_0_ld181__p__0_rp__c____dark_laplace_diff_0_ld182_value = dark_laplace_diff_0_load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881_read_bundle_read(dark_laplace_diff_0/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_laplace_diff_0_to_gp_45180
	dark_laplace_diff_0_to_gp_45180.write(dark_laplace_diff_0__lp_1_m_dark_laplace_diff_0_ld181__p__0_rp__c____dark_laplace_diff_0_ld182_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_laplace_diff_0_0_dark_laplace_diff_0_ld182_dark_laplace_us_0_to_gp_28192_ld478_dark_to_gp_28128_ld414_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_us_0_to_gp_28192, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_to_gp_28128, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_diff_0_to_gp_45180) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_laplace_diff_0_0_dark_laplace_diff_0_ld182_dark_laplace_us_0_to_gp_28192_ld478_dark_to_gp_28128_ld414__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_FIFO_buf412_cache dark_FIFO_buf412;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_0_cache dark_laplace_diff_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_0_FIFO_buf476_cache dark_laplace_us_0_FIFO_buf476;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 134] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 115] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_dark_FIFO_buf412415_sm662_0949[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 16] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; dark_laplace_diff_0_update_0_sm742_01135[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 128] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
//   { load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 134] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881(((((-134 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 115] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027(((((-115 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { load_to_dark_FIFO_buf412415_sm662_0949[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 16] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_dark_FIFO_buf412415_sm662_0949(((((-16 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-7 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-7 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_laplace_diff_0_update_0_sm742_01135[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 128] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for dark_laplace_diff_0_update_0_sm742_01135(((((-128 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 134] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 128] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 115] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 16] : 7 <= i1 <= 1086 and 7 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 7; i1 <= 1087; i1++) {
	    for (int i2 = 7; i2 <= 1087; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((1086 + -1*i1)) >= 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_dark_FIFO_buf412415_sm662_0949(dark_to_gp_28128 /* buf name */, dark_FIFO_buf412, 0, ((-7 + 1*i1)), ((-7 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 8 and i2 >= 8 }
	        // { [i0, i1, i2] : i1 >= 8 and i2 >= 8 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-8 + 1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          load_to_dark_laplace_us_0_FIFO_buf476479_sm701_01027(dark_laplace_us_0_to_gp_28192 /* buf name */, dark_laplace_us_0_FIFO_buf476, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 8 and i2 >= 8 }
	        // { [i0, i1, i2] : i1 >= 8 and i2 >= 8 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-8 + 1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          dark_laplace_diff_0_update_0_sm742_01135(dark_FIFO_buf412 /* buf name */, dark_laplace_us_0_FIFO_buf476 /* buf name */, dark_laplace_diff_0, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 8 and i2 >= 8 }
	        // { [i0, i1, i2] : i1 >= 8 and i2 >= 8 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-8 + 1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          load_to_dark_laplace_diff_0_to_gp_45180183_sm628_0881(dark_laplace_diff_0 /* buf name */, dark_laplace_diff_0_to_gp_45180, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_1_to_gp_29152, dark_gauss_ds_1_FIFO_buf436_cache& dark_gauss_ds_1_FIFO_buf436, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1_to_gp_29152
	auto dark_gauss_ds_1_to_gp_29152__lp__lp_1_m_dark_gauss_ds_1_to_gp_29152_ld437__p__0_rp___p__3_rp__c_______lp_dark_gauss_ds_1_to_gp_29152_ld438__p__3_rp__value = dark_gauss_ds_1_to_gp_29152.read();
	// Produce: dark_gauss_ds_1_FIFO_buf436
	dark_gauss_ds_1_FIFO_buf436_load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991_write_bundle_write(/* arg names */dark_gauss_ds_1_to_gp_29152__lp__lp_1_m_dark_gauss_ds_1_to_gp_29152_ld437__p__0_rp___p__3_rp__c_______lp_dark_gauss_ds_1_to_gp_29152_ld438__p__3_rp__value, dark_gauss_ds_1_FIFO_buf436, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_us_1_to_gp_29196, dark_laplace_us_1_FIFO_buf480_cache& dark_laplace_us_1_FIFO_buf480, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_us_1_to_gp_29196
	auto dark_laplace_us_1_to_gp_29196__lp_1_m_dark_laplace_us_1_to_gp_29196_ld481__p__0_rp__c____dark_laplace_us_1_to_gp_29196_ld482_value = dark_laplace_us_1_to_gp_29196.read();
	// Produce: dark_laplace_us_1_FIFO_buf480
	dark_laplace_us_1_FIFO_buf480_load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015_write_bundle_write(/* arg names */dark_laplace_us_1_to_gp_29196__lp_1_m_dark_laplace_us_1_to_gp_29196_ld481__p__0_rp__c____dark_laplace_us_1_to_gp_29196_ld482_value, dark_laplace_us_1_FIFO_buf480, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_diff_1_update_0_sm741_01107(dark_gauss_ds_1_FIFO_buf436_cache& dark_gauss_ds_1_FIFO_buf436, dark_laplace_us_1_FIFO_buf480_cache& dark_laplace_us_1_FIFO_buf480, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1_FIFO_buf436
	auto dark_gauss_ds_1_FIFO_buf436_1_m__lp_1_m_dark_laplace_diff_1_1__p__0_rp___p__0_p_3_c_____1_m_dark_laplace_diff_1_0__p__0_p_3_value = dark_gauss_ds_1_FIFO_buf436_dark_laplace_diff_1_update_0_sm741_01107_read_bundle_read(dark_gauss_ds_1_FIFO_buf436/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_us_1_FIFO_buf480
	auto dark_laplace_us_1_FIFO_buf480_1_m__lp_1_m_dark_laplace_diff_1_1__p__0_rp___p__0_p_0_c_____1_m_dark_laplace_diff_1_0__p__0_p_0_value = dark_laplace_us_1_FIFO_buf480_dark_laplace_diff_1_update_0_sm741_01107_read_bundle_read(dark_laplace_us_1_FIFO_buf480/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_1(dark_gauss_ds_1_FIFO_buf436_1_m__lp_1_m_dark_laplace_diff_1_1__p__0_rp___p__0_p_3_c_____1_m_dark_laplace_diff_1_0__p__0_p_3_value, dark_laplace_us_1_FIFO_buf480_1_m__lp_1_m_dark_laplace_diff_1_1__p__0_rp___p__0_p_0_c_____1_m_dark_laplace_diff_1_0__p__0_p_0_value);
	// Produce: dark_laplace_diff_1
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_sm741_01107_write_bundle_write(/* arg names */compute_result, dark_laplace_diff_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853(dark_laplace_diff_1_cache& dark_laplace_diff_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_diff_1_to_gp_46184, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_diff_1
	auto dark_laplace_diff_1__lp_1_m_dark_laplace_diff_1_ld185__p__0_rp__c____dark_laplace_diff_1_ld186_value = dark_laplace_diff_1_load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853_read_bundle_read(dark_laplace_diff_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_laplace_diff_1_to_gp_46184
	dark_laplace_diff_1_to_gp_46184.write(dark_laplace_diff_1__lp_1_m_dark_laplace_diff_1_ld185__p__0_rp__c____dark_laplace_diff_1_ld186_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_gauss_ds_1_to_gp_29152_ld438_dark_laplace_diff_1_0_dark_laplace_diff_1_ld186_dark_laplace_us_1_to_gp_29196_ld482_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_1_to_gp_29152, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_us_1_to_gp_29196, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_diff_1_to_gp_46184) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_gauss_ds_1_to_gp_29152_ld438_dark_laplace_diff_1_0_dark_laplace_diff_1_ld186_dark_laplace_us_1_to_gp_29196_ld482__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_1_FIFO_buf436_cache dark_gauss_ds_1_FIFO_buf436;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_1_cache dark_laplace_diff_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_1_FIFO_buf480_cache dark_laplace_us_1_FIFO_buf480;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991[d0 = 0, d1, d2] -> [0, 8 + 2d1, 10 + 2d2, 69] : 0 <= d1 <= 539 and 0 <= d2 <= 539; dark_laplace_diff_1_update_0_sm741_01107[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 127] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 130] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 118] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
//   { load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991[d0 = 0, d1, d2] -> [0, 8 + 2d1, 10 + 2d2, 69] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-69 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { dark_laplace_diff_1_update_0_sm741_01107[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 127] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for dark_laplace_diff_1_update_0_sm741_01107(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-127 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 130] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-130 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 118] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-118 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 130] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 127] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 118] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 69] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 8 <= i1 <= 1086 and 10 <= i2 <= 1088 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 8; i1 <= 1088; i1++) {
	    for (int i2 = 10; i2 <= 1088; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((1086 + -1*i1)) >= 0)))) {
	          load_to_dark_gauss_ds_1_FIFO_buf436439_sm683_0991(dark_gauss_ds_1_to_gp_29152 /* buf name */, dark_gauss_ds_1_FIFO_buf436, 0, ((-4 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-10 + 1*i1)) >= 0)))) {
	          load_to_dark_laplace_us_1_FIFO_buf480483_sm695_01015(dark_laplace_us_1_to_gp_29196 /* buf name */, dark_laplace_us_1_FIFO_buf480, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-10 + 1*i1)) >= 0)))) {
	          dark_laplace_diff_1_update_0_sm741_01107(dark_gauss_ds_1_FIFO_buf436 /* buf name */, dark_laplace_us_1_FIFO_buf480 /* buf name */, dark_laplace_diff_1, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-10 + 1*i1)) >= 0)))) {
	          load_to_dark_laplace_diff_1_to_gp_46184187_sm614_0853(dark_laplace_diff_1 /* buf name */, dark_laplace_diff_1_to_gp_46184, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777(bright_gauss_blur_3_cache& bright_gauss_blur_3, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_blur_3_to_gp_620, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_3
	auto bright_gauss_blur_3__lp_1_m_bright_gauss_blur_3_ld21__p__0_rp__c____bright_gauss_blur_3_ld22_value = bright_gauss_blur_3_load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777_read_bundle_read(bright_gauss_blur_3/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_gauss_blur_3_to_gp_620
	bright_gauss_blur_3_to_gp_620.write(bright_gauss_blur_3__lp_1_m_bright_gauss_blur_3_ld21__p__0_rp__c____bright_gauss_blur_3_ld22_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_2_to_gp_340, bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2_to_gp_340
	auto bright_gauss_ds_2_to_gp_340__lp_1_m_bright_gauss_ds_2_to_gp_340_ld325__p__0_rp__c____bright_gauss_ds_2_to_gp_340_ld326_value = bright_gauss_ds_2_to_gp_340.read();
	// Produce: bright_gauss_ds_2_FIFO_buf324
	bright_gauss_ds_2_FIFO_buf324_load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933_write_bundle_write(/* arg names */bright_gauss_ds_2_to_gp_340__lp_1_m_bright_gauss_ds_2_to_gp_340_ld325__p__0_rp__c____bright_gauss_ds_2_to_gp_340_ld326_value, bright_gauss_ds_2_FIFO_buf324, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_blur_3_update_0_sm730_01085(bright_gauss_ds_2_FIFO_buf324_cache& bright_gauss_ds_2_FIFO_buf324, bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2_FIFO_buf324
	auto bright_gauss_ds_2_FIFO_buf324_1_m__lp_1_m_bright_gauss_blur_3_1__p__0_rp___p___m_1_p_1_c_____1_m_bright_gauss_blur_3_0__p___m_1_p_1_value = bright_gauss_ds_2_FIFO_buf324_bright_gauss_blur_3_update_0_sm730_01085_read_bundle_read(bright_gauss_ds_2_FIFO_buf324/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(bright_gauss_ds_2_FIFO_buf324_1_m__lp_1_m_bright_gauss_blur_3_1__p__0_rp___p___m_1_p_1_c_____1_m_bright_gauss_blur_3_0__p___m_1_p_1_value);
	// Produce: bright_gauss_blur_3
	bright_gauss_blur_3_bright_gauss_blur_3_update_0_sm730_01085_write_bundle_write(/* arg names */compute_result, bright_gauss_blur_3, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_blur_3_0_bright_gauss_blur_3_ld22_bright_gauss_ds_2_to_gp_340_ld326_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_2_to_gp_340, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_blur_3_to_gp_620) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_blur_3_0_bright_gauss_blur_3_ld22_bright_gauss_ds_2_to_gp_340_ld326__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_3_cache bright_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_2_FIFO_buf324_cache bright_gauss_ds_2_FIFO_buf324;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 113] : 0 <= d1 <= 268 and 0 <= d2 <= 268; bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268; load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 88] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
//   { load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 113] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-113 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_gauss_blur_3_update_0_sm730_01085[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 103] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for bright_gauss_blur_3_update_0_sm730_01085(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-103 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 88] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-88 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 113] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 103] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 88] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 6; i1 <= 1086; i1++) {
	    for (int i2 = 6; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_bright_gauss_ds_2_FIFO_buf324327_sm654_0933(bright_gauss_ds_2_to_gp_340 /* buf name */, bright_gauss_ds_2_FIFO_buf324, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0) && (((-14 + 1*i2)) >= 0)))) {
	          bright_gauss_blur_3_update_0_sm730_01085(bright_gauss_ds_2_FIFO_buf324 /* buf name */, bright_gauss_blur_3, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0) && (((-14 + 1*i2)) >= 0)))) {
	          load_to_bright_gauss_blur_3_to_gp_62023_sm576_0777(bright_gauss_blur_3 /* buf name */, bright_gauss_blur_3_to_gp_620, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_2_to_gp_30164, dark_gauss_ds_2_FIFO_buf448_cache& dark_gauss_ds_2_FIFO_buf448, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2_to_gp_30164
	auto dark_gauss_ds_2_to_gp_30164__lp__lp_1_m_dark_gauss_ds_2_to_gp_30164_ld449__p__0_rp___p__1_rp__c_______lp_dark_gauss_ds_2_to_gp_30164_ld450__p__1_rp__value = dark_gauss_ds_2_to_gp_30164.read();
	// Produce: dark_gauss_ds_2_FIFO_buf448
	dark_gauss_ds_2_FIFO_buf448_load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009_write_bundle_write(/* arg names */dark_gauss_ds_2_to_gp_30164__lp__lp_1_m_dark_gauss_ds_2_to_gp_30164_ld449__p__0_rp___p__1_rp__c_______lp_dark_gauss_ds_2_to_gp_30164_ld450__p__1_rp__value, dark_gauss_ds_2_FIFO_buf448, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_us_2_to_gp_30200, dark_laplace_us_2_FIFO_buf484_cache& dark_laplace_us_2_FIFO_buf484, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_us_2_to_gp_30200
	auto dark_laplace_us_2_to_gp_30200__lp_1_m_dark_laplace_us_2_to_gp_30200_ld485__p__0_rp__c____dark_laplace_us_2_to_gp_30200_ld486_value = dark_laplace_us_2_to_gp_30200.read();
	// Produce: dark_laplace_us_2_FIFO_buf484
	dark_laplace_us_2_FIFO_buf484_load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019_write_bundle_write(/* arg names */dark_laplace_us_2_to_gp_30200__lp_1_m_dark_laplace_us_2_to_gp_30200_ld485__p__0_rp__c____dark_laplace_us_2_to_gp_30200_ld486_value, dark_laplace_us_2_FIFO_buf484, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_diff_2_update_0_sm740_01105(dark_gauss_ds_2_FIFO_buf448_cache& dark_gauss_ds_2_FIFO_buf448, dark_laplace_us_2_FIFO_buf484_cache& dark_laplace_us_2_FIFO_buf484, dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2_FIFO_buf448
	auto dark_gauss_ds_2_FIFO_buf448_1_m__lp_1_m_dark_laplace_diff_2_1__p__0_rp___p__0_p_1_c_____1_m_dark_laplace_diff_2_0__p__0_p_1_value = dark_gauss_ds_2_FIFO_buf448_dark_laplace_diff_2_update_0_sm740_01105_read_bundle_read(dark_gauss_ds_2_FIFO_buf448/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_us_2_FIFO_buf484
	auto dark_laplace_us_2_FIFO_buf484_1_m__lp_1_m_dark_laplace_diff_2_1__p__0_rp___p__0_p_0_c_____1_m_dark_laplace_diff_2_0__p__0_p_0_value = dark_laplace_us_2_FIFO_buf484_dark_laplace_diff_2_update_0_sm740_01105_read_bundle_read(dark_laplace_us_2_FIFO_buf484/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_1(dark_gauss_ds_2_FIFO_buf448_1_m__lp_1_m_dark_laplace_diff_2_1__p__0_rp___p__0_p_1_c_____1_m_dark_laplace_diff_2_0__p__0_p_1_value, dark_laplace_us_2_FIFO_buf484_1_m__lp_1_m_dark_laplace_diff_2_1__p__0_rp___p__0_p_0_c_____1_m_dark_laplace_diff_2_0__p__0_p_0_value);
	// Produce: dark_laplace_diff_2
	dark_laplace_diff_2_dark_laplace_diff_2_update_0_sm740_01105_write_bundle_write(/* arg names */compute_result, dark_laplace_diff_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761(dark_laplace_diff_2_cache& dark_laplace_diff_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_diff_2_to_gp_47188, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_diff_2
	auto dark_laplace_diff_2__lp_1_m_dark_laplace_diff_2_ld189__p__0_rp__c____dark_laplace_diff_2_ld190_value = dark_laplace_diff_2_load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761_read_bundle_read(dark_laplace_diff_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_laplace_diff_2_to_gp_47188
	dark_laplace_diff_2_to_gp_47188.write(dark_laplace_diff_2__lp_1_m_dark_laplace_diff_2_ld189__p__0_rp__c____dark_laplace_diff_2_ld190_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_gauss_ds_2_to_gp_30164_ld450_dark_laplace_diff_2_0_dark_laplace_diff_2_ld190_dark_laplace_us_2_to_gp_30200_ld486_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_2_to_gp_30164, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_us_2_to_gp_30200, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_diff_2_to_gp_47188) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_gauss_ds_2_to_gp_30164_ld450_dark_laplace_diff_2_0_dark_laplace_diff_2_ld190_dark_laplace_us_2_to_gp_30200_ld486__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_2_FIFO_buf448_cache dark_gauss_ds_2_FIFO_buf448;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_2_cache dark_laplace_diff_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_2_FIFO_buf484_cache dark_laplace_us_2_FIFO_buf484;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 80] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 165] : 0 <= d1 <= 269 and 0 <= d2 <= 269; dark_laplace_diff_2_update_0_sm740_01105[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 170] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 174] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
//   { load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 80] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-80 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 165] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-165 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { dark_laplace_diff_2_update_0_sm740_01105[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 170] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for dark_laplace_diff_2_update_0_sm740_01105(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-170 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 174] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-174 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 174] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 170] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 165] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 80] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1090; i1++) {
	    for (int i2 = 14; i2 <= 1090; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_dark_gauss_ds_2_FIFO_buf448451_sm692_01009(dark_gauss_ds_2_to_gp_30164 /* buf name */, dark_gauss_ds_2_FIFO_buf448, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_dark_laplace_us_2_FIFO_buf484487_sm697_01019(dark_laplace_us_2_to_gp_30200 /* buf name */, dark_laplace_us_2_FIFO_buf484, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          dark_laplace_diff_2_update_0_sm740_01105(dark_gauss_ds_2_FIFO_buf448 /* buf name */, dark_laplace_us_2_FIFO_buf484 /* buf name */, dark_laplace_diff_2, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_dark_laplace_diff_2_to_gp_47188191_sm568_0761(dark_laplace_diff_2 /* buf name */, dark_laplace_diff_2_to_gp_47188, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_1_to_gp_31156, dark_gauss_ds_1_FIFO_buf440_cache& dark_gauss_ds_1_FIFO_buf440, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1_to_gp_31156
	auto dark_gauss_ds_1_to_gp_31156__lp__lp_1_m_dark_gauss_ds_1_to_gp_31156_ld441__p__0_rp___p__3_rp__c_______lp_dark_gauss_ds_1_to_gp_31156_ld442__p__3_rp__value = dark_gauss_ds_1_to_gp_31156.read();
	// Produce: dark_gauss_ds_1_FIFO_buf440
	dark_gauss_ds_1_FIFO_buf440_load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977_write_bundle_write(/* arg names */dark_gauss_ds_1_to_gp_31156__lp__lp_1_m_dark_gauss_ds_1_to_gp_31156_ld441__p__0_rp___p__3_rp__c_______lp_dark_gauss_ds_1_to_gp_31156_ld442__p__3_rp__value, dark_gauss_ds_1_FIFO_buf440, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_us_0_update_0_sm723_01071(dark_gauss_ds_1_FIFO_buf440_cache& dark_gauss_ds_1_FIFO_buf440, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1_FIFO_buf440
	auto dark_gauss_ds_1_FIFO_buf440_floor_lp__lp_1_m__lp_1_m_dark_laplace_us_0_1__p__0_rp__rp__div_2_rp___p__0_p_3_c_____floor_lp__lp_1_m_dark_laplace_us_0_0_rp__div_2_rp___p__0_p_3_value = dark_gauss_ds_1_FIFO_buf440_dark_laplace_us_0_update_0_sm723_01071_read_bundle_read(dark_gauss_ds_1_FIFO_buf440/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(dark_gauss_ds_1_FIFO_buf440_floor_lp__lp_1_m__lp_1_m_dark_laplace_us_0_1__p__0_rp__rp__div_2_rp___p__0_p_3_c_____floor_lp__lp_1_m_dark_laplace_us_0_0_rp__div_2_rp___p__0_p_3_value);
	// Produce: dark_laplace_us_0
	dark_laplace_us_0_dark_laplace_us_0_update_0_sm723_01071_write_bundle_write(/* arg names */compute_result, dark_laplace_us_0, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903(dark_laplace_us_0_cache& dark_laplace_us_0, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_us_0_to_gp_28192, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_us_0
	auto dark_laplace_us_0__lp_1_m_dark_laplace_us_0_ld193__p__0_rp__c____dark_laplace_us_0_ld194_value = dark_laplace_us_0_load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903_read_bundle_read(dark_laplace_us_0/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_laplace_us_0_to_gp_28192
	dark_laplace_us_0_to_gp_28192.write(dark_laplace_us_0__lp_1_m_dark_laplace_us_0_ld193__p__0_rp__c____dark_laplace_us_0_ld194_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_gauss_ds_1_to_gp_31156_ld442_dark_laplace_us_0_0_dark_laplace_us_0_ld194_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_1_to_gp_31156, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_us_0_to_gp_28192) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_gauss_ds_1_to_gp_31156_ld442_dark_laplace_us_0_0_dark_laplace_us_0_ld194__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_1_FIFO_buf440_cache dark_gauss_ds_1_FIFO_buf440;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_0_cache dark_laplace_us_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { dark_laplace_us_0_update_0_sm723_01071[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 85] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 102] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 78] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
//   { dark_laplace_us_0_update_0_sm723_01071[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 85] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for dark_laplace_us_0_update_0_sm723_01071(((((-85 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 102] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903(((((-102 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 78] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-78 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 102] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 85] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 78] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 8 <= i1 <= 1086 and 8 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 8; i1 <= 1087; i1++) {
	    for (int i2 = 8; i2 <= 1087; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_dark_gauss_ds_1_FIFO_buf440443_sm676_0977(dark_gauss_ds_1_to_gp_31156 /* buf name */, dark_gauss_ds_1_FIFO_buf440, 0, ((-4 + (1*(((1*i1)) >> 1)))), ((-4 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          dark_laplace_us_0_update_0_sm723_01071(dark_gauss_ds_1_FIFO_buf440 /* buf name */, dark_laplace_us_0, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_dark_laplace_us_0_to_gp_28192195_sm639_0903(dark_laplace_us_0 /* buf name */, dark_laplace_us_0_to_gp_28192, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_2_to_gp_32168, dark_gauss_ds_2_FIFO_buf452_cache& dark_gauss_ds_2_FIFO_buf452, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2_to_gp_32168
	auto dark_gauss_ds_2_to_gp_32168__lp__lp_1_m_dark_gauss_ds_2_to_gp_32168_ld453__p__0_rp___p__1_rp__c_______lp_dark_gauss_ds_2_to_gp_32168_ld454__p__1_rp__value = dark_gauss_ds_2_to_gp_32168.read();
	// Produce: dark_gauss_ds_2_FIFO_buf452
	dark_gauss_ds_2_FIFO_buf452_load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981_write_bundle_write(/* arg names */dark_gauss_ds_2_to_gp_32168__lp__lp_1_m_dark_gauss_ds_2_to_gp_32168_ld453__p__0_rp___p__1_rp__c_______lp_dark_gauss_ds_2_to_gp_32168_ld454__p__1_rp__value, dark_gauss_ds_2_FIFO_buf452, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_us_1_update_0_sm739_01103(dark_gauss_ds_2_FIFO_buf452_cache& dark_gauss_ds_2_FIFO_buf452, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2_FIFO_buf452
	auto dark_gauss_ds_2_FIFO_buf452_floor_lp__lp_1_m__lp_1_m_dark_laplace_us_1_1__p__0_rp__rp__div_2_rp___p__0_p_1_c_____floor_lp__lp_1_m_dark_laplace_us_1_0_rp__div_2_rp___p__0_p_1_value = dark_gauss_ds_2_FIFO_buf452_dark_laplace_us_1_update_0_sm739_01103_read_bundle_read(dark_gauss_ds_2_FIFO_buf452/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(dark_gauss_ds_2_FIFO_buf452_floor_lp__lp_1_m__lp_1_m_dark_laplace_us_1_1__p__0_rp__rp__div_2_rp___p__0_p_1_c_____floor_lp__lp_1_m_dark_laplace_us_1_0_rp__div_2_rp___p__0_p_1_value);
	// Produce: dark_laplace_us_1
	dark_laplace_us_1_dark_laplace_us_1_update_0_sm739_01103_write_bundle_write(/* arg names */compute_result, dark_laplace_us_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891(dark_laplace_us_1_cache& dark_laplace_us_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_us_1_to_gp_29196, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_us_1
	auto dark_laplace_us_1__lp_1_m_dark_laplace_us_1_ld197__p__0_rp__c____dark_laplace_us_1_ld198_value = dark_laplace_us_1_load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891_read_bundle_read(dark_laplace_us_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_laplace_us_1_to_gp_29196
	dark_laplace_us_1_to_gp_29196.write(dark_laplace_us_1__lp_1_m_dark_laplace_us_1_ld197__p__0_rp__c____dark_laplace_us_1_ld198_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_gauss_ds_2_to_gp_32168_ld454_dark_laplace_us_1_0_dark_laplace_us_1_ld198_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_2_to_gp_32168, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_us_1_to_gp_29196) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_gauss_ds_2_to_gp_32168_ld454_dark_laplace_us_1_0_dark_laplace_us_1_ld198__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_2_FIFO_buf452_cache dark_gauss_ds_2_FIFO_buf452;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_1_cache dark_laplace_us_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { dark_laplace_us_1_update_0_sm739_01103[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 112] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 105] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 116] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
//   { dark_laplace_us_1_update_0_sm739_01103[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 112] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for dark_laplace_us_1_update_0_sm739_01103(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-112 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 105] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-105 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 116] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-116 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 116] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 112] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 105] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 10 <= i1 <= 1086 and 10 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 10; i1 <= 1088; i1++) {
	    for (int i2 = 10; i2 <= 1088; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_dark_gauss_ds_2_FIFO_buf452455_sm678_0981(dark_gauss_ds_2_to_gp_32168 /* buf name */, dark_gauss_ds_2_FIFO_buf452, 0, ((-3 + (1*(((2 + 1*i1)) >> 2)))), ((-3 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          dark_laplace_us_1_update_0_sm739_01103(dark_gauss_ds_2_FIFO_buf452 /* buf name */, dark_laplace_us_1, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_dark_laplace_us_1_to_gp_29196199_sm633_0891(dark_laplace_us_1 /* buf name */, dark_laplace_us_1_to_gp_29196, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_3_to_gp_33172, dark_gauss_ds_3_FIFO_buf456_cache& dark_gauss_ds_3_FIFO_buf456, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_3_to_gp_33172
	auto dark_gauss_ds_3_to_gp_33172__lp_1_m_dark_gauss_ds_3_to_gp_33172_ld457__p__0_rp__c____dark_gauss_ds_3_to_gp_33172_ld458_value = dark_gauss_ds_3_to_gp_33172.read();
	// Produce: dark_gauss_ds_3_FIFO_buf456
	dark_gauss_ds_3_FIFO_buf456_load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011_write_bundle_write(/* arg names */dark_gauss_ds_3_to_gp_33172__lp_1_m_dark_gauss_ds_3_to_gp_33172_ld457__p__0_rp__c____dark_gauss_ds_3_to_gp_33172_ld458_value, dark_gauss_ds_3_FIFO_buf456, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_us_2_update_0_sm738_01101(dark_gauss_ds_3_FIFO_buf456_cache& dark_gauss_ds_3_FIFO_buf456, dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_3_FIFO_buf456
	auto dark_gauss_ds_3_FIFO_buf456_floor_lp__lp_1_m__lp_1_m_dark_laplace_us_2_1__p__0_rp__rp__div_2_rp___p__0_p_0_c_____floor_lp__lp_1_m_dark_laplace_us_2_0_rp__div_2_rp___p__0_p_0_value = dark_gauss_ds_3_FIFO_buf456_dark_laplace_us_2_update_0_sm738_01101_read_bundle_read(dark_gauss_ds_3_FIFO_buf456/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(dark_gauss_ds_3_FIFO_buf456_floor_lp__lp_1_m__lp_1_m_dark_laplace_us_2_1__p__0_rp__rp__div_2_rp___p__0_p_0_c_____floor_lp__lp_1_m_dark_laplace_us_2_0_rp__div_2_rp___p__0_p_0_value);
	// Produce: dark_laplace_us_2
	dark_laplace_us_2_dark_laplace_us_2_update_0_sm738_01101_write_bundle_write(/* arg names */compute_result, dark_laplace_us_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893(dark_laplace_us_2_cache& dark_laplace_us_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_us_2_to_gp_30200, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_us_2
	auto dark_laplace_us_2__lp_1_m_dark_laplace_us_2_ld201__p__0_rp__c____dark_laplace_us_2_ld202_value = dark_laplace_us_2_load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893_read_bundle_read(dark_laplace_us_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_laplace_us_2_to_gp_30200
	dark_laplace_us_2_to_gp_30200.write(dark_laplace_us_2__lp_1_m_dark_laplace_us_2_ld201__p__0_rp__c____dark_laplace_us_2_ld202_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_gauss_ds_3_to_gp_33172_ld458_dark_laplace_us_2_0_dark_laplace_us_2_ld202_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_3_to_gp_33172, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_us_2_to_gp_30200) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_gauss_ds_3_to_gp_33172_ld458_dark_laplace_us_2_0_dark_laplace_us_2_ld202__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_3_FIFO_buf456_cache dark_gauss_ds_3_FIFO_buf456;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_2_cache dark_laplace_us_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { dark_laplace_us_2_update_0_sm738_01101[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 148] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 133] : 0 <= d1 <= 134 and 0 <= d2 <= 134; load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 153] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
//   { dark_laplace_us_2_update_0_sm738_01101[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 148] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for dark_laplace_us_2_update_0_sm738_01101(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-148 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 133] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-133 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 153] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-153 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 153] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 148] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 133] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1090; i1++) {
	    for (int i2 = 14; i2 <= 1090; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_dark_gauss_ds_3_FIFO_buf456459_sm693_01011(dark_gauss_ds_3_to_gp_33172 /* buf name */, dark_gauss_ds_3_FIFO_buf456, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          dark_laplace_us_2_update_0_sm738_01101(dark_gauss_ds_3_FIFO_buf456 /* buf name */, dark_laplace_us_2, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_dark_laplace_us_2_to_gp_30200203_sm634_0893(dark_laplace_us_2 /* buf name */, dark_laplace_us_2_to_gp_30200, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void dark_weights_update_0_sm710_01045(dark_FIFO_buf416_cache& dark_FIFO_buf416, dark_weights_cache& dark_weights, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_FIFO_buf416
	auto dark_FIFO_buf416_1_m__lp__lp_1_m_dark_weights_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_dark_weights_0__p___m_7_rp___p__0_p_7_value = dark_FIFO_buf416_dark_weights_update_0_sm710_01045_read_bundle_read(dark_FIFO_buf416/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weight_unrolled_1(dark_FIFO_buf416_1_m__lp__lp_1_m_dark_weights_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_dark_weights_0__p___m_7_rp___p__0_p_7_value);
	// Produce: dark_weights
	dark_weights_dark_weights_update_0_sm710_01045_write_bundle_write(/* arg names */compute_result, dark_weights, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_FIFO_buf416419_sm675_0975(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_to_gp_34132, dark_FIFO_buf416_cache& dark_FIFO_buf416, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_to_gp_34132
	auto dark_to_gp_34132__lp_1_m_dark_to_gp_34132_ld417__p__0_rp__c____dark_to_gp_34132_ld418_value = dark_to_gp_34132.read();
	// Produce: dark_FIFO_buf416
	dark_FIFO_buf416_load_to_dark_FIFO_buf416419_sm675_0975_write_bundle_write(/* arg names */dark_to_gp_34132__lp_1_m_dark_to_gp_34132_ld417__p__0_rp__c____dark_to_gp_34132_ld418_value, dark_FIFO_buf416, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_to_gp_35204207_sm638_0901(dark_weights_cache& dark_weights, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_to_gp_35204, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights
	auto dark_weights__lp_1_m_dark_weights_ld205__p__0_rp__c____dark_weights_ld206_value = dark_weights_load_to_dark_weights_to_gp_35204207_sm638_0901_read_bundle_read(dark_weights/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_weights_to_gp_35204
	dark_weights_to_gp_35204.write(dark_weights__lp_1_m_dark_weights_ld205__p__0_rp__c____dark_weights_ld206_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_to_gp_34132_ld418_dark_weights_0_dark_weights_ld206_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_to_gp_34132, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_to_gp_35204) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_to_gp_34132_ld418_dark_weights_0_dark_weights_ld206__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_FIFO_buf416_cache dark_FIFO_buf416;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_cache dark_weights;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_FIFO_buf416419_sm675_0975[d0 = 0, d1, d2] -> [0, d1, d2, 27] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; dark_weights_update_0_sm710_01045[d0 = 0, d1, d2] -> [0, d1, d2, 35] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_dark_weights_to_gp_35204207_sm638_0901[d0 = 0, d1, d2] -> [0, d1, d2, 38] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
//   { load_to_dark_FIFO_buf416419_sm675_0975[d0 = 0, d1, d2] -> [0, d1, d2, 27] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_dark_FIFO_buf416419_sm675_0975(((((-27 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_weights_update_0_sm710_01045[d0 = 0, d1, d2] -> [0, d1, d2, 35] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for dark_weights_update_0_sm710_01045(((((-35 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_to_gp_35204207_sm638_0901[d0 = 0, d1, d2] -> [0, d1, d2, 38] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_dark_weights_to_gp_35204207_sm638_0901(((((-38 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 38] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086; [0, i1, i2, 35] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086; [0, i1, i2, 27] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 0; i1 <= 1086; i1++) {
	    for (int i2 = 0; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_dark_FIFO_buf416419_sm675_0975(dark_to_gp_34132 /* buf name */, dark_FIFO_buf416, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          dark_weights_update_0_sm710_01045(dark_FIFO_buf416 /* buf name */, dark_weights, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_dark_weights_to_gp_35204207_sm638_0901(dark_weights /* buf name */, dark_weights_to_gp_35204, 0, ((1*i1)), ((1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_weights_normed_to_gp_36208211_sm594_0813(dark_weights_normed_cache& dark_weights_normed, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_to_gp_36208, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed
	auto dark_weights_normed__lp_1_m_dark_weights_normed_ld209__p__0_rp__c____dark_weights_normed_ld210_value = dark_weights_normed_load_to_dark_weights_normed_to_gp_36208211_sm594_0813_read_bundle_read(dark_weights_normed/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_weights_normed_to_gp_36208
	dark_weights_normed_to_gp_36208.write(dark_weights_normed__lp_1_m_dark_weights_normed_ld209__p__0_rp__c____dark_weights_normed_ld210_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_to_gp_45212215_sm629_0883(dark_weights_normed_cache& dark_weights_normed, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_to_gp_45212, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed
	auto dark_weights_normed__lp__lp_1_m_dark_weights_normed_ld213__p__0_rp___p__7_rp__c_______lp_dark_weights_normed_ld214__p__7_rp__value = dark_weights_normed_load_to_dark_weights_normed_to_gp_45212215_sm629_0883_read_bundle_read(dark_weights_normed/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_weights_normed_to_gp_45212
	dark_weights_normed_to_gp_45212.write(dark_weights_normed__lp__lp_1_m_dark_weights_normed_ld213__p__0_rp___p__7_rp__c_______lp_dark_weights_normed_ld214__p__7_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_FIFO_buf488491_sm679_0983(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_to_gp_35204, dark_weights_FIFO_buf488_cache& dark_weights_FIFO_buf488, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_to_gp_35204
	auto dark_weights_to_gp_35204__lp_1_m_dark_weights_to_gp_35204_ld489__p__0_rp__c____dark_weights_to_gp_35204_ld490_value = dark_weights_to_gp_35204.read();
	// Produce: dark_weights_FIFO_buf488
	dark_weights_FIFO_buf488_load_to_dark_weights_FIFO_buf488491_sm679_0983_write_bundle_write(/* arg names */dark_weights_to_gp_35204__lp_1_m_dark_weights_to_gp_35204_ld489__p__0_rp__c____dark_weights_to_gp_35204_ld490_value, dark_weights_FIFO_buf488, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_update_0_sm713_01051(dark_weights_FIFO_buf488_cache& dark_weights_FIFO_buf488, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_FIFO_buf488
	auto dark_weights_FIFO_buf488_1_m__lp__lp_1_m_dark_weights_normed_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_dark_weights_normed_0__p___m_7_rp___p__0_p_7_value = dark_weights_FIFO_buf488_dark_weights_normed_update_0_sm713_01051_read_bundle_read(dark_weights_FIFO_buf488/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_normalize_weights_unrolled_1(dark_weights_FIFO_buf488_1_m__lp__lp_1_m_dark_weights_normed_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_dark_weights_normed_0__p___m_7_rp___p__0_p_7_value);
	// Produce: dark_weights_normed
	dark_weights_normed_dark_weights_normed_update_0_sm713_01051_write_bundle_write(/* arg names */compute_result, dark_weights_normed, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_weights_normed_0_dark_weights_normed_ld210_dark_weights_normed_ld214_dark_weights_to_gp_35204_ld490_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_to_gp_35204, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_to_gp_36208, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_to_gp_45212) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_weights_normed_0_dark_weights_normed_ld210_dark_weights_normed_ld214_dark_weights_to_gp_35204_ld490__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_weights_FIFO_buf488_cache dark_weights_FIFO_buf488;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_cache dark_weights_normed;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_weights_normed_to_gp_45212215_sm629_0883[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 54] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; dark_weights_normed_update_0_sm713_01051[d0 = 0, d1, d2] -> [0, d1, d2, 53] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_dark_weights_normed_to_gp_36208211_sm594_0813[d0 = 0, d1, d2] -> [0, d1, d2, 56] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_dark_weights_FIFO_buf488491_sm679_0983[d0 = 0, d1, d2] -> [0, d1, d2, 47] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
//   { load_to_dark_weights_normed_to_gp_45212215_sm629_0883[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 54] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_dark_weights_normed_to_gp_45212215_sm629_0883(((((-54 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { dark_weights_normed_update_0_sm713_01051[d0 = 0, d1, d2] -> [0, d1, d2, 53] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for dark_weights_normed_update_0_sm713_01051(((((-53 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_to_gp_36208211_sm594_0813[d0 = 0, d1, d2] -> [0, d1, d2, 56] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_dark_weights_normed_to_gp_36208211_sm594_0813(((((-56 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_FIFO_buf488491_sm679_0983[d0 = 0, d1, d2] -> [0, d1, d2, 47] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_dark_weights_FIFO_buf488491_sm679_0983(((((-47 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 56] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086; [0, i1, i2, 54] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 53] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086; [0, i1, i2, 47] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 0; i1 <= 1087; i1++) {
	    for (int i2 = 0; i2 <= 1087; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((1086 + -1*i1)) >= 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_dark_weights_FIFO_buf488491_sm679_0983(dark_weights_to_gp_35204 /* buf name */, dark_weights_FIFO_buf488, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((1086 + -1*i1)) >= 0) && (((1086 + -1*i2)) >= 0)))) {
	          dark_weights_normed_update_0_sm713_01051(dark_weights_FIFO_buf488 /* buf name */, dark_weights_normed, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 8 and i2 >= 8 }
	        // { [i0, i1, i2] : i1 >= 8 and i2 >= 8 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-8 + 1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          load_to_dark_weights_normed_to_gp_45212215_sm629_0883(dark_weights_normed /* buf name */, dark_weights_normed_to_gp_45212, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((1086 + -1*i1)) >= 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_dark_weights_normed_to_gp_36208211_sm594_0813(dark_weights_normed /* buf name */, dark_weights_normed_to_gp_36208, 0, ((1*i1)), ((1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_weights_normed_FIFO_buf492495_sm698_01021(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_to_gp_36208, dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_to_gp_36208
	auto dark_weights_normed_to_gp_36208__lp_1_m_dark_weights_normed_to_gp_36208_ld493__p__0_rp__c____dark_weights_normed_to_gp_36208_ld494_value = dark_weights_normed_to_gp_36208.read();
	// Produce: dark_weights_normed_FIFO_buf492
	dark_weights_normed_FIFO_buf492_load_to_dark_weights_normed_FIFO_buf492495_sm698_01021_write_bundle_write(/* arg names */dark_weights_normed_to_gp_36208__lp_1_m_dark_weights_normed_to_gp_36208_ld493__p__0_rp__c____dark_weights_normed_to_gp_36208_ld494_value, dark_weights_normed_FIFO_buf492, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_blur_1_update_0_sm716_01057(dark_weights_normed_FIFO_buf492_cache& dark_weights_normed_FIFO_buf492, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_FIFO_buf492
	auto dark_weights_normed_FIFO_buf492_1_m__lp__lp_1_m_dark_weights_normed_gauss_blur_1_1__p__0_rp___p___m_6_rp___p___m_1_p_7_c_______1_m__lp_dark_weights_normed_gauss_blur_1_0__p___m_6_rp___p___m_1_p_7_value = dark_weights_normed_FIFO_buf492_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_read_bundle_read(dark_weights_normed_FIFO_buf492/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(dark_weights_normed_FIFO_buf492_1_m__lp__lp_1_m_dark_weights_normed_gauss_blur_1_1__p__0_rp___p___m_6_rp___p___m_1_p_7_c_______1_m__lp_dark_weights_normed_gauss_blur_1_0__p___m_6_rp___p___m_1_p_7_value);
	// Produce: dark_weights_normed_gauss_blur_1
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_sm716_01057_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_blur_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_blur_1_to_gp_39216, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_1
	auto dark_weights_normed_gauss_blur_1__lp_1_m_dark_weights_normed_gauss_blur_1_ld217__p__0_rp__c____dark_weights_normed_gauss_blur_1_ld218_value = dark_weights_normed_gauss_blur_1_load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885_read_bundle_read(dark_weights_normed_gauss_blur_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_weights_normed_gauss_blur_1_to_gp_39216
	dark_weights_normed_gauss_blur_1_to_gp_39216.write(dark_weights_normed_gauss_blur_1__lp_1_m_dark_weights_normed_gauss_blur_1_ld217__p__0_rp__c____dark_weights_normed_gauss_blur_1_ld218_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_weights_normed_gauss_blur_1_0_dark_weights_normed_gauss_blur_1_ld218_dark_weights_normed_to_gp_36208_ld494_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_to_gp_36208, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_blur_1_to_gp_39216) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_weights_normed_gauss_blur_1_0_dark_weights_normed_gauss_blur_1_ld218_dark_weights_normed_to_gp_36208_ld494__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_weights_normed_FIFO_buf492_cache dark_weights_normed_FIFO_buf492;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_1_cache dark_weights_normed_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 83] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084; load_to_dark_weights_normed_FIFO_buf492495_sm698_01021[d0 = 0, d1, d2] -> [0, d1, d2, 66] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
//   { load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 83] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885(((((-83 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_FIFO_buf492495_sm698_01021[d0 = 0, d1, d2] -> [0, d1, d2, 66] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_dark_weights_normed_FIFO_buf492495_sm698_01021(((((-66 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_weights_normed_gauss_blur_1_update_0_sm716_01057[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 79] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for dark_weights_normed_gauss_blur_1_update_0_sm716_01057(((((-79 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 83] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 79] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 66] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 0; i1 <= 1086; i1++) {
	    for (int i2 = 0; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_dark_weights_normed_FIFO_buf492495_sm698_01021(dark_weights_normed_to_gp_36208 /* buf name */, dark_weights_normed_FIFO_buf492, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	          // { [i0, i1, i2] : -2 + i1 >= 0 }
	          // { [i0, i1, i2] : -2 + i2 >= 0 }
	        if ((((((-2 + 1*i1)) >= 0) && (((-2 + 1*i2)) >= 0)))) {
	          dark_weights_normed_gauss_blur_1_update_0_sm716_01057(dark_weights_normed_FIFO_buf492 /* buf name */, dark_weights_normed_gauss_blur_1, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	        // { [i0, i1, i2] : i1 >= 2 and i2 >= 2 }
	          // { [i0, i1, i2] : -2 + i1 >= 0 }
	          // { [i0, i1, i2] : -2 + i2 >= 0 }
	        if ((((((-2 + 1*i1)) >= 0) && (((-2 + 1*i2)) >= 0)))) {
	          load_to_dark_weights_normed_gauss_blur_1_to_gp_39216219_sm630_0885(dark_weights_normed_gauss_blur_1 /* buf name */, dark_weights_normed_gauss_blur_1_to_gp_39216, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void dark_weights_normed_gauss_blur_2_update_0_sm724_01073(dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_1_FIFO_buf512
	auto dark_weights_normed_gauss_ds_1_FIFO_buf512_1_m__lp__lp_1_m_dark_weights_normed_gauss_blur_2_1__p__0_rp___p___m_2_rp___p___m_1_p_3_c_______1_m__lp_dark_weights_normed_gauss_blur_2_0__p___m_2_rp___p___m_1_p_3_value = dark_weights_normed_gauss_ds_1_FIFO_buf512_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_read_bundle_read(dark_weights_normed_gauss_ds_1_FIFO_buf512/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(dark_weights_normed_gauss_ds_1_FIFO_buf512_1_m__lp__lp_1_m_dark_weights_normed_gauss_blur_2_1__p__0_rp___p___m_2_rp___p___m_1_p_3_c_______1_m__lp_dark_weights_normed_gauss_blur_2_0__p___m_2_rp___p___m_1_p_3_value);
	// Produce: dark_weights_normed_gauss_blur_2
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_sm724_01073_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_blur_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_blur_2_to_gp_40220, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_2
	auto dark_weights_normed_gauss_blur_2__lp_1_m_dark_weights_normed_gauss_blur_2_ld221__p__0_rp__c____dark_weights_normed_gauss_blur_2_ld222_value = dark_weights_normed_gauss_blur_2_load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889_read_bundle_read(dark_weights_normed_gauss_blur_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_weights_normed_gauss_blur_2_to_gp_40220
	dark_weights_normed_gauss_blur_2_to_gp_40220.write(dark_weights_normed_gauss_blur_2__lp_1_m_dark_weights_normed_gauss_blur_2_ld221__p__0_rp__c____dark_weights_normed_gauss_blur_2_ld222_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_ds_1_to_gp_37228, dark_weights_normed_gauss_ds_1_FIFO_buf512_cache& dark_weights_normed_gauss_ds_1_FIFO_buf512, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_1_to_gp_37228
	auto dark_weights_normed_gauss_ds_1_to_gp_37228__lp_1_m_dark_weights_normed_gauss_ds_1_to_gp_37228_ld513__p__0_rp__c____dark_weights_normed_gauss_ds_1_to_gp_37228_ld514_value = dark_weights_normed_gauss_ds_1_to_gp_37228.read();
	// Produce: dark_weights_normed_gauss_ds_1_FIFO_buf512
	dark_weights_normed_gauss_ds_1_FIFO_buf512_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961_write_bundle_write(/* arg names */dark_weights_normed_gauss_ds_1_to_gp_37228__lp_1_m_dark_weights_normed_gauss_ds_1_to_gp_37228_ld513__p__0_rp__c____dark_weights_normed_gauss_ds_1_to_gp_37228_ld514_value, dark_weights_normed_gauss_ds_1_FIFO_buf512, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_weights_normed_gauss_blur_2_0_dark_weights_normed_gauss_blur_2_ld222_dark_weights_normed_gauss_ds_1_to_gp_37228_ld514_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_ds_1_to_gp_37228, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_blur_2_to_gp_40220) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_weights_normed_gauss_blur_2_0_dark_weights_normed_gauss_blur_2_ld222_dark_weights_normed_gauss_ds_1_to_gp_37228_ld514__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_2_cache dark_weights_normed_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_1_FIFO_buf512_cache dark_weights_normed_gauss_ds_1_FIFO_buf512;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 117] : 0 <= d1 <= 540 and 0 <= d2 <= 540; load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 99] : 0 <= d1 <= 542 and 0 <= d2 <= 542; dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
//   { load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 117] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-117 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 99] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-99 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_weights_normed_gauss_blur_2_update_0_sm724_01073[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 106] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for dark_weights_normed_gauss_blur_2_update_0_sm724_01073(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-106 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 117] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086; [0, i1, i2, 106] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086; [0, i1, i2, 99] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 2; i1 <= 1086; i1++) {
	    for (int i2 = 2; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_dark_weights_normed_gauss_ds_1_FIFO_buf512515_sm668_0961(dark_weights_normed_gauss_ds_1_to_gp_37228 /* buf name */, dark_weights_normed_gauss_ds_1_FIFO_buf512, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -6 + i1 >= 0 }
	          // { [i0, i1, i2] : -6 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-6 + 1*i1)) >= 0) && (((-6 + 1*i2)) >= 0)))) {
	          dark_weights_normed_gauss_blur_2_update_0_sm724_01073(dark_weights_normed_gauss_ds_1_FIFO_buf512 /* buf name */, dark_weights_normed_gauss_blur_2, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 6 and i2 >= 6 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -6 + i1 >= 0 }
	          // { [i0, i1, i2] : -6 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-6 + 1*i1)) >= 0) && (((-6 + 1*i2)) >= 0)))) {
	          load_to_dark_weights_normed_gauss_blur_2_to_gp_40220223_sm632_0889(dark_weights_normed_gauss_blur_2 /* buf name */, dark_weights_normed_gauss_blur_2_to_gp_40220, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825(dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_blur_3_to_gp_41224, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_3
	auto dark_weights_normed_gauss_blur_3__lp_1_m_dark_weights_normed_gauss_blur_3_ld225__p__0_rp__c____dark_weights_normed_gauss_blur_3_ld226_value = dark_weights_normed_gauss_blur_3_load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825_read_bundle_read(dark_weights_normed_gauss_blur_3/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_weights_normed_gauss_blur_3_to_gp_41224
	dark_weights_normed_gauss_blur_3_to_gp_41224.write(dark_weights_normed_gauss_blur_3__lp_1_m_dark_weights_normed_gauss_blur_3_ld225__p__0_rp__c____dark_weights_normed_gauss_blur_3_ld226_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_ds_2_to_gp_38236, dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_2_to_gp_38236
	auto dark_weights_normed_gauss_ds_2_to_gp_38236__lp_1_m_dark_weights_normed_gauss_ds_2_to_gp_38236_ld521__p__0_rp__c____dark_weights_normed_gauss_ds_2_to_gp_38236_ld522_value = dark_weights_normed_gauss_ds_2_to_gp_38236.read();
	// Produce: dark_weights_normed_gauss_ds_2_FIFO_buf520
	dark_weights_normed_gauss_ds_2_FIFO_buf520_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023_write_bundle_write(/* arg names */dark_weights_normed_gauss_ds_2_to_gp_38236__lp_1_m_dark_weights_normed_gauss_ds_2_to_gp_38236_ld521__p__0_rp__c____dark_weights_normed_gauss_ds_2_to_gp_38236_ld522_value, dark_weights_normed_gauss_ds_2_FIFO_buf520, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_blur_3_update_0_sm732_01089(dark_weights_normed_gauss_ds_2_FIFO_buf520_cache& dark_weights_normed_gauss_ds_2_FIFO_buf520, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_2_FIFO_buf520
	auto dark_weights_normed_gauss_ds_2_FIFO_buf520_1_m__lp_1_m_dark_weights_normed_gauss_blur_3_1__p__0_rp___p___m_1_p_1_c_____1_m_dark_weights_normed_gauss_blur_3_0__p___m_1_p_1_value = dark_weights_normed_gauss_ds_2_FIFO_buf520_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_read_bundle_read(dark_weights_normed_gauss_ds_2_FIFO_buf520/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_1(dark_weights_normed_gauss_ds_2_FIFO_buf520_1_m__lp_1_m_dark_weights_normed_gauss_blur_3_1__p__0_rp___p___m_1_p_1_c_____1_m_dark_weights_normed_gauss_blur_3_0__p___m_1_p_1_value);
	// Produce: dark_weights_normed_gauss_blur_3
	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_sm732_01089_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_blur_3, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_weights_normed_gauss_blur_3_0_dark_weights_normed_gauss_blur_3_ld226_dark_weights_normed_gauss_ds_2_to_gp_38236_ld522_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_ds_2_to_gp_38236, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_blur_3_to_gp_41224) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_weights_normed_gauss_blur_3_0_dark_weights_normed_gauss_blur_3_ld226_dark_weights_normed_gauss_ds_2_to_gp_38236_ld522__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_3_cache dark_weights_normed_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_2_FIFO_buf520_cache dark_weights_normed_gauss_ds_2_FIFO_buf520;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268; load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 141] : 0 <= d1 <= 270 and 0 <= d2 <= 270; load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 147] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
//   { dark_weights_normed_gauss_blur_3_update_0_sm732_01089[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 144] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for dark_weights_normed_gauss_blur_3_update_0_sm732_01089(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-144 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 141] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-141 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 147] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-147 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 147] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 144] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 141] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 6; i1 <= 1086; i1++) {
	    for (int i2 = 6; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_dark_weights_normed_gauss_ds_2_FIFO_buf520523_sm699_01023(dark_weights_normed_gauss_ds_2_to_gp_38236 /* buf name */, dark_weights_normed_gauss_ds_2_FIFO_buf520, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0) && (((-14 + 1*i2)) >= 0)))) {
	          dark_weights_normed_gauss_blur_3_update_0_sm732_01089(dark_weights_normed_gauss_ds_2_FIFO_buf520 /* buf name */, dark_weights_normed_gauss_blur_3, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 and i2 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0) && (((-14 + 1*i2)) >= 0)))) {
	          load_to_dark_weights_normed_gauss_blur_3_to_gp_41224227_sm600_0825(dark_weights_normed_gauss_blur_3 /* buf name */, dark_weights_normed_gauss_blur_3_to_gp_41224, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_ds_1_to_gp_37228, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_1
	auto dark_weights_normed_gauss_ds_1__lp_1_m_dark_weights_normed_gauss_ds_1_ld229__p__0_rp__c____dark_weights_normed_gauss_ds_1_ld230_value = dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895_read_bundle_read(dark_weights_normed_gauss_ds_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_weights_normed_gauss_ds_1_to_gp_37228
	dark_weights_normed_gauss_ds_1_to_gp_37228.write(dark_weights_normed_gauss_ds_1__lp_1_m_dark_weights_normed_gauss_ds_1_ld229__p__0_rp__c____dark_weights_normed_gauss_ds_1_ld230_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_ds_1_update_0_sm722_01069(dark_weights_normed_gauss_blur_1_FIFO_buf500_cache& dark_weights_normed_gauss_blur_1_FIFO_buf500, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_1_FIFO_buf500
	auto dark_weights_normed_gauss_blur_1_FIFO_buf500_2_m__lp__lp_1_m_dark_weights_normed_gauss_ds_1_1__p__0_rp___p___m_3_rp___p__0_p_6_c_______2_m__lp_dark_weights_normed_gauss_ds_1_0__p___m_3_rp___p__0_p_6_value = dark_weights_normed_gauss_blur_1_FIFO_buf500_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_read_bundle_read(dark_weights_normed_gauss_blur_1_FIFO_buf500/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(dark_weights_normed_gauss_blur_1_FIFO_buf500_2_m__lp__lp_1_m_dark_weights_normed_gauss_ds_1_1__p__0_rp___p___m_3_rp___p__0_p_6_c_______2_m__lp_dark_weights_normed_gauss_ds_1_0__p___m_3_rp___p__0_p_6_value);
	// Produce: dark_weights_normed_gauss_ds_1
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_sm722_01069_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_ds_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_blur_1_to_gp_39216, dark_weights_normed_gauss_blur_1_FIFO_buf500_cache& dark_weights_normed_gauss_blur_1_FIFO_buf500, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_1_to_gp_39216
	auto dark_weights_normed_gauss_blur_1_to_gp_39216__lp_1_m_dark_weights_normed_gauss_blur_1_to_gp_39216_ld501__p__0_rp__c____dark_weights_normed_gauss_blur_1_to_gp_39216_ld502_value = dark_weights_normed_gauss_blur_1_to_gp_39216.read();
	// Produce: dark_weights_normed_gauss_blur_1_FIFO_buf500
	dark_weights_normed_gauss_blur_1_FIFO_buf500_load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957_write_bundle_write(/* arg names */dark_weights_normed_gauss_blur_1_to_gp_39216__lp_1_m_dark_weights_normed_gauss_blur_1_to_gp_39216_ld501__p__0_rp__c____dark_weights_normed_gauss_blur_1_to_gp_39216_ld502_value, dark_weights_normed_gauss_blur_1_FIFO_buf500, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_ds_1_to_gp_46232, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_1
	auto dark_weights_normed_gauss_ds_1__lp__lp_1_m_dark_weights_normed_gauss_ds_1_ld233__p__0_rp___p__3_rp__c_______lp_dark_weights_normed_gauss_ds_1_ld234__p__3_rp__value = dark_weights_normed_gauss_ds_1_load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887_read_bundle_read(dark_weights_normed_gauss_ds_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_weights_normed_gauss_ds_1_to_gp_46232
	dark_weights_normed_gauss_ds_1_to_gp_46232.write(dark_weights_normed_gauss_ds_1__lp__lp_1_m_dark_weights_normed_gauss_ds_1_ld233__p__0_rp___p__3_rp__c_______lp_dark_weights_normed_gauss_ds_1_ld234__p__3_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_weights_normed_gauss_blur_1_to_gp_39216_ld502_dark_weights_normed_gauss_ds_1_0_dark_weights_normed_gauss_ds_1_ld230_dark_weights_normed_gauss_ds_1_ld234_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_blur_1_to_gp_39216, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_ds_1_to_gp_37228, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_ds_1_to_gp_46232) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_weights_normed_gauss_blur_1_to_gp_39216_ld502_dark_weights_normed_gauss_ds_1_0_dark_weights_normed_gauss_ds_1_ld230_dark_weights_normed_gauss_ds_1_ld234__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_1_FIFO_buf500_cache dark_weights_normed_gauss_blur_1_FIFO_buf500;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_1_cache dark_weights_normed_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 86] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084; dark_weights_normed_gauss_ds_1_update_0_sm722_01069[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 93] : 0 <= d1 <= 542 and 0 <= d2 <= 542; load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 94] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 95] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
//   { load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 86] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957(((((-86 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_weights_normed_gauss_ds_1_update_0_sm722_01069[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 93] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for dark_weights_normed_gauss_ds_1_update_0_sm722_01069(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-93 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 94] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-94 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 95] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-95 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 95] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 94] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 8 <= i1 <= 1086 and 8 <= i2 <= 1086; [0, i1, i2, 93] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 86] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 2; i1 <= 1086; i1++) {
	    for (int i2 = 2; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_dark_weights_normed_gauss_blur_1_FIFO_buf500503_sm666_0957(dark_weights_normed_gauss_blur_1_to_gp_39216 /* buf name */, dark_weights_normed_gauss_blur_1_FIFO_buf500, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          dark_weights_normed_gauss_ds_1_update_0_sm722_01069(dark_weights_normed_gauss_blur_1_FIFO_buf500 /* buf name */, dark_weights_normed_gauss_ds_1, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 8 and i2 >= 8 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 8 and i2 >= 8 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-8 + 1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          load_to_dark_weights_normed_gauss_ds_1_to_gp_46232235_sm631_0887(dark_weights_normed_gauss_ds_1 /* buf name */, dark_weights_normed_gauss_ds_1_to_gp_46232, 0, ((-4 + (1*(((1*i1)) >> 1)))), ((-4 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_dark_weights_normed_gauss_ds_1_to_gp_37228231_sm635_0895(dark_weights_normed_gauss_ds_1 /* buf name */, dark_weights_normed_gauss_ds_1_to_gp_37228, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783(bright_gauss_ds_1_cache& bright_gauss_ds_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_1_to_gp_832, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1
	auto bright_gauss_ds_1__lp__lp_1_m_bright_gauss_ds_1_ld33__p__0_rp___p__3_rp__c_______lp_bright_gauss_ds_1_ld34__p__3_rp__value = bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783_read_bundle_read(bright_gauss_ds_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_gauss_ds_1_to_gp_832
	bright_gauss_ds_1_to_gp_832.write(bright_gauss_ds_1__lp__lp_1_m_bright_gauss_ds_1_ld33__p__0_rp___p__3_rp__c_______lp_bright_gauss_ds_1_ld34__p__3_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_ds_1_update_0_sm720_01065(bright_gauss_blur_1_FIFO_buf296_cache& bright_gauss_blur_1_FIFO_buf296, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_1_FIFO_buf296
	auto bright_gauss_blur_1_FIFO_buf296_2_m__lp__lp_1_m_bright_gauss_ds_1_1__p__0_rp___p___m_3_rp___p__0_p_6_c_______2_m__lp_bright_gauss_ds_1_0__p___m_3_rp___p__0_p_6_value = bright_gauss_blur_1_FIFO_buf296_bright_gauss_ds_1_update_0_sm720_01065_read_bundle_read(bright_gauss_blur_1_FIFO_buf296/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(bright_gauss_blur_1_FIFO_buf296_2_m__lp__lp_1_m_bright_gauss_ds_1_1__p__0_rp___p___m_3_rp___p__0_p_6_c_______2_m__lp_bright_gauss_ds_1_0__p___m_3_rp___p__0_p_6_value);
	// Produce: bright_gauss_ds_1
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_sm720_01065_write_bundle_write(/* arg names */compute_result, bright_gauss_ds_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779(bright_gauss_ds_1_cache& bright_gauss_ds_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_1_to_gp_1024, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1
	auto bright_gauss_ds_1__lp__lp_1_m_bright_gauss_ds_1_ld25__p__0_rp___p__3_rp__c_______lp_bright_gauss_ds_1_ld26__p__3_rp__value = bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779_read_bundle_read(bright_gauss_ds_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_gauss_ds_1_to_gp_1024
	bright_gauss_ds_1_to_gp_1024.write(bright_gauss_ds_1__lp__lp_1_m_bright_gauss_ds_1_ld25__p__0_rp___p__3_rp__c_______lp_bright_gauss_ds_1_ld26__p__3_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781(bright_gauss_ds_1_cache& bright_gauss_ds_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_1_to_gp_228, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1
	auto bright_gauss_ds_1__lp_1_m_bright_gauss_ds_1_ld29__p__0_rp__c____bright_gauss_ds_1_ld30_value = bright_gauss_ds_1_load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781_read_bundle_read(bright_gauss_ds_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_gauss_ds_1_to_gp_228
	bright_gauss_ds_1_to_gp_228.write(bright_gauss_ds_1__lp_1_m_bright_gauss_ds_1_ld29__p__0_rp__c____bright_gauss_ds_1_ld30_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_blur_1_to_gp_412, bright_gauss_blur_1_FIFO_buf296_cache& bright_gauss_blur_1_FIFO_buf296, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_1_to_gp_412
	auto bright_gauss_blur_1_to_gp_412__lp_1_m_bright_gauss_blur_1_to_gp_412_ld297__p__0_rp__c____bright_gauss_blur_1_to_gp_412_ld298_value = bright_gauss_blur_1_to_gp_412.read();
	// Produce: bright_gauss_blur_1_FIFO_buf296
	bright_gauss_blur_1_FIFO_buf296_load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917_write_bundle_write(/* arg names */bright_gauss_blur_1_to_gp_412__lp_1_m_bright_gauss_blur_1_to_gp_412_ld297__p__0_rp__c____bright_gauss_blur_1_to_gp_412_ld298_value, bright_gauss_blur_1_FIFO_buf296, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_blur_1_to_gp_412_ld298_bright_gauss_ds_1_0_bright_gauss_ds_1_ld26_bright_gauss_ds_1_ld30_bright_gauss_ds_1_ld34_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_blur_1_to_gp_412, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_1_to_gp_1024, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_1_to_gp_228, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_1_to_gp_832) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_blur_1_to_gp_412_ld298_bright_gauss_ds_1_0_bright_gauss_ds_1_ld26_bright_gauss_ds_1_ld30_bright_gauss_ds_1_ld34__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_1_FIFO_buf296_cache bright_gauss_blur_1_FIFO_buf296;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_1_cache bright_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 34] : 0 <= d1 <= 542 and 0 <= d2 <= 542; load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 28] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084; load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 39] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783[d0 = 0, d1, d2] -> [0, 10 + 2d1, 8 + 2d2, 37] : 0 <= d1 <= 539 and 0 <= d2 <= 539; bright_gauss_ds_1_update_0_sm720_01065[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 30] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
//   { load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 34] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-34 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917[d0 = 0, d1, d2] -> [0, 2 + d1, 2 + d2, 28] : 0 <= d1 <= 1084 and 0 <= d2 <= 1084 }
// Condition for load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917(((((-28 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 39] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-39 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783[d0 = 0, d1, d2] -> [0, 10 + 2d1, 8 + 2d2, 37] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-37 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_gauss_ds_1_update_0_sm720_01065[d0 = 0, d1, d2] -> [0, 2 + 2d1, 2 + 2d2, 30] : 0 <= d1 <= 542 and 0 <= d2 <= 542 }
// Condition for bright_gauss_ds_1_update_0_sm720_01065(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-30 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-2 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-2 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 39] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 8 <= i1 <= 1086 and 8 <= i2 <= 1086; [0, i1, i2, 37] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 8 <= i2 <= 1086; [0, i1, i2, 34] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 30] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 2 <= i1 <= 1086 and 2 <= i2 <= 1086; [0, i1, i2, 28] : 2 <= i1 <= 1086 and 2 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 2; i1 <= 1088; i1++) {
	    for (int i2 = 2; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : i1 <= 1086 }
	        // { [i0, i1, i2] : i1 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	        if ((((((1086 + -1*i1)) >= 0)))) {
	          load_to_bright_gauss_blur_1_FIFO_buf296299_sm646_0917(bright_gauss_blur_1_to_gp_412 /* buf name */, bright_gauss_blur_1_FIFO_buf296, 0, ((-2 + 1*i1)), ((-2 + 1*i2)));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((1086 + -1*i1)) >= 0)))) {
	          bright_gauss_ds_1_update_0_sm720_01065(bright_gauss_blur_1_FIFO_buf296 /* buf name */, bright_gauss_ds_1, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((1086 + -1*i1)) >= 0)))) {
	          load_to_bright_gauss_ds_1_to_gp_22831_sm578_0781(bright_gauss_ds_1 /* buf name */, bright_gauss_ds_1_to_gp_228, 0, ((-1 + (1*(((1*i1)) >> 1)))), ((-1 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and i2 >= 8 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and i2 >= 8 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          load_to_bright_gauss_ds_1_to_gp_83235_sm579_0783(bright_gauss_ds_1 /* buf name */, bright_gauss_ds_1_to_gp_832, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-4 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 8 <= i1 <= 1086 and i2 >= 8 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 8 <= i1 <= 1086 and i2 >= 8 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-8 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          load_to_bright_gauss_ds_1_to_gp_102427_sm577_0779(bright_gauss_ds_1 /* buf name */, bright_gauss_ds_1_to_gp_1024, 0, ((-4 + (1*(((1*i1)) >> 1)))), ((-4 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void dark_weights_normed_gauss_ds_2_update_0_sm731_01087(dark_weights_normed_gauss_blur_2_FIFO_buf504_cache& dark_weights_normed_gauss_blur_2_FIFO_buf504, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_2_FIFO_buf504
	auto dark_weights_normed_gauss_blur_2_FIFO_buf504_2_m__lp__lp_1_m_dark_weights_normed_gauss_ds_2_1__p__0_rp___p___m_1_rp___p__0_p_2_c_______2_m__lp_dark_weights_normed_gauss_ds_2_0__p___m_1_rp___p__0_p_2_value = dark_weights_normed_gauss_blur_2_FIFO_buf504_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_read_bundle_read(dark_weights_normed_gauss_blur_2_FIFO_buf504/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(dark_weights_normed_gauss_blur_2_FIFO_buf504_2_m__lp__lp_1_m_dark_weights_normed_gauss_ds_2_1__p__0_rp___p___m_1_rp___p__0_p_2_c_______2_m__lp_dark_weights_normed_gauss_ds_2_0__p___m_1_rp___p__0_p_2_value);
	// Produce: dark_weights_normed_gauss_ds_2
	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_sm731_01087_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_ds_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_ds_2_to_gp_38236, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_2
	auto dark_weights_normed_gauss_ds_2__lp_1_m_dark_weights_normed_gauss_ds_2_ld237__p__0_rp__c____dark_weights_normed_gauss_ds_2_ld238_value = dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767_read_bundle_read(dark_weights_normed_gauss_ds_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_weights_normed_gauss_ds_2_to_gp_38236
	dark_weights_normed_gauss_ds_2_to_gp_38236.write(dark_weights_normed_gauss_ds_2__lp_1_m_dark_weights_normed_gauss_ds_2_ld237__p__0_rp__c____dark_weights_normed_gauss_ds_2_ld238_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_blur_2_to_gp_40220, dark_weights_normed_gauss_blur_2_FIFO_buf504_cache& dark_weights_normed_gauss_blur_2_FIFO_buf504, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_2_to_gp_40220
	auto dark_weights_normed_gauss_blur_2_to_gp_40220__lp_1_m_dark_weights_normed_gauss_blur_2_to_gp_40220_ld505__p__0_rp__c____dark_weights_normed_gauss_blur_2_to_gp_40220_ld506_value = dark_weights_normed_gauss_blur_2_to_gp_40220.read();
	// Produce: dark_weights_normed_gauss_blur_2_FIFO_buf504
	dark_weights_normed_gauss_blur_2_FIFO_buf504_load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999_write_bundle_write(/* arg names */dark_weights_normed_gauss_blur_2_to_gp_40220__lp_1_m_dark_weights_normed_gauss_blur_2_to_gp_40220_ld505__p__0_rp__c____dark_weights_normed_gauss_blur_2_to_gp_40220_ld506_value, dark_weights_normed_gauss_blur_2_FIFO_buf504, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_ds_2_to_gp_47240, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_2
	auto dark_weights_normed_gauss_ds_2__lp__lp_1_m_dark_weights_normed_gauss_ds_2_ld241__p__0_rp___p__1_rp__c_______lp_dark_weights_normed_gauss_ds_2_ld242__p__1_rp__value = dark_weights_normed_gauss_ds_2_load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859_read_bundle_read(dark_weights_normed_gauss_ds_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_weights_normed_gauss_ds_2_to_gp_47240
	dark_weights_normed_gauss_ds_2_to_gp_47240.write(dark_weights_normed_gauss_ds_2__lp__lp_1_m_dark_weights_normed_gauss_ds_2_ld241__p__0_rp___p__1_rp__c_______lp_dark_weights_normed_gauss_ds_2_ld242__p__1_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_weights_normed_gauss_blur_2_to_gp_40220_ld506_dark_weights_normed_gauss_ds_2_0_dark_weights_normed_gauss_ds_2_ld238_dark_weights_normed_gauss_ds_2_ld242_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_blur_2_to_gp_40220, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_ds_2_to_gp_38236, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_ds_2_to_gp_47240) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_weights_normed_gauss_blur_2_to_gp_40220_ld506_dark_weights_normed_gauss_ds_2_0_dark_weights_normed_gauss_ds_2_ld238_dark_weights_normed_gauss_ds_2_ld242__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_2_FIFO_buf504_cache dark_weights_normed_gauss_blur_2_FIFO_buf504;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_2_cache dark_weights_normed_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 142] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 136] : 0 <= d1 <= 270 and 0 <= d2 <= 270; dark_weights_normed_gauss_ds_2_update_0_sm731_01087[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 135] : 0 <= d1 <= 270 and 0 <= d2 <= 270; load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 129] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
//   { load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 142] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-142 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 136] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-136 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_weights_normed_gauss_ds_2_update_0_sm731_01087[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 135] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for dark_weights_normed_gauss_ds_2_update_0_sm731_01087(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-135 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 129] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-129 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086 and 135 <= i3 <= 136; [0, i1, i2, 142] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 10 <= i1 <= 1086 and 14 <= i2 <= 1090; [0, i1, i2, 129] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 6; i1 <= 1086; i1++) {
	    for (int i2 = 6; i2 <= 1090; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i2 <= 1086 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i2 <= 1086 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_dark_weights_normed_gauss_blur_2_FIFO_buf504507_sm687_0999(dark_weights_normed_gauss_blur_2_to_gp_40220 /* buf name */, dark_weights_normed_gauss_blur_2_FIFO_buf504, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i2 <= 1086 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i2 <= 1086 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((1086 + -1*i2)) >= 0)))) {
	          dark_weights_normed_gauss_ds_2_update_0_sm731_01087(dark_weights_normed_gauss_blur_2_FIFO_buf504 /* buf name */, dark_weights_normed_gauss_ds_2, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i2 <= 1086 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i2 <= 1086 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_dark_weights_normed_gauss_ds_2_to_gp_38236239_sm571_0767(dark_weights_normed_gauss_ds_2 /* buf name */, dark_weights_normed_gauss_ds_2_to_gp_38236, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and i2 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and i2 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-14 + 1*i2)) >= 0)))) {
	          load_to_dark_weights_normed_gauss_ds_2_to_gp_47240243_sm617_0859(dark_weights_normed_gauss_ds_2 /* buf name */, dark_weights_normed_gauss_ds_2_to_gp_47240, 0, ((-3 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_blur_3_to_gp_41224, dark_weights_normed_gauss_blur_3_FIFO_buf508_cache& dark_weights_normed_gauss_blur_3_FIFO_buf508, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_3_to_gp_41224
	auto dark_weights_normed_gauss_blur_3_to_gp_41224__lp_1_m_dark_weights_normed_gauss_blur_3_to_gp_41224_ld509__p__0_rp__c____dark_weights_normed_gauss_blur_3_to_gp_41224_ld510_value = dark_weights_normed_gauss_blur_3_to_gp_41224.read();
	// Produce: dark_weights_normed_gauss_blur_3_FIFO_buf508
	dark_weights_normed_gauss_blur_3_FIFO_buf508_load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001_write_bundle_write(/* arg names */dark_weights_normed_gauss_blur_3_to_gp_41224__lp_1_m_dark_weights_normed_gauss_blur_3_to_gp_41224_ld509__p__0_rp__c____dark_weights_normed_gauss_blur_3_to_gp_41224_ld510_value, dark_weights_normed_gauss_blur_3_FIFO_buf508, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_ds_3_update_0_sm737_01099(dark_weights_normed_gauss_blur_3_FIFO_buf508_cache& dark_weights_normed_gauss_blur_3_FIFO_buf508, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_3_FIFO_buf508
	auto dark_weights_normed_gauss_blur_3_FIFO_buf508_2_m__lp_1_m_dark_weights_normed_gauss_ds_3_1__p__0_rp___p__0_p_0_c_____2_m_dark_weights_normed_gauss_ds_3_0__p__0_p_0_value = dark_weights_normed_gauss_blur_3_FIFO_buf508_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_read_bundle_read(dark_weights_normed_gauss_blur_3_FIFO_buf508/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(dark_weights_normed_gauss_blur_3_FIFO_buf508_2_m__lp_1_m_dark_weights_normed_gauss_ds_3_1__p__0_rp___p__0_p_0_c_____2_m_dark_weights_normed_gauss_ds_3_0__p__0_p_0_value);
	// Produce: dark_weights_normed_gauss_ds_3
	dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_sm737_01099_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_ds_3, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897(dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_ds_3_to_gp_48244, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_3
	auto dark_weights_normed_gauss_ds_3__lp_1_m_dark_weights_normed_gauss_ds_3_ld245__p__0_rp__c____dark_weights_normed_gauss_ds_3_ld246_value = dark_weights_normed_gauss_ds_3_load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897_read_bundle_read(dark_weights_normed_gauss_ds_3/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: dark_weights_normed_gauss_ds_3_to_gp_48244
	dark_weights_normed_gauss_ds_3_to_gp_48244.write(dark_weights_normed_gauss_ds_3__lp_1_m_dark_weights_normed_gauss_ds_3_ld245__p__0_rp__c____dark_weights_normed_gauss_ds_3_ld246_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_dark_weights_normed_gauss_blur_3_to_gp_41224_ld510_dark_weights_normed_gauss_ds_3_0_dark_weights_normed_gauss_ds_3_ld246_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_blur_3_to_gp_41224, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_ds_3_to_gp_48244) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_dark_weights_normed_gauss_blur_3_to_gp_41224_ld510_dark_weights_normed_gauss_ds_3_0_dark_weights_normed_gauss_ds_3_ld246__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_3_FIFO_buf508_cache dark_weights_normed_gauss_blur_3_FIFO_buf508;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_3_cache dark_weights_normed_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 162] : 0 <= d1 <= 134 and 0 <= d2 <= 134; dark_weights_normed_gauss_ds_3_update_0_sm737_01099[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 159] : 0 <= d1 <= 134 and 0 <= d2 <= 134; load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 158] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
//   { load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 162] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-162 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { dark_weights_normed_gauss_ds_3_update_0_sm737_01099[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 159] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for dark_weights_normed_gauss_ds_3_update_0_sm737_01099(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-159 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 158] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-158 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 162] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 159] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 158] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1086; i1++) {
	    for (int i2 = 14; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_dark_weights_normed_gauss_blur_3_FIFO_buf508511_sm688_01001(dark_weights_normed_gauss_blur_3_to_gp_41224 /* buf name */, dark_weights_normed_gauss_blur_3_FIFO_buf508, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          dark_weights_normed_gauss_ds_3_update_0_sm737_01099(dark_weights_normed_gauss_blur_3_FIFO_buf508 /* buf name */, dark_weights_normed_gauss_ds_3, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_dark_weights_normed_gauss_ds_3_to_gp_48244247_sm636_0897(dark_weights_normed_gauss_ds_3 /* buf name */, dark_weights_normed_gauss_ds_3_to_gp_48244, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_final_merged_1_FIFO_buf536539_sm667_0959(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */final_merged_1_to_gp_42252, final_merged_1_FIFO_buf536_cache& final_merged_1_FIFO_buf536, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: final_merged_1_to_gp_42252
	auto final_merged_1_to_gp_42252__lp_1_m_final_merged_1_to_gp_42252_ld537__p__0_rp__c____final_merged_1_to_gp_42252_ld538_value = final_merged_1_to_gp_42252.read();
	// Produce: final_merged_1_FIFO_buf536
	final_merged_1_FIFO_buf536_load_to_final_merged_1_FIFO_buf536539_sm667_0959_write_bundle_write(/* arg names */final_merged_1_to_gp_42252__lp_1_m_final_merged_1_to_gp_42252_ld537__p__0_rp__c____final_merged_1_to_gp_42252_ld538_value, final_merged_1_FIFO_buf536, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_fused_level_0_FIFO_buf544547_sm680_0985(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */fused_level_0_to_gp_42260, fused_level_0_FIFO_buf544_cache& fused_level_0_FIFO_buf544, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: fused_level_0_to_gp_42260
	auto fused_level_0_to_gp_42260__lp_1_m_fused_level_0_to_gp_42260_ld545__p__0_rp__c____fused_level_0_to_gp_42260_ld546_value = fused_level_0_to_gp_42260.read();
	// Produce: fused_level_0_FIFO_buf544
	fused_level_0_FIFO_buf544_load_to_fused_level_0_FIFO_buf544547_sm680_0985_write_bundle_write(/* arg names */fused_level_0_to_gp_42260__lp_1_m_fused_level_0_to_gp_42260_ld545__p__0_rp__c____fused_level_0_to_gp_42260_ld546_value, fused_level_0_FIFO_buf544, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_final_merged_0_to_gp_50248251_sm604_0833(final_merged_0_cache& final_merged_0, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */final_merged_0_to_gp_50248, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: final_merged_0
	auto final_merged_0__lp_1_m_final_merged_0_ld249__p__0_rp__c____final_merged_0_ld250_value = final_merged_0_load_to_final_merged_0_to_gp_50248251_sm604_0833_read_bundle_read(final_merged_0/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: final_merged_0_to_gp_50248
	final_merged_0_to_gp_50248.write(final_merged_0__lp_1_m_final_merged_0_ld249__p__0_rp__c____final_merged_0_ld250_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void final_merged_0_update_0_sm756_01141(final_merged_1_FIFO_buf536_cache& final_merged_1_FIFO_buf536, fused_level_0_FIFO_buf544_cache& fused_level_0_FIFO_buf544, final_merged_0_cache& final_merged_0, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: final_merged_1_FIFO_buf536
	auto final_merged_1_FIFO_buf536_floor_lp__lp_1_m__lp_1_m_final_merged_0_1__p__0_rp__rp__div_2_rp___p__0_p_0_c_____floor_lp__lp_1_m_final_merged_0_0_rp__div_2_rp___p__0_p_0_value = final_merged_1_FIFO_buf536_final_merged_0_update_0_sm756_01141_read_bundle_read(final_merged_1_FIFO_buf536/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: fused_level_0_FIFO_buf544
	auto fused_level_0_FIFO_buf544_1_m__lp_1_m_final_merged_0_1__p__0_rp___p__0_p_0_c_____1_m_final_merged_0_0__p__0_p_0_value = fused_level_0_FIFO_buf544_final_merged_0_update_0_sm756_01141_read_bundle_read(fused_level_0_FIFO_buf544/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = add_unrolled_1(final_merged_1_FIFO_buf536_floor_lp__lp_1_m__lp_1_m_final_merged_0_1__p__0_rp__rp__div_2_rp___p__0_p_0_c_____floor_lp__lp_1_m_final_merged_0_0_rp__div_2_rp___p__0_p_0_value, fused_level_0_FIFO_buf544_1_m__lp_1_m_final_merged_0_1__p__0_rp___p__0_p_0_c_____1_m_final_merged_0_0__p__0_p_0_value);
	// Produce: final_merged_0
	final_merged_0_final_merged_0_update_0_sm756_01141_write_bundle_write(/* arg names */compute_result, final_merged_0, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_final_merged_0_0_final_merged_0_ld250_final_merged_1_to_gp_42252_ld538_fused_level_0_to_gp_42260_ld546_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */final_merged_1_to_gp_42252, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */fused_level_0_to_gp_42260, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */final_merged_0_to_gp_50248) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_final_merged_0_0_final_merged_0_ld250_final_merged_1_to_gp_42252_ld538_fused_level_0_to_gp_42260_ld546__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  final_merged_0_cache final_merged_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  final_merged_1_FIFO_buf536_cache final_merged_1_FIFO_buf536;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_0_FIFO_buf544_cache fused_level_0_FIFO_buf544;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_final_merged_0_to_gp_50248251_sm604_0833[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 190] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_final_merged_1_FIFO_buf536539_sm667_0959[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 188] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_fused_level_0_FIFO_buf544547_sm680_0985[d0 = 0, d1, d2] -> [0, 14 + d1, 8 + d2, 167] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; final_merged_0_update_0_sm756_01141[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 189] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
//   { load_to_final_merged_0_to_gp_50248251_sm604_0833[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 190] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_final_merged_0_to_gp_50248251_sm604_0833(((((-190 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1093 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1093 + -1*i2)) >= 0)))
//   { load_to_final_merged_1_FIFO_buf536539_sm667_0959[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 188] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_final_merged_1_FIFO_buf536539_sm667_0959(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-188 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1092 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1092 + -1*i2)) >= 0)))
//   { load_to_fused_level_0_FIFO_buf544547_sm680_0985[d0 = 0, d1, d2] -> [0, 14 + d1, 8 + d2, 167] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_fused_level_0_FIFO_buf544547_sm680_0985(((((-167 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1093 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { final_merged_0_update_0_sm756_01141[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 189] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for final_merged_0_update_0_sm756_01141(((((-189 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1093 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1093 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : 14 <= i1 <= 1093 and i2 <= 1093 and i3 <= 190 and 2*floor((i1)/2) >= 188 + i1 - i3 and floor((i2)/2) >= 7 and 2*floor((i2)/2) >= 188 + i2 - i3; [0, i1, i2, 167] : 14 <= i1 <= 1093 and 8 <= i2 <= 1087 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1093; i1++) {
	    for (int i2 = 8; i2 <= 1093; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : i2 <= 1087 }
	        // { [i0, i1, i2] : i2 <= 1087 }
	          // { [i0, i1, i2] : 1087 - i2 >= 0 }
	        if ((((((1087 + -1*i2)) >= 0)))) {
	          load_to_fused_level_0_FIFO_buf544547_sm680_0985(fused_level_0_to_gp_42260 /* buf name */, fused_level_0_FIFO_buf544, 0, ((-14 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i2 >= 14 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i2 >= 14 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-14 + 1*i2)) >= 0)))) {
	          load_to_final_merged_1_FIFO_buf536539_sm667_0959(final_merged_1_to_gp_42252 /* buf name */, final_merged_1_FIFO_buf536, 0, ((-7 + (1*(((1*i1)) >> 1)))), ((-7 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : i2 >= 14 }
	        // { [i0, i1, i2] : i2 >= 14 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-14 + 1*i2)) >= 0)))) {
	          final_merged_0_update_0_sm756_01141(final_merged_1_FIFO_buf536 /* buf name */, fused_level_0_FIFO_buf544 /* buf name */, final_merged_0, 0, ((-14 + 1*i1)), ((-14 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i2 >= 14 }
	        // { [i0, i1, i2] : i2 >= 14 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-14 + 1*i2)) >= 0)))) {
	          load_to_final_merged_0_to_gp_50248251_sm604_0833(final_merged_0 /* buf name */, final_merged_0_to_gp_50248, 0, ((-14 + 1*i1)), ((-14 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void final_merged_1_update_0_sm755_01139(final_merged_2_FIFO_buf540_cache& final_merged_2_FIFO_buf540, fused_level_1_FIFO_buf548_cache& fused_level_1_FIFO_buf548, final_merged_1_cache& final_merged_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: final_merged_2_FIFO_buf540
	auto final_merged_2_FIFO_buf540_floor_lp__lp_1_m__lp_1_m_final_merged_1_1__p__0_rp__rp__div_2_rp___p__0_p_0_c_____floor_lp__lp_1_m_final_merged_1_0_rp__div_2_rp___p__0_p_0_value = final_merged_2_FIFO_buf540_final_merged_1_update_0_sm755_01139_read_bundle_read(final_merged_2_FIFO_buf540/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: fused_level_1_FIFO_buf548
	auto fused_level_1_FIFO_buf548_1_m__lp_1_m_final_merged_1_1__p__0_rp___p__0_p_0_c_____1_m_final_merged_1_0__p__0_p_0_value = fused_level_1_FIFO_buf548_final_merged_1_update_0_sm755_01139_read_bundle_read(fused_level_1_FIFO_buf548/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = add_unrolled_1(final_merged_2_FIFO_buf540_floor_lp__lp_1_m__lp_1_m_final_merged_1_1__p__0_rp__rp__div_2_rp___p__0_p_0_c_____floor_lp__lp_1_m_final_merged_1_0_rp__div_2_rp___p__0_p_0_value, fused_level_1_FIFO_buf548_1_m__lp_1_m_final_merged_1_1__p__0_rp___p__0_p_0_c_____1_m_final_merged_1_0__p__0_p_0_value);
	// Produce: final_merged_1
	final_merged_1_final_merged_1_update_0_sm755_01139_write_bundle_write(/* arg names */compute_result, final_merged_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_fused_level_1_FIFO_buf548551_sm704_01033(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */fused_level_1_to_gp_43264, fused_level_1_FIFO_buf548_cache& fused_level_1_FIFO_buf548, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: fused_level_1_to_gp_43264
	auto fused_level_1_to_gp_43264__lp_1_m_fused_level_1_to_gp_43264_ld549__p__0_rp__c____fused_level_1_to_gp_43264_ld550_value = fused_level_1_to_gp_43264.read();
	// Produce: fused_level_1_FIFO_buf548
	fused_level_1_FIFO_buf548_load_to_fused_level_1_FIFO_buf548551_sm704_01033_write_bundle_write(/* arg names */fused_level_1_to_gp_43264__lp_1_m_fused_level_1_to_gp_43264_ld549__p__0_rp__c____fused_level_1_to_gp_43264_ld550_value, fused_level_1_FIFO_buf548, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_final_merged_2_FIFO_buf540543_sm703_01031(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */final_merged_2_to_gp_43256, final_merged_2_FIFO_buf540_cache& final_merged_2_FIFO_buf540, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: final_merged_2_to_gp_43256
	auto final_merged_2_to_gp_43256__lp_1_m_final_merged_2_to_gp_43256_ld541__p__0_rp__c____final_merged_2_to_gp_43256_ld542_value = final_merged_2_to_gp_43256.read();
	// Produce: final_merged_2_FIFO_buf540
	final_merged_2_FIFO_buf540_load_to_final_merged_2_FIFO_buf540543_sm703_01031_write_bundle_write(/* arg names */final_merged_2_to_gp_43256__lp_1_m_final_merged_2_to_gp_43256_ld541__p__0_rp__c____final_merged_2_to_gp_43256_ld542_value, final_merged_2_FIFO_buf540, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_final_merged_1_to_gp_42252255_sm601_0827(final_merged_1_cache& final_merged_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */final_merged_1_to_gp_42252, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: final_merged_1
	auto final_merged_1__lp_1_m_final_merged_1_ld253__p__0_rp__c____final_merged_1_ld254_value = final_merged_1_load_to_final_merged_1_to_gp_42252255_sm601_0827_read_bundle_read(final_merged_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: final_merged_1_to_gp_42252
	final_merged_1_to_gp_42252.write(final_merged_1__lp_1_m_final_merged_1_ld253__p__0_rp__c____final_merged_1_ld254_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_final_merged_1_0_final_merged_1_ld254_final_merged_2_to_gp_43256_ld542_fused_level_1_to_gp_43264_ld550_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */final_merged_2_to_gp_43256, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */fused_level_1_to_gp_43264, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */final_merged_1_to_gp_42252) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_final_merged_1_0_final_merged_1_ld254_final_merged_2_to_gp_43256_ld542_fused_level_1_to_gp_43264_ld550__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  final_merged_1_cache final_merged_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  final_merged_2_FIFO_buf540_cache final_merged_2_FIFO_buf540;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_1_FIFO_buf548_cache fused_level_1_FIFO_buf548;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { final_merged_1_update_0_sm755_01139[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 186] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_fused_level_1_FIFO_buf548551_sm704_01033[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 172] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_final_merged_1_to_gp_42252255_sm601_0827[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 187] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_final_merged_2_FIFO_buf540543_sm703_01031[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 185] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
//   { final_merged_1_update_0_sm755_01139[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 186] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for final_merged_1_update_0_sm755_01139(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-186 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1092 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1092 + -1*i2)) >= 0)))
//   { load_to_fused_level_1_FIFO_buf548551_sm704_01033[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 172] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_fused_level_1_FIFO_buf548551_sm704_01033(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-172 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1092 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1092 + -1*i2)) >= 0)))
//   { load_to_final_merged_1_to_gp_42252255_sm601_0827[d0 = 0, d1, d2] -> [0, 14 + 2d1, 14 + 2d2, 187] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_final_merged_1_to_gp_42252255_sm601_0827(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-187 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1092 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1092 + -1*i2)) >= 0)))
//   { load_to_final_merged_2_FIFO_buf540543_sm703_01031[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 185] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_final_merged_2_FIFO_buf540543_sm703_01031(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-185 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 14 <= i1 <= 1092 and 14 <= i2 <= 1092 and 186 <= i3 <= 187; [0, i1, i2, 185] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 172] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 14 <= i1 <= 1092 and 14 <= i2 <= 1092 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1092; i1++) {
	    for (int i2 = 14; i2 <= 1092; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_fused_level_1_FIFO_buf548551_sm704_01033(fused_level_1_to_gp_43264 /* buf name */, fused_level_1_FIFO_buf548, 0, ((-7 + (1*(((1*i1)) >> 1)))), ((-7 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_final_merged_2_FIFO_buf540543_sm703_01031(final_merged_2_to_gp_43256 /* buf name */, final_merged_2_FIFO_buf540, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          final_merged_1_update_0_sm755_01139(final_merged_2_FIFO_buf540 /* buf name */, fused_level_1_FIFO_buf548 /* buf name */, final_merged_1, 0, ((-7 + (1*(((1*i1)) >> 1)))), ((-7 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_final_merged_1_to_gp_42252255_sm601_0827(final_merged_1 /* buf name */, final_merged_1_to_gp_42252, 0, ((-7 + (1*(((1*i1)) >> 1)))), ((-7 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void final_merged_2_update_0_sm754_01137(fused_level_3_FIFO_buf556_cache& fused_level_3_FIFO_buf556, fused_level_2_FIFO_buf552_cache& fused_level_2_FIFO_buf552, final_merged_2_cache& final_merged_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: fused_level_3_FIFO_buf556
	auto fused_level_3_FIFO_buf556_floor_lp__lp_1_m__lp_1_m_final_merged_2_1__p__0_rp__rp__div_2_rp___p__0_p_0_c_____floor_lp__lp_1_m_final_merged_2_0_rp__div_2_rp___p__0_p_0_value = fused_level_3_FIFO_buf556_final_merged_2_update_0_sm754_01137_read_bundle_read(fused_level_3_FIFO_buf556/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: fused_level_2_FIFO_buf552
	auto fused_level_2_FIFO_buf552_1_m__lp_1_m_final_merged_2_1__p__0_rp___p__0_p_0_c_____1_m_final_merged_2_0__p__0_p_0_value = fused_level_2_FIFO_buf552_final_merged_2_update_0_sm754_01137_read_bundle_read(fused_level_2_FIFO_buf552/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = add_unrolled_1(fused_level_3_FIFO_buf556_floor_lp__lp_1_m__lp_1_m_final_merged_2_1__p__0_rp__rp__div_2_rp___p__0_p_0_c_____floor_lp__lp_1_m_final_merged_2_0_rp__div_2_rp___p__0_p_0_value, fused_level_2_FIFO_buf552_1_m__lp_1_m_final_merged_2_1__p__0_rp___p__0_p_0_c_____1_m_final_merged_2_0__p__0_p_0_value);
	// Produce: final_merged_2
	final_merged_2_final_merged_2_update_0_sm754_01137_write_bundle_write(/* arg names */compute_result, final_merged_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_final_merged_2_to_gp_43256259_sm637_0899(final_merged_2_cache& final_merged_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */final_merged_2_to_gp_43256, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: final_merged_2
	auto final_merged_2__lp_1_m_final_merged_2_ld257__p__0_rp__c____final_merged_2_ld258_value = final_merged_2_load_to_final_merged_2_to_gp_43256259_sm637_0899_read_bundle_read(final_merged_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: final_merged_2_to_gp_43256
	final_merged_2_to_gp_43256.write(final_merged_2__lp_1_m_final_merged_2_ld257__p__0_rp__c____final_merged_2_ld258_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_fused_level_2_FIFO_buf552555_sm706_01037(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */fused_level_2_to_gp_44268, fused_level_2_FIFO_buf552_cache& fused_level_2_FIFO_buf552, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: fused_level_2_to_gp_44268
	auto fused_level_2_to_gp_44268__lp_1_m_fused_level_2_to_gp_44268_ld553__p__0_rp__c____fused_level_2_to_gp_44268_ld554_value = fused_level_2_to_gp_44268.read();
	// Produce: fused_level_2_FIFO_buf552
	fused_level_2_FIFO_buf552_load_to_fused_level_2_FIFO_buf552555_sm706_01037_write_bundle_write(/* arg names */fused_level_2_to_gp_44268__lp_1_m_fused_level_2_to_gp_44268_ld553__p__0_rp__c____fused_level_2_to_gp_44268_ld554_value, fused_level_2_FIFO_buf552, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_fused_level_3_FIFO_buf556559_sm702_01029(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */fused_level_3_to_gp_44272, fused_level_3_FIFO_buf556_cache& fused_level_3_FIFO_buf556, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: fused_level_3_to_gp_44272
	auto fused_level_3_to_gp_44272__lp_1_m_fused_level_3_to_gp_44272_ld557__p__0_rp__c____fused_level_3_to_gp_44272_ld558_value = fused_level_3_to_gp_44272.read();
	// Produce: fused_level_3_FIFO_buf556
	fused_level_3_FIFO_buf556_load_to_fused_level_3_FIFO_buf556559_sm702_01029_write_bundle_write(/* arg names */fused_level_3_to_gp_44272__lp_1_m_fused_level_3_to_gp_44272_ld557__p__0_rp__c____fused_level_3_to_gp_44272_ld558_value, fused_level_3_FIFO_buf556, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_final_merged_2_0_final_merged_2_ld258_fused_level_2_to_gp_44268_ld554_fused_level_3_to_gp_44272_ld558_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */fused_level_2_to_gp_44268, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */fused_level_3_to_gp_44272, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */final_merged_2_to_gp_43256) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_final_merged_2_0_final_merged_2_ld258_fused_level_2_to_gp_44268_ld554_fused_level_3_to_gp_44272_ld558__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  final_merged_2_cache final_merged_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_2_FIFO_buf552_cache fused_level_2_FIFO_buf552;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_3_FIFO_buf556_cache fused_level_3_FIFO_buf556;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_fused_level_2_FIFO_buf552555_sm706_01037[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 182] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_final_merged_2_to_gp_43256259_sm637_0899[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 184] : 0 <= d1 <= 269 and 0 <= d2 <= 269; final_merged_2_update_0_sm754_01137[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 183] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_fused_level_3_FIFO_buf556559_sm702_01029[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 179] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
//   { load_to_fused_level_2_FIFO_buf552555_sm706_01037[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 182] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_fused_level_2_FIFO_buf552555_sm706_01037(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-182 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_final_merged_2_to_gp_43256259_sm637_0899[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 184] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_final_merged_2_to_gp_43256259_sm637_0899(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-184 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { final_merged_2_update_0_sm754_01137[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 183] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for final_merged_2_update_0_sm754_01137(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-183 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_fused_level_3_FIFO_buf556559_sm702_01029[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 179] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_fused_level_3_FIFO_buf556559_sm702_01029(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-179 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090 and 182 <= i3 <= 184; [0, i1, i2, 179] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1090; i1++) {
	    for (int i2 = 14; i2 <= 1090; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_fused_level_3_FIFO_buf556559_sm702_01029(fused_level_3_to_gp_44272 /* buf name */, fused_level_3_FIFO_buf556, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_fused_level_2_FIFO_buf552555_sm706_01037(fused_level_2_to_gp_44268 /* buf name */, fused_level_2_FIFO_buf552, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          final_merged_2_update_0_sm754_01137(fused_level_3_FIFO_buf556 /* buf name */, fused_level_2_FIFO_buf552 /* buf name */, final_merged_2, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_final_merged_2_to_gp_43256259_sm637_0899(final_merged_2 /* buf name */, final_merged_2_to_gp_43256, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_fused_level_0_to_gp_42260263_sm616_0857(fused_level_0_cache& fused_level_0, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */fused_level_0_to_gp_42260, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: fused_level_0
	auto fused_level_0__lp_1_m_fused_level_0_ld261__p__0_rp__c____fused_level_0_ld262_value = fused_level_0_load_to_fused_level_0_to_gp_42260263_sm616_0857_read_bundle_read(fused_level_0/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: fused_level_0_to_gp_42260
	fused_level_0_to_gp_42260.write(fused_level_0__lp_1_m_fused_level_0_ld261__p__0_rp__c____fused_level_0_ld262_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void fused_level_0_update_0_sm753_01125(bright_laplace_diff_0_FIFO_buf340_cache& bright_laplace_diff_0_FIFO_buf340, dark_laplace_diff_0_FIFO_buf464_cache& dark_laplace_diff_0_FIFO_buf464, bright_weights_normed_FIFO_buf372_cache& bright_weights_normed_FIFO_buf372, dark_weights_normed_FIFO_buf496_cache& dark_weights_normed_FIFO_buf496, fused_level_0_cache& fused_level_0, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_0_FIFO_buf340
	auto bright_laplace_diff_0_FIFO_buf340_1_m__lp_1_m_fused_level_0_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_0_0__p__0_p_0_value = bright_laplace_diff_0_FIFO_buf340_fused_level_0_update_0_sm753_01125_read_bundle_read(bright_laplace_diff_0_FIFO_buf340/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_diff_0_FIFO_buf464
	auto dark_laplace_diff_0_FIFO_buf464_1_m__lp_1_m_fused_level_0_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_0_0__p__0_p_0_value = dark_laplace_diff_0_FIFO_buf464_fused_level_0_update_0_sm753_01125_read_bundle_read(dark_laplace_diff_0_FIFO_buf464/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed_FIFO_buf372
	auto bright_weights_normed_FIFO_buf372_1_m__lp_1_m_fused_level_0_1__p__0_rp___p__0_p_7_c_____1_m_fused_level_0_0__p__0_p_7_value = bright_weights_normed_FIFO_buf372_fused_level_0_update_0_sm753_01125_read_bundle_read(bright_weights_normed_FIFO_buf372/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed_FIFO_buf496
	auto dark_weights_normed_FIFO_buf496_1_m__lp_1_m_fused_level_0_1__p__0_rp___p__0_p_7_c_____1_m_fused_level_0_0__p__0_p_7_value = dark_weights_normed_FIFO_buf496_fused_level_0_update_0_sm753_01125_read_bundle_read(dark_weights_normed_FIFO_buf496/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weighted_merge_unrolled_1(bright_laplace_diff_0_FIFO_buf340_1_m__lp_1_m_fused_level_0_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_0_0__p__0_p_0_value, dark_laplace_diff_0_FIFO_buf464_1_m__lp_1_m_fused_level_0_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_0_0__p__0_p_0_value, bright_weights_normed_FIFO_buf372_1_m__lp_1_m_fused_level_0_1__p__0_rp___p__0_p_7_c_____1_m_fused_level_0_0__p__0_p_7_value, dark_weights_normed_FIFO_buf496_1_m__lp_1_m_fused_level_0_1__p__0_rp___p__0_p_7_c_____1_m_fused_level_0_0__p__0_p_7_value);
	// Produce: fused_level_0
	fused_level_0_fused_level_0_update_0_sm753_01125_write_bundle_write(/* arg names */compute_result, fused_level_0, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_diff_0_to_gp_45180, dark_laplace_diff_0_FIFO_buf464_cache& dark_laplace_diff_0_FIFO_buf464, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_diff_0_to_gp_45180
	auto dark_laplace_diff_0_to_gp_45180__lp_1_m_dark_laplace_diff_0_to_gp_45180_ld465__p__0_rp__c____dark_laplace_diff_0_to_gp_45180_ld466_value = dark_laplace_diff_0_to_gp_45180.read();
	// Produce: dark_laplace_diff_0_FIFO_buf464
	dark_laplace_diff_0_FIFO_buf464_load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995_write_bundle_write(/* arg names */dark_laplace_diff_0_to_gp_45180__lp_1_m_dark_laplace_diff_0_to_gp_45180_ld465__p__0_rp__c____dark_laplace_diff_0_to_gp_45180_ld466_value, dark_laplace_diff_0_FIFO_buf464, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_FIFO_buf372375_sm664_0953(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_to_gp_4588, bright_weights_normed_FIFO_buf372_cache& bright_weights_normed_FIFO_buf372, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_to_gp_4588
	auto bright_weights_normed_to_gp_4588__lp__lp_1_m_bright_weights_normed_to_gp_4588_ld373__p__0_rp___p__7_rp__c_______lp_bright_weights_normed_to_gp_4588_ld374__p__7_rp__value = bright_weights_normed_to_gp_4588.read();
	// Produce: bright_weights_normed_FIFO_buf372
	bright_weights_normed_FIFO_buf372_load_to_bright_weights_normed_FIFO_buf372375_sm664_0953_write_bundle_write(/* arg names */bright_weights_normed_to_gp_4588__lp__lp_1_m_bright_weights_normed_to_gp_4588_ld373__p__0_rp___p__7_rp__c_______lp_bright_weights_normed_to_gp_4588_ld374__p__7_rp__value, bright_weights_normed_FIFO_buf372, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_diff_0_to_gp_4556, bright_laplace_diff_0_FIFO_buf340_cache& bright_laplace_diff_0_FIFO_buf340, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_0_to_gp_4556
	auto bright_laplace_diff_0_to_gp_4556__lp_1_m_bright_laplace_diff_0_to_gp_4556_ld341__p__0_rp__c____bright_laplace_diff_0_to_gp_4556_ld342_value = bright_laplace_diff_0_to_gp_4556.read();
	// Produce: bright_laplace_diff_0_FIFO_buf340
	bright_laplace_diff_0_FIFO_buf340_load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935_write_bundle_write(/* arg names */bright_laplace_diff_0_to_gp_4556__lp_1_m_bright_laplace_diff_0_to_gp_4556_ld341__p__0_rp__c____bright_laplace_diff_0_to_gp_4556_ld342_value, bright_laplace_diff_0_FIFO_buf340, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_FIFO_buf496499_sm665_0955(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_to_gp_45212, dark_weights_normed_FIFO_buf496_cache& dark_weights_normed_FIFO_buf496, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_to_gp_45212
	auto dark_weights_normed_to_gp_45212__lp__lp_1_m_dark_weights_normed_to_gp_45212_ld497__p__0_rp___p__7_rp__c_______lp_dark_weights_normed_to_gp_45212_ld498__p__7_rp__value = dark_weights_normed_to_gp_45212.read();
	// Produce: dark_weights_normed_FIFO_buf496
	dark_weights_normed_FIFO_buf496_load_to_dark_weights_normed_FIFO_buf496499_sm665_0955_write_bundle_write(/* arg names */dark_weights_normed_to_gp_45212__lp__lp_1_m_dark_weights_normed_to_gp_45212_ld497__p__0_rp___p__7_rp__c_______lp_dark_weights_normed_to_gp_45212_ld498__p__7_rp__value, dark_weights_normed_FIFO_buf496, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_laplace_diff_0_to_gp_4556_ld342_bright_weights_normed_to_gp_4588_ld374_dark_laplace_diff_0_to_gp_45180_ld466_dark_weights_normed_to_gp_45212_ld498_fused_level_0_0_fused_level_0_ld262_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_diff_0_to_gp_4556, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_to_gp_4588, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_diff_0_to_gp_45180, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_to_gp_45212, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */fused_level_0_to_gp_42260) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_laplace_diff_0_to_gp_4556_ld342_bright_weights_normed_to_gp_4588_ld374_dark_laplace_diff_0_to_gp_45180_ld466_dark_weights_normed_to_gp_45212_ld498_fused_level_0_0_fused_level_0_ld262__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_0_FIFO_buf340_cache bright_laplace_diff_0_FIFO_buf340;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_FIFO_buf372_cache bright_weights_normed_FIFO_buf372;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_0_FIFO_buf464_cache dark_laplace_diff_0_FIFO_buf464;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_FIFO_buf496_cache dark_weights_normed_FIFO_buf496;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_0_cache fused_level_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { fused_level_0_update_0_sm753_01125[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 156] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_fused_level_0_to_gp_42260263_sm616_0857[d0 = 0, d1, d2] -> [0, 14 + d1, 8 + d2, 161] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_dark_weights_normed_FIFO_buf496499_sm665_0955[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 61] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 145] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 77] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_bright_weights_normed_FIFO_buf372375_sm664_0953[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 48] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
//   { fused_level_0_update_0_sm753_01125[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 156] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for fused_level_0_update_0_sm753_01125(((((-156 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { load_to_fused_level_0_to_gp_42260263_sm616_0857[d0 = 0, d1, d2] -> [0, 14 + d1, 8 + d2, 161] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_fused_level_0_to_gp_42260263_sm616_0857(((((-161 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1093 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_FIFO_buf496499_sm665_0955[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 61] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_dark_weights_normed_FIFO_buf496499_sm665_0955(((((-61 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 145] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995(((((-145 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 77] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935(((((-77 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_FIFO_buf372375_sm664_0953[d0 = 0, d1, d2] -> [0, 7 + d1, 7 + d2, 48] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_bright_weights_normed_FIFO_buf372375_sm664_0953(((((-48 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-7 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-7 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 161] : 14 <= i1 <= 1093 and 8 <= i2 <= 1087; [0, i1, i2, 156] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 145] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 77] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 61] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 48] : 7 <= i1 <= 1086 and 7 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 7; i1 <= 1093; i1++) {
	    for (int i2 = 7; i2 <= 1087; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	        // { [i0, i1, i2] : i1 <= 1086 and i2 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((1086 + -1*i1)) >= 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_bright_weights_normed_FIFO_buf372375_sm664_0953(bright_weights_normed_to_gp_4588 /* buf name */, bright_weights_normed_FIFO_buf372, 0, ((-7 + 1*i1)), ((-7 + 1*i2)));
	        }
	        // { [i0, i1, i2] : 8 <= i1 <= 1087 and i2 >= 8 }
	        // { [i0, i1, i2] : 8 <= i1 <= 1087 and i2 >= 8 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : 1087 - i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          load_to_dark_weights_normed_FIFO_buf496499_sm665_0955(dark_weights_normed_to_gp_45212 /* buf name */, dark_weights_normed_FIFO_buf496, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] : 8 <= i1 <= 1087 and i2 >= 8 }
	        // { [i0, i1, i2] : 8 <= i1 <= 1087 and i2 >= 8 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : 1087 - i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          load_to_bright_laplace_diff_0_FIFO_buf340343_sm655_0935(bright_laplace_diff_0_to_gp_4556 /* buf name */, bright_laplace_diff_0_FIFO_buf340, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] : 8 <= i1 <= 1087 and i2 >= 8 }
	        // { [i0, i1, i2] : 8 <= i1 <= 1087 and i2 >= 8 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : 1087 - i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          load_to_dark_laplace_diff_0_FIFO_buf464467_sm685_0995(dark_laplace_diff_0_to_gp_45180 /* buf name */, dark_laplace_diff_0_FIFO_buf464, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] : 8 <= i1 <= 1087 and i2 >= 8 }
	        // { [i0, i1, i2] : 8 <= i1 <= 1087 and i2 >= 8 }
	          // { [i0, i1, i2] : -8 + i1 >= 0 }
	          // { [i0, i1, i2] : 1087 - i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          fused_level_0_update_0_sm753_01125(bright_laplace_diff_0_FIFO_buf340 /* buf name */, dark_laplace_diff_0_FIFO_buf464 /* buf name */, bright_weights_normed_FIFO_buf372 /* buf name */, dark_weights_normed_FIFO_buf496 /* buf name */, fused_level_0, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i1 >= 14 and i2 >= 8 }
	        // { [i0, i1, i2] : i1 >= 14 and i2 >= 8 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-14 + 1*i1)) >= 0) && (((-8 + 1*i2)) >= 0)))) {
	          load_to_fused_level_0_to_gp_42260263_sm616_0857(fused_level_0 /* buf name */, fused_level_0_to_gp_42260, 0, ((-14 + 1*i1)), ((-8 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_diff_1_to_gp_46184, dark_laplace_diff_1_FIFO_buf468_cache& dark_laplace_diff_1_FIFO_buf468, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_diff_1_to_gp_46184
	auto dark_laplace_diff_1_to_gp_46184__lp_1_m_dark_laplace_diff_1_to_gp_46184_ld469__p__0_rp__c____dark_laplace_diff_1_to_gp_46184_ld470_value = dark_laplace_diff_1_to_gp_46184.read();
	// Produce: dark_laplace_diff_1_FIFO_buf468
	dark_laplace_diff_1_FIFO_buf468_load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997_write_bundle_write(/* arg names */dark_laplace_diff_1_to_gp_46184__lp_1_m_dark_laplace_diff_1_to_gp_46184_ld469__p__0_rp__c____dark_laplace_diff_1_to_gp_46184_ld470_value, dark_laplace_diff_1_FIFO_buf468, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_ds_1_to_gp_46232, dark_weights_normed_gauss_ds_1_FIFO_buf516_cache& dark_weights_normed_gauss_ds_1_FIFO_buf516, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_1_to_gp_46232
	auto dark_weights_normed_gauss_ds_1_to_gp_46232__lp__lp_1_m_dark_weights_normed_gauss_ds_1_to_gp_46232_ld517__p__0_rp___p__3_rp__c_______lp_dark_weights_normed_gauss_ds_1_to_gp_46232_ld518__p__3_rp__value = dark_weights_normed_gauss_ds_1_to_gp_46232.read();
	// Produce: dark_weights_normed_gauss_ds_1_FIFO_buf516
	dark_weights_normed_gauss_ds_1_FIFO_buf516_load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003_write_bundle_write(/* arg names */dark_weights_normed_gauss_ds_1_to_gp_46232__lp__lp_1_m_dark_weights_normed_gauss_ds_1_to_gp_46232_ld517__p__0_rp___p__3_rp__c_______lp_dark_weights_normed_gauss_ds_1_to_gp_46232_ld518__p__3_rp__value, dark_weights_normed_gauss_ds_1_FIFO_buf516, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void fused_level_1_update_0_sm752_01123(bright_laplace_diff_1_FIFO_buf344_cache& bright_laplace_diff_1_FIFO_buf344, dark_laplace_diff_1_FIFO_buf468_cache& dark_laplace_diff_1_FIFO_buf468, bright_weights_normed_gauss_ds_1_FIFO_buf392_cache& bright_weights_normed_gauss_ds_1_FIFO_buf392, dark_weights_normed_gauss_ds_1_FIFO_buf516_cache& dark_weights_normed_gauss_ds_1_FIFO_buf516, fused_level_1_cache& fused_level_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_1_FIFO_buf344
	auto bright_laplace_diff_1_FIFO_buf344_1_m__lp_1_m_fused_level_1_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_1_0__p__0_p_0_value = bright_laplace_diff_1_FIFO_buf344_fused_level_1_update_0_sm752_01123_read_bundle_read(bright_laplace_diff_1_FIFO_buf344/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_diff_1_FIFO_buf468
	auto dark_laplace_diff_1_FIFO_buf468_1_m__lp_1_m_fused_level_1_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_1_0__p__0_p_0_value = dark_laplace_diff_1_FIFO_buf468_fused_level_1_update_0_sm752_01123_read_bundle_read(dark_laplace_diff_1_FIFO_buf468/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed_gauss_ds_1_FIFO_buf392
	auto bright_weights_normed_gauss_ds_1_FIFO_buf392_1_m__lp_1_m_fused_level_1_1__p__0_rp___p__0_p_3_c_____1_m_fused_level_1_0__p__0_p_3_value = bright_weights_normed_gauss_ds_1_FIFO_buf392_fused_level_1_update_0_sm752_01123_read_bundle_read(bright_weights_normed_gauss_ds_1_FIFO_buf392/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed_gauss_ds_1_FIFO_buf516
	auto dark_weights_normed_gauss_ds_1_FIFO_buf516_1_m__lp_1_m_fused_level_1_1__p__0_rp___p__0_p_3_c_____1_m_fused_level_1_0__p__0_p_3_value = dark_weights_normed_gauss_ds_1_FIFO_buf516_fused_level_1_update_0_sm752_01123_read_bundle_read(dark_weights_normed_gauss_ds_1_FIFO_buf516/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weighted_merge_unrolled_1(bright_laplace_diff_1_FIFO_buf344_1_m__lp_1_m_fused_level_1_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_1_0__p__0_p_0_value, dark_laplace_diff_1_FIFO_buf468_1_m__lp_1_m_fused_level_1_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_1_0__p__0_p_0_value, bright_weights_normed_gauss_ds_1_FIFO_buf392_1_m__lp_1_m_fused_level_1_1__p__0_rp___p__0_p_3_c_____1_m_fused_level_1_0__p__0_p_3_value, dark_weights_normed_gauss_ds_1_FIFO_buf516_1_m__lp_1_m_fused_level_1_1__p__0_rp___p__0_p_3_c_____1_m_fused_level_1_0__p__0_p_3_value);
	// Produce: fused_level_1
	fused_level_1_fused_level_1_update_0_sm752_01123_write_bundle_write(/* arg names */compute_result, fused_level_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_fused_level_1_to_gp_43264267_sm572_0769(fused_level_1_cache& fused_level_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */fused_level_1_to_gp_43264, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: fused_level_1
	auto fused_level_1__lp_1_m_fused_level_1_ld265__p__0_rp__c____fused_level_1_ld266_value = fused_level_1_load_to_fused_level_1_to_gp_43264267_sm572_0769_read_bundle_read(fused_level_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: fused_level_1_to_gp_43264
	fused_level_1_to_gp_43264.write(fused_level_1__lp_1_m_fused_level_1_ld265__p__0_rp__c____fused_level_1_ld266_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_diff_1_to_gp_4660, bright_laplace_diff_1_FIFO_buf344_cache& bright_laplace_diff_1_FIFO_buf344, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_1_to_gp_4660
	auto bright_laplace_diff_1_to_gp_4660__lp_1_m_bright_laplace_diff_1_to_gp_4660_ld345__p__0_rp__c____bright_laplace_diff_1_to_gp_4660_ld346_value = bright_laplace_diff_1_to_gp_4660.read();
	// Produce: bright_laplace_diff_1_FIFO_buf344
	bright_laplace_diff_1_FIFO_buf344_load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925_write_bundle_write(/* arg names */bright_laplace_diff_1_to_gp_4660__lp_1_m_bright_laplace_diff_1_to_gp_4660_ld345__p__0_rp__c____bright_laplace_diff_1_to_gp_4660_ld346_value, bright_laplace_diff_1_FIFO_buf344, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_ds_1_to_gp_46108, bright_weights_normed_gauss_ds_1_FIFO_buf392_cache& bright_weights_normed_gauss_ds_1_FIFO_buf392, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_1_to_gp_46108
	auto bright_weights_normed_gauss_ds_1_to_gp_46108__lp__lp_1_m_bright_weights_normed_gauss_ds_1_to_gp_46108_ld393__p__0_rp___p__3_rp__c_______lp_bright_weights_normed_gauss_ds_1_to_gp_46108_ld394__p__3_rp__value = bright_weights_normed_gauss_ds_1_to_gp_46108.read();
	// Produce: bright_weights_normed_gauss_ds_1_FIFO_buf392
	bright_weights_normed_gauss_ds_1_FIFO_buf392_load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989_write_bundle_write(/* arg names */bright_weights_normed_gauss_ds_1_to_gp_46108__lp__lp_1_m_bright_weights_normed_gauss_ds_1_to_gp_46108_ld393__p__0_rp___p__3_rp__c_______lp_bright_weights_normed_gauss_ds_1_to_gp_46108_ld394__p__3_rp__value, bright_weights_normed_gauss_ds_1_FIFO_buf392, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_laplace_diff_1_to_gp_4660_ld346_bright_weights_normed_gauss_ds_1_to_gp_46108_ld394_dark_laplace_diff_1_to_gp_46184_ld470_dark_weights_normed_gauss_ds_1_to_gp_46232_ld518_fused_level_1_0_fused_level_1_ld266_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_diff_1_to_gp_4660, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_ds_1_to_gp_46108, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_diff_1_to_gp_46184, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_ds_1_to_gp_46232, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */fused_level_1_to_gp_43264) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_laplace_diff_1_to_gp_4660_ld346_bright_weights_normed_gauss_ds_1_to_gp_46108_ld394_dark_laplace_diff_1_to_gp_46184_ld470_dark_weights_normed_gauss_ds_1_to_gp_46232_ld518_fused_level_1_0_fused_level_1_ld266__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_1_FIFO_buf344_cache bright_laplace_diff_1_FIFO_buf344;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_1_FIFO_buf392_cache bright_weights_normed_gauss_ds_1_FIFO_buf392;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_1_FIFO_buf468_cache dark_laplace_diff_1_FIFO_buf468;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_1_FIFO_buf516_cache dark_weights_normed_gauss_ds_1_FIFO_buf516;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_1_cache fused_level_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 65] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 160] : 0 <= d1 <= 539 and 0 <= d2 <= 539; fused_level_1_update_0_sm752_01123[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 164] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 139] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 98] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_fused_level_1_to_gp_43264267_sm572_0769[d0 = 0, d1, d2] -> [0, 10 + 2d1, 14 + 2d2, 171] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
//   { load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 65] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-65 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 160] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-160 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { fused_level_1_update_0_sm752_01123[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 164] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for fused_level_1_update_0_sm752_01123(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-164 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 139] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-139 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003[d0 = 0, d1, d2] -> [0, 8 + 2d1, 8 + 2d2, 98] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-98 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_fused_level_1_to_gp_43264267_sm572_0769[d0 = 0, d1, d2] -> [0, 10 + 2d1, 14 + 2d2, 171] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_fused_level_1_to_gp_43264267_sm572_0769(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-171 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1092 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 171] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 14 <= i2 <= 1092; [0, i1, i2, 164] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 160] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 139] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 98] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 8 <= i1 <= 1086 and 8 <= i2 <= 1086; [0, i1, i2, 65] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 8; i1 <= 1088; i1++) {
	    for (int i2 = 8; i2 <= 1092; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and 10 <= i2 <= 1088 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and 10 <= i2 <= 1088 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -10 + i2 >= 0 }
	          // { [i0, i1, i2] : 1088 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))) {
	          load_to_bright_weights_normed_gauss_ds_1_FIFO_buf392395_sm682_0989(bright_weights_normed_gauss_ds_1_to_gp_46108 /* buf name */, bright_weights_normed_gauss_ds_1_FIFO_buf392, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 and i2 <= 1086 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 <= 1086 and i2 <= 1086 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((1086 + -1*i1)) >= 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_dark_weights_normed_gauss_ds_1_FIFO_buf516519_sm689_01003(dark_weights_normed_gauss_ds_1_to_gp_46232 /* buf name */, dark_weights_normed_gauss_ds_1_FIFO_buf516, 0, ((-4 + (1*(((1*i1)) >> 1)))), ((-4 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and 10 <= i2 <= 1088 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and 10 <= i2 <= 1088 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -10 + i2 >= 0 }
	          // { [i0, i1, i2] : 1088 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))) {
	          load_to_dark_laplace_diff_1_FIFO_buf468471_sm686_0997(dark_laplace_diff_1_to_gp_46184 /* buf name */, dark_laplace_diff_1_FIFO_buf468, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and 10 <= i2 <= 1088 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and 10 <= i2 <= 1088 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -10 + i2 >= 0 }
	          // { [i0, i1, i2] : 1088 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))) {
	          load_to_bright_laplace_diff_1_FIFO_buf344347_sm650_0925(bright_laplace_diff_1_to_gp_4660 /* buf name */, bright_laplace_diff_1_FIFO_buf344, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and 10 <= i2 <= 1088 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and 10 <= i2 <= 1088 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -10 + i2 >= 0 }
	          // { [i0, i1, i2] : 1088 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))) {
	          fused_level_1_update_0_sm752_01123(bright_laplace_diff_1_FIFO_buf344 /* buf name */, dark_laplace_diff_1_FIFO_buf468 /* buf name */, bright_weights_normed_gauss_ds_1_FIFO_buf392 /* buf name */, dark_weights_normed_gauss_ds_1_FIFO_buf516 /* buf name */, fused_level_1, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and i2 >= 14 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i1 >= 10 and i2 >= 14 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-14 + 1*i2)) >= 0)))) {
	          load_to_fused_level_1_to_gp_43264267_sm572_0769(fused_level_1 /* buf name */, fused_level_1_to_gp_43264, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-7 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_diff_2_to_gp_4764, bright_laplace_diff_2_FIFO_buf348_cache& bright_laplace_diff_2_FIFO_buf348, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_2_to_gp_4764
	auto bright_laplace_diff_2_to_gp_4764__lp_1_m_bright_laplace_diff_2_to_gp_4764_ld349__p__0_rp__c____bright_laplace_diff_2_to_gp_4764_ld350_value = bright_laplace_diff_2_to_gp_4764.read();
	// Produce: bright_laplace_diff_2_FIFO_buf348
	bright_laplace_diff_2_FIFO_buf348_load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937_write_bundle_write(/* arg names */bright_laplace_diff_2_to_gp_4764__lp_1_m_bright_laplace_diff_2_to_gp_4764_ld349__p__0_rp__c____bright_laplace_diff_2_to_gp_4764_ld350_value, bright_laplace_diff_2_FIFO_buf348, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_ds_2_to_gp_47116, bright_weights_normed_gauss_ds_2_FIFO_buf400_cache& bright_weights_normed_gauss_ds_2_FIFO_buf400, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_2_to_gp_47116
	auto bright_weights_normed_gauss_ds_2_to_gp_47116__lp__lp_1_m_bright_weights_normed_gauss_ds_2_to_gp_47116_ld401__p__0_rp___p__1_rp__c_______lp_bright_weights_normed_gauss_ds_2_to_gp_47116_ld402__p__1_rp__value = bright_weights_normed_gauss_ds_2_to_gp_47116.read();
	// Produce: bright_weights_normed_gauss_ds_2_FIFO_buf400
	bright_weights_normed_gauss_ds_2_FIFO_buf400_load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971_write_bundle_write(/* arg names */bright_weights_normed_gauss_ds_2_to_gp_47116__lp__lp_1_m_bright_weights_normed_gauss_ds_2_to_gp_47116_ld401__p__0_rp___p__1_rp__c_______lp_bright_weights_normed_gauss_ds_2_to_gp_47116_ld402__p__1_rp__value, bright_weights_normed_gauss_ds_2_FIFO_buf400, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_laplace_diff_2_to_gp_47188, dark_laplace_diff_2_FIFO_buf472_cache& dark_laplace_diff_2_FIFO_buf472, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_laplace_diff_2_to_gp_47188
	auto dark_laplace_diff_2_to_gp_47188__lp_1_m_dark_laplace_diff_2_to_gp_47188_ld473__p__0_rp__c____dark_laplace_diff_2_to_gp_47188_ld474_value = dark_laplace_diff_2_to_gp_47188.read();
	// Produce: dark_laplace_diff_2_FIFO_buf472
	dark_laplace_diff_2_FIFO_buf472_load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979_write_bundle_write(/* arg names */dark_laplace_diff_2_to_gp_47188__lp_1_m_dark_laplace_diff_2_to_gp_47188_ld473__p__0_rp__c____dark_laplace_diff_2_to_gp_47188_ld474_value, dark_laplace_diff_2_FIFO_buf472, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_ds_2_to_gp_47240, dark_weights_normed_gauss_ds_2_FIFO_buf524_cache& dark_weights_normed_gauss_ds_2_FIFO_buf524, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_2_to_gp_47240
	auto dark_weights_normed_gauss_ds_2_to_gp_47240__lp__lp_1_m_dark_weights_normed_gauss_ds_2_to_gp_47240_ld525__p__0_rp___p__1_rp__c_______lp_dark_weights_normed_gauss_ds_2_to_gp_47240_ld526__p__1_rp__value = dark_weights_normed_gauss_ds_2_to_gp_47240.read();
	// Produce: dark_weights_normed_gauss_ds_2_FIFO_buf524
	dark_weights_normed_gauss_ds_2_FIFO_buf524_load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005_write_bundle_write(/* arg names */dark_weights_normed_gauss_ds_2_to_gp_47240__lp__lp_1_m_dark_weights_normed_gauss_ds_2_to_gp_47240_ld525__p__0_rp___p__1_rp__c_______lp_dark_weights_normed_gauss_ds_2_to_gp_47240_ld526__p__1_rp__value, dark_weights_normed_gauss_ds_2_FIFO_buf524, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void fused_level_2_update_0_sm751_01121(bright_laplace_diff_2_FIFO_buf348_cache& bright_laplace_diff_2_FIFO_buf348, dark_laplace_diff_2_FIFO_buf472_cache& dark_laplace_diff_2_FIFO_buf472, bright_weights_normed_gauss_ds_2_FIFO_buf400_cache& bright_weights_normed_gauss_ds_2_FIFO_buf400, dark_weights_normed_gauss_ds_2_FIFO_buf524_cache& dark_weights_normed_gauss_ds_2_FIFO_buf524, fused_level_2_cache& fused_level_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_2_FIFO_buf348
	auto bright_laplace_diff_2_FIFO_buf348_1_m__lp_1_m_fused_level_2_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_2_0__p__0_p_0_value = bright_laplace_diff_2_FIFO_buf348_fused_level_2_update_0_sm751_01121_read_bundle_read(bright_laplace_diff_2_FIFO_buf348/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_diff_2_FIFO_buf472
	auto dark_laplace_diff_2_FIFO_buf472_1_m__lp_1_m_fused_level_2_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_2_0__p__0_p_0_value = dark_laplace_diff_2_FIFO_buf472_fused_level_2_update_0_sm751_01121_read_bundle_read(dark_laplace_diff_2_FIFO_buf472/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed_gauss_ds_2_FIFO_buf400
	auto bright_weights_normed_gauss_ds_2_FIFO_buf400_1_m__lp_1_m_fused_level_2_1__p__0_rp___p__0_p_1_c_____1_m_fused_level_2_0__p__0_p_1_value = bright_weights_normed_gauss_ds_2_FIFO_buf400_fused_level_2_update_0_sm751_01121_read_bundle_read(bright_weights_normed_gauss_ds_2_FIFO_buf400/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed_gauss_ds_2_FIFO_buf524
	auto dark_weights_normed_gauss_ds_2_FIFO_buf524_1_m__lp_1_m_fused_level_2_1__p__0_rp___p__0_p_1_c_____1_m_fused_level_2_0__p__0_p_1_value = dark_weights_normed_gauss_ds_2_FIFO_buf524_fused_level_2_update_0_sm751_01121_read_bundle_read(dark_weights_normed_gauss_ds_2_FIFO_buf524/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weighted_merge_unrolled_1(bright_laplace_diff_2_FIFO_buf348_1_m__lp_1_m_fused_level_2_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_2_0__p__0_p_0_value, dark_laplace_diff_2_FIFO_buf472_1_m__lp_1_m_fused_level_2_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_2_0__p__0_p_0_value, bright_weights_normed_gauss_ds_2_FIFO_buf400_1_m__lp_1_m_fused_level_2_1__p__0_rp___p__0_p_1_c_____1_m_fused_level_2_0__p__0_p_1_value, dark_weights_normed_gauss_ds_2_FIFO_buf524_1_m__lp_1_m_fused_level_2_1__p__0_rp___p__0_p_1_c_____1_m_fused_level_2_0__p__0_p_1_value);
	// Produce: fused_level_2
	fused_level_2_fused_level_2_update_0_sm751_01121_write_bundle_write(/* arg names */compute_result, fused_level_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_fused_level_2_to_gp_44268271_sm602_0829(fused_level_2_cache& fused_level_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */fused_level_2_to_gp_44268, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: fused_level_2
	auto fused_level_2__lp_1_m_fused_level_2_ld269__p__0_rp__c____fused_level_2_ld270_value = fused_level_2_load_to_fused_level_2_to_gp_44268271_sm602_0829_read_bundle_read(fused_level_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: fused_level_2_to_gp_44268
	fused_level_2_to_gp_44268.write(fused_level_2__lp_1_m_fused_level_2_ld269__p__0_rp__c____fused_level_2_ld270_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_laplace_diff_2_to_gp_4764_ld350_bright_weights_normed_gauss_ds_2_to_gp_47116_ld402_dark_laplace_diff_2_to_gp_47188_ld474_dark_weights_normed_gauss_ds_2_to_gp_47240_ld526_fused_level_2_0_fused_level_2_ld270_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_diff_2_to_gp_4764, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_ds_2_to_gp_47116, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_laplace_diff_2_to_gp_47188, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_ds_2_to_gp_47240, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */fused_level_2_to_gp_44268) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_laplace_diff_2_to_gp_4764_ld350_bright_weights_normed_gauss_ds_2_to_gp_47116_ld402_dark_laplace_diff_2_to_gp_47188_ld474_dark_weights_normed_gauss_ds_2_to_gp_47240_ld526_fused_level_2_0_fused_level_2_ld270__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_2_FIFO_buf348_cache bright_laplace_diff_2_FIFO_buf348;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_2_FIFO_buf400_cache bright_weights_normed_gauss_ds_2_FIFO_buf400;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_2_FIFO_buf472_cache dark_laplace_diff_2_FIFO_buf472;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_2_FIFO_buf524_cache dark_weights_normed_gauss_ds_2_FIFO_buf524;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_2_cache fused_level_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 176] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 121] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 155] : 0 <= d1 <= 269 and 0 <= d2 <= 269; fused_level_2_update_0_sm751_01121[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 180] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_fused_level_2_to_gp_44268271_sm602_0829[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 181] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 178] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
//   { load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 176] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-176 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 121] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-121 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 155] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-155 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { fused_level_2_update_0_sm751_01121[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 180] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for fused_level_2_update_0_sm751_01121(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-180 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_fused_level_2_to_gp_44268271_sm602_0829[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 181] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_fused_level_2_to_gp_44268271_sm602_0829(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-181 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 178] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-178 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090 and 180 <= i3 <= 181; [0, i1, i2, 178] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 176] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 155] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 10 <= i1 <= 1086 and 14 <= i2 <= 1090; [0, i1, i2, 121] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 10 <= i1 <= 1086 and 14 <= i2 <= 1090 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 10; i1 <= 1090; i1++) {
	    for (int i2 = 14; i2 <= 1090; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 <= 1086 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 <= 1086 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((1086 + -1*i1)) >= 0)))) {
	          load_to_bright_weights_normed_gauss_ds_2_FIFO_buf400403_sm673_0971(bright_weights_normed_gauss_ds_2_to_gp_47116 /* buf name */, bright_weights_normed_gauss_ds_2_FIFO_buf400, 0, ((-3 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 <= 1086 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 <= 1086 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : 1086 - i1 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((1086 + -1*i1)) >= 0)))) {
	          load_to_dark_weights_normed_gauss_ds_2_FIFO_buf524527_sm690_01005(dark_weights_normed_gauss_ds_2_to_gp_47240 /* buf name */, dark_weights_normed_gauss_ds_2_FIFO_buf524, 0, ((-3 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0)))) {
	          load_to_bright_laplace_diff_2_FIFO_buf348351_sm656_0937(bright_laplace_diff_2_to_gp_4764 /* buf name */, bright_laplace_diff_2_FIFO_buf348, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0)))) {
	          load_to_dark_laplace_diff_2_FIFO_buf472475_sm677_0979(dark_laplace_diff_2_to_gp_47188 /* buf name */, dark_laplace_diff_2_FIFO_buf472, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0)))) {
	          fused_level_2_update_0_sm751_01121(bright_laplace_diff_2_FIFO_buf348 /* buf name */, dark_laplace_diff_2_FIFO_buf472 /* buf name */, bright_weights_normed_gauss_ds_2_FIFO_buf400 /* buf name */, dark_weights_normed_gauss_ds_2_FIFO_buf524 /* buf name */, fused_level_2, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -14 + i1 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-14 + 1*i1)) >= 0)))) {
	          load_to_fused_level_2_to_gp_44268271_sm602_0829(fused_level_2 /* buf name */, fused_level_2_to_gp_44268, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void fused_level_3_update_0_sm750_01119(bright_gauss_ds_3_FIFO_buf336_cache& bright_gauss_ds_3_FIFO_buf336, dark_gauss_ds_3_FIFO_buf460_cache& dark_gauss_ds_3_FIFO_buf460, bright_weights_normed_gauss_ds_3_FIFO_buf404_cache& bright_weights_normed_gauss_ds_3_FIFO_buf404, dark_weights_normed_gauss_ds_3_FIFO_buf528_cache& dark_weights_normed_gauss_ds_3_FIFO_buf528, fused_level_3_cache& fused_level_3, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_3_FIFO_buf336
	auto bright_gauss_ds_3_FIFO_buf336_1_m__lp_1_m_fused_level_3_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_3_0__p__0_p_0_value = bright_gauss_ds_3_FIFO_buf336_fused_level_3_update_0_sm750_01119_read_bundle_read(bright_gauss_ds_3_FIFO_buf336/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_gauss_ds_3_FIFO_buf460
	auto dark_gauss_ds_3_FIFO_buf460_1_m__lp_1_m_fused_level_3_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_3_0__p__0_p_0_value = dark_gauss_ds_3_FIFO_buf460_fused_level_3_update_0_sm750_01119_read_bundle_read(dark_gauss_ds_3_FIFO_buf460/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed_gauss_ds_3_FIFO_buf404
	auto bright_weights_normed_gauss_ds_3_FIFO_buf404_1_m__lp_1_m_fused_level_3_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_3_0__p__0_p_0_value = bright_weights_normed_gauss_ds_3_FIFO_buf404_fused_level_3_update_0_sm750_01119_read_bundle_read(bright_weights_normed_gauss_ds_3_FIFO_buf404/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed_gauss_ds_3_FIFO_buf528
	auto dark_weights_normed_gauss_ds_3_FIFO_buf528_1_m__lp_1_m_fused_level_3_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_3_0__p__0_p_0_value = dark_weights_normed_gauss_ds_3_FIFO_buf528_fused_level_3_update_0_sm750_01119_read_bundle_read(dark_weights_normed_gauss_ds_3_FIFO_buf528/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weighted_merge_unrolled_1(bright_gauss_ds_3_FIFO_buf336_1_m__lp_1_m_fused_level_3_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_3_0__p__0_p_0_value, dark_gauss_ds_3_FIFO_buf460_1_m__lp_1_m_fused_level_3_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_3_0__p__0_p_0_value, bright_weights_normed_gauss_ds_3_FIFO_buf404_1_m__lp_1_m_fused_level_3_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_3_0__p__0_p_0_value, dark_weights_normed_gauss_ds_3_FIFO_buf528_1_m__lp_1_m_fused_level_3_1__p__0_rp___p__0_p_0_c_____1_m_fused_level_3_0__p__0_p_0_value);
	// Produce: fused_level_3
	fused_level_3_fused_level_3_update_0_sm750_01119_write_bundle_write(/* arg names */compute_result, fused_level_3, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_weights_normed_gauss_ds_3_to_gp_48120, bright_weights_normed_gauss_ds_3_FIFO_buf404_cache& bright_weights_normed_gauss_ds_3_FIFO_buf404, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_3_to_gp_48120
	auto bright_weights_normed_gauss_ds_3_to_gp_48120__lp_1_m_bright_weights_normed_gauss_ds_3_to_gp_48120_ld405__p__0_rp__c____bright_weights_normed_gauss_ds_3_to_gp_48120_ld406_value = bright_weights_normed_gauss_ds_3_to_gp_48120.read();
	// Produce: bright_weights_normed_gauss_ds_3_FIFO_buf404
	bright_weights_normed_gauss_ds_3_FIFO_buf404_load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973_write_bundle_write(/* arg names */bright_weights_normed_gauss_ds_3_to_gp_48120__lp_1_m_bright_weights_normed_gauss_ds_3_to_gp_48120_ld405__p__0_rp__c____bright_weights_normed_gauss_ds_3_to_gp_48120_ld406_value, bright_weights_normed_gauss_ds_3_FIFO_buf404, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_3_to_gp_4852, bright_gauss_ds_3_FIFO_buf336_cache& bright_gauss_ds_3_FIFO_buf336, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_3_to_gp_4852
	auto bright_gauss_ds_3_to_gp_4852__lp_1_m_bright_gauss_ds_3_to_gp_4852_ld337__p__0_rp__c____bright_gauss_ds_3_to_gp_4852_ld338_value = bright_gauss_ds_3_to_gp_4852.read();
	// Produce: bright_gauss_ds_3_FIFO_buf336
	bright_gauss_ds_3_FIFO_buf336_load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911_write_bundle_write(/* arg names */bright_gauss_ds_3_to_gp_4852__lp_1_m_bright_gauss_ds_3_to_gp_4852_ld337__p__0_rp__c____bright_gauss_ds_3_to_gp_4852_ld338_value, bright_gauss_ds_3_FIFO_buf336, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_fused_level_3_to_gp_44272275_sm645_0915(fused_level_3_cache& fused_level_3, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */fused_level_3_to_gp_44272, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: fused_level_3
	auto fused_level_3__lp_1_m_fused_level_3_ld273__p__0_rp__c____fused_level_3_ld274_value = fused_level_3_load_to_fused_level_3_to_gp_44272275_sm645_0915_read_bundle_read(fused_level_3/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: fused_level_3_to_gp_44272
	fused_level_3_to_gp_44272.write(fused_level_3__lp_1_m_fused_level_3_ld273__p__0_rp__c____fused_level_3_ld274_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_weights_normed_gauss_ds_3_to_gp_48244, dark_weights_normed_gauss_ds_3_FIFO_buf528_cache& dark_weights_normed_gauss_ds_3_FIFO_buf528, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_3_to_gp_48244
	auto dark_weights_normed_gauss_ds_3_to_gp_48244__lp_1_m_dark_weights_normed_gauss_ds_3_to_gp_48244_ld529__p__0_rp__c____dark_weights_normed_gauss_ds_3_to_gp_48244_ld530_value = dark_weights_normed_gauss_ds_3_to_gp_48244.read();
	// Produce: dark_weights_normed_gauss_ds_3_FIFO_buf528
	dark_weights_normed_gauss_ds_3_FIFO_buf528_load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017_write_bundle_write(/* arg names */dark_weights_normed_gauss_ds_3_to_gp_48244__lp_1_m_dark_weights_normed_gauss_ds_3_to_gp_48244_ld529__p__0_rp__c____dark_weights_normed_gauss_ds_3_to_gp_48244_ld530_value, dark_weights_normed_gauss_ds_3_FIFO_buf528, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */dark_gauss_ds_3_to_gp_48176, dark_gauss_ds_3_FIFO_buf460_cache& dark_gauss_ds_3_FIFO_buf460, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_3_to_gp_48176
	auto dark_gauss_ds_3_to_gp_48176__lp_1_m_dark_gauss_ds_3_to_gp_48176_ld461__p__0_rp__c____dark_gauss_ds_3_to_gp_48176_ld462_value = dark_gauss_ds_3_to_gp_48176.read();
	// Produce: dark_gauss_ds_3_FIFO_buf460
	dark_gauss_ds_3_FIFO_buf460_load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013_write_bundle_write(/* arg names */dark_gauss_ds_3_to_gp_48176__lp_1_m_dark_gauss_ds_3_to_gp_48176_ld461__p__0_rp__c____dark_gauss_ds_3_to_gp_48176_ld462_value, dark_gauss_ds_3_FIFO_buf460, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_ds_3_to_gp_4852_ld338_bright_weights_normed_gauss_ds_3_to_gp_48120_ld406_dark_gauss_ds_3_to_gp_48176_ld462_dark_weights_normed_gauss_ds_3_to_gp_48244_ld530_fused_level_3_0_fused_level_3_ld274_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_3_to_gp_4852, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_weights_normed_gauss_ds_3_to_gp_48120, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_gauss_ds_3_to_gp_48176, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */dark_weights_normed_gauss_ds_3_to_gp_48244, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */fused_level_3_to_gp_44272) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_ds_3_to_gp_4852_ld338_bright_weights_normed_gauss_ds_3_to_gp_48120_ld406_dark_gauss_ds_3_to_gp_48176_ld462_dark_weights_normed_gauss_ds_3_to_gp_48244_ld530_fused_level_3_0_fused_level_3_ld274__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_3_FIFO_buf336_cache bright_gauss_ds_3_FIFO_buf336;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_3_FIFO_buf404_cache bright_weights_normed_gauss_ds_3_FIFO_buf404;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_3_FIFO_buf460_cache dark_gauss_ds_3_FIFO_buf460;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_3_FIFO_buf528_cache dark_weights_normed_gauss_ds_3_FIFO_buf528;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_3_cache fused_level_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 137] : 0 <= d1 <= 134 and 0 <= d2 <= 134; fused_level_3_update_0_sm750_01119[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 175] : 0 <= d1 <= 134 and 0 <= d2 <= 134; load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 169] : 0 <= d1 <= 134 and 0 <= d2 <= 134; load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 163] : 0 <= d1 <= 134 and 0 <= d2 <= 134; load_to_fused_level_3_to_gp_44272275_sm645_0915[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 177] : 0 <= d1 <= 134 and 0 <= d2 <= 134; load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 151] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
//   { load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 137] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-137 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { fused_level_3_update_0_sm750_01119[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 175] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for fused_level_3_update_0_sm750_01119(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-175 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 169] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-169 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 163] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-163 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_fused_level_3_to_gp_44272275_sm645_0915[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 177] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_fused_level_3_to_gp_44272275_sm645_0915(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-177 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 151] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-151 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 177] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 175] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 169] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 163] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 151] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 137] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1086; i1++) {
	    for (int i2 = 14; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_dark_gauss_ds_3_FIFO_buf460463_sm694_01013(dark_gauss_ds_3_to_gp_48176 /* buf name */, dark_gauss_ds_3_FIFO_buf460, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_bright_gauss_ds_3_FIFO_buf336339_sm643_0911(bright_gauss_ds_3_to_gp_4852 /* buf name */, bright_gauss_ds_3_FIFO_buf336, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_bright_weights_normed_gauss_ds_3_FIFO_buf404407_sm674_0973(bright_weights_normed_gauss_ds_3_to_gp_48120 /* buf name */, bright_weights_normed_gauss_ds_3_FIFO_buf404, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_dark_weights_normed_gauss_ds_3_FIFO_buf528531_sm696_01017(dark_weights_normed_gauss_ds_3_to_gp_48244 /* buf name */, dark_weights_normed_gauss_ds_3_FIFO_buf528, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          fused_level_3_update_0_sm750_01119(bright_gauss_ds_3_FIFO_buf336 /* buf name */, dark_gauss_ds_3_FIFO_buf460 /* buf name */, bright_weights_normed_gauss_ds_3_FIFO_buf404 /* buf name */, dark_weights_normed_gauss_ds_3_FIFO_buf528 /* buf name */, fused_level_3, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_fused_level_3_to_gp_44272275_sm645_0915(fused_level_3 /* buf name */, fused_level_3_to_gp_44272, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void in_update_0_sm711_01047(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */in_off_chip, in_cache& in, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: in_off_chip
	auto in_off_chip_1_m__lp__lp_1_m_in_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_in_0__p___m_7_rp___p__0_p_7_value = in_off_chip.read();
	auto compute_result = id_unrolled_1(in_off_chip_1_m__lp__lp_1_m_in_1__p__0_rp___p___m_7_rp___p__0_p_7_c_______1_m__lp_in_0__p___m_7_rp___p__0_p_7_value);
	// Produce: in
	in_in_update_0_sm711_01047_write_bundle_write(/* arg names */compute_result, in, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_in_to_gp_21280283_sm618_0861(in_cache& in, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */in_to_gp_21280, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: in
	auto in__lp_1_m_in_ld281__p__0_rp__c____in_ld282_value = in_load_to_in_to_gp_21280283_sm618_0861_read_bundle_read(in/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: in_to_gp_21280
	in_to_gp_21280.write(in__lp_1_m_in_ld281__p__0_rp__c____in_ld282_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_in_to_gp_0276279_sm652_0929(in_cache& in, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */in_to_gp_0276, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: in
	auto in__lp_1_m_in_ld277__p__0_rp__c____in_ld278_value = in_load_to_in_to_gp_0276279_sm652_0929_read_bundle_read(in/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: in_to_gp_0276
	in_to_gp_0276.write(in__lp_1_m_in_ld277__p__0_rp__c____in_ld278_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_in_0_in_ld278_in_ld282_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */in_off_chip, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */in_to_gp_0276, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */in_to_gp_21280) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_in_0_in_ld278_in_ld282__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  in_cache in;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_in_to_gp_21280283_sm618_0861[d0 = 0, d1, d2] -> [0, d1, d2, 2] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; in_update_0_sm711_01047[d0 = 0, d1, d2] -> [0, d1, d2, 0] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086; load_to_in_to_gp_0276279_sm652_0929[d0 = 0, d1, d2] -> [0, d1, d2, 1] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
//   { load_to_in_to_gp_21280283_sm618_0861[d0 = 0, d1, d2] -> [0, d1, d2, 2] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_in_to_gp_21280283_sm618_0861(((((-2 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { in_update_0_sm711_01047[d0 = 0, d1, d2] -> [0, d1, d2, 0] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for in_update_0_sm711_01047(((((1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_in_to_gp_0276279_sm652_0929[d0 = 0, d1, d2] -> [0, d1, d2, 1] : 0 <= d1 <= 1086 and 0 <= d2 <= 1086 }
// Condition for load_to_in_to_gp_0276279_sm652_0929(((((-1 + 1*i3)) == 0) && (((1*i0)) == 0) && (((1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : 0 <= i1 <= 1086 and 0 <= i2 <= 1086 and 0 <= i3 <= 2 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 0; i1 <= 1086; i1++) {
	    for (int i2 = 0; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          in_update_0_sm711_01047(in_off_chip /* buf name */, in, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_in_to_gp_0276279_sm652_0929(in /* buf name */, in_to_gp_0276, 0, ((1*i1)), ((1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_in_to_gp_21280283_sm618_0861(in /* buf name */, in_to_gp_21280, 0, ((1*i1)), ((1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_blur_2_to_gp_516, bright_gauss_blur_2_FIFO_buf300_cache& bright_gauss_blur_2_FIFO_buf300, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_2_to_gp_516
	auto bright_gauss_blur_2_to_gp_516__lp_1_m_bright_gauss_blur_2_to_gp_516_ld301__p__0_rp__c____bright_gauss_blur_2_to_gp_516_ld302_value = bright_gauss_blur_2_to_gp_516.read();
	// Produce: bright_gauss_blur_2_FIFO_buf300
	bright_gauss_blur_2_FIFO_buf300_load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863_write_bundle_write(/* arg names */bright_gauss_blur_2_to_gp_516__lp_1_m_bright_gauss_blur_2_to_gp_516_ld301__p__0_rp__c____bright_gauss_blur_2_to_gp_516_ld302_value, bright_gauss_blur_2_FIFO_buf300, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785(bright_gauss_ds_2_cache& bright_gauss_ds_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_2_to_gp_944, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2
	auto bright_gauss_ds_2__lp__lp_1_m_bright_gauss_ds_2_ld45__p__0_rp___p__1_rp__c_______lp_bright_gauss_ds_2_ld46__p__1_rp__value = bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785_read_bundle_read(bright_gauss_ds_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_gauss_ds_2_to_gp_944
	bright_gauss_ds_2_to_gp_944.write(bright_gauss_ds_2__lp__lp_1_m_bright_gauss_ds_2_ld45__p__0_rp___p__1_rp__c_______lp_bright_gauss_ds_2_ld46__p__1_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_ds_2_update_0_sm729_01083(bright_gauss_blur_2_FIFO_buf300_cache& bright_gauss_blur_2_FIFO_buf300, bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_2_FIFO_buf300
	auto bright_gauss_blur_2_FIFO_buf300_2_m__lp__lp_1_m_bright_gauss_ds_2_1__p__0_rp___p___m_1_rp___p__0_p_2_c_______2_m__lp_bright_gauss_ds_2_0__p___m_1_rp___p__0_p_2_value = bright_gauss_blur_2_FIFO_buf300_bright_gauss_ds_2_update_0_sm729_01083_read_bundle_read(bright_gauss_blur_2_FIFO_buf300/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(bright_gauss_blur_2_FIFO_buf300_2_m__lp__lp_1_m_bright_gauss_ds_2_1__p__0_rp___p___m_1_rp___p__0_p_2_c_______2_m__lp_bright_gauss_ds_2_0__p___m_1_rp___p__0_p_2_value);
	// Produce: bright_gauss_ds_2
	bright_gauss_ds_2_bright_gauss_ds_2_update_0_sm729_01083_write_bundle_write(/* arg names */compute_result, bright_gauss_ds_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789(bright_gauss_ds_2_cache& bright_gauss_ds_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_2_to_gp_1136, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2
	auto bright_gauss_ds_2__lp__lp_1_m_bright_gauss_ds_2_ld37__p__0_rp___p__1_rp__c_______lp_bright_gauss_ds_2_ld38__p__1_rp__value = bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789_read_bundle_read(bright_gauss_ds_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_gauss_ds_2_to_gp_1136
	bright_gauss_ds_2_to_gp_1136.write(bright_gauss_ds_2__lp__lp_1_m_bright_gauss_ds_2_ld37__p__0_rp___p__1_rp__c_______lp_bright_gauss_ds_2_ld38__p__1_rp__value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803(bright_gauss_ds_2_cache& bright_gauss_ds_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_2_to_gp_340, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2
	auto bright_gauss_ds_2__lp_1_m_bright_gauss_ds_2_ld41__p__0_rp__c____bright_gauss_ds_2_ld42_value = bright_gauss_ds_2_load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803_read_bundle_read(bright_gauss_ds_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_gauss_ds_2_to_gp_340
	bright_gauss_ds_2_to_gp_340.write(bright_gauss_ds_2__lp_1_m_bright_gauss_ds_2_ld41__p__0_rp__c____bright_gauss_ds_2_ld42_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_blur_2_to_gp_516_ld302_bright_gauss_ds_2_0_bright_gauss_ds_2_ld38_bright_gauss_ds_2_ld42_bright_gauss_ds_2_ld46_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_blur_2_to_gp_516, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_2_to_gp_1136, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_2_to_gp_340, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_2_to_gp_944) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_blur_2_to_gp_516_ld302_bright_gauss_ds_2_0_bright_gauss_ds_2_ld38_bright_gauss_ds_2_ld42_bright_gauss_ds_2_ld46__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_2_FIFO_buf300_cache bright_gauss_blur_2_FIFO_buf300;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_2_cache bright_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 73] : 0 <= d1 <= 540 and 0 <= d2 <= 540; load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 84] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 89] : 0 <= d1 <= 269 and 0 <= d2 <= 269; bright_gauss_ds_2_update_0_sm729_01083[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 81] : 0 <= d1 <= 270 and 0 <= d2 <= 270; load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 82] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
//   { load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863[d0 = 0, d1, d2] -> [0, 6 + 2d1, 6 + 2d2, 73] : 0 <= d1 <= 540 and 0 <= d2 <= 540 }
// Condition for load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-73 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789[d0 = 0, d1, d2] -> [0, 10 + 4d1, 10 + 4d2, 84] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-84 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785[d0 = 0, d1, d2] -> [0, 10 + 4d1, 14 + 4d2, 89] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-89 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { bright_gauss_ds_2_update_0_sm729_01083[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 81] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for bright_gauss_ds_2_update_0_sm729_01083(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-81 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803[d0 = 0, d1, d2] -> [0, 6 + 4d1, 6 + 4d2, 82] : 0 <= d1 <= 270 and 0 <= d2 <= 270 }
// Condition for load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-82 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-6 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-6 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086 and 81 <= i3 <= 82; [0, i1, i2, 89] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 10 <= i1 <= 1086 and 14 <= i2 <= 1090; [0, i1, i2, 84] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 10 <= i1 <= 1086 and 10 <= i2 <= 1086; [0, i1, i2, 73] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 6 <= i1 <= 1086 and 6 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 6; i1 <= 1086; i1++) {
	    for (int i2 = 6; i2 <= 1090; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i2 <= 1086 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and i2 <= 1086 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_bright_gauss_blur_2_FIFO_buf300303_sm619_0863(bright_gauss_blur_2_to_gp_516 /* buf name */, bright_gauss_blur_2_FIFO_buf300, 0, ((-3 + (1*(((1*i1)) >> 1)))), ((-3 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i2 <= 1086 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i2 <= 1086 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((1086 + -1*i2)) >= 0)))) {
	          bright_gauss_ds_2_update_0_sm729_01083(bright_gauss_blur_2_FIFO_buf300 /* buf name */, bright_gauss_ds_2, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i2 <= 1086 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i2 <= 1086 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_bright_gauss_ds_2_to_gp_34043_sm589_0803(bright_gauss_ds_2 /* buf name */, bright_gauss_ds_2_to_gp_340, 0, ((-2 + (1*(((2 + 1*i1)) >> 2)))), ((-2 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and 10 <= i2 <= 1086 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and 10 <= i2 <= 1086 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -10 + i2 >= 0 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))) {
	          load_to_bright_gauss_ds_2_to_gp_113639_sm582_0789(bright_gauss_ds_2 /* buf name */, bright_gauss_ds_2_to_gp_1136, 0, ((-3 + (1*(((2 + 1*i1)) >> 2)))), ((-3 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and i2 >= 14 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and i1 >= 10 and i2 >= 14 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	          // { [i0, i1, i2] : -10 + i1 >= 0 }
	          // { [i0, i1, i2] : -14 + i2 >= 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-10 + 1*i1)) >= 0) && (((-14 + 1*i2)) >= 0)))) {
	          load_to_bright_gauss_ds_2_to_gp_94447_sm580_0785(bright_gauss_ds_2 /* buf name */, bright_gauss_ds_2_to_gp_944, 0, ((-3 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_final_merged_0_FIFO_buf532535_sm574_0773(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */final_merged_0_to_gp_50248, final_merged_0_FIFO_buf532_cache& final_merged_0_FIFO_buf532, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: final_merged_0_to_gp_50248
	auto final_merged_0_to_gp_50248__lp_1_m_final_merged_0_to_gp_50248_ld533__p__0_rp__c____final_merged_0_to_gp_50248_ld534_value = final_merged_0_to_gp_50248.read();
	// Produce: final_merged_0_FIFO_buf532
	final_merged_0_FIFO_buf532_load_to_final_merged_0_FIFO_buf532535_sm574_0773_write_bundle_write(/* arg names */final_merged_0_to_gp_50248__lp_1_m_final_merged_0_to_gp_50248_ld533__p__0_rp__c____final_merged_0_to_gp_50248_ld534_value, final_merged_0_FIFO_buf532, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void sef_1_update_0_sm757_01127(final_merged_0_FIFO_buf532_cache& final_merged_0_FIFO_buf532, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */sef_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: final_merged_0_FIFO_buf532
	auto final_merged_0_FIFO_buf532_1_m__lp_1_m_sef_1_1__p__0_rp___p__0_p_0_c_____1_m_sef_1_0__p__0_p_0_value = final_merged_0_FIFO_buf532_sef_1_update_0_sm757_01127_read_bundle_read(final_merged_0_FIFO_buf532/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(final_merged_0_FIFO_buf532_1_m__lp_1_m_sef_1_1__p__0_rp___p__0_p_0_c_____1_m_sef_1_0__p__0_p_0_value);
	// Produce: sef_1
	sef_1.write(compute_result);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_final_merged_0_to_gp_50248_ld534_sef_1_0_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */final_merged_0_to_gp_50248, HWStream<hw_uint<16> >& /* get_args num ports = 1 */sef_1) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_final_merged_0_to_gp_50248_ld534_sef_1_0__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  final_merged_0_FIFO_buf532_cache final_merged_0_FIFO_buf532;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_final_merged_0_FIFO_buf532535_sm574_0773[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 191] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; sef_1_update_0_sm757_01127[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 192] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
//   { load_to_final_merged_0_FIFO_buf532535_sm574_0773[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 191] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_final_merged_0_FIFO_buf532535_sm574_0773(((((-191 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1093 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1093 + -1*i2)) >= 0)))
//   { sef_1_update_0_sm757_01127[d0 = 0, d1, d2] -> [0, 14 + d1, 14 + d2, 192] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for sef_1_update_0_sm757_01127(((((-192 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1093 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1093 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : 14 <= i1 <= 1093 and 14 <= i2 <= 1093 and 191 <= i3 <= 192 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1093; i1++) {
	    for (int i2 = 14; i2 <= 1093; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          load_to_final_merged_0_FIFO_buf532535_sm574_0773(final_merged_0_to_gp_50248 /* buf name */, final_merged_0_FIFO_buf532, 0, ((-14 + 1*i1)), ((-14 + 1*i2)));
	        }
	        // { [i0, i1, i2] }
	        // { [i0, i1, i2] :  }
	        if ((true)) {
	          sef_1_update_0_sm757_01127(final_merged_0_FIFO_buf532 /* buf name */, sef_1, 0, ((-14 + 1*i1)), ((-14 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void bright_gauss_ds_3_update_0_sm736_01097(bright_gauss_blur_3_FIFO_buf304_cache& bright_gauss_blur_3_FIFO_buf304, bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_3_FIFO_buf304
	auto bright_gauss_blur_3_FIFO_buf304_2_m__lp_1_m_bright_gauss_ds_3_1__p__0_rp___p__0_p_0_c_____2_m_bright_gauss_ds_3_0__p__0_p_0_value = bright_gauss_blur_3_FIFO_buf304_bright_gauss_ds_3_update_0_sm736_01097_read_bundle_read(bright_gauss_blur_3_FIFO_buf304/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(bright_gauss_blur_3_FIFO_buf304_2_m__lp_1_m_bright_gauss_ds_3_1__p__0_rp___p__0_p_0_c_____2_m_bright_gauss_ds_3_0__p__0_p_0_value);
	// Produce: bright_gauss_ds_3
	bright_gauss_ds_3_bright_gauss_ds_3_update_0_sm736_01097_write_bundle_write(/* arg names */compute_result, bright_gauss_ds_3, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_blur_3_to_gp_620, bright_gauss_blur_3_FIFO_buf304_cache& bright_gauss_blur_3_FIFO_buf304, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_3_to_gp_620
	auto bright_gauss_blur_3_to_gp_620__lp_1_m_bright_gauss_blur_3_to_gp_620_ld305__p__0_rp__c____bright_gauss_blur_3_to_gp_620_ld306_value = bright_gauss_blur_3_to_gp_620.read();
	// Produce: bright_gauss_blur_3_FIFO_buf304
	bright_gauss_blur_3_FIFO_buf304_load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905_write_bundle_write(/* arg names */bright_gauss_blur_3_to_gp_620__lp_1_m_bright_gauss_blur_3_to_gp_620_ld305__p__0_rp__c____bright_gauss_blur_3_to_gp_620_ld306_value, bright_gauss_blur_3_FIFO_buf304, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131(bright_gauss_ds_3_cache& bright_gauss_ds_3, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_3_to_gp_4852, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_3
	auto bright_gauss_ds_3__lp_1_m_bright_gauss_ds_3_ld53__p__0_rp__c____bright_gauss_ds_3_ld54_value = bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131_read_bundle_read(bright_gauss_ds_3/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_gauss_ds_3_to_gp_4852
	bright_gauss_ds_3_to_gp_4852.write(bright_gauss_ds_3__lp_1_m_bright_gauss_ds_3_ld53__p__0_rp__c____bright_gauss_ds_3_ld54_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109(bright_gauss_ds_3_cache& bright_gauss_ds_3, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_3_to_gp_1248, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_3
	auto bright_gauss_ds_3__lp_1_m_bright_gauss_ds_3_ld49__p__0_rp__c____bright_gauss_ds_3_ld50_value = bright_gauss_ds_3_load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109_read_bundle_read(bright_gauss_ds_3/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_gauss_ds_3_to_gp_1248
	bright_gauss_ds_3_to_gp_1248.write(bright_gauss_ds_3__lp_1_m_bright_gauss_ds_3_ld49__p__0_rp__c____bright_gauss_ds_3_ld50_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_blur_3_to_gp_620_ld306_bright_gauss_ds_3_0_bright_gauss_ds_3_ld50_bright_gauss_ds_3_ld54_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_blur_3_to_gp_620, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_3_to_gp_1248, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_3_to_gp_4852) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_blur_3_to_gp_620_ld306_bright_gauss_ds_3_0_bright_gauss_ds_3_ld50_bright_gauss_ds_3_ld54__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_3_FIFO_buf304_cache bright_gauss_blur_3_FIFO_buf304;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_3_cache bright_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 132] : 0 <= d1 <= 134 and 0 <= d2 <= 134; load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 140] : 0 <= d1 <= 134 and 0 <= d2 <= 134; load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 125] : 0 <= d1 <= 268 and 0 <= d2 <= 268; bright_gauss_ds_3_update_0_sm736_01097[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 131] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
//   { load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 132] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-132 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 140] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-140 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 125] : 0 <= d1 <= 268 and 0 <= d2 <= 268 }
// Condition for load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-125 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { bright_gauss_ds_3_update_0_sm736_01097[d0 = 0, d1, d2] -> [0, 14 + 8d1, 14 + 8d2, 131] : 0 <= d1 <= 134 and 0 <= d2 <= 134 }
// Condition for bright_gauss_ds_3_update_0_sm736_01097(((((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0) && (((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-131 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1086 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, i3] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086 and 131 <= i3 <= 132; [0, i1, i2, 140] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086; [0, i1, i2, 125] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1086 and 14 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1086; i1++) {
	    for (int i2 = 14; i2 <= 1086; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_bright_gauss_blur_3_FIFO_buf304307_sm640_0905(bright_gauss_blur_3_to_gp_620 /* buf name */, bright_gauss_blur_3_FIFO_buf304, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          bright_gauss_ds_3_update_0_sm736_01097(bright_gauss_blur_3_FIFO_buf304 /* buf name */, bright_gauss_ds_3, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_bright_gauss_ds_3_to_gp_485255_sm759_01131(bright_gauss_ds_3 /* buf name */, bright_gauss_ds_3_to_gp_4852, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 8 = 0 and (2 + i2) mod 8 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 8*floor((2 + i2)/8) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 8*floor((2 + i1)/8) = 0 }
	        if ((((((-2 + -1*i2 + (8*(((2 + 1*i2)) >> 3)))) == 0) && (((-2 + -1*i1 + (8*(((2 + 1*i1)) >> 3)))) == 0)))) {
	          load_to_bright_gauss_ds_3_to_gp_124851_sm760_01109(bright_gauss_ds_3 /* buf name */, bright_gauss_ds_3_to_gp_1248, 0, ((-2 + (1*(((2 + 1*i1)) >> 3)))), ((-2 + (1*(((2 + 1*i2)) >> 3)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_FIFO_buf292295_sm651_0927(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_to_gp_78, bright_FIFO_buf292_cache& bright_FIFO_buf292, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_to_gp_78
	auto bright_to_gp_78__lp__lp_1_m_bright_to_gp_78_ld293__p__0_rp___p__7_rp__c_______lp_bright_to_gp_78_ld294__p__7_rp__value = bright_to_gp_78.read();
	// Produce: bright_FIFO_buf292
	bright_FIFO_buf292_load_to_bright_FIFO_buf292295_sm651_0927_write_bundle_write(/* arg names */bright_to_gp_78__lp__lp_1_m_bright_to_gp_78_ld293__p__0_rp___p__7_rp__c_______lp_bright_to_gp_78_ld294__p__7_rp__value, bright_FIFO_buf292, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763(bright_laplace_diff_0_cache& bright_laplace_diff_0, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_diff_0_to_gp_4556, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_0
	auto bright_laplace_diff_0__lp_1_m_bright_laplace_diff_0_ld57__p__0_rp__c____bright_laplace_diff_0_ld58_value = bright_laplace_diff_0_load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763_read_bundle_read(bright_laplace_diff_0/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_laplace_diff_0_to_gp_4556
	bright_laplace_diff_0_to_gp_4556.write(bright_laplace_diff_0__lp_1_m_bright_laplace_diff_0_ld57__p__0_rp__c____bright_laplace_diff_0_ld58_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_us_0_to_gp_768, bright_laplace_us_0_FIFO_buf352_cache& bright_laplace_us_0_FIFO_buf352, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_us_0_to_gp_768
	auto bright_laplace_us_0_to_gp_768__lp_1_m_bright_laplace_us_0_to_gp_768_ld353__p__0_rp__c____bright_laplace_us_0_to_gp_768_ld354_value = bright_laplace_us_0_to_gp_768.read();
	// Produce: bright_laplace_us_0_FIFO_buf352
	bright_laplace_us_0_FIFO_buf352_load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939_write_bundle_write(/* arg names */bright_laplace_us_0_to_gp_768__lp_1_m_bright_laplace_us_0_to_gp_768_ld353__p__0_rp__c____bright_laplace_us_0_to_gp_768_ld354_value, bright_laplace_us_0_FIFO_buf352, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_diff_0_update_0_sm749_01117(bright_FIFO_buf292_cache& bright_FIFO_buf292, bright_laplace_us_0_FIFO_buf352_cache& bright_laplace_us_0_FIFO_buf352, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_FIFO_buf292
	auto bright_FIFO_buf292_1_m__lp_1_m_bright_laplace_diff_0_1__p__0_rp___p__0_p_7_c_____1_m_bright_laplace_diff_0_0__p__0_p_7_value = bright_FIFO_buf292_bright_laplace_diff_0_update_0_sm749_01117_read_bundle_read(bright_FIFO_buf292/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_laplace_us_0_FIFO_buf352
	auto bright_laplace_us_0_FIFO_buf352_1_m__lp_1_m_bright_laplace_diff_0_1__p__0_rp___p__0_p_0_c_____1_m_bright_laplace_diff_0_0__p__0_p_0_value = bright_laplace_us_0_FIFO_buf352_bright_laplace_diff_0_update_0_sm749_01117_read_bundle_read(bright_laplace_us_0_FIFO_buf352/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_1(bright_FIFO_buf292_1_m__lp_1_m_bright_laplace_diff_0_1__p__0_rp___p__0_p_7_c_____1_m_bright_laplace_diff_0_0__p__0_p_7_value, bright_laplace_us_0_FIFO_buf352_1_m__lp_1_m_bright_laplace_diff_0_1__p__0_rp___p__0_p_0_c_____1_m_bright_laplace_diff_0_0__p__0_p_0_value);
	// Produce: bright_laplace_diff_0
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_sm749_01117_write_bundle_write(/* arg names */compute_result, bright_laplace_diff_0, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_laplace_diff_0_0_bright_laplace_diff_0_ld58_bright_laplace_us_0_to_gp_768_ld354_bright_to_gp_78_ld294_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_us_0_to_gp_768, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_to_gp_78, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_diff_0_to_gp_4556) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_laplace_diff_0_0_bright_laplace_diff_0_ld58_bright_laplace_us_0_to_gp_768_ld354_bright_to_gp_78_ld294__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_FIFO_buf292_cache bright_FIFO_buf292;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_0_cache bright_laplace_diff_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_0_FIFO_buf352_cache bright_laplace_us_0_FIFO_buf352;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 57] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; bright_laplace_diff_0_update_0_sm749_01117[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 59] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_bright_FIFO_buf292295_sm651_0927[d0 = 0, d1, d2] -> [0, 8 + d1, 7 + d2, 11] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079; load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 62] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
//   { load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 57] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939(((((-57 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { bright_laplace_diff_0_update_0_sm749_01117[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 59] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for bright_laplace_diff_0_update_0_sm749_01117(((((-59 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))
//   { load_to_bright_FIFO_buf292295_sm651_0927[d0 = 0, d1, d2] -> [0, 8 + d1, 7 + d2, 11] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_bright_FIFO_buf292295_sm651_0927(((((-11 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-7 + 1*i2)) >= 0) && (((1086 + -1*i2)) >= 0)))
//   { load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763[d0 = 0, d1, d2] -> [0, 8 + d1, 8 + d2, 62] : 0 <= d1 <= 1079 and 0 <= d2 <= 1079 }
// Condition for load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763(((((-62 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-8 + 1*i1)) >= 0) && (((1087 + -1*i1)) >= 0) && (((-8 + 1*i2)) >= 0) && (((1087 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 62] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 59] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 57] : 8 <= i1 <= 1087 and 8 <= i2 <= 1087; [0, i1, i2, 11] : 8 <= i1 <= 1087 and 7 <= i2 <= 1086 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 8; i1 <= 1087; i1++) {
	    for (int i2 = 7; i2 <= 1087; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : i2 <= 1086 }
	        // { [i0, i1, i2] : i2 <= 1086 }
	          // { [i0, i1, i2] : 1086 - i2 >= 0 }
	        if ((((((1086 + -1*i2)) >= 0)))) {
	          load_to_bright_FIFO_buf292295_sm651_0927(bright_to_gp_78 /* buf name */, bright_FIFO_buf292, 0, ((-8 + 1*i1)), ((-7 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i2 >= 8 }
	        // { [i0, i1, i2] : i2 >= 8 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-8 + 1*i2)) >= 0)))) {
	          load_to_bright_laplace_us_0_FIFO_buf352355_sm657_0939(bright_laplace_us_0_to_gp_768 /* buf name */, bright_laplace_us_0_FIFO_buf352, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i2 >= 8 }
	        // { [i0, i1, i2] : i2 >= 8 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-8 + 1*i2)) >= 0)))) {
	          bright_laplace_diff_0_update_0_sm749_01117(bright_FIFO_buf292 /* buf name */, bright_laplace_us_0_FIFO_buf352 /* buf name */, bright_laplace_diff_0, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	        // { [i0, i1, i2] : i2 >= 8 }
	        // { [i0, i1, i2] : i2 >= 8 }
	          // { [i0, i1, i2] : -8 + i2 >= 0 }
	        if ((((((-8 + 1*i2)) >= 0)))) {
	          load_to_bright_laplace_diff_0_to_gp_455659_sm569_0763(bright_laplace_diff_0 /* buf name */, bright_laplace_diff_0_to_gp_4556, 0, ((-8 + 1*i1)), ((-8 + 1*i2)));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_1_to_gp_832, bright_gauss_ds_1_FIFO_buf316_cache& bright_gauss_ds_1_FIFO_buf316, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1_to_gp_832
	auto bright_gauss_ds_1_to_gp_832__lp__lp_1_m_bright_gauss_ds_1_to_gp_832_ld317__p__0_rp___p__3_rp__c_______lp_bright_gauss_ds_1_to_gp_832_ld318__p__3_rp__value = bright_gauss_ds_1_to_gp_832.read();
	// Produce: bright_gauss_ds_1_FIFO_buf316
	bright_gauss_ds_1_FIFO_buf316_load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951_write_bundle_write(/* arg names */bright_gauss_ds_1_to_gp_832__lp__lp_1_m_bright_gauss_ds_1_to_gp_832_ld317__p__0_rp___p__3_rp__c_______lp_bright_gauss_ds_1_to_gp_832_ld318__p__3_rp__value, bright_gauss_ds_1_FIFO_buf316, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_us_1_to_gp_872, bright_laplace_us_1_FIFO_buf356_cache& bright_laplace_us_1_FIFO_buf356, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_us_1_to_gp_872
	auto bright_laplace_us_1_to_gp_872__lp_1_m_bright_laplace_us_1_to_gp_872_ld357__p__0_rp__c____bright_laplace_us_1_to_gp_872_ld358_value = bright_laplace_us_1_to_gp_872.read();
	// Produce: bright_laplace_us_1_FIFO_buf356
	bright_laplace_us_1_FIFO_buf356_load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909_write_bundle_write(/* arg names */bright_laplace_us_1_to_gp_872__lp_1_m_bright_laplace_us_1_to_gp_872_ld357__p__0_rp__c____bright_laplace_us_1_to_gp_872_ld358_value, bright_laplace_us_1_FIFO_buf356, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_diff_1_update_0_sm748_01115(bright_gauss_ds_1_FIFO_buf316_cache& bright_gauss_ds_1_FIFO_buf316, bright_laplace_us_1_FIFO_buf356_cache& bright_laplace_us_1_FIFO_buf356, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1_FIFO_buf316
	auto bright_gauss_ds_1_FIFO_buf316_1_m__lp_1_m_bright_laplace_diff_1_1__p__0_rp___p__0_p_3_c_____1_m_bright_laplace_diff_1_0__p__0_p_3_value = bright_gauss_ds_1_FIFO_buf316_bright_laplace_diff_1_update_0_sm748_01115_read_bundle_read(bright_gauss_ds_1_FIFO_buf316/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_laplace_us_1_FIFO_buf356
	auto bright_laplace_us_1_FIFO_buf356_1_m__lp_1_m_bright_laplace_diff_1_1__p__0_rp___p__0_p_0_c_____1_m_bright_laplace_diff_1_0__p__0_p_0_value = bright_laplace_us_1_FIFO_buf356_bright_laplace_diff_1_update_0_sm748_01115_read_bundle_read(bright_laplace_us_1_FIFO_buf356/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_1(bright_gauss_ds_1_FIFO_buf316_1_m__lp_1_m_bright_laplace_diff_1_1__p__0_rp___p__0_p_3_c_____1_m_bright_laplace_diff_1_0__p__0_p_3_value, bright_laplace_us_1_FIFO_buf356_1_m__lp_1_m_bright_laplace_diff_1_1__p__0_rp___p__0_p_0_c_____1_m_bright_laplace_diff_1_0__p__0_p_0_value);
	// Produce: bright_laplace_diff_1
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_sm748_01115_write_bundle_write(/* arg names */compute_result, bright_laplace_diff_1, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787(bright_laplace_diff_1_cache& bright_laplace_diff_1, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_diff_1_to_gp_4660, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_1
	auto bright_laplace_diff_1__lp_1_m_bright_laplace_diff_1_ld61__p__0_rp__c____bright_laplace_diff_1_ld62_value = bright_laplace_diff_1_load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787_read_bundle_read(bright_laplace_diff_1/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_laplace_diff_1_to_gp_4660
	bright_laplace_diff_1_to_gp_4660.write(bright_laplace_diff_1__lp_1_m_bright_laplace_diff_1_ld61__p__0_rp__c____bright_laplace_diff_1_ld62_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_ds_1_to_gp_832_ld318_bright_laplace_diff_1_0_bright_laplace_diff_1_ld62_bright_laplace_us_1_to_gp_872_ld358_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_1_to_gp_832, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_us_1_to_gp_872, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_diff_1_to_gp_4660) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_ds_1_to_gp_832_ld318_bright_laplace_diff_1_0_bright_laplace_diff_1_ld62_bright_laplace_us_1_to_gp_872_ld358__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_1_FIFO_buf316_cache bright_gauss_ds_1_FIFO_buf316;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_1_cache bright_laplace_diff_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_1_FIFO_buf356_cache bright_laplace_us_1_FIFO_buf356;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 126] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 152] : 0 <= d1 <= 539 and 0 <= d2 <= 539; load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 46] : 0 <= d1 <= 539 and 0 <= d2 <= 539; bright_laplace_diff_1_update_0_sm748_01115[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 143] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
//   { load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 126] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-126 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 152] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-152 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 46] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-46 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))
//   { bright_laplace_diff_1_update_0_sm748_01115[d0 = 0, d1, d2] -> [0, 10 + 2d1, 10 + 2d2, 143] : 0 <= d1 <= 539 and 0 <= d2 <= 539 }
// Condition for bright_laplace_diff_1_update_0_sm748_01115(((((-1*i1 + (2*(((1*i1)) >> 1)))) == 0) && (((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-143 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-10 + 1*i1)) >= 0) && (((1088 + -1*i1)) >= 0) && (((-10 + 1*i2)) >= 0) && (((1088 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 152] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 143] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 126] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088; [0, i1, i2, 46] : (i1) mod 2 = 0 and (i2) mod 2 = 0 and 10 <= i1 <= 1088 and 10 <= i2 <= 1088 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 10; i1 <= 1088; i1++) {
	    for (int i2 = 10; i2 <= 1088; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_bright_gauss_ds_1_FIFO_buf316319_sm663_0951(bright_gauss_ds_1_to_gp_832 /* buf name */, bright_gauss_ds_1_FIFO_buf316, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_bright_laplace_us_1_FIFO_buf356359_sm642_0909(bright_laplace_us_1_to_gp_872 /* buf name */, bright_laplace_us_1_FIFO_buf356, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          bright_laplace_diff_1_update_0_sm748_01115(bright_gauss_ds_1_FIFO_buf316 /* buf name */, bright_laplace_us_1_FIFO_buf356 /* buf name */, bright_laplace_diff_1, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	        // { [i0, i1, i2] : (i1) mod 2 = 0 and (i2) mod 2 = 0 }
	          // { [i0, i1, i2] : -i2 + 2*floor((i2)/2) = 0 }
	          // { [i0, i1, i2] : -i1 + 2*floor((i1)/2) = 0 }
	        if ((((((-1*i2 + (2*(((1*i2)) >> 1)))) == 0) && (((-1*i1 + (2*(((1*i1)) >> 1)))) == 0)))) {
	          load_to_bright_laplace_diff_1_to_gp_466063_sm581_0787(bright_laplace_diff_1 /* buf name */, bright_laplace_diff_1_to_gp_4660, 0, ((-5 + (1*(((1*i1)) >> 1)))), ((-5 + (1*(((1*i2)) >> 1)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Operation logic
inline void bright_laplace_diff_2_update_0_sm747_01113(bright_gauss_ds_2_FIFO_buf328_cache& bright_gauss_ds_2_FIFO_buf328, bright_laplace_us_2_FIFO_buf360_cache& bright_laplace_us_2_FIFO_buf360, bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2_FIFO_buf328
	auto bright_gauss_ds_2_FIFO_buf328_1_m__lp_1_m_bright_laplace_diff_2_1__p__0_rp___p__0_p_1_c_____1_m_bright_laplace_diff_2_0__p__0_p_1_value = bright_gauss_ds_2_FIFO_buf328_bright_laplace_diff_2_update_0_sm747_01113_read_bundle_read(bright_gauss_ds_2_FIFO_buf328/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_laplace_us_2_FIFO_buf360
	auto bright_laplace_us_2_FIFO_buf360_1_m__lp_1_m_bright_laplace_diff_2_1__p__0_rp___p__0_p_0_c_____1_m_bright_laplace_diff_2_0__p__0_p_0_value = bright_laplace_us_2_FIFO_buf360_bright_laplace_diff_2_update_0_sm747_01113_read_bundle_read(bright_laplace_us_2_FIFO_buf360/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_1(bright_gauss_ds_2_FIFO_buf328_1_m__lp_1_m_bright_laplace_diff_2_1__p__0_rp___p__0_p_1_c_____1_m_bright_laplace_diff_2_0__p__0_p_1_value, bright_laplace_us_2_FIFO_buf360_1_m__lp_1_m_bright_laplace_diff_2_1__p__0_rp___p__0_p_0_c_____1_m_bright_laplace_diff_2_0__p__0_p_0_value);
	// Produce: bright_laplace_diff_2
	bright_laplace_diff_2_bright_laplace_diff_2_update_0_sm747_01113_write_bundle_write(/* arg names */compute_result, bright_laplace_diff_2, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_gauss_ds_2_to_gp_944, bright_gauss_ds_2_FIFO_buf328_cache& bright_gauss_ds_2_FIFO_buf328, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2_to_gp_944
	auto bright_gauss_ds_2_to_gp_944__lp__lp_1_m_bright_gauss_ds_2_to_gp_944_ld329__p__0_rp___p__1_rp__c_______lp_bright_gauss_ds_2_to_gp_944_ld330__p__1_rp__value = bright_gauss_ds_2_to_gp_944.read();
	// Produce: bright_gauss_ds_2_FIFO_buf328
	bright_gauss_ds_2_FIFO_buf328_load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913_write_bundle_write(/* arg names */bright_gauss_ds_2_to_gp_944__lp__lp_1_m_bright_gauss_ds_2_to_gp_944_ld329__p__0_rp___p__1_rp__c_______lp_bright_gauss_ds_2_to_gp_944_ld330__p__1_rp__value, bright_gauss_ds_2_FIFO_buf328, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923(HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_us_2_to_gp_976, bright_laplace_us_2_FIFO_buf360_cache& bright_laplace_us_2_FIFO_buf360, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_us_2_to_gp_976
	auto bright_laplace_us_2_to_gp_976__lp_1_m_bright_laplace_us_2_to_gp_976_ld361__p__0_rp__c____bright_laplace_us_2_to_gp_976_ld362_value = bright_laplace_us_2_to_gp_976.read();
	// Produce: bright_laplace_us_2_FIFO_buf360
	bright_laplace_us_2_FIFO_buf360_load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923_write_bundle_write(/* arg names */bright_laplace_us_2_to_gp_976__lp_1_m_bright_laplace_us_2_to_gp_976_ld361__p__0_rp__c____bright_laplace_us_2_to_gp_976_ld362_value, bright_laplace_us_2_FIFO_buf360, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791(bright_laplace_diff_2_cache& bright_laplace_diff_2, HWStream<hw_uint<16> >& /* buffer_args num ports = 1 */bright_laplace_diff_2_to_gp_4764, int d0, int d1, int d2) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_2
	auto bright_laplace_diff_2__lp_1_m_bright_laplace_diff_2_ld65__p__0_rp__c____bright_laplace_diff_2_ld66_value = bright_laplace_diff_2_load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791_read_bundle_read(bright_laplace_diff_2/* source_delay */, d0, d1, d2, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Produce: bright_laplace_diff_2_to_gp_4764
	bright_laplace_diff_2_to_gp_4764.write(bright_laplace_diff_2__lp_1_m_bright_laplace_diff_2_ld65__p__0_rp__c____bright_laplace_diff_2_ld66_value);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void Extracted_bright_gauss_ds_2_to_gp_944_ld330_bright_laplace_diff_2_0_bright_laplace_diff_2_ld66_bright_laplace_us_2_to_gp_976_ld362_(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_gauss_ds_2_to_gp_944, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_us_2_to_gp_976, HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */bright_laplace_diff_2_to_gp_4764) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("Extracted_bright_gauss_ds_2_to_gp_944_ld330_bright_laplace_diff_2_0_bright_laplace_diff_2_ld66_bright_laplace_us_2_to_gp_976_ld362__debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_2_FIFO_buf328_cache bright_gauss_ds_2_FIFO_buf328;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_2_cache bright_laplace_diff_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_2_FIFO_buf360_cache bright_laplace_us_2_FIFO_buf360;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 173] : 0 <= d1 <= 269 and 0 <= d2 <= 269; bright_laplace_diff_2_update_0_sm747_01113[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 168] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 101] : 0 <= d1 <= 269 and 0 <= d2 <= 269; load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 166] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
//   { load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 173] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-173 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { bright_laplace_diff_2_update_0_sm747_01113[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 168] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for bright_laplace_diff_2_update_0_sm747_01113(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-168 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 101] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-101 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))
//   { load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923[d0 = 0, d1, d2] -> [0, 14 + 4d1, 14 + 4d2, 166] : 0 <= d1 <= 269 and 0 <= d2 <= 269 }
// Condition for load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923(((((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0) && (((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-166 + 1*i3)) == 0) && (((1*i0)) == 0) && (((-14 + 1*i1)) >= 0) && (((1090 + -1*i1)) >= 0) && (((-14 + 1*i2)) >= 0) && (((1090 + -1*i2)) >= 0)))

	// time range: { [0, i1, i2, 173] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 168] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 166] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090; [0, i1, i2, 101] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 and 14 <= i1 <= 1090 and 14 <= i2 <= 1090 }
	// # sets: 1
	int i0 = 0;
	  for (int i1 = 14; i1 <= 1090; i1++) {
	    for (int i2 = 14; i2 <= 1090; i2++) {
	#pragma HLS pipeline II=1
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_bright_gauss_ds_2_FIFO_buf328331_sm644_0913(bright_gauss_ds_2_to_gp_944 /* buf name */, bright_gauss_ds_2_FIFO_buf328, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_bright_laplace_us_2_FIFO_buf360363_sm649_0923(bright_laplace_us_2_to_gp_976 /* buf name */, bright_laplace_us_2_FIFO_buf360, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          bright_laplace_diff_2_update_0_sm747_01113(bright_gauss_ds_2_FIFO_buf328 /* buf name */, bright_laplace_us_2_FIFO_buf360 /* buf name */, bright_laplace_diff_2, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	        // { [i0, i1, i2] : (2 + i1) mod 4 = 0 and (2 + i2) mod 4 = 0 }
	          // { [i0, i1, i2] : -2 - i2 + 4*floor((2 + i2)/4) = 0 }
	          // { [i0, i1, i2] : -2 - i1 + 4*floor((2 + i1)/4) = 0 }
	        if ((((((-2 + -1*i2 + (4*(((2 + 1*i2)) >> 2)))) == 0) && (((-2 + -1*i1 + (4*(((2 + 1*i1)) >> 2)))) == 0)))) {
	          load_to_bright_laplace_diff_2_to_gp_476467_sm583_0791(bright_laplace_diff_2 /* buf name */, bright_laplace_diff_2_to_gp_4764, 0, ((-4 + (1*(((2 + 1*i1)) >> 2)))), ((-4 + (1*(((2 + 1*i2)) >> 2)))));
	        }
	    }
	  }
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

// Driver function
void sef_1_opt_250(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */in_off_chip, HWStream<hw_uint<16> >& /* get_args num ports = 1 */sef_1) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("sef_1_opt_250_debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__

#ifdef __VIVADO_SYNTH__
#pragma HLS dataflow
#endif //__VIVADO_SYNTH__

  HWStream< hw_uint<16> > in_to_gp_0276;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=in_to_gp_0276.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_to_gp_10;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_to_gp_10.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_to_gp_134;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_to_gp_134.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_to_gp_78;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_to_gp_78.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_gauss_blur_1_to_gp_412;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_gauss_blur_1_to_gp_412.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_gauss_ds_1_to_gp_1024;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_gauss_ds_1_to_gp_1024.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_laplace_us_0_to_gp_768;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_laplace_us_0_to_gp_768.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_gauss_ds_2_to_gp_1136;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_gauss_ds_2_to_gp_1136.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_laplace_us_1_to_gp_872;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_laplace_us_1_to_gp_872.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_gauss_ds_3_to_gp_1248;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_gauss_ds_3_to_gp_1248.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_laplace_us_2_to_gp_976;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_laplace_us_2_to_gp_976.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_weights_to_gp_1480;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_weights_to_gp_1480.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_weights_normed_to_gp_1584;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_weights_normed_to_gp_1584.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_weights_normed_to_gp_4588;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_weights_normed_to_gp_4588.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_weights_normed_gauss_blur_1_to_gp_1892;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_weights_normed_gauss_blur_1_to_gp_1892.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_weights_normed_gauss_ds_1_to_gp_16104;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_weights_normed_gauss_ds_1_to_gp_16104.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_weights_normed_gauss_blur_2_to_gp_1996;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_weights_normed_gauss_blur_2_to_gp_1996.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_weights_normed_gauss_ds_2_to_gp_17112;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_weights_normed_gauss_ds_2_to_gp_17112.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_weights_normed_gauss_blur_3_to_gp_20100;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_weights_normed_gauss_blur_3_to_gp_20100.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_weights_normed_gauss_ds_1_to_gp_46108;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_weights_normed_gauss_ds_1_to_gp_46108.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_weights_normed_gauss_ds_2_to_gp_47116;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_weights_normed_gauss_ds_2_to_gp_47116.values depth=251
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_gauss_ds_1_to_gp_228;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_gauss_ds_1_to_gp_228.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_gauss_blur_2_to_gp_516;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_gauss_blur_2_to_gp_516.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_weights_normed_gauss_ds_3_to_gp_48120;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_weights_normed_gauss_ds_3_to_gp_48120.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > in_to_gp_21280;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=in_to_gp_21280.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_to_gp_22124;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_to_gp_22124.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_to_gp_28128;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_to_gp_28128.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_to_gp_34132;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_to_gp_34132.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_gauss_blur_1_to_gp_25136;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_gauss_blur_1_to_gp_25136.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_gauss_ds_1_to_gp_23148;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_gauss_ds_1_to_gp_23148.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_gauss_blur_2_to_gp_26140;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_gauss_blur_2_to_gp_26140.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_gauss_ds_2_to_gp_24160;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_gauss_ds_2_to_gp_24160.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_gauss_blur_3_to_gp_27144;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_gauss_blur_3_to_gp_27144.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_gauss_ds_1_to_gp_29152;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_gauss_ds_1_to_gp_29152.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_gauss_ds_1_to_gp_31156;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_gauss_ds_1_to_gp_31156.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_gauss_ds_2_to_gp_30164;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_gauss_ds_2_to_gp_30164.values depth=521
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_gauss_ds_2_to_gp_32168;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_gauss_ds_2_to_gp_32168.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_gauss_ds_3_to_gp_33172;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_gauss_ds_3_to_gp_33172.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_gauss_ds_3_to_gp_48176;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_gauss_ds_3_to_gp_48176.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_laplace_us_0_to_gp_28192;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_laplace_us_0_to_gp_28192.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_laplace_diff_0_to_gp_45180;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_laplace_diff_0_to_gp_45180.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_laplace_us_1_to_gp_29196;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_laplace_us_1_to_gp_29196.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_laplace_diff_1_to_gp_46184;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_laplace_diff_1_to_gp_46184.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_gauss_ds_2_to_gp_340;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_gauss_ds_2_to_gp_340.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_gauss_blur_3_to_gp_620;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_gauss_blur_3_to_gp_620.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_laplace_us_2_to_gp_30200;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_laplace_us_2_to_gp_30200.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_laplace_diff_2_to_gp_47188;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_laplace_diff_2_to_gp_47188.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_weights_to_gp_35204;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_weights_to_gp_35204.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_weights_normed_to_gp_36208;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_weights_normed_to_gp_36208.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_weights_normed_to_gp_45212;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_weights_normed_to_gp_45212.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_weights_normed_gauss_blur_1_to_gp_39216;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_weights_normed_gauss_blur_1_to_gp_39216.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_weights_normed_gauss_ds_1_to_gp_37228;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_weights_normed_gauss_ds_1_to_gp_37228.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_weights_normed_gauss_blur_2_to_gp_40220;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_weights_normed_gauss_blur_2_to_gp_40220.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_weights_normed_gauss_ds_2_to_gp_38236;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_weights_normed_gauss_ds_2_to_gp_38236.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_weights_normed_gauss_blur_3_to_gp_41224;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_weights_normed_gauss_blur_3_to_gp_41224.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_weights_normed_gauss_ds_1_to_gp_46232;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_weights_normed_gauss_ds_1_to_gp_46232.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_gauss_ds_1_to_gp_832;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_gauss_ds_1_to_gp_832.values depth=251
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_weights_normed_gauss_ds_2_to_gp_47240;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_weights_normed_gauss_ds_2_to_gp_47240.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > dark_weights_normed_gauss_ds_3_to_gp_48244;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=dark_weights_normed_gauss_ds_3_to_gp_48244.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > final_merged_1_to_gp_42252;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=final_merged_1_to_gp_42252.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > fused_level_0_to_gp_42260;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=fused_level_0_to_gp_42260.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > final_merged_0_to_gp_50248;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=final_merged_0_to_gp_50248.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > final_merged_2_to_gp_43256;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=final_merged_2_to_gp_43256.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > fused_level_1_to_gp_43264;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=fused_level_1_to_gp_43264.values depth=1330
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > fused_level_2_to_gp_44268;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=fused_level_2_to_gp_44268.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > fused_level_3_to_gp_44272;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=fused_level_3_to_gp_44272.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_laplace_diff_0_to_gp_4556;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_laplace_diff_0_to_gp_4556.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_laplace_diff_1_to_gp_4660;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_laplace_diff_1_to_gp_4660.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_laplace_diff_2_to_gp_4764;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_laplace_diff_2_to_gp_4764.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_gauss_ds_3_to_gp_4852;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_gauss_ds_3_to_gp_4852.values depth=250
#endif //__VIVADO_SYNTH__
  HWStream< hw_uint<16> > bright_gauss_ds_2_to_gp_944;
#ifdef __VIVADO_SYNTH__
#pragma HLS stream variable=bright_gauss_ds_2_to_gp_944.values depth=520
#endif //__VIVADO_SYNTH__


  Extracted_in_0_in_ld278_in_ld282_(in_off_chip, in_to_gp_0276, in_to_gp_21280);
  Extracted_bright_0_bright_ld10_bright_ld2_bright_ld6_in_to_gp_0276_ld562_(in_to_gp_0276, bright_to_gp_10, bright_to_gp_134, bright_to_gp_78);
  Extracted_bright_gauss_blur_1_0_bright_gauss_blur_1_ld14_bright_to_gp_10_ld286_(bright_to_gp_10, bright_gauss_blur_1_to_gp_412);
  Extracted_bright_to_gp_134_ld290_bright_weights_0_bright_weights_ld82_(bright_to_gp_134, bright_weights_to_gp_1480);
  Extracted_bright_weights_normed_0_bright_weights_normed_ld86_bright_weights_normed_ld90_bright_weights_to_gp_1480_ld366_(bright_weights_to_gp_1480, bright_weights_normed_to_gp_1584, bright_weights_normed_to_gp_4588);
  Extracted_bright_weights_normed_gauss_blur_1_0_bright_weights_normed_gauss_blur_1_ld94_bright_weights_normed_to_gp_1584_ld370_(bright_weights_normed_to_gp_1584, bright_weights_normed_gauss_blur_1_to_gp_1892);
  Extracted_bright_weights_normed_gauss_blur_1_to_gp_1892_ld378_bright_weights_normed_gauss_ds_1_0_bright_weights_normed_gauss_ds_1_ld106_bright_weights_normed_gauss_ds_1_ld110_(bright_weights_normed_gauss_blur_1_to_gp_1892, bright_weights_normed_gauss_ds_1_to_gp_16104, bright_weights_normed_gauss_ds_1_to_gp_46108);
  Extracted_dark_0_dark_ld126_dark_ld130_dark_ld134_in_to_gp_21280_ld566_(in_to_gp_21280, dark_to_gp_22124, dark_to_gp_28128, dark_to_gp_34132);
  Extracted_dark_gauss_blur_1_0_dark_gauss_blur_1_ld138_dark_to_gp_22124_ld410_(dark_to_gp_22124, dark_gauss_blur_1_to_gp_25136);
  Extracted_dark_gauss_blur_1_to_gp_25136_ld422_dark_gauss_ds_1_0_dark_gauss_ds_1_ld150_dark_gauss_ds_1_ld154_dark_gauss_ds_1_ld158_(dark_gauss_blur_1_to_gp_25136, dark_gauss_ds_1_to_gp_23148, dark_gauss_ds_1_to_gp_29152, dark_gauss_ds_1_to_gp_31156);
  Extracted_dark_gauss_ds_1_to_gp_31156_ld442_dark_laplace_us_0_0_dark_laplace_us_0_ld194_(dark_gauss_ds_1_to_gp_31156, dark_laplace_us_0_to_gp_28192);
  Extracted_dark_to_gp_34132_ld418_dark_weights_0_dark_weights_ld206_(dark_to_gp_34132, dark_weights_to_gp_35204);
  Extracted_dark_weights_normed_0_dark_weights_normed_ld210_dark_weights_normed_ld214_dark_weights_to_gp_35204_ld490_(dark_weights_to_gp_35204, dark_weights_normed_to_gp_36208, dark_weights_normed_to_gp_45212);
  Extracted_dark_weights_normed_gauss_blur_1_0_dark_weights_normed_gauss_blur_1_ld218_dark_weights_normed_to_gp_36208_ld494_(dark_weights_normed_to_gp_36208, dark_weights_normed_gauss_blur_1_to_gp_39216);
  Extracted_dark_weights_normed_gauss_blur_1_to_gp_39216_ld502_dark_weights_normed_gauss_ds_1_0_dark_weights_normed_gauss_ds_1_ld230_dark_weights_normed_gauss_ds_1_ld234_(dark_weights_normed_gauss_blur_1_to_gp_39216, dark_weights_normed_gauss_ds_1_to_gp_37228, dark_weights_normed_gauss_ds_1_to_gp_46232);
  Extracted_bright_gauss_blur_1_to_gp_412_ld298_bright_gauss_ds_1_0_bright_gauss_ds_1_ld26_bright_gauss_ds_1_ld30_bright_gauss_ds_1_ld34_(bright_gauss_blur_1_to_gp_412, bright_gauss_ds_1_to_gp_1024, bright_gauss_ds_1_to_gp_228, bright_gauss_ds_1_to_gp_832);
  Extracted_bright_gauss_ds_1_to_gp_1024_ld310_bright_laplace_us_0_0_bright_laplace_us_0_ld70_(bright_gauss_ds_1_to_gp_1024, bright_laplace_us_0_to_gp_768);
  Extracted_bright_weights_normed_gauss_blur_2_0_bright_weights_normed_gauss_blur_2_ld98_bright_weights_normed_gauss_ds_1_to_gp_16104_ld390_(bright_weights_normed_gauss_ds_1_to_gp_16104, bright_weights_normed_gauss_blur_2_to_gp_1996);
  Extracted_bright_weights_normed_gauss_blur_2_to_gp_1996_ld382_bright_weights_normed_gauss_ds_2_0_bright_weights_normed_gauss_ds_2_ld114_bright_weights_normed_gauss_ds_2_ld118_(bright_weights_normed_gauss_blur_2_to_gp_1996, bright_weights_normed_gauss_ds_2_to_gp_17112, bright_weights_normed_gauss_ds_2_to_gp_47116);
  Extracted_bright_gauss_blur_2_0_bright_gauss_blur_2_ld18_bright_gauss_ds_1_to_gp_228_ld314_(bright_gauss_ds_1_to_gp_228, bright_gauss_blur_2_to_gp_516);
  Extracted_dark_gauss_blur_2_0_dark_gauss_blur_2_ld142_dark_gauss_ds_1_to_gp_23148_ld434_(dark_gauss_ds_1_to_gp_23148, dark_gauss_blur_2_to_gp_26140);
  Extracted_dark_gauss_blur_2_to_gp_26140_ld426_dark_gauss_ds_2_0_dark_gauss_ds_2_ld162_dark_gauss_ds_2_ld166_dark_gauss_ds_2_ld170_(dark_gauss_blur_2_to_gp_26140, dark_gauss_ds_2_to_gp_24160, dark_gauss_ds_2_to_gp_30164, dark_gauss_ds_2_to_gp_32168);
  Extracted_dark_laplace_diff_0_0_dark_laplace_diff_0_ld182_dark_laplace_us_0_to_gp_28192_ld478_dark_to_gp_28128_ld414_(dark_laplace_us_0_to_gp_28192, dark_to_gp_28128, dark_laplace_diff_0_to_gp_45180);
  Extracted_dark_gauss_ds_2_to_gp_32168_ld454_dark_laplace_us_1_0_dark_laplace_us_1_ld198_(dark_gauss_ds_2_to_gp_32168, dark_laplace_us_1_to_gp_29196);
  Extracted_dark_weights_normed_gauss_blur_2_0_dark_weights_normed_gauss_blur_2_ld222_dark_weights_normed_gauss_ds_1_to_gp_37228_ld514_(dark_weights_normed_gauss_ds_1_to_gp_37228, dark_weights_normed_gauss_blur_2_to_gp_40220);
  Extracted_dark_weights_normed_gauss_blur_2_to_gp_40220_ld506_dark_weights_normed_gauss_ds_2_0_dark_weights_normed_gauss_ds_2_ld238_dark_weights_normed_gauss_ds_2_ld242_(dark_weights_normed_gauss_blur_2_to_gp_40220, dark_weights_normed_gauss_ds_2_to_gp_38236, dark_weights_normed_gauss_ds_2_to_gp_47240);
  Extracted_bright_gauss_blur_2_to_gp_516_ld302_bright_gauss_ds_2_0_bright_gauss_ds_2_ld38_bright_gauss_ds_2_ld42_bright_gauss_ds_2_ld46_(bright_gauss_blur_2_to_gp_516, bright_gauss_ds_2_to_gp_1136, bright_gauss_ds_2_to_gp_340, bright_gauss_ds_2_to_gp_944);
  Extracted_bright_laplace_diff_0_0_bright_laplace_diff_0_ld58_bright_laplace_us_0_to_gp_768_ld354_bright_to_gp_78_ld294_(bright_laplace_us_0_to_gp_768, bright_to_gp_78, bright_laplace_diff_0_to_gp_4556);
  Extracted_bright_gauss_ds_2_to_gp_1136_ld322_bright_laplace_us_1_0_bright_laplace_us_1_ld74_(bright_gauss_ds_2_to_gp_1136, bright_laplace_us_1_to_gp_872);
  Extracted_bright_weights_normed_gauss_blur_3_0_bright_weights_normed_gauss_blur_3_ld102_bright_weights_normed_gauss_ds_2_to_gp_17112_ld398_(bright_weights_normed_gauss_ds_2_to_gp_17112, bright_weights_normed_gauss_blur_3_to_gp_20100);
  Extracted_bright_weights_normed_gauss_blur_3_to_gp_20100_ld386_bright_weights_normed_gauss_ds_3_0_bright_weights_normed_gauss_ds_3_ld122_(bright_weights_normed_gauss_blur_3_to_gp_20100, bright_weights_normed_gauss_ds_3_to_gp_48120);
  Extracted_dark_gauss_blur_3_0_dark_gauss_blur_3_ld146_dark_gauss_ds_2_to_gp_24160_ld446_(dark_gauss_ds_2_to_gp_24160, dark_gauss_blur_3_to_gp_27144);
  Extracted_dark_gauss_blur_3_to_gp_27144_ld430_dark_gauss_ds_3_0_dark_gauss_ds_3_ld174_dark_gauss_ds_3_ld178_(dark_gauss_blur_3_to_gp_27144, dark_gauss_ds_3_to_gp_33172, dark_gauss_ds_3_to_gp_48176);
  Extracted_dark_gauss_ds_1_to_gp_29152_ld438_dark_laplace_diff_1_0_dark_laplace_diff_1_ld186_dark_laplace_us_1_to_gp_29196_ld482_(dark_gauss_ds_1_to_gp_29152, dark_laplace_us_1_to_gp_29196, dark_laplace_diff_1_to_gp_46184);
  Extracted_bright_gauss_blur_3_0_bright_gauss_blur_3_ld22_bright_gauss_ds_2_to_gp_340_ld326_(bright_gauss_ds_2_to_gp_340, bright_gauss_blur_3_to_gp_620);
  Extracted_dark_gauss_ds_3_to_gp_33172_ld458_dark_laplace_us_2_0_dark_laplace_us_2_ld202_(dark_gauss_ds_3_to_gp_33172, dark_laplace_us_2_to_gp_30200);
  Extracted_dark_weights_normed_gauss_blur_3_0_dark_weights_normed_gauss_blur_3_ld226_dark_weights_normed_gauss_ds_2_to_gp_38236_ld522_(dark_weights_normed_gauss_ds_2_to_gp_38236, dark_weights_normed_gauss_blur_3_to_gp_41224);
  Extracted_dark_weights_normed_gauss_blur_3_to_gp_41224_ld510_dark_weights_normed_gauss_ds_3_0_dark_weights_normed_gauss_ds_3_ld246_(dark_weights_normed_gauss_blur_3_to_gp_41224, dark_weights_normed_gauss_ds_3_to_gp_48244);
  Extracted_bright_laplace_diff_0_to_gp_4556_ld342_bright_weights_normed_to_gp_4588_ld374_dark_laplace_diff_0_to_gp_45180_ld466_dark_weights_normed_to_gp_45212_ld498_fused_level_0_0_fused_level_0_ld262_(bright_laplace_diff_0_to_gp_4556, bright_weights_normed_to_gp_4588, dark_laplace_diff_0_to_gp_45180, dark_weights_normed_to_gp_45212, fused_level_0_to_gp_42260);
  Extracted_bright_gauss_blur_3_to_gp_620_ld306_bright_gauss_ds_3_0_bright_gauss_ds_3_ld50_bright_gauss_ds_3_ld54_(bright_gauss_blur_3_to_gp_620, bright_gauss_ds_3_to_gp_1248, bright_gauss_ds_3_to_gp_4852);
  Extracted_bright_gauss_ds_1_to_gp_832_ld318_bright_laplace_diff_1_0_bright_laplace_diff_1_ld62_bright_laplace_us_1_to_gp_872_ld358_(bright_gauss_ds_1_to_gp_832, bright_laplace_us_1_to_gp_872, bright_laplace_diff_1_to_gp_4660);
  Extracted_bright_gauss_ds_3_to_gp_1248_ld334_bright_laplace_us_2_0_bright_laplace_us_2_ld78_(bright_gauss_ds_3_to_gp_1248, bright_laplace_us_2_to_gp_976);
  Extracted_dark_gauss_ds_2_to_gp_30164_ld450_dark_laplace_diff_2_0_dark_laplace_diff_2_ld190_dark_laplace_us_2_to_gp_30200_ld486_(dark_gauss_ds_2_to_gp_30164, dark_laplace_us_2_to_gp_30200, dark_laplace_diff_2_to_gp_47188);
  Extracted_bright_laplace_diff_1_to_gp_4660_ld346_bright_weights_normed_gauss_ds_1_to_gp_46108_ld394_dark_laplace_diff_1_to_gp_46184_ld470_dark_weights_normed_gauss_ds_1_to_gp_46232_ld518_fused_level_1_0_fused_level_1_ld266_(bright_laplace_diff_1_to_gp_4660, bright_weights_normed_gauss_ds_1_to_gp_46108, dark_laplace_diff_1_to_gp_46184, dark_weights_normed_gauss_ds_1_to_gp_46232, fused_level_1_to_gp_43264);
  Extracted_bright_gauss_ds_3_to_gp_4852_ld338_bright_weights_normed_gauss_ds_3_to_gp_48120_ld406_dark_gauss_ds_3_to_gp_48176_ld462_dark_weights_normed_gauss_ds_3_to_gp_48244_ld530_fused_level_3_0_fused_level_3_ld274_(bright_gauss_ds_3_to_gp_4852, bright_weights_normed_gauss_ds_3_to_gp_48120, dark_gauss_ds_3_to_gp_48176, dark_weights_normed_gauss_ds_3_to_gp_48244, fused_level_3_to_gp_44272);
  Extracted_bright_gauss_ds_2_to_gp_944_ld330_bright_laplace_diff_2_0_bright_laplace_diff_2_ld66_bright_laplace_us_2_to_gp_976_ld362_(bright_gauss_ds_2_to_gp_944, bright_laplace_us_2_to_gp_976, bright_laplace_diff_2_to_gp_4764);
  Extracted_bright_laplace_diff_2_to_gp_4764_ld350_bright_weights_normed_gauss_ds_2_to_gp_47116_ld402_dark_laplace_diff_2_to_gp_47188_ld474_dark_weights_normed_gauss_ds_2_to_gp_47240_ld526_fused_level_2_0_fused_level_2_ld270_(bright_laplace_diff_2_to_gp_4764, bright_weights_normed_gauss_ds_2_to_gp_47116, dark_laplace_diff_2_to_gp_47188, dark_weights_normed_gauss_ds_2_to_gp_47240, fused_level_2_to_gp_44268);
  Extracted_final_merged_2_0_final_merged_2_ld258_fused_level_2_to_gp_44268_ld554_fused_level_3_to_gp_44272_ld558_(fused_level_2_to_gp_44268, fused_level_3_to_gp_44272, final_merged_2_to_gp_43256);
  Extracted_final_merged_1_0_final_merged_1_ld254_final_merged_2_to_gp_43256_ld542_fused_level_1_to_gp_43264_ld550_(final_merged_2_to_gp_43256, fused_level_1_to_gp_43264, final_merged_1_to_gp_42252);
  Extracted_final_merged_0_0_final_merged_0_ld250_final_merged_1_to_gp_42252_ld538_fused_level_0_to_gp_42260_ld546_(final_merged_1_to_gp_42252, fused_level_0_to_gp_42260, final_merged_0_to_gp_50248);
  Extracted_final_merged_0_to_gp_50248_ld534_sef_1_0_(final_merged_0_to_gp_50248, sef_1);

#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

void sef_1_opt_250_wrapper(HWStream<hw_uint<16> >& /* no bundle get_args num ports = 1 */in_off_chip, HWStream<hw_uint<16> >& /* get_args num ports = 1 */sef_1, const int num_epochs) {

  for (int epoch = 0; epoch < num_epochs; epoch++) {
    sef_1_opt_250(in_off_chip, sef_1);
  }
}
#ifdef __VIVADO_SYNTH__
  // { in_update_0_sm711_01047[root = 0, in_0, in_1] -> in_off_chip[in_1, in_0] : 0 <= in_0 <= 1086 and 0 <= in_1 <= 1086 }
const int in_update_0_sm711_01047_read_pipe0_num_transfers = 1181569;
  // { sef_1_update_0_sm757_01127[root = 0, sef_1_0, sef_1_1] -> sef_1[sef_1_1, sef_1_0] : 0 <= sef_1_0 <= 1079 and 0 <= sef_1_1 <= 1079 }
const int sef_1_update_0_sm757_01127_write_pipe0_num_transfers = 1166400;


extern "C" {

void sef_1_opt_250_accel(hw_uint<16>* in_update_0_sm711_01047_read_pipe0, hw_uint<16>* sef_1_update_0_sm757_01127_write_pipe0, const int size) { 
#pragma HLS dataflow
#pragma HLS INTERFACE m_axi port = in_update_0_sm711_01047_read_pipe0 offset = slave depth = 65536 bundle = gmem0
#pragma HLS INTERFACE m_axi port = sef_1_update_0_sm757_01127_write_pipe0 offset = slave depth = 65536 bundle = gmem1

#pragma HLS INTERFACE s_axilite port = in_update_0_sm711_01047_read_pipe0 bundle = control
#pragma HLS INTERFACE s_axilite port = sef_1_update_0_sm757_01127_write_pipe0 bundle = control
#pragma HLS INTERFACE s_axilite port = size bundle = control
#pragma HLS INTERFACE s_axilite port = return bundle = control


  // Pipeline # 0
  static HWStream<hw_uint<16> > in_update_0_sm711_01047_read_pipe0_channel;
  static HWStream<hw_uint<16> > sef_1_update_0_sm757_01127_write_pipe0_channel;

  burst_read<16>(in_update_0_sm711_01047_read_pipe0, in_update_0_sm711_01047_read_pipe0_channel, in_update_0_sm711_01047_read_pipe0_num_transfers*size);

  sef_1_opt_250_wrapper(in_update_0_sm711_01047_read_pipe0_channel, sef_1_update_0_sm757_01127_write_pipe0_channel, size);

  burst_write<16>(sef_1_update_0_sm757_01127_write_pipe0, sef_1_update_0_sm757_01127_write_pipe0_channel, sef_1_update_0_sm757_01127_write_pipe0_num_transfers*size);
}

}
extern "C" {

void sef_1_opt_250_rdai(HWStream<hw_uint<16> >& in_update_0_sm711_01047_read_pipe0, HWStream<hw_uint<16> >&  sef_1_update_0_sm757_01127_write_pipe0) { 
#pragma HLS dataflow
#pragma HLS INTERFACE axis register port = in_update_0_sm711_01047_read_pipe0
#pragma HLS INTERFACE axis register port = sef_1_update_0_sm757_01127_write_pipe0

#pragma HLS INTERFACE ap_ctrl_none port = return


  // Pipeline # 0

  sef_1_opt_250(in_update_0_sm711_01047_read_pipe0, sef_1_update_0_sm757_01127_write_pipe0);

}

}
#endif //__VIVADO_SYNTH__

