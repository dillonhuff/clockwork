start: 19
end: 90
indent: "\t"
context: '{  :  }'
schedule: '{ domain: "{ S_3[]; S_0[]; S_2[]; S_1[] }", child: { sequence: [ { filter:
  "{ S_0[] }" }, { filter: "{ S_1[] }" }, { filter: "{ S_2[] }" }, { filter: "{ S_3[]
  }" } ] } }'
arrays:
- context: '{  :  }'
  extent: '{ b[] }'
  element_type: int
  element_size: 4
  declared: 1
  exposed: 1
- context: '{  :  }'
  extent: '{ a[i0] : i0 >= 0 }'
  element_type: int
  element_size: 4
statements:
- line: 4
  domain: '{ S_0[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_0[] -> b[] }'
        index: '{ S_0[] -> b[] }'
        reference: __pet_ref_0
        kill: 1
- line: 4
  domain: '{ S_1[] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_1[] -> b[] }'
        reference: __pet_ref_1
        read: 0
        write: 1
      - type: int
        value: 5
- line: 5
  domain: '{ S_2[] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_2[] -> a[(0)] }'
        reference: __pet_ref_2
        read: 0
        write: 1
      - type: access
        index: '{ S_2[] -> [(5)] }'
        reference: __pet_ref_3
        read: 1
        write: 0
- line: 6
  domain: '{ S_3[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_3[] -> b[] }'
        index: '{ S_3[] -> b[] }'
        reference: __pet_ref_4
        kill: 1
