start: 22
end: 45
indent: "\t"
context: '{  :  }'
schedule: '{ domain: "{ S_0[t] : t >= 0; S_1[] }", child: { sequence: [ { filter:
  "{ S_0[t] }", child: { schedule: "L_0[{ S_0[t] -> [(t)] }]" } }, { filter: "{ S_1[]
  }" } ] } }'
arrays:
- context: '{  :  }'
  extent: '{ a[] }'
  element_type: int
  element_size: 4
statements:
- line: 6
  domain: '{ S_0[t] : t >= 0 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_0[t] -> a[] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: int
        value: 5
- line: -1
  domain: '{ S_1[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_1[] -> a[] }'
        index: '{ S_1[] -> a[] }'
        reference: __pet_ref_1
        kill: 1
