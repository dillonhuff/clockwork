start: 40
end: 146
indent: "\t"
context: '{  :  }'
schedule: '{ domain: "{ S_0[]; S_5[]; S_2[t = 0]; S_6[]; S_1[t = 0] }", child: { sequence:
  [ { filter: "{ S_0[] }" }, { filter: "{ S_2[t]; S_1[t] }", child: { schedule: "L_0[{
  S_1[t] -> [(t)]; S_2[t] -> [(t)] }]", child: { sequence: [ { filter: "{ S_1[t] }"
  }, { filter: "{ S_2[t] }" } ] } } }, { filter: "{ S_5[]; S_6[] }", child: { set:
  [ { filter: "{ S_5[] }" }, { filter: "{ S_6[] }" } ] } } ] } }'
arrays:
- context: '{  :  }'
  extent: '{ __pet_test_0[t = 0] }'
  value_bounds: '{ [i0] : 0 <= i0 <= 1 }'
  element_type: int
  element_size: 4
  uniquely_defined: 1
- context: '{  :  }'
  extent: '{ a[i0] : 0 <= i0 <= 99 }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ i[] }'
  element_type: int
  element_size: 4
statements:
- line: 8
  domain: '{ S_0[] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_0[] -> i[] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: call
        name: f
- line: 8
  domain: '{ [S_1[t = 0] -> [__pet_test_0 = 1]] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_1[t] -> __pet_test_0[(0)] }'
        reference: __pet_ref_2
        read: 0
        write: 1
      - type: op
        operation: <
        arguments:
        - type: access
          index: '{ S_1[t] -> i[] }'
          reference: __pet_ref_3
          read: 1
          write: 0
        - type: int
          value: 100
  arguments:
  - type: access
    index: '{ S_1[t] -> __pet_test_0[(0 : 1 = 0)] }'
    reference: __pet_ref_1
    read: 1
    write: 0
- line: 9
  domain: '{ [S_2[t = 0] -> [__pet_test_0 = 1]] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ [S_2[t] -> [i1]] -> a[((i1) : i1 >= 0)] }'
        reference: __pet_ref_6
        read: 0
        write: 1
        arguments:
        - type: access
          index: '{ S_2[t] -> i[] }'
          reference: __pet_ref_5
          read: 1
          write: 0
      - type: int
        value: 0
  arguments:
  - type: access
    index: '{ S_2[t] -> __pet_test_0[(0)] }'
    reference: __pet_ref_4
    read: 1
    write: 0
- line: 12
  domain: '{ [S_3[t] -> [__pet_test_0]] : 1 = 0 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ [S_3[t] -> [i1]] -> a[(0 : 1 = 0)] }'
        reference: __pet_ref_9
        read: 0
        write: 1
        arguments:
        - type: access
          index: '{ S_3[t] -> i[] }'
          reference: __pet_ref_8
          read: 1
          write: 0
      - type: int
        value: 1
  arguments:
  - type: access
    index: '{ S_3[t] -> __pet_test_0[(0 : 1 = 0)] }'
    reference: __pet_ref_7
    read: 1
    write: 0
- line: 8
  domain: '{ [S_4[t] -> [__pet_test_0]] : 1 = 0 }'
  body:
    type: expression
    expr:
      type: op
      operation: +=
      arguments:
      - type: access
        index: '{ S_4[t] -> i[] }'
        reference: __pet_ref_11
        read: 0
        write: 1
      - type: int
        value: 1
  arguments:
  - type: access
    index: '{ S_4[t] -> __pet_test_0[(0 : 1 = 0)] }'
    reference: __pet_ref_10
    read: 1
    write: 0
- line: -1
  domain: '{ S_5[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_5[] -> i[] }'
        index: '{ S_5[] -> i[] }'
        reference: __pet_ref_12
        kill: 1
- line: -1
  domain: '{ S_6[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_6[] -> a[o0] : 0 <= o0 <= 99 }'
        index: '{ S_6[] -> a[] }'
        depth: 1
        reference: __pet_ref_13
        kill: 1
implications:
- satisfied: 1
  extension: '{ __pet_test_0[t] -> __pet_test_0[t'' = 0] : t >= 0 }'
