start: 59
end: 206
indent: "\t"
context: '{  :  }'
schedule: '{ domain: "{ S_3[i] : 0 <= i <= 9; S_10[]; S_0[]; S_11[]; S_6[i, j] : 0
  <= i <= 9 and 0 <= j <= 9; S_2[i] : 0 <= i <= 9; S_8[]; S_7[i] : 0 <= i <= 9; S_9[];
  S_4[i, j] : 0 <= i <= 9 and 0 <= j <= 9; S_5[i, j] : 0 <= i <= 9 and 0 <= j <= 9;
  S_1[] }", child: { sequence: [ { filter: "{ S_0[] }" }, { filter: "{ S_1[] }" },
  { filter: "{ S_3[i]; S_6[i, j]; S_2[i]; S_7[i]; S_4[i, j]; S_5[i, j] }", child:
  { schedule: "L_0[{ S_4[i, j] -> [(i)]; S_3[i] -> [(i)]; S_6[i, j] -> [(i)]; S_2[i]
  -> [(i)]; S_5[i, j] -> [(i)]; S_7[i] -> [(i)] }]", child: { sequence: [ { filter:
  "{ S_2[i] }" }, { filter: "{ S_3[i] }" }, { filter: "{ S_6[i, j]; S_5[i, j]; S_4[i,
  j] }", child: { schedule: "L_1[{ S_5[i, j] -> [(j)]; S_4[i, j] -> [(j)]; S_6[i,
  j] -> [(j)] }]", child: { sequence: [ { filter: "{ S_4[i, j] }" }, { filter: "{
  S_5[i, j] }" }, { filter: "{ S_6[i, j] }" } ] } } }, { filter: "{ S_7[i] }" } ]
  } } }, { filter: "{ S_10[]; S_11[]; S_8[]; S_9[] }", child: { set: [ { filter: "{
  S_8[] }" }, { filter: "{ S_9[] }" }, { filter: "{ S_10[] }" }, { filter: "{ S_11[]
  }" } ] } } ] } }'
arrays:
- context: '{  :  }'
  extent: '{ __pet_test_0[i] : 0 <= i <= 9 }'
  value_bounds: '{ [i0] : 0 <= i0 <= 1 }'
  element_type: int
  element_size: 4
  uniquely_defined: 1
- context: '{  :  }'
  extent: '{ N[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ a[i0] : 0 <= i0 <= 9 }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ i[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ j[] }'
  element_type: int
  element_size: 4
statements:
- line: 10
  domain: '{ S_0[] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_0[] -> N[] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: int
        value: 5
- line: 11
  domain: '{ S_1[] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_1[] -> i[] }'
        reference: __pet_ref_1
        read: 0
        write: 1
      - type: int
        value: 0
- line: 12
  domain: '{ S_2[i] : 0 <= i <= 9 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_2[i] -> __pet_test_0[(i)] }'
        reference: __pet_ref_2
        read: 0
        write: 1
      - type: op
        operation: <=
        arguments:
        - type: access
          index: '{ S_2[i] -> N[] }'
          reference: __pet_ref_3
          read: 1
          write: 0
        - type: int
          value: 4
- line: 13
  domain: '{ [S_3[i] -> [__pet_test_0 = 1]] : 0 <= i <= 9 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_3[i] -> j[] }'
        reference: __pet_ref_5
        read: 0
        write: 1
      - type: int
        value: 0
  arguments:
  - type: access
    index: '{ S_3[i] -> __pet_test_0[(i)] }'
    reference: __pet_ref_4
    read: 1
    write: 0
- line: 14
  domain: '{ [S_4[i, j] -> [__pet_test_0 = 1]] : 0 <= i <= 9 and 0 <= j <= 9 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_4[i, j] -> a[(j)] }'
        reference: __pet_ref_7
        read: 0
        write: 1
      - type: op
        operation: +
        arguments:
        - type: access
          index: '{ S_4[i, j] -> [(5 + j)] }'
          reference: __pet_ref_8
          read: 1
          write: 0
        - type: access
          index: '{ S_4[i, j] -> N[] }'
          reference: __pet_ref_9
          read: 1
          write: 0
  arguments:
  - type: access
    index: '{ S_4[i, j] -> __pet_test_0[(i)] }'
    reference: __pet_ref_6
    read: 1
    write: 0
- line: 15
  domain: '{ [S_5[i, j] -> [__pet_test_0 = 1]] : 0 <= i <= 9 and 0 <= j <= 9 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_5[i, j] -> N[] }'
        reference: __pet_ref_11
        read: 0
        write: 1
      - type: call
        name: f
  arguments:
  - type: access
    index: '{ S_5[i, j] -> __pet_test_0[(i)] }'
    reference: __pet_ref_10
    read: 1
    write: 0
- line: 13
  domain: '{ [S_6[i, j] -> [__pet_test_0 = 1]] : 0 <= i <= 9 and 0 <= j <= 9 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_6[i, j] -> j[] }'
        reference: __pet_ref_13
        read: 0
        write: 1
      - type: access
        index: '{ S_6[i, j] -> [(1 + j)] }'
        reference: __pet_ref_14
        read: 1
        write: 0
  arguments:
  - type: access
    index: '{ S_6[i, j] -> __pet_test_0[(i)] }'
    reference: __pet_ref_12
    read: 1
    write: 0
- line: 11
  domain: '{ S_7[i] : 0 <= i <= 9 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_7[i] -> i[] }'
        reference: __pet_ref_15
        read: 0
        write: 1
      - type: access
        index: '{ S_7[i] -> [(1 + i)] }'
        reference: __pet_ref_16
        read: 1
        write: 0
- line: -1
  domain: '{ S_8[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_8[] -> i[] }'
        index: '{ S_8[] -> i[] }'
        reference: __pet_ref_17
        kill: 1
- line: -1
  domain: '{ S_9[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_9[] -> j[] }'
        index: '{ S_9[] -> j[] }'
        reference: __pet_ref_18
        kill: 1
- line: -1
  domain: '{ S_10[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_10[] -> a[o0] : 0 <= o0 <= 9 }'
        index: '{ S_10[] -> a[] }'
        depth: 1
        reference: __pet_ref_19
        kill: 1
- line: -1
  domain: '{ S_11[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_11[] -> N[] }'
        index: '{ S_11[] -> N[] }'
        reference: __pet_ref_20
        kill: 1
