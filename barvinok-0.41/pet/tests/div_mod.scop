start: 30
end: 232
indent: "\t"
context: '{  :  }'
schedule: '{ domain: "{ S_3[i = 1]; S_5[i] : -10 <= i <= 9; S_0[]; S_7[]; S_2[i =
  2]; S_6[]; S_4[i = -1]; S_1[i = -2] }", child: { sequence: [ { filter: "{ S_0[]
  }" }, { filter: "{ S_3[i]; S_5[i]; S_2[i]; S_4[i]; S_1[i] }", child: { schedule:
  "L_0[{ S_4[i] -> [(i)]; S_2[i] -> [(i)]; S_5[i] -> [(i)]; S_3[i] -> [(i)]; S_1[i]
  -> [(i)] }]", child: { sequence: [ { filter: "{ S_1[i] }" }, { filter: "{ S_2[i]
  }" }, { filter: "{ S_3[i] }" }, { filter: "{ S_4[i] }" }, { filter: "{ S_5[i] }"
  } ] } } }, { filter: "{ S_7[]; S_6[] }", child: { set: [ { filter: "{ S_6[] }" },
  { filter: "{ S_7[] }" } ] } } ] } }'
arrays:
- context: '{  :  }'
  extent: '{ a[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ i[] }'
  element_type: int
  element_size: 4
statements:
- line: 7
  domain: '{ S_0[] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_0[] -> i[] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: op
        operation: '-'
        arguments:
        - type: int
          value: 10
- line: 9
  domain: '{ S_1[i = -2] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_1[i] -> a[] }'
        reference: __pet_ref_1
        read: 0
        write: 1
      - type: op
        operation: /
        arguments:
        - type: int
          value: 5
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 2
- line: 11
  domain: '{ S_2[i = 2] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_2[i] -> a[] }'
        reference: __pet_ref_2
        read: 0
        write: 1
      - type: op
        operation: /
        arguments:
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 5
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 2
- line: 13
  domain: '{ S_3[i = 1] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_3[i] -> a[] }'
        reference: __pet_ref_3
        read: 0
        write: 1
      - type: op
        operation: '%'
        arguments:
        - type: int
          value: 5
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 2
- line: 15
  domain: '{ S_4[i = -1] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_4[i] -> a[] }'
        reference: __pet_ref_4
        read: 0
        write: 1
      - type: op
        operation: '%'
        arguments:
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 5
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 2
- line: 7
  domain: '{ S_5[i] : -10 <= i <= 9 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_5[i] -> i[] }'
        reference: __pet_ref_5
        read: 0
        write: 1
      - type: access
        index: '{ S_5[i] -> [(1 + i)] }'
        reference: __pet_ref_6
        read: 1
        write: 0
- line: -1
  domain: '{ S_6[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_6[] -> i[] }'
        index: '{ S_6[] -> i[] }'
        reference: __pet_ref_7
        kill: 1
- line: -1
  domain: '{ S_7[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_7[] -> a[] }'
        index: '{ S_7[] -> a[] }'
        reference: __pet_ref_8
        kill: 1
