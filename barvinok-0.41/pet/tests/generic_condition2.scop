start: 38
end: 144
indent: "\t"
context: '{  :  }'
schedule: '{ domain: "{ S_0[]; S_5[]; S_7[]; S_3[i, j] : 0 <= i <= 4 and j >= i and
  5*floor((2 - i)/5) <= -j; S_6[]; S_4[i] : 0 <= i <= 4; S_2[i, j] : 0 <= i <= 4 and
  j >= i and 5*floor((2 - i)/5) <= -j; S_1[i] : 0 <= i <= 4 }", child: { sequence:
  [ { filter: "{ S_0[] }" }, { filter: "{ S_3[i, j]; S_4[i]; S_2[i, j]; S_1[i] }",
  child: { schedule: "L_0[{ S_3[i, j] -> [(i)]; S_4[i] -> [(i)]; S_1[i] -> [(i)];
  S_2[i, j] -> [(i)] }]", child: { sequence: [ { filter: "{ S_1[i] }" }, { filter:
  "{ S_3[i, j]; S_2[i, j] }", child: { schedule: "L_1[{ S_3[i, j] -> [(j)]; S_2[i,
  j] -> [(j)] }]", child: { sequence: [ { filter: "{ S_2[i, j] }" }, { filter: "{
  S_3[i, j] }" } ] } } }, { filter: "{ S_4[i] }" } ] } } }, { filter: "{ S_5[]; S_7[];
  S_6[] }", child: { set: [ { filter: "{ S_5[] }" }, { filter: "{ S_6[] }" }, { filter:
  "{ S_7[] }" } ] } } ] } }'
arrays:
- context: '{  :  }'
  extent: '{ a[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ i[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ j[] }'
  element_type: int
  element_size: 4
statements:
- line: 7
  domain: '{ S_0[] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_0[] -> i[] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: int
        value: 0
- line: 8
  domain: '{ S_1[i] : 0 <= i <= 4 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_1[i] -> j[] }'
        reference: __pet_ref_1
        read: 0
        write: 1
      - type: access
        index: '{ S_1[i] -> [(i)] }'
        reference: __pet_ref_2
        read: 1
        write: 0
- line: 9
  domain: '{ S_2[i, j] : 0 <= i <= 4 and j >= i and 5*floor((2 - i)/5) <= -j }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_2[i, j] -> a[] }'
        reference: __pet_ref_3
        read: 0
        write: 1
      - type: int
        value: 5
- line: 8
  domain: '{ S_3[i, j] : 0 <= i <= 4 and j >= i and 5*floor((2 - i)/5) <= -j }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_3[i, j] -> j[] }'
        reference: __pet_ref_4
        read: 0
        write: 1
      - type: access
        index: '{ S_3[i, j] -> [(1 + j)] }'
        reference: __pet_ref_5
        read: 1
        write: 0
- line: 7
  domain: '{ S_4[i] : 0 <= i <= 4 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_4[i] -> i[] }'
        reference: __pet_ref_6
        read: 0
        write: 1
      - type: access
        index: '{ S_4[i] -> [(1 + i)] }'
        reference: __pet_ref_7
        read: 1
        write: 0
- line: -1
  domain: '{ S_5[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_5[] -> i[] }'
        index: '{ S_5[] -> i[] }'
        reference: __pet_ref_8
        kill: 1
- line: -1
  domain: '{ S_6[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_6[] -> j[] }'
        index: '{ S_6[] -> j[] }'
        reference: __pet_ref_9
        kill: 1
- line: -1
  domain: '{ S_7[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_7[] -> a[] }'
        index: '{ S_7[] -> a[] }'
        reference: __pet_ref_10
        kill: 1
