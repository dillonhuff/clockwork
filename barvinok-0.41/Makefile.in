# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@




VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = barvinok_count$(EXEEXT) barvinok_enumerate$(EXEEXT) \
	barvinok_enumerate_e$(EXEEXT) barvinok_ehrhart$(EXEEXT) \
	polytope_scan$(EXEEXT) iscc$(EXEEXT)
noinst_PROGRAMS = test$(EXEEXT) testlib$(EXEEXT) randomtest$(EXEEXT) \
	remove_redundant_equalities$(EXEEXT) barvinok_union$(EXEEXT) \
	polytope_volume$(EXEEXT) test_approx$(EXEEXT) \
	barvinok_summate$(EXEEXT) verify_lexsmaller$(EXEEXT) \
	polyhedron_sample$(EXEEXT) 4coins$(EXEEXT) lexmin$(EXEEXT) \
	@bv_cone_hilbert_basis@ cone_integer_hull$(EXEEXT) \
	polytope_lattice_width$(EXEEXT) \
	polyhedron_integer_hull$(EXEEXT) \
	vector_partition_chambers$(EXEEXT) semigroup_holes$(EXEEXT) \
	barvinok_bound$(EXEEXT) test_bound$(EXEEXT)
EXTRA_PROGRAMS = cone_hilbert_basis$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_cxx_gnucxx_hashmap.m4 \
	$(top_srcdir)/m4/ax_c___attribute__.m4 \
	$(top_srcdir)/m4/ax_check_ntl.m4 \
	$(top_srcdir)/m4/ax_create_pkgconfig_info.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/ax_detect_git_head.m4 \
	$(top_srcdir)/m4/ax_submodule.m4 \
	$(top_srcdir)/m4/ax_unordered_map.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(pkginclude_HEADERS) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libdep_a_AR = $(AR) $(ARFLAGS)
libdep_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libdep_a_OBJECTS = interface/libdep_a-all_barvinok.$(OBJEXT)
libdep_a_OBJECTS = $(am_libdep_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 = $(ISL_LA)
am__DEPENDENCIES_2 = $(POLYLIB_LA)
libbarvinok_la_DEPENDENCIES = @LTLIBOBJS@ $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(ZSOLVE_LA)
am__libbarvinok_la_SOURCES_DIST = barvinok/evalue.h barvinok/genfun.h \
	barvinok/util.h barvinok/barvinok.h NTL_QQ.cc \
	basis_reduction.c evalue.c genfun.cc util.c version.c \
	bernoulli.c bernoulli.h bfcounter.cc bfcounter.h binomial.c \
	binomial.h conversion.cc conversion.h counter.cc counter.h \
	decomposer.cc decomposer.h dpoly.cc dpoly.h euler.cc euler.h \
	evalue_isl.c genfun_constructor.cc genfun_constructor.h \
	hilbert.c hilbert.h hull.c hull.h ilp.c ilp.h \
	isl_aff_polylib.c isl_aff_polylib.h isl_map_polylib.c \
	isl_map_polylib.h isl_set_polylib.h isl_param_util.c \
	isl_param_util.h lattice_point.cc lattice_point.h \
	lattice_width.c lattice_width.h laurent.cc laurent.h \
	laurent_old.cc laurent_old.h normalization.c normalization.h \
	options.c param_polynomial.cc param_polynomial.h param_util.c \
	param_util.h polysign_cddf.cc polysign_cdd.cc polysign_glpk.c \
	polysign.c polysign_isl.c polysign_polylib.c polysign.h \
	power.h reduce_domain.c reduce_domain.h reducer.cc reducer.h \
	remove_equalities.h remove_equalities.c sample.c scale.c \
	scale.h scarf.cc section_array.h series.cc topcom.c topcom.h \
	summate.c summate.h vertex_cone.cc vertex_cone.h volume.c \
	volume.h mat_util.cc mat_util.h matrix_read.cc matrix_read.h \
	barvinok.cc barvinok_e.cc basis_reduction_cdd.cc initcdd.cc \
	basis_reduction_glpk.c
@USE_ZSOLVE_TRUE@am__objects_1 = hilbert.lo
@HAVE_CDDLIB_TRUE@am__objects_2 = polysign_cddf.lo polysign_cdd.lo
@HAVE_GLPK_TRUE@am__objects_3 = polysign_glpk.lo
@HAVE_TOPCOM_TRUE@am__objects_4 = topcom.lo
@HAVE_CDDLIB_TRUE@am__objects_5 = basis_reduction_cdd.lo initcdd.lo
@HAVE_GLPK_TRUE@am__objects_6 = basis_reduction_glpk.lo
am_libbarvinok_la_OBJECTS = NTL_QQ.lo basis_reduction.lo evalue.lo \
	genfun.lo util.lo version.lo bernoulli.lo bfcounter.lo \
	binomial.lo conversion.lo counter.lo decomposer.lo dpoly.lo \
	euler.lo evalue_isl.lo genfun_constructor.lo $(am__objects_1) \
	hull.lo ilp.lo isl_aff_polylib.lo isl_map_polylib.lo \
	isl_param_util.lo lattice_point.lo lattice_width.lo laurent.lo \
	laurent_old.lo normalization.lo options.lo param_polynomial.lo \
	param_util.lo $(am__objects_2) $(am__objects_3) polysign.lo \
	polysign_isl.lo polysign_polylib.lo reduce_domain.lo \
	reducer.lo remove_equalities.lo sample.lo scale.lo scarf.lo \
	series.lo $(am__objects_4) summate.lo vertex_cone.lo volume.lo \
	mat_util.lo matrix_read.lo barvinok.lo barvinok_e.lo \
	$(am__objects_5) $(am__objects_6)
libbarvinok_la_OBJECTS = $(am_libbarvinok_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libbarvinok_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libbarvinok_la_LDFLAGS) \
	$(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_4coins_OBJECTS = 4coins.$(OBJEXT)
4coins_OBJECTS = $(am_4coins_OBJECTS)
4coins_LDADD = $(LDADD)
4coins_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_barvinok_bound_OBJECTS = bound.$(OBJEXT) verify.$(OBJEXT)
barvinok_bound_OBJECTS = $(am_barvinok_bound_OBJECTS)
barvinok_bound_LDADD = $(LDADD)
barvinok_bound_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_barvinok_count_OBJECTS = barvinok_count.$(OBJEXT)
barvinok_count_OBJECTS = $(am_barvinok_count_OBJECTS)
barvinok_count_LDADD = $(LDADD)
barvinok_count_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am__barvinok_ehrhart_SOURCES_DIST = barvinok_ehrhart_options.c \
	barvinok_ehrhart_options.h barvinok_ehrhart.cc \
	evalue_convert_options.c evalue_convert.cc evalue_convert.h \
	fdstream.cc fdstream.h
@USE_FDSTREAM_TRUE@am__objects_7 = fdstream.$(OBJEXT)
am_barvinok_ehrhart_OBJECTS = barvinok_ehrhart_options.$(OBJEXT) \
	barvinok_ehrhart.$(OBJEXT) evalue_convert_options.$(OBJEXT) \
	evalue_convert.$(OBJEXT) $(am__objects_7)
barvinok_ehrhart_OBJECTS = $(am_barvinok_ehrhart_OBJECTS)
barvinok_ehrhart_LDADD = $(LDADD)
barvinok_ehrhart_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am__barvinok_enumerate_SOURCES_DIST = barvinok_enumerate_options.c \
	barvinok_enumerate_options.h barvinok_enumerate.cc \
	evalue_convert_options.c evalue_convert.cc evalue_convert.h \
	fdstream.cc fdstream.h skewed_genfun.cc skewed_genfun.h \
	verify.h verify.c verify_series.h verify_series.cc
am_barvinok_enumerate_OBJECTS = barvinok_enumerate_options.$(OBJEXT) \
	barvinok_enumerate.$(OBJEXT) evalue_convert_options.$(OBJEXT) \
	evalue_convert.$(OBJEXT) $(am__objects_7) \
	skewed_genfun.$(OBJEXT) verify.$(OBJEXT) \
	verify_series.$(OBJEXT)
barvinok_enumerate_OBJECTS = $(am_barvinok_enumerate_OBJECTS)
barvinok_enumerate_LDADD = $(LDADD)
barvinok_enumerate_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am__barvinok_enumerate_e_SOURCES_DIST =  \
	barvinok_enumerate_e_options.c barvinok_enumerate_e_options.h \
	barvinok_enumerate_e.cc evalue_convert_options.c \
	evalue_convert.cc evalue_convert.h fdstream.cc fdstream.h \
	skewed_genfun.cc skewed_genfun.h verify.h verify.c \
	verif_ehrhart.h verif_ehrhart.c verify_series.h \
	verify_series.cc omega_interface/Exit.cc \
	omega_interface/convert.h omega_interface/convert.cc \
	omega_interface/count.h omega_interface/count.cc
@USE_FDSTREAM_TRUE@am__objects_8 =  \
@USE_FDSTREAM_TRUE@	barvinok_enumerate_e-fdstream.$(OBJEXT)
@HAVE_OMEGA_TRUE@am__objects_9 = omega_interface/barvinok_enumerate_e-Exit.$(OBJEXT) \
@HAVE_OMEGA_TRUE@	omega_interface/barvinok_enumerate_e-convert.$(OBJEXT) \
@HAVE_OMEGA_TRUE@	omega_interface/barvinok_enumerate_e-count.$(OBJEXT)
am_barvinok_enumerate_e_OBJECTS =  \
	barvinok_enumerate_e-barvinok_enumerate_e_options.$(OBJEXT) \
	barvinok_enumerate_e-barvinok_enumerate_e.$(OBJEXT) \
	barvinok_enumerate_e-evalue_convert_options.$(OBJEXT) \
	barvinok_enumerate_e-evalue_convert.$(OBJEXT) $(am__objects_8) \
	barvinok_enumerate_e-skewed_genfun.$(OBJEXT) \
	barvinok_enumerate_e-verify.$(OBJEXT) \
	barvinok_enumerate_e-verif_ehrhart.$(OBJEXT) \
	barvinok_enumerate_e-verify_series.$(OBJEXT) $(am__objects_9)
barvinok_enumerate_e_OBJECTS = $(am_barvinok_enumerate_e_OBJECTS)
am__DEPENDENCIES_3 =
barvinok_enumerate_e_DEPENDENCIES = $(PARKER_LA) $(am__DEPENDENCIES_3) \
	libbarvinok.la $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
barvinok_enumerate_e_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(barvinok_enumerate_e_LDFLAGS) \
	$(LDFLAGS) -o $@
am_barvinok_summate_OBJECTS = barvinok_summate.$(OBJEXT) \
	verify.$(OBJEXT)
barvinok_summate_OBJECTS = $(am_barvinok_summate_OBJECTS)
barvinok_summate_LDADD = $(LDADD)
barvinok_summate_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_barvinok_union_OBJECTS = barvinok_union_options.$(OBJEXT) \
	barvinok_union.$(OBJEXT)
barvinok_union_OBJECTS = $(am_barvinok_union_OBJECTS)
barvinok_union_LDADD = $(LDADD)
barvinok_union_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
cone_hilbert_basis_SOURCES = cone_hilbert_basis.c
cone_hilbert_basis_OBJECTS = cone_hilbert_basis.$(OBJEXT)
cone_hilbert_basis_LDADD = $(LDADD)
cone_hilbert_basis_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
cone_integer_hull_SOURCES = cone_integer_hull.c
cone_integer_hull_OBJECTS = cone_integer_hull.$(OBJEXT)
cone_integer_hull_LDADD = $(LDADD)
cone_integer_hull_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_iscc_OBJECTS = iscc-isl_obj_list.$(OBJEXT) \
	iscc-isl_obj_str.$(OBJEXT) iscc-iscc.$(OBJEXT)
iscc_OBJECTS = $(am_iscc_OBJECTS)
am__DEPENDENCIES_4 = $(PET_LA)
iscc_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_lexmin_OBJECTS = lexmin_options.$(OBJEXT) lexmin.$(OBJEXT) \
	edomain.$(OBJEXT) evalue_util.$(OBJEXT) verify.$(OBJEXT)
lexmin_OBJECTS = $(am_lexmin_OBJECTS)
lexmin_LDADD = $(LDADD)
lexmin_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
polyhedron_integer_hull_SOURCES = polyhedron_integer_hull.c
polyhedron_integer_hull_OBJECTS = polyhedron_integer_hull.$(OBJEXT)
polyhedron_integer_hull_LDADD = $(LDADD)
polyhedron_integer_hull_DEPENDENCIES = libbarvinok.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
polyhedron_sample_SOURCES = polyhedron_sample.c
polyhedron_sample_OBJECTS = polyhedron_sample.$(OBJEXT)
polyhedron_sample_LDADD = $(LDADD)
polyhedron_sample_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
polytope_lattice_width_SOURCES = polytope_lattice_width.c
polytope_lattice_width_OBJECTS = polytope_lattice_width.$(OBJEXT)
polytope_lattice_width_LDADD = $(LDADD)
polytope_lattice_width_DEPENDENCIES = libbarvinok.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
polytope_scan_SOURCES = polytope_scan.c
polytope_scan_OBJECTS = polytope_scan.$(OBJEXT)
polytope_scan_LDADD = $(LDADD)
polytope_scan_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
polytope_volume_SOURCES = polytope_volume.c
polytope_volume_OBJECTS = polytope_volume.$(OBJEXT)
polytope_volume_LDADD = $(LDADD)
polytope_volume_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
randomtest_SOURCES = randomtest.c
randomtest_OBJECTS = randomtest.$(OBJEXT)
randomtest_LDADD = $(LDADD)
randomtest_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
remove_redundant_equalities_SOURCES = remove_redundant_equalities.c
remove_redundant_equalities_OBJECTS =  \
	remove_redundant_equalities.$(OBJEXT)
remove_redundant_equalities_LDADD = $(LDADD)
remove_redundant_equalities_DEPENDENCIES = libbarvinok.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_semigroup_holes_OBJECTS = semigroup_holes.$(OBJEXT)
semigroup_holes_OBJECTS = $(am_semigroup_holes_OBJECTS)
semigroup_holes_LDADD = $(LDADD)
semigroup_holes_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_OBJECTS = test.$(OBJEXT)
test_OBJECTS = $(am_test_OBJECTS)
test_LDADD = $(LDADD)
test_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_approx_OBJECTS = test_approx.$(OBJEXT) verify.$(OBJEXT)
test_approx_OBJECTS = $(am_test_approx_OBJECTS)
test_approx_LDADD = $(LDADD)
test_approx_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_bound_OBJECTS = test_bound.$(OBJEXT) verify.$(OBJEXT)
test_bound_OBJECTS = $(am_test_bound_OBJECTS)
test_bound_LDADD = $(LDADD)
test_bound_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_testlib_OBJECTS = evalue_read.$(OBJEXT) testlib.$(OBJEXT)
testlib_OBJECTS = $(am_testlib_OBJECTS)
testlib_LDADD = $(LDADD)
testlib_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
vector_partition_chambers_SOURCES = vector_partition_chambers.c
vector_partition_chambers_OBJECTS =  \
	vector_partition_chambers.$(OBJEXT)
vector_partition_chambers_LDADD = $(LDADD)
vector_partition_chambers_DEPENDENCIES = libbarvinok.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
verify_lexsmaller_SOURCES = verify_lexsmaller.c
verify_lexsmaller_OBJECTS = verify_lexsmaller.$(OBJEXT)
verify_lexsmaller_LDADD = $(LDADD)
verify_lexsmaller_DEPENDENCIES = libbarvinok.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libdep_a_SOURCES) $(libbarvinok_la_SOURCES) \
	$(EXTRA_libbarvinok_la_SOURCES) $(4coins_SOURCES) \
	$(barvinok_bound_SOURCES) $(EXTRA_barvinok_bound_SOURCES) \
	$(barvinok_count_SOURCES) $(barvinok_ehrhart_SOURCES) \
	$(barvinok_enumerate_SOURCES) \
	$(EXTRA_barvinok_enumerate_SOURCES) \
	$(barvinok_enumerate_e_SOURCES) \
	$(EXTRA_barvinok_enumerate_e_SOURCES) \
	$(barvinok_summate_SOURCES) $(EXTRA_barvinok_summate_SOURCES) \
	$(barvinok_union_SOURCES) cone_hilbert_basis.c \
	cone_integer_hull.c $(iscc_SOURCES) $(lexmin_SOURCES) \
	polyhedron_integer_hull.c polyhedron_sample.c \
	polytope_lattice_width.c polytope_scan.c polytope_volume.c \
	randomtest.c remove_redundant_equalities.c \
	$(semigroup_holes_SOURCES) $(test_SOURCES) \
	$(test_approx_SOURCES) $(test_bound_SOURCES) \
	$(EXTRA_test_bound_SOURCES) $(testlib_SOURCES) \
	vector_partition_chambers.c verify_lexsmaller.c
DIST_SOURCES = $(libdep_a_SOURCES) $(am__libbarvinok_la_SOURCES_DIST) \
	$(EXTRA_libbarvinok_la_SOURCES) $(4coins_SOURCES) \
	$(barvinok_bound_SOURCES) $(EXTRA_barvinok_bound_SOURCES) \
	$(barvinok_count_SOURCES) $(am__barvinok_ehrhart_SOURCES_DIST) \
	$(am__barvinok_enumerate_SOURCES_DIST) \
	$(EXTRA_barvinok_enumerate_SOURCES) \
	$(am__barvinok_enumerate_e_SOURCES_DIST) \
	$(EXTRA_barvinok_enumerate_e_SOURCES) \
	$(barvinok_summate_SOURCES) $(EXTRA_barvinok_summate_SOURCES) \
	$(barvinok_union_SOURCES) cone_hilbert_basis.c \
	cone_integer_hull.c $(iscc_SOURCES) $(lexmin_SOURCES) \
	polyhedron_integer_hull.c polyhedron_sample.c \
	polytope_lattice_width.c polytope_scan.c polytope_volume.c \
	randomtest.c remove_redundant_equalities.c \
	$(semigroup_holes_SOURCES) $(test_SOURCES) \
	$(test_approx_SOURCES) $(test_bound_SOURCES) \
	$(EXTRA_test_bound_SOURCES) $(testlib_SOURCES) \
	vector_partition_chambers.c verify_lexsmaller.c
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(nodist_pkginclude_HEADERS) $(pkginclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in AUTHORS \
	ChangeLog README compile config.guess config.sub depcomp \
	install-sh ltmain.sh missing mpz_divisible_p.c
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BV_LDFLAGS = @BV_LDFLAGS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GIT_HEAD = @GIT_HEAD@
GIT_HEAD_ID = @GIT_HEAD_ID@
GIT_HEAD_VERSION = @GIT_HEAD_VERSION@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISL_BUILDDIR = @ISL_BUILDDIR@
ISL_CFLAGS = @ISL_CFLAGS@
ISL_LIBS = @ISL_LIBS@
ISL_SRCDIR = @ISL_SRCDIR@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MONAPATH = @MONAPATH@
NM = @NM@
NMEDIT = @NMEDIT@
NTL_CPPFLAGS = @NTL_CPPFLAGS@
NTL_LDFLAGS = @NTL_LDFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OMEGA_CODEGEN_LIBS = @OMEGA_CODEGEN_LIBS@
OMEGA_CPPFLAGS = @OMEGA_CPPFLAGS@
OMEGA_LDFLAGS = @OMEGA_LDFLAGS@
OMEGA_LIBS = @OMEGA_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PET_BUILDDIR = @PET_BUILDDIR@
PET_CFLAGS = @PET_CFLAGS@
PET_LIBS = @PET_LIBS@
PKG_CONFIG = @PKG_CONFIG@
POINTS2TRIANGS = @POINTS2TRIANGS@
POLYLIB_CPPFLAGS = @POLYLIB_CPPFLAGS@
POLYLIB_LDFLAGS = @POLYLIB_LDFLAGS@
POLYLIB_LIBS = @POLYLIB_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
bv_cone_hilbert_basis = @bv_cone_hilbert_basis@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgconfig_libdir = @pkgconfig_libdir@
pkgconfig_libfile = @pkgconfig_libfile@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
versioninfo = @versioninfo@
@BUNDLED_POLYLIB_TRUE@MAYBE_POLYLIB = polylib
@BUNDLED_POLYLIB_TRUE@POLYLIB_LA = $(top_builddir)/polylib/libpolylibgmp.la
@BUNDLED_POLYLIB_TRUE@LOCAL_POLYLIB_LA = polylib/libpolylibgmp.la
@BUNDLED_ISL_TRUE@MAYBE_ISL = isl
@BUILD_ISL_TRUE@ISL_LA = $(ISL_BUILDDIR)/libisl.la
@BUNDLED_ISL_TRUE@ISL_LA = $(top_builddir)/isl/libisl.la
@BUNDLED_ISL_TRUE@LOCAL_ISL_LA = isl/libisl.la
@BUNDLED_PET_TRUE@MAYBE_PET = pet
@BUILD_PET_TRUE@PET_LA = $(PET_BUILDDIR)/libpet.la
@BUNDLED_PET_TRUE@PET_LA = $(top_builddir)/pet/libpet.la
@USE_ZSOLVE_TRUE@MAYBE_ZSOLVE = zsolve
@USE_PARKER_TRUE@MAYBE_PARKER = parker
SUBDIRS = $(MAYBE_POLYLIB) $(MAYBE_ISL) $(MAYBE_PET) \
		$(MAYBE_ZSOLVE) $(MAYBE_PARKER) . doc

DIST_SUBDIRS = $(MAYBE_POLYLIB) $(MAYBE_ISL) $(MAYBE_PET) \
		zsolve parker doc

AM_CPPFLAGS = @POLYLIB_CPPFLAGS@ \
	      @ISL_CFLAGS@ @NTL_CPPFLAGS@

AM_LDFLAGS = @POLYLIB_LDFLAGS@ @NTL_LDFLAGS@
LIB_ISL = $(ISL_LA) @ISL_LIBS@
LIB_PET = $(PET_LA) @PET_LIBS@
LIB_POLYLIB = $(POLYLIB_LA) @POLYLIB_LIBS@
lib_LTLIBRARIES = libbarvinok.la
pkginclude_HEADERS = \
    barvinok/NTL_QQ.h \
    barvinok/isl.h \
    barvinok/barvinok.h \
    barvinok/util.h \
    barvinok/evalue.h \
    barvinok/genfun.h \
    barvinok/options.h \
    barvinok/polylib.h \
    barvinok/sample.h \
    barvinok/basis_reduction.h

nodist_pkginclude_HEADERS = \
    barvinok/NTL.h \
    barvinok/set.h

LINK = $(CXXLINK)
@HAVE_CDDLIB_TRUE@BR_CDD = basis_reduction_cdd.cc initcdd.cc
@HAVE_CDDLIB_TRUE@POLYSIGN_CDD = polysign_cddf.cc polysign_cdd.cc
@HAVE_GLPK_TRUE@BR_GLPK = basis_reduction_glpk.c
@HAVE_GLPK_TRUE@POLYSIGN_GLPK = polysign_glpk.c
@HAVE_TOPCOM_TRUE@TOPCOM = topcom.c topcom.h
@USE_ZSOLVE_TRUE@HILBERT_C = hilbert.c
libbarvinok_la_SOURCES = \
    barvinok/evalue.h \
    barvinok/genfun.h \
    barvinok/util.h \
    barvinok/barvinok.h \
    NTL_QQ.cc \
    basis_reduction.c \
    evalue.c \
    genfun.cc \
    util.c \
    version.c \
    bernoulli.c \
    bernoulli.h \
    bfcounter.cc \
    bfcounter.h \
    binomial.c \
    binomial.h \
    conversion.cc \
    conversion.h \
    counter.cc \
    counter.h \
    decomposer.cc \
    decomposer.h \
    dpoly.cc \
    dpoly.h \
    euler.cc \
    euler.h \
    evalue_isl.c \
    genfun_constructor.cc \
    genfun_constructor.h \
    $(HILBERT_C) \
    hilbert.h \
    hull.c \
    hull.h \
    ilp.c \
    ilp.h \
    isl_aff_polylib.c \
    isl_aff_polylib.h \
    isl_map_polylib.c \
    isl_map_polylib.h \
    isl_set_polylib.h \
    isl_param_util.c \
    isl_param_util.h \
    lattice_point.cc \
    lattice_point.h \
    lattice_width.c \
    lattice_width.h \
    laurent.cc \
    laurent.h \
    laurent_old.cc \
    laurent_old.h \
    normalization.c \
    normalization.h \
    options.c \
    param_polynomial.cc \
    param_polynomial.h \
    param_util.c \
    param_util.h \
    $(POLYSIGN_CDD) \
    $(POLYSIGN_GLPK) \
    polysign.c \
    polysign_isl.c \
    polysign_polylib.c \
    polysign.h \
    power.h \
    reduce_domain.c \
    reduce_domain.h \
    reducer.cc \
    reducer.h \
    remove_equalities.h \
    remove_equalities.c \
    sample.c \
    scale.c \
    scale.h \
    scarf.cc \
    section_array.h \
    series.cc \
    $(TOPCOM) \
    summate.c \
    summate.h \
    vertex_cone.cc \
    vertex_cone.h \
    volume.c \
    volume.h \
    mat_util.cc \
    mat_util.h \
    matrix_read.cc \
    matrix_read.h \
    barvinok.cc \
    barvinok_e.cc \
    $(BR_CDD) \
    $(BR_GLPK)

EXTRA_libbarvinok_la_SOURCES = \
    basis_reduction_cdd.cc \
    basis_reduction_glpk.c \
    hilbert.c \
    polysign_cddf.cc \
    polysign_cdd.cc \
    polysign.c \
    initcdd.cc \
    initcdd.h \
    topcom.c \
    topcom.h

@USE_ZSOLVE_TRUE@ZSOLVE_LA = zsolve/libzsolve.la
libbarvinok_la_LIBADD = @LTLIBOBJS@ $(LIB_ISL) \
			     $(LIB_POLYLIB) $(ZSOLVE_LA)

libbarvinok_la_LDFLAGS = @BV_LDFLAGS@ -version-info @versioninfo@ \
				$(AM_LDFLAGS)

LDADD = libbarvinok.la $(LIB_ISL) $(LIB_POLYLIB)
test_SOURCES = \
	test.c

testlib_SOURCES = \
	evalue_read.c \
	evalue_read.h \
	testlib.cc

barvinok_count_SOURCES = barvinok_count.c
barvinok_ehrhart_SOURCES = \
	barvinok_ehrhart_options.c \
	barvinok_ehrhart_options.h \
	barvinok_ehrhart.cc \
	evalue_convert_options.c \
	evalue_convert.cc \
	evalue_convert.h \
	$(FDSTREAM)

barvinok_union_SOURCES = \
	barvinok_union_options.c \
	barvinok_union_options.h \
	barvinok_union.cc

@HAVE_OMEGA_FALSE@BEEO_SOURCES = 
@HAVE_OMEGA_TRUE@BEEO_SOURCES = \
@HAVE_OMEGA_TRUE@	omega_interface/Exit.cc \
@HAVE_OMEGA_TRUE@	omega_interface/convert.h \
@HAVE_OMEGA_TRUE@	omega_interface/convert.cc \
@HAVE_OMEGA_TRUE@	omega_interface/count.h \
@HAVE_OMEGA_TRUE@	omega_interface/count.cc

@USE_FDSTREAM_TRUE@FDSTREAM = fdstream.cc fdstream.h
barvinok_enumerate_SOURCES = \
	barvinok_enumerate_options.c \
	barvinok_enumerate_options.h \
	barvinok_enumerate.cc \
	evalue_convert_options.c \
	evalue_convert.cc \
	evalue_convert.h \
	$(FDSTREAM) \
	skewed_genfun.cc \
	skewed_genfun.h \
	verify.h \
	verify.c \
	verify_series.h \
	verify_series.cc

EXTRA_barvinok_enumerate_SOURCES = fdstream.cc fdstream.h
barvinok_enumerate_e_SOURCES = \
	barvinok_enumerate_e_options.c \
	barvinok_enumerate_e_options.h \
	barvinok_enumerate_e.cc \
	evalue_convert_options.c \
	evalue_convert.cc \
	evalue_convert.h \
	$(FDSTREAM) \
	skewed_genfun.cc \
	skewed_genfun.h \
	verify.h \
	verify.c \
	verif_ehrhart.h \
	verif_ehrhart.c \
	verify_series.h \
	verify_series.cc \
	$(BEEO_SOURCES)

EXTRA_barvinok_enumerate_e_SOURCES = fdstream.cc fdstream.h
@USE_PARKER_TRUE@MONA_LIBS = -ldfa -lbdd -lmem
@USE_PARKER_TRUE@PARKER_LA = parker/libparker.la
@USE_PARKER_TRUE@PARKERLDFLAGS = -L$(MONAPATH)/DFA -L$(MONAPATH)/BDD -L$(MONAPATH)/Mem
@USE_PARKER_TRUE@PARKERCPPFLAGS = -I$(MONAPATH)/Mem -I$(MONAPATH)/DFA -I$(MONAPATH)/BDD
barvinok_enumerate_e_CPPFLAGS = \
	$(PARKERCPPFLAGS) @OMEGA_CPPFLAGS@ $(AM_CPPFLAGS)

barvinok_enumerate_e_LDFLAGS = $(PARKERLDFLAGS) @OMEGA_LDFLAGS@ @LDFLAGS@
barvinok_enumerate_e_LDADD = \
	$(PARKER_LA) $(MONA_LIBS) @OMEGA_LIBS@ libbarvinok.la \
	$(LIB_ISL) $(LIB_POLYLIB)

barvinok_bound_SOURCES = \
	bound.c \
	verify.h \
	verify.c

EXTRA_barvinok_bound_SOURCES = fdstream.cc fdstream.h
barvinok_summate_SOURCES = \
	barvinok_summate.c \
	verify.h \
	verify.c

EXTRA_barvinok_summate_SOURCES = fdstream.cc fdstream.h
4coins_SOURCES = 4coins.cc
semigroup_holes_SOURCES = semigroup_holes.cc
lexmin_SOURCES = \
	lexmin_options.c \
	lexmin.h \
	lexmin.cc \
	edomain.cc \
	edomain.h \
	evalue_util.cc \
	evalue_util.h \
	verify.h \
	verify.c

test_approx_SOURCES = \
	test_approx.c \
	verify.h \
	verify.c

test_bound_SOURCES = \
	test_bound.c \
	verify.h \
	verify.c

EXTRA_test_bound_SOURCES = fdstream.cc fdstream.h
iscc_SOURCES = \
	isl_obj_list.h \
	isl_obj_list.c \
	isl_obj_str.h \
	isl_obj_str.c \
	iscc.c

iscc_CPPFLAGS = @PET_CFLAGS@ $(AM_CPPFLAGS)
iscc_LDADD = \
	libbarvinok.la $(LIB_PET) $(LIB_ISL) \
	$(LIB_POLYLIB)


# dummy library that captures the dependencies on all headers
# that are relevant for the bindings
noinst_LIBRARIES = libdep.a
libdep_a_CPPFLAGS = $(DEFAULT_INCLUDES) @ISL_CFLAGS@ -I"@ISL_SRCDIR@"
libdep_a_SOURCES = interface/all_barvinok.c
TESTFILES = $(shell find $(top_srcdir)/tests -type f ! -path '*CVS*')
CLEANFILES = \
	zsolve/graver \
	zsolve/hilbert \
	isl.py \
	version.h

DISTCLEANFILES = \
	barvinok-uninstalled.sh \
	barvinok-uninstalled.pc \
	barvinok.pc \
	barvinok.pc.in \
	barvinok/set.h \
	barvinok/NTL.h \
	interface/isl.py.top

EXTRA_DIST = \
    ChangeLog \
    $(TESTFILES) \
    latte2polylib.pl \
    NTL_5_3_2.patch \
    basis_reduction_templ.c \
    cdd94e-test \
    polysign_cdd_template.cc \
    barvinok/NTL.h.broken \
    barvinok/NTL.h.normal \
    barvinok/set.h.broken \
    barvinok/set.h.normal \
    config_post.h \
    doc/isl.tex \
    doc/Internal.tex \
    doc/applications.tex \
    doc/barvinok.tex \
    doc/polymake.tex \
    doc/reports.tex \
    doc/barvinok.bib \
    doc/barvinok.gdf \
    doc/chicago.bst \
    doc/chicago.sty \
    doc/glosstex.ist \
    doc/mydefs.sty \
    interface/all_barvinok.h \
    interface/isl.py.top.no_pet \
    interface/isl.py.top.pet \
    polymake/Makefile.in \
    polymake/README \
    polymake/autogen.sh \
    polymake/configure.in \
    polymake/convert.cc \
    polymake/convert.h \
    polymake/h_star_vector.cc \
    polymake/lattice_points.cc

ACLOCAL_AMFLAGS = -I m4
BEE_TESTDIRS = ehrhart_e ehrhart_e/scarf ehrhart_e/piplib
@HAVE_TOPCOM_TRUE@TOPCOM_CD = '--chamber-decomposition=topcom'
ISL_CD = '--chamber-decomposition=isl'
@HAVE_OMEGA_TRUE@SPEC_OMEGA = '--isl --omega'
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
interface/$(am__dirstamp):
	@$(MKDIR_P) interface
	@: > interface/$(am__dirstamp)
interface/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) interface/$(DEPDIR)
	@: > interface/$(DEPDIR)/$(am__dirstamp)
interface/libdep_a-all_barvinok.$(OBJEXT): interface/$(am__dirstamp) \
	interface/$(DEPDIR)/$(am__dirstamp)

libdep.a: $(libdep_a_OBJECTS) $(libdep_a_DEPENDENCIES) $(EXTRA_libdep_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libdep.a
	$(AM_V_AR)$(libdep_a_AR) libdep.a $(libdep_a_OBJECTS) $(libdep_a_LIBADD)
	$(AM_V_at)$(RANLIB) libdep.a

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libbarvinok.la: $(libbarvinok_la_OBJECTS) $(libbarvinok_la_DEPENDENCIES) $(EXTRA_libbarvinok_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libbarvinok_la_LINK) -rpath $(libdir) $(libbarvinok_la_OBJECTS) $(libbarvinok_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

4coins$(EXEEXT): $(4coins_OBJECTS) $(4coins_DEPENDENCIES) $(EXTRA_4coins_DEPENDENCIES) 
	@rm -f 4coins$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(4coins_OBJECTS) $(4coins_LDADD) $(LIBS)

barvinok_bound$(EXEEXT): $(barvinok_bound_OBJECTS) $(barvinok_bound_DEPENDENCIES) $(EXTRA_barvinok_bound_DEPENDENCIES) 
	@rm -f barvinok_bound$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(barvinok_bound_OBJECTS) $(barvinok_bound_LDADD) $(LIBS)

barvinok_count$(EXEEXT): $(barvinok_count_OBJECTS) $(barvinok_count_DEPENDENCIES) $(EXTRA_barvinok_count_DEPENDENCIES) 
	@rm -f barvinok_count$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(barvinok_count_OBJECTS) $(barvinok_count_LDADD) $(LIBS)

barvinok_ehrhart$(EXEEXT): $(barvinok_ehrhart_OBJECTS) $(barvinok_ehrhart_DEPENDENCIES) $(EXTRA_barvinok_ehrhart_DEPENDENCIES) 
	@rm -f barvinok_ehrhart$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(barvinok_ehrhart_OBJECTS) $(barvinok_ehrhart_LDADD) $(LIBS)

barvinok_enumerate$(EXEEXT): $(barvinok_enumerate_OBJECTS) $(barvinok_enumerate_DEPENDENCIES) $(EXTRA_barvinok_enumerate_DEPENDENCIES) 
	@rm -f barvinok_enumerate$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(barvinok_enumerate_OBJECTS) $(barvinok_enumerate_LDADD) $(LIBS)
omega_interface/$(am__dirstamp):
	@$(MKDIR_P) omega_interface
	@: > omega_interface/$(am__dirstamp)
omega_interface/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) omega_interface/$(DEPDIR)
	@: > omega_interface/$(DEPDIR)/$(am__dirstamp)
omega_interface/barvinok_enumerate_e-Exit.$(OBJEXT):  \
	omega_interface/$(am__dirstamp) \
	omega_interface/$(DEPDIR)/$(am__dirstamp)
omega_interface/barvinok_enumerate_e-convert.$(OBJEXT):  \
	omega_interface/$(am__dirstamp) \
	omega_interface/$(DEPDIR)/$(am__dirstamp)
omega_interface/barvinok_enumerate_e-count.$(OBJEXT):  \
	omega_interface/$(am__dirstamp) \
	omega_interface/$(DEPDIR)/$(am__dirstamp)

barvinok_enumerate_e$(EXEEXT): $(barvinok_enumerate_e_OBJECTS) $(barvinok_enumerate_e_DEPENDENCIES) $(EXTRA_barvinok_enumerate_e_DEPENDENCIES) 
	@rm -f barvinok_enumerate_e$(EXEEXT)
	$(AM_V_CXXLD)$(barvinok_enumerate_e_LINK) $(barvinok_enumerate_e_OBJECTS) $(barvinok_enumerate_e_LDADD) $(LIBS)

barvinok_summate$(EXEEXT): $(barvinok_summate_OBJECTS) $(barvinok_summate_DEPENDENCIES) $(EXTRA_barvinok_summate_DEPENDENCIES) 
	@rm -f barvinok_summate$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(barvinok_summate_OBJECTS) $(barvinok_summate_LDADD) $(LIBS)

barvinok_union$(EXEEXT): $(barvinok_union_OBJECTS) $(barvinok_union_DEPENDENCIES) $(EXTRA_barvinok_union_DEPENDENCIES) 
	@rm -f barvinok_union$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(barvinok_union_OBJECTS) $(barvinok_union_LDADD) $(LIBS)

cone_hilbert_basis$(EXEEXT): $(cone_hilbert_basis_OBJECTS) $(cone_hilbert_basis_DEPENDENCIES) $(EXTRA_cone_hilbert_basis_DEPENDENCIES) 
	@rm -f cone_hilbert_basis$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cone_hilbert_basis_OBJECTS) $(cone_hilbert_basis_LDADD) $(LIBS)

cone_integer_hull$(EXEEXT): $(cone_integer_hull_OBJECTS) $(cone_integer_hull_DEPENDENCIES) $(EXTRA_cone_integer_hull_DEPENDENCIES) 
	@rm -f cone_integer_hull$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cone_integer_hull_OBJECTS) $(cone_integer_hull_LDADD) $(LIBS)

iscc$(EXEEXT): $(iscc_OBJECTS) $(iscc_DEPENDENCIES) $(EXTRA_iscc_DEPENDENCIES) 
	@rm -f iscc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iscc_OBJECTS) $(iscc_LDADD) $(LIBS)

lexmin$(EXEEXT): $(lexmin_OBJECTS) $(lexmin_DEPENDENCIES) $(EXTRA_lexmin_DEPENDENCIES) 
	@rm -f lexmin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(lexmin_OBJECTS) $(lexmin_LDADD) $(LIBS)

polyhedron_integer_hull$(EXEEXT): $(polyhedron_integer_hull_OBJECTS) $(polyhedron_integer_hull_DEPENDENCIES) $(EXTRA_polyhedron_integer_hull_DEPENDENCIES) 
	@rm -f polyhedron_integer_hull$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(polyhedron_integer_hull_OBJECTS) $(polyhedron_integer_hull_LDADD) $(LIBS)

polyhedron_sample$(EXEEXT): $(polyhedron_sample_OBJECTS) $(polyhedron_sample_DEPENDENCIES) $(EXTRA_polyhedron_sample_DEPENDENCIES) 
	@rm -f polyhedron_sample$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(polyhedron_sample_OBJECTS) $(polyhedron_sample_LDADD) $(LIBS)

polytope_lattice_width$(EXEEXT): $(polytope_lattice_width_OBJECTS) $(polytope_lattice_width_DEPENDENCIES) $(EXTRA_polytope_lattice_width_DEPENDENCIES) 
	@rm -f polytope_lattice_width$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(polytope_lattice_width_OBJECTS) $(polytope_lattice_width_LDADD) $(LIBS)

polytope_scan$(EXEEXT): $(polytope_scan_OBJECTS) $(polytope_scan_DEPENDENCIES) $(EXTRA_polytope_scan_DEPENDENCIES) 
	@rm -f polytope_scan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(polytope_scan_OBJECTS) $(polytope_scan_LDADD) $(LIBS)

polytope_volume$(EXEEXT): $(polytope_volume_OBJECTS) $(polytope_volume_DEPENDENCIES) $(EXTRA_polytope_volume_DEPENDENCIES) 
	@rm -f polytope_volume$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(polytope_volume_OBJECTS) $(polytope_volume_LDADD) $(LIBS)

randomtest$(EXEEXT): $(randomtest_OBJECTS) $(randomtest_DEPENDENCIES) $(EXTRA_randomtest_DEPENDENCIES) 
	@rm -f randomtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(randomtest_OBJECTS) $(randomtest_LDADD) $(LIBS)

remove_redundant_equalities$(EXEEXT): $(remove_redundant_equalities_OBJECTS) $(remove_redundant_equalities_DEPENDENCIES) $(EXTRA_remove_redundant_equalities_DEPENDENCIES) 
	@rm -f remove_redundant_equalities$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(remove_redundant_equalities_OBJECTS) $(remove_redundant_equalities_LDADD) $(LIBS)

semigroup_holes$(EXEEXT): $(semigroup_holes_OBJECTS) $(semigroup_holes_DEPENDENCIES) $(EXTRA_semigroup_holes_DEPENDENCIES) 
	@rm -f semigroup_holes$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(semigroup_holes_OBJECTS) $(semigroup_holes_LDADD) $(LIBS)

test$(EXEEXT): $(test_OBJECTS) $(test_DEPENDENCIES) $(EXTRA_test_DEPENDENCIES) 
	@rm -f test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_OBJECTS) $(test_LDADD) $(LIBS)

test_approx$(EXEEXT): $(test_approx_OBJECTS) $(test_approx_DEPENDENCIES) $(EXTRA_test_approx_DEPENDENCIES) 
	@rm -f test_approx$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_approx_OBJECTS) $(test_approx_LDADD) $(LIBS)

test_bound$(EXEEXT): $(test_bound_OBJECTS) $(test_bound_DEPENDENCIES) $(EXTRA_test_bound_DEPENDENCIES) 
	@rm -f test_bound$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bound_OBJECTS) $(test_bound_LDADD) $(LIBS)

testlib$(EXEEXT): $(testlib_OBJECTS) $(testlib_DEPENDENCIES) $(EXTRA_testlib_DEPENDENCIES) 
	@rm -f testlib$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testlib_OBJECTS) $(testlib_LDADD) $(LIBS)

vector_partition_chambers$(EXEEXT): $(vector_partition_chambers_OBJECTS) $(vector_partition_chambers_DEPENDENCIES) $(EXTRA_vector_partition_chambers_DEPENDENCIES) 
	@rm -f vector_partition_chambers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vector_partition_chambers_OBJECTS) $(vector_partition_chambers_LDADD) $(LIBS)

verify_lexsmaller$(EXEEXT): $(verify_lexsmaller_OBJECTS) $(verify_lexsmaller_DEPENDENCIES) $(EXTRA_verify_lexsmaller_DEPENDENCIES) 
	@rm -f verify_lexsmaller$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(verify_lexsmaller_OBJECTS) $(verify_lexsmaller_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f interface/*.$(OBJEXT)
	-rm -f omega_interface/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/mpz_divisible_p.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/4coins.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NTL_QQ.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_count.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_e.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_ehrhart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_ehrhart_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_enumerate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_enumerate_e-evalue_convert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_enumerate_e-evalue_convert_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_enumerate_e-fdstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_enumerate_e-skewed_genfun.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_enumerate_e-verif_ehrhart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_enumerate_e-verify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_enumerate_e-verify_series.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_enumerate_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_summate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_union.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barvinok_union_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basis_reduction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basis_reduction_cdd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basis_reduction_glpk.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bernoulli.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfcounter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/binomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cone_hilbert_basis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cone_integer_hull.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/conversion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/counter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/decomposer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dpoly.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/edomain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/euler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evalue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evalue_convert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evalue_convert_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evalue_isl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evalue_read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evalue_util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fdstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/genfun.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/genfun_constructor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hilbert.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hull.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ilp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/initcdd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iscc-iscc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iscc-isl_obj_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iscc-isl_obj_str.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isl_aff_polylib.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isl_map_polylib.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isl_param_util.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lattice_point.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lattice_width.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/laurent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/laurent_old.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lexmin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lexmin_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mat_util.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matrix_read.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/normalization.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/options.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/param_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/param_util.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polyhedron_integer_hull.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polyhedron_sample.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polysign.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polysign_cdd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polysign_cddf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polysign_glpk.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polysign_isl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polysign_polylib.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polytope_lattice_width.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polytope_scan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polytope_volume.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/randomtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reduce_domain.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reducer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/remove_equalities.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/remove_redundant_equalities.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sample.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scale.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scarf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/semigroup_holes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/series.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/skewed_genfun.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/summate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_approx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_bound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testlib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/topcom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/util.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vector_partition_chambers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/verify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/verify_lexsmaller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/verify_series.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/version.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vertex_cone.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/volume.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@interface/$(DEPDIR)/libdep_a-all_barvinok.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@omega_interface/$(DEPDIR)/barvinok_enumerate_e-Exit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@omega_interface/$(DEPDIR)/barvinok_enumerate_e-convert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@omega_interface/$(DEPDIR)/barvinok_enumerate_e-count.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

interface/libdep_a-all_barvinok.o: interface/all_barvinok.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdep_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT interface/libdep_a-all_barvinok.o -MD -MP -MF interface/$(DEPDIR)/libdep_a-all_barvinok.Tpo -c -o interface/libdep_a-all_barvinok.o `test -f 'interface/all_barvinok.c' || echo '$(srcdir)/'`interface/all_barvinok.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) interface/$(DEPDIR)/libdep_a-all_barvinok.Tpo interface/$(DEPDIR)/libdep_a-all_barvinok.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='interface/all_barvinok.c' object='interface/libdep_a-all_barvinok.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdep_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o interface/libdep_a-all_barvinok.o `test -f 'interface/all_barvinok.c' || echo '$(srcdir)/'`interface/all_barvinok.c

interface/libdep_a-all_barvinok.obj: interface/all_barvinok.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdep_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT interface/libdep_a-all_barvinok.obj -MD -MP -MF interface/$(DEPDIR)/libdep_a-all_barvinok.Tpo -c -o interface/libdep_a-all_barvinok.obj `if test -f 'interface/all_barvinok.c'; then $(CYGPATH_W) 'interface/all_barvinok.c'; else $(CYGPATH_W) '$(srcdir)/interface/all_barvinok.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) interface/$(DEPDIR)/libdep_a-all_barvinok.Tpo interface/$(DEPDIR)/libdep_a-all_barvinok.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='interface/all_barvinok.c' object='interface/libdep_a-all_barvinok.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdep_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o interface/libdep_a-all_barvinok.obj `if test -f 'interface/all_barvinok.c'; then $(CYGPATH_W) 'interface/all_barvinok.c'; else $(CYGPATH_W) '$(srcdir)/interface/all_barvinok.c'; fi`

barvinok_enumerate_e-barvinok_enumerate_e_options.o: barvinok_enumerate_e_options.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT barvinok_enumerate_e-barvinok_enumerate_e_options.o -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e_options.Tpo -c -o barvinok_enumerate_e-barvinok_enumerate_e_options.o `test -f 'barvinok_enumerate_e_options.c' || echo '$(srcdir)/'`barvinok_enumerate_e_options.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e_options.Tpo $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e_options.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='barvinok_enumerate_e_options.c' object='barvinok_enumerate_e-barvinok_enumerate_e_options.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o barvinok_enumerate_e-barvinok_enumerate_e_options.o `test -f 'barvinok_enumerate_e_options.c' || echo '$(srcdir)/'`barvinok_enumerate_e_options.c

barvinok_enumerate_e-barvinok_enumerate_e_options.obj: barvinok_enumerate_e_options.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT barvinok_enumerate_e-barvinok_enumerate_e_options.obj -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e_options.Tpo -c -o barvinok_enumerate_e-barvinok_enumerate_e_options.obj `if test -f 'barvinok_enumerate_e_options.c'; then $(CYGPATH_W) 'barvinok_enumerate_e_options.c'; else $(CYGPATH_W) '$(srcdir)/barvinok_enumerate_e_options.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e_options.Tpo $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e_options.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='barvinok_enumerate_e_options.c' object='barvinok_enumerate_e-barvinok_enumerate_e_options.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o barvinok_enumerate_e-barvinok_enumerate_e_options.obj `if test -f 'barvinok_enumerate_e_options.c'; then $(CYGPATH_W) 'barvinok_enumerate_e_options.c'; else $(CYGPATH_W) '$(srcdir)/barvinok_enumerate_e_options.c'; fi`

barvinok_enumerate_e-evalue_convert_options.o: evalue_convert_options.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT barvinok_enumerate_e-evalue_convert_options.o -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-evalue_convert_options.Tpo -c -o barvinok_enumerate_e-evalue_convert_options.o `test -f 'evalue_convert_options.c' || echo '$(srcdir)/'`evalue_convert_options.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-evalue_convert_options.Tpo $(DEPDIR)/barvinok_enumerate_e-evalue_convert_options.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='evalue_convert_options.c' object='barvinok_enumerate_e-evalue_convert_options.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o barvinok_enumerate_e-evalue_convert_options.o `test -f 'evalue_convert_options.c' || echo '$(srcdir)/'`evalue_convert_options.c

barvinok_enumerate_e-evalue_convert_options.obj: evalue_convert_options.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT barvinok_enumerate_e-evalue_convert_options.obj -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-evalue_convert_options.Tpo -c -o barvinok_enumerate_e-evalue_convert_options.obj `if test -f 'evalue_convert_options.c'; then $(CYGPATH_W) 'evalue_convert_options.c'; else $(CYGPATH_W) '$(srcdir)/evalue_convert_options.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-evalue_convert_options.Tpo $(DEPDIR)/barvinok_enumerate_e-evalue_convert_options.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='evalue_convert_options.c' object='barvinok_enumerate_e-evalue_convert_options.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o barvinok_enumerate_e-evalue_convert_options.obj `if test -f 'evalue_convert_options.c'; then $(CYGPATH_W) 'evalue_convert_options.c'; else $(CYGPATH_W) '$(srcdir)/evalue_convert_options.c'; fi`

barvinok_enumerate_e-verify.o: verify.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT barvinok_enumerate_e-verify.o -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-verify.Tpo -c -o barvinok_enumerate_e-verify.o `test -f 'verify.c' || echo '$(srcdir)/'`verify.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-verify.Tpo $(DEPDIR)/barvinok_enumerate_e-verify.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='verify.c' object='barvinok_enumerate_e-verify.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o barvinok_enumerate_e-verify.o `test -f 'verify.c' || echo '$(srcdir)/'`verify.c

barvinok_enumerate_e-verify.obj: verify.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT barvinok_enumerate_e-verify.obj -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-verify.Tpo -c -o barvinok_enumerate_e-verify.obj `if test -f 'verify.c'; then $(CYGPATH_W) 'verify.c'; else $(CYGPATH_W) '$(srcdir)/verify.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-verify.Tpo $(DEPDIR)/barvinok_enumerate_e-verify.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='verify.c' object='barvinok_enumerate_e-verify.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o barvinok_enumerate_e-verify.obj `if test -f 'verify.c'; then $(CYGPATH_W) 'verify.c'; else $(CYGPATH_W) '$(srcdir)/verify.c'; fi`

barvinok_enumerate_e-verif_ehrhart.o: verif_ehrhart.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT barvinok_enumerate_e-verif_ehrhart.o -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-verif_ehrhart.Tpo -c -o barvinok_enumerate_e-verif_ehrhart.o `test -f 'verif_ehrhart.c' || echo '$(srcdir)/'`verif_ehrhart.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-verif_ehrhart.Tpo $(DEPDIR)/barvinok_enumerate_e-verif_ehrhart.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='verif_ehrhart.c' object='barvinok_enumerate_e-verif_ehrhart.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o barvinok_enumerate_e-verif_ehrhart.o `test -f 'verif_ehrhart.c' || echo '$(srcdir)/'`verif_ehrhart.c

barvinok_enumerate_e-verif_ehrhart.obj: verif_ehrhart.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT barvinok_enumerate_e-verif_ehrhart.obj -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-verif_ehrhart.Tpo -c -o barvinok_enumerate_e-verif_ehrhart.obj `if test -f 'verif_ehrhart.c'; then $(CYGPATH_W) 'verif_ehrhart.c'; else $(CYGPATH_W) '$(srcdir)/verif_ehrhart.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-verif_ehrhart.Tpo $(DEPDIR)/barvinok_enumerate_e-verif_ehrhart.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='verif_ehrhart.c' object='barvinok_enumerate_e-verif_ehrhart.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o barvinok_enumerate_e-verif_ehrhart.obj `if test -f 'verif_ehrhart.c'; then $(CYGPATH_W) 'verif_ehrhart.c'; else $(CYGPATH_W) '$(srcdir)/verif_ehrhart.c'; fi`

iscc-isl_obj_list.o: isl_obj_list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iscc-isl_obj_list.o -MD -MP -MF $(DEPDIR)/iscc-isl_obj_list.Tpo -c -o iscc-isl_obj_list.o `test -f 'isl_obj_list.c' || echo '$(srcdir)/'`isl_obj_list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/iscc-isl_obj_list.Tpo $(DEPDIR)/iscc-isl_obj_list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='isl_obj_list.c' object='iscc-isl_obj_list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iscc-isl_obj_list.o `test -f 'isl_obj_list.c' || echo '$(srcdir)/'`isl_obj_list.c

iscc-isl_obj_list.obj: isl_obj_list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iscc-isl_obj_list.obj -MD -MP -MF $(DEPDIR)/iscc-isl_obj_list.Tpo -c -o iscc-isl_obj_list.obj `if test -f 'isl_obj_list.c'; then $(CYGPATH_W) 'isl_obj_list.c'; else $(CYGPATH_W) '$(srcdir)/isl_obj_list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/iscc-isl_obj_list.Tpo $(DEPDIR)/iscc-isl_obj_list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='isl_obj_list.c' object='iscc-isl_obj_list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iscc-isl_obj_list.obj `if test -f 'isl_obj_list.c'; then $(CYGPATH_W) 'isl_obj_list.c'; else $(CYGPATH_W) '$(srcdir)/isl_obj_list.c'; fi`

iscc-isl_obj_str.o: isl_obj_str.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iscc-isl_obj_str.o -MD -MP -MF $(DEPDIR)/iscc-isl_obj_str.Tpo -c -o iscc-isl_obj_str.o `test -f 'isl_obj_str.c' || echo '$(srcdir)/'`isl_obj_str.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/iscc-isl_obj_str.Tpo $(DEPDIR)/iscc-isl_obj_str.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='isl_obj_str.c' object='iscc-isl_obj_str.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iscc-isl_obj_str.o `test -f 'isl_obj_str.c' || echo '$(srcdir)/'`isl_obj_str.c

iscc-isl_obj_str.obj: isl_obj_str.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iscc-isl_obj_str.obj -MD -MP -MF $(DEPDIR)/iscc-isl_obj_str.Tpo -c -o iscc-isl_obj_str.obj `if test -f 'isl_obj_str.c'; then $(CYGPATH_W) 'isl_obj_str.c'; else $(CYGPATH_W) '$(srcdir)/isl_obj_str.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/iscc-isl_obj_str.Tpo $(DEPDIR)/iscc-isl_obj_str.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='isl_obj_str.c' object='iscc-isl_obj_str.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iscc-isl_obj_str.obj `if test -f 'isl_obj_str.c'; then $(CYGPATH_W) 'isl_obj_str.c'; else $(CYGPATH_W) '$(srcdir)/isl_obj_str.c'; fi`

iscc-iscc.o: iscc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iscc-iscc.o -MD -MP -MF $(DEPDIR)/iscc-iscc.Tpo -c -o iscc-iscc.o `test -f 'iscc.c' || echo '$(srcdir)/'`iscc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/iscc-iscc.Tpo $(DEPDIR)/iscc-iscc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='iscc.c' object='iscc-iscc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iscc-iscc.o `test -f 'iscc.c' || echo '$(srcdir)/'`iscc.c

iscc-iscc.obj: iscc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iscc-iscc.obj -MD -MP -MF $(DEPDIR)/iscc-iscc.Tpo -c -o iscc-iscc.obj `if test -f 'iscc.c'; then $(CYGPATH_W) 'iscc.c'; else $(CYGPATH_W) '$(srcdir)/iscc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/iscc-iscc.Tpo $(DEPDIR)/iscc-iscc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='iscc.c' object='iscc-iscc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iscc_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iscc-iscc.obj `if test -f 'iscc.c'; then $(CYGPATH_W) 'iscc.c'; else $(CYGPATH_W) '$(srcdir)/iscc.c'; fi`

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

barvinok_enumerate_e-barvinok_enumerate_e.o: barvinok_enumerate_e.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barvinok_enumerate_e-barvinok_enumerate_e.o -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e.Tpo -c -o barvinok_enumerate_e-barvinok_enumerate_e.o `test -f 'barvinok_enumerate_e.cc' || echo '$(srcdir)/'`barvinok_enumerate_e.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e.Tpo $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='barvinok_enumerate_e.cc' object='barvinok_enumerate_e-barvinok_enumerate_e.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barvinok_enumerate_e-barvinok_enumerate_e.o `test -f 'barvinok_enumerate_e.cc' || echo '$(srcdir)/'`barvinok_enumerate_e.cc

barvinok_enumerate_e-barvinok_enumerate_e.obj: barvinok_enumerate_e.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barvinok_enumerate_e-barvinok_enumerate_e.obj -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e.Tpo -c -o barvinok_enumerate_e-barvinok_enumerate_e.obj `if test -f 'barvinok_enumerate_e.cc'; then $(CYGPATH_W) 'barvinok_enumerate_e.cc'; else $(CYGPATH_W) '$(srcdir)/barvinok_enumerate_e.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e.Tpo $(DEPDIR)/barvinok_enumerate_e-barvinok_enumerate_e.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='barvinok_enumerate_e.cc' object='barvinok_enumerate_e-barvinok_enumerate_e.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barvinok_enumerate_e-barvinok_enumerate_e.obj `if test -f 'barvinok_enumerate_e.cc'; then $(CYGPATH_W) 'barvinok_enumerate_e.cc'; else $(CYGPATH_W) '$(srcdir)/barvinok_enumerate_e.cc'; fi`

barvinok_enumerate_e-evalue_convert.o: evalue_convert.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barvinok_enumerate_e-evalue_convert.o -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-evalue_convert.Tpo -c -o barvinok_enumerate_e-evalue_convert.o `test -f 'evalue_convert.cc' || echo '$(srcdir)/'`evalue_convert.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-evalue_convert.Tpo $(DEPDIR)/barvinok_enumerate_e-evalue_convert.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='evalue_convert.cc' object='barvinok_enumerate_e-evalue_convert.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barvinok_enumerate_e-evalue_convert.o `test -f 'evalue_convert.cc' || echo '$(srcdir)/'`evalue_convert.cc

barvinok_enumerate_e-evalue_convert.obj: evalue_convert.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barvinok_enumerate_e-evalue_convert.obj -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-evalue_convert.Tpo -c -o barvinok_enumerate_e-evalue_convert.obj `if test -f 'evalue_convert.cc'; then $(CYGPATH_W) 'evalue_convert.cc'; else $(CYGPATH_W) '$(srcdir)/evalue_convert.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-evalue_convert.Tpo $(DEPDIR)/barvinok_enumerate_e-evalue_convert.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='evalue_convert.cc' object='barvinok_enumerate_e-evalue_convert.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barvinok_enumerate_e-evalue_convert.obj `if test -f 'evalue_convert.cc'; then $(CYGPATH_W) 'evalue_convert.cc'; else $(CYGPATH_W) '$(srcdir)/evalue_convert.cc'; fi`

barvinok_enumerate_e-fdstream.o: fdstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barvinok_enumerate_e-fdstream.o -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-fdstream.Tpo -c -o barvinok_enumerate_e-fdstream.o `test -f 'fdstream.cc' || echo '$(srcdir)/'`fdstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-fdstream.Tpo $(DEPDIR)/barvinok_enumerate_e-fdstream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fdstream.cc' object='barvinok_enumerate_e-fdstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barvinok_enumerate_e-fdstream.o `test -f 'fdstream.cc' || echo '$(srcdir)/'`fdstream.cc

barvinok_enumerate_e-fdstream.obj: fdstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barvinok_enumerate_e-fdstream.obj -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-fdstream.Tpo -c -o barvinok_enumerate_e-fdstream.obj `if test -f 'fdstream.cc'; then $(CYGPATH_W) 'fdstream.cc'; else $(CYGPATH_W) '$(srcdir)/fdstream.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-fdstream.Tpo $(DEPDIR)/barvinok_enumerate_e-fdstream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fdstream.cc' object='barvinok_enumerate_e-fdstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barvinok_enumerate_e-fdstream.obj `if test -f 'fdstream.cc'; then $(CYGPATH_W) 'fdstream.cc'; else $(CYGPATH_W) '$(srcdir)/fdstream.cc'; fi`

barvinok_enumerate_e-skewed_genfun.o: skewed_genfun.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barvinok_enumerate_e-skewed_genfun.o -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-skewed_genfun.Tpo -c -o barvinok_enumerate_e-skewed_genfun.o `test -f 'skewed_genfun.cc' || echo '$(srcdir)/'`skewed_genfun.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-skewed_genfun.Tpo $(DEPDIR)/barvinok_enumerate_e-skewed_genfun.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='skewed_genfun.cc' object='barvinok_enumerate_e-skewed_genfun.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barvinok_enumerate_e-skewed_genfun.o `test -f 'skewed_genfun.cc' || echo '$(srcdir)/'`skewed_genfun.cc

barvinok_enumerate_e-skewed_genfun.obj: skewed_genfun.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barvinok_enumerate_e-skewed_genfun.obj -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-skewed_genfun.Tpo -c -o barvinok_enumerate_e-skewed_genfun.obj `if test -f 'skewed_genfun.cc'; then $(CYGPATH_W) 'skewed_genfun.cc'; else $(CYGPATH_W) '$(srcdir)/skewed_genfun.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-skewed_genfun.Tpo $(DEPDIR)/barvinok_enumerate_e-skewed_genfun.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='skewed_genfun.cc' object='barvinok_enumerate_e-skewed_genfun.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barvinok_enumerate_e-skewed_genfun.obj `if test -f 'skewed_genfun.cc'; then $(CYGPATH_W) 'skewed_genfun.cc'; else $(CYGPATH_W) '$(srcdir)/skewed_genfun.cc'; fi`

barvinok_enumerate_e-verify_series.o: verify_series.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barvinok_enumerate_e-verify_series.o -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-verify_series.Tpo -c -o barvinok_enumerate_e-verify_series.o `test -f 'verify_series.cc' || echo '$(srcdir)/'`verify_series.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-verify_series.Tpo $(DEPDIR)/barvinok_enumerate_e-verify_series.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='verify_series.cc' object='barvinok_enumerate_e-verify_series.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barvinok_enumerate_e-verify_series.o `test -f 'verify_series.cc' || echo '$(srcdir)/'`verify_series.cc

barvinok_enumerate_e-verify_series.obj: verify_series.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barvinok_enumerate_e-verify_series.obj -MD -MP -MF $(DEPDIR)/barvinok_enumerate_e-verify_series.Tpo -c -o barvinok_enumerate_e-verify_series.obj `if test -f 'verify_series.cc'; then $(CYGPATH_W) 'verify_series.cc'; else $(CYGPATH_W) '$(srcdir)/verify_series.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/barvinok_enumerate_e-verify_series.Tpo $(DEPDIR)/barvinok_enumerate_e-verify_series.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='verify_series.cc' object='barvinok_enumerate_e-verify_series.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barvinok_enumerate_e-verify_series.obj `if test -f 'verify_series.cc'; then $(CYGPATH_W) 'verify_series.cc'; else $(CYGPATH_W) '$(srcdir)/verify_series.cc'; fi`

omega_interface/barvinok_enumerate_e-Exit.o: omega_interface/Exit.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omega_interface/barvinok_enumerate_e-Exit.o -MD -MP -MF omega_interface/$(DEPDIR)/barvinok_enumerate_e-Exit.Tpo -c -o omega_interface/barvinok_enumerate_e-Exit.o `test -f 'omega_interface/Exit.cc' || echo '$(srcdir)/'`omega_interface/Exit.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) omega_interface/$(DEPDIR)/barvinok_enumerate_e-Exit.Tpo omega_interface/$(DEPDIR)/barvinok_enumerate_e-Exit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='omega_interface/Exit.cc' object='omega_interface/barvinok_enumerate_e-Exit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omega_interface/barvinok_enumerate_e-Exit.o `test -f 'omega_interface/Exit.cc' || echo '$(srcdir)/'`omega_interface/Exit.cc

omega_interface/barvinok_enumerate_e-Exit.obj: omega_interface/Exit.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omega_interface/barvinok_enumerate_e-Exit.obj -MD -MP -MF omega_interface/$(DEPDIR)/barvinok_enumerate_e-Exit.Tpo -c -o omega_interface/barvinok_enumerate_e-Exit.obj `if test -f 'omega_interface/Exit.cc'; then $(CYGPATH_W) 'omega_interface/Exit.cc'; else $(CYGPATH_W) '$(srcdir)/omega_interface/Exit.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) omega_interface/$(DEPDIR)/barvinok_enumerate_e-Exit.Tpo omega_interface/$(DEPDIR)/barvinok_enumerate_e-Exit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='omega_interface/Exit.cc' object='omega_interface/barvinok_enumerate_e-Exit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omega_interface/barvinok_enumerate_e-Exit.obj `if test -f 'omega_interface/Exit.cc'; then $(CYGPATH_W) 'omega_interface/Exit.cc'; else $(CYGPATH_W) '$(srcdir)/omega_interface/Exit.cc'; fi`

omega_interface/barvinok_enumerate_e-convert.o: omega_interface/convert.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omega_interface/barvinok_enumerate_e-convert.o -MD -MP -MF omega_interface/$(DEPDIR)/barvinok_enumerate_e-convert.Tpo -c -o omega_interface/barvinok_enumerate_e-convert.o `test -f 'omega_interface/convert.cc' || echo '$(srcdir)/'`omega_interface/convert.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) omega_interface/$(DEPDIR)/barvinok_enumerate_e-convert.Tpo omega_interface/$(DEPDIR)/barvinok_enumerate_e-convert.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='omega_interface/convert.cc' object='omega_interface/barvinok_enumerate_e-convert.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omega_interface/barvinok_enumerate_e-convert.o `test -f 'omega_interface/convert.cc' || echo '$(srcdir)/'`omega_interface/convert.cc

omega_interface/barvinok_enumerate_e-convert.obj: omega_interface/convert.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omega_interface/barvinok_enumerate_e-convert.obj -MD -MP -MF omega_interface/$(DEPDIR)/barvinok_enumerate_e-convert.Tpo -c -o omega_interface/barvinok_enumerate_e-convert.obj `if test -f 'omega_interface/convert.cc'; then $(CYGPATH_W) 'omega_interface/convert.cc'; else $(CYGPATH_W) '$(srcdir)/omega_interface/convert.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) omega_interface/$(DEPDIR)/barvinok_enumerate_e-convert.Tpo omega_interface/$(DEPDIR)/barvinok_enumerate_e-convert.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='omega_interface/convert.cc' object='omega_interface/barvinok_enumerate_e-convert.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omega_interface/barvinok_enumerate_e-convert.obj `if test -f 'omega_interface/convert.cc'; then $(CYGPATH_W) 'omega_interface/convert.cc'; else $(CYGPATH_W) '$(srcdir)/omega_interface/convert.cc'; fi`

omega_interface/barvinok_enumerate_e-count.o: omega_interface/count.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omega_interface/barvinok_enumerate_e-count.o -MD -MP -MF omega_interface/$(DEPDIR)/barvinok_enumerate_e-count.Tpo -c -o omega_interface/barvinok_enumerate_e-count.o `test -f 'omega_interface/count.cc' || echo '$(srcdir)/'`omega_interface/count.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) omega_interface/$(DEPDIR)/barvinok_enumerate_e-count.Tpo omega_interface/$(DEPDIR)/barvinok_enumerate_e-count.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='omega_interface/count.cc' object='omega_interface/barvinok_enumerate_e-count.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omega_interface/barvinok_enumerate_e-count.o `test -f 'omega_interface/count.cc' || echo '$(srcdir)/'`omega_interface/count.cc

omega_interface/barvinok_enumerate_e-count.obj: omega_interface/count.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omega_interface/barvinok_enumerate_e-count.obj -MD -MP -MF omega_interface/$(DEPDIR)/barvinok_enumerate_e-count.Tpo -c -o omega_interface/barvinok_enumerate_e-count.obj `if test -f 'omega_interface/count.cc'; then $(CYGPATH_W) 'omega_interface/count.cc'; else $(CYGPATH_W) '$(srcdir)/omega_interface/count.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) omega_interface/$(DEPDIR)/barvinok_enumerate_e-count.Tpo omega_interface/$(DEPDIR)/barvinok_enumerate_e-count.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='omega_interface/count.cc' object='omega_interface/barvinok_enumerate_e-count.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(barvinok_enumerate_e_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omega_interface/barvinok_enumerate_e-count.obj `if test -f 'omega_interface/count.cc'; then $(CYGPATH_W) 'omega_interface/count.cc'; else $(CYGPATH_W) '$(srcdir)/omega_interface/count.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-nodist_pkgincludeHEADERS: $(nodist_pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-nodist_pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(PROGRAMS) $(HEADERS) \
		config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f interface/$(DEPDIR)/$(am__dirstamp)
	-rm -f interface/$(am__dirstamp)
	-rm -f omega_interface/$(DEPDIR)/$(am__dirstamp)
	-rm -f omega_interface/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(DEPDIR) ./$(DEPDIR) interface/$(DEPDIR) omega_interface/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-data-local install-nodist_pkgincludeHEADERS \
	install-pkgincludeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf $(DEPDIR) ./$(DEPDIR) interface/$(DEPDIR) omega_interface/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-local uninstall-nodist_pkgincludeHEADERS \
	uninstall-pkgincludeHEADERS

.MAKE: $(am__recursive_targets) all install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-binPROGRAMS \
	clean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLIBRARIES clean-noinstPROGRAMS cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-hook dist-lzip dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-nodist_pkgincludeHEADERS install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-local uninstall-nodist_pkgincludeHEADERS \
	uninstall-pkgincludeHEADERS

.PRECIOUS: Makefile


FORCE:
polylib/libpolylibgmp.la: FORCE
	cd polylib; $(MAKE) $(AM_MAKEFLAGS) libpolylibgmp.la
isl/libisl.la: FORCE
	cd isl; $(MAKE) $(AM_MAKEFLAGS) libisl.la
pet/libpet.la: FORCE
	cd pet; $(MAKE) $(AM_MAKEFLAGS) libpet.la
zsolve/libzsolve.la: FORCE
	cd zsolve; $(MAKE) $(AM_MAKEFLAGS) libzsolve.la
parker/libparker.la: FORCE
	cd parker; $(MAKE) $(AM_MAKEFLAGS) libparker.la

isl.py: libdep.a interface/isl.py.top
	(cat interface/isl.py.top; \
		@ISL_BUILDDIR@/interface/extract_interface$(EXEEXT) \
			--language=python \
			$(DEFAULT_INCLUDES) @ISL_CFLAGS@ -I"@ISL_SRCDIR@" \
			$(srcdir)/interface/all_barvinok.h) \
			> isl.py

install-data-local:
	@test -z "$(pkgconfig_libdir)" || $(mkdir_p) "$(DESTDIR)$(pkgconfig_libdir)"
	$(INSTALL_DATA) $(pkgconfig_libfile) "$(DESTDIR)$(pkgconfig_libdir)/$(pkgconfig_libfile)"

uninstall-local:
	rm -f "$(DESTDIR)$(pkgconfig_libdir)/$(pkgconfig_libfile)"

dist-hook: isl.py
	cp isl.py $(distdir)/
	(cd $(distdir)/polymake; \
	    ./autogen.sh; rm -rf autom4te.cache)
	(cd doc; make barvinok.pdf)
	cp doc/barvinok.pdf $(distdir)/doc/
	if test -f $(top_srcdir)/.git/HEAD; then \
	    echo @GIT_HEAD_VERSION@ > $(distdir)/GIT_HEAD_ID; \
	else \
	    echo $(GIT_HEAD_ID) > $(distdir)/GIT_HEAD_ID; \
	fi

dist-git: dist
	mv $(distdir).tar.gz @GIT_HEAD_VERSION@.tar.gz

check: check-testlib check-enumerate check-enumerate_e check-test \
	check-lexmin check-approx check-pwqp check-euler check-iscc \
	check-union
check-testlib: testlib$(EXEEXT)
	./testlib$(EXEEXT)
check-approx: test_approx$(EXEEXT)
	@for i in $(top_srcdir)/tests/ehrhart/*; do \
	    if test -f $$i; then \
		echo $$i | ./test_approx$(EXEEXT) -q -r 10 || exit; \
	    fi \
	done
check-pwqp: barvinok_bound$(EXEEXT) test_bound$(EXEEXT) barvinok_summate$(EXEEXT)
	@for i in $(top_srcdir)/tests/pwqp/*; do \
	    if test -f $$i; then \
		echo $$i; \
		./barvinok_bound$(EXEEXT) -T -r30 < $$i || exit; \
		echo $$i | ./test_bound$(EXEEXT) -q -r30 || exit; \
		./barvinok_summate$(EXEEXT) -T -r30 < $$i || exit; \
	    fi \
	done
check-euler: barvinok_summate$(EXEEXT)
	@for i in $(top_srcdir)/tests/euler/*; do \
	    if test -f $$i; then \
		for method in 'euler' 'laurent_old' 'laurent'; do \
		    opt="--summation=$$method"; \
		    echo $$i $$opt; \
		    ./barvinok_summate$(EXEEXT) -T $$opt < $$i || exit; \
		done \
	    fi \
	done
	@for t in dull EML_p EML-product EML line square square_p square \
		square_p3 triangle triangle2 triangle_p quasi; do \
	    i=$(top_srcdir)/tests/euler/$$t.pwqp; \
	    if test -f $$i; then \
		opt="--summation=box"; \
		echo $$i $$opt; \
		./barvinok_summate$(EXEEXT) -T $$opt < $$i || exit; \
	    fi \
	done
	@for t in dull dull_p EML line square square_p square \
		square_p3 triangle triangle2 triangle_p; do \
	    i=$(top_srcdir)/tests/euler/$$t.pwqp; \
	    if test -f $$i; then \
		opt="--summation=bernoulli"; \
		echo $$i $$opt; \
		./barvinok_summate$(EXEEXT) -T $$opt < $$i || exit; \
	    fi \
	done
check-enumerate: barvinok_enumerate$(EXEEXT)
	@for i in $(top_srcdir)/tests/ehrhart/*; do \
	    if test -f $$i; then \
		echo $$i; \
		for options in '' '--series' '--series --primal' $(TOPCOM_CD) $(ISL_CD); do \
		    for spec in 'random' 'bf' 'df'; do \
			opt="--specialization=$$spec $$options"; \
			echo "        $$opt"; \
			./barvinok_enumerate$(EXEEXT) --verify $$opt < $$i || exit; \
		    done \
		done; \
		opt="--index=4"; \
		echo "        $$opt"; \
		./barvinok_enumerate$(EXEEXT) --verify $$opt < $$i || exit; \
		opt="--summation=bernoulli"; \
		echo "        $$opt"; \
		./barvinok_enumerate$(EXEEXT) --verify $$opt < $$i || exit; \
	    fi \
	done
check-enumerate_e: barvinok_enumerate_e$(EXEEXT)
	@for dir in $(BEE_TESTDIRS); do \
	    for i in $(top_srcdir)/tests/$$dir/*; do \
		if test -f $$i; then \
		    for options in '' $(SPEC_OMEGA) '--isl'; do \
			for spec in 'random' 'bf' 'df'; do \
			    opt="--specialization=$$spec $$options"; \
			    echo $$i $$opt; \
			    ./barvinok_enumerate_e$(EXEEXT) --verify $$opt < $$i || exit; \
			done \
		    done \
		fi \
	    done \
	done
	@for i in $(top_srcdir)/tests/ehrhart_e/scarf/*; do \
	    if test -f $$i; then \
		for spec in 'random' 'bf' 'df'; do \
		    opt="--specialization=$$spec --scarf"; \
		    echo $$i $$opt; \
		    ./barvinok_enumerate_e$(EXEEXT) --verify $$opt < $$i || exit; \
		done; \
		echo $$i --series; \
		./barvinok_enumerate_e$(EXEEXT) --verify --series < $$i || exit; \
	    fi \
	done
check-test: test$(EXEEXT)
	@failed=0; \
	for i in $(top_srcdir)/tests/*; do \
	    if test -f $$i; then \
		for options in '--index=10' '--primal --index=10'; do \
		    for spec in 'random' 'bf' 'df' 'todd'; do \
			opt="--specialization=$$spec $$options"; \
			echo -n $$i $$opt; \
			./test$(EXEEXT) $$opt < $$i; \
			if test "$$?" -ne "0"; then \
			    failed=`expr $$failed + 1`; \
			    echo " NOT ok"; \
			else \
			    echo " ok"; \
			fi; \
		    done \
		done \
	    fi \
	done; \
	for i in $(top_srcdir)/tests/sample/*; do \
	    echo -n $$i; \
	    ./test$(EXEEXT) < $$i; \
	    if test "$$?" -ne "0"; then \
		failed=`expr $$failed + 1`; \
		echo " NOT ok"; \
	    else \
		echo " ok"; \
	    fi; \
	done; \
	if test $$failed != 0; then \
		echo "$$failed tests failed"; \
		exit -1; \
	fi
check-lexmin: lexmin$(EXEEXT)
	@for i in $(top_srcdir)/tests/lexmin/*; do \
	    if test -f $$i; then \
		for spec in 'random' 'bf' 'df'; do \
		    opt="--specialization=$$spec"; \
		    echo $$i $$opt; \
		    ./lexmin$(EXEEXT) --verify $$opt < $$i || exit; \
		done \
	    fi \
	done
check-iscc: iscc$(EXEEXT)
	@for i in $(top_srcdir)/tests/iscc/*; do \
		if test -f $$i; then \
			echo $$i; \
			./iscc$(EXEEXT) < $$i || exit; \
		fi \
	done
check-union: barvinok_union$(EXEEXT)
	@for i in $(top_srcdir)/tests/ehrhart_union/*; do \
	    if test -f $$i; then \
		for spec in 'random' 'bf' 'df'; do \
		    opt="--specialization=$$spec $$options"; \
		    echo $$i $$opt; \
		    ./barvinok_union$(EXEEXT) -c $$opt < $$i || exit; \
		done \
	    fi \
	done

version.h: @GIT_HEAD@
	echo '#define GIT_HEAD_ID "'@GIT_HEAD_VERSION@'"' > $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
